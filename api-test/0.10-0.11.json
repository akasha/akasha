[
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method <S> akasha.lang.JsArray<S> akasha.lang.JsArray<T>::flat() @ akasha.CSSFontFeatureValuesMap.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.CSSFontFeatureValuesMap.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "flat",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method <S> akasha.lang.JsArray<S> akasha.lang.JsArray<T>::flat() @ akasha.CSSFontPaletteValuesRule.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.CSSFontPaletteValuesRule.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "flat",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method <S> akasha.lang.JsArray<S> akasha.lang.JsArray<T>::flat() @ akasha.DOMTokenList.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.DOMTokenList.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "flat",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method <S> akasha.lang.JsArray<S> akasha.lang.JsArray<T>::flat() @ akasha.FormData.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.FormData.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "flat",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method <S> akasha.lang.JsArray<S> akasha.lang.JsArray<T>::flat() @ akasha.Headers.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.Headers.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "flat",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method <S> akasha.lang.JsArray<S> akasha.lang.JsArray<T>::flat() @ akasha.MediaKeyStatusMap.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.MediaKeyStatusMap.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "flat",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method <S> akasha.lang.JsArray<S> akasha.lang.JsArray<T>::flat() @ akasha.NodeList.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.NodeList.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "flat",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method <S> akasha.lang.JsArray<S> akasha.lang.JsArray<T>::flat() @ akasha.URLSearchParams.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.URLSearchParams.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "flat",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method <S> akasha.lang.JsArray<S> akasha.lang.JsArray<T>::flat() @ akasha.audio.AudioParamMap.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.audio.AudioParamMap.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "flat",
      "package": "akasha.audio"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method <S> akasha.lang.JsArray<S> akasha.lang.JsArray<T>::flat() @ akasha.bluetooth.BluetoothManufacturerDataMap.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.bluetooth.BluetoothManufacturerDataMap.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "flat",
      "package": "akasha.bluetooth"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method <S> akasha.lang.JsArray<S> akasha.lang.JsArray<T>::flat() @ akasha.bluetooth.BluetoothServiceDataMap.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.bluetooth.BluetoothServiceDataMap.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "flat",
      "package": "akasha.bluetooth"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method <S> akasha.lang.JsArray<S> akasha.lang.JsArray<T>::flat() @ akasha.core.JsMap.Entry<K, V>",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.JsMap.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "flat",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method <S> akasha.lang.JsArray<S> akasha.lang.JsArray<T>::flat() @ akasha.core.JsWeakMap.Entry<K, V>",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.JsWeakMap.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "flat",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method <S> akasha.lang.JsArray<S> akasha.lang.JsArray<T>::flat() @ akasha.core.ObjectPropertyEntry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.ObjectPropertyEntry",
      "classSimpleName": "ObjectPropertyEntry",
      "elementKind": "method",
      "methodName": "flat",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method <S> akasha.lang.JsArray<S> akasha.lang.JsArray<T>::flat() @ akasha.core.RegExpGroups.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.RegExpGroups.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "flat",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method <S> akasha.lang.JsArray<S> akasha.lang.JsArray<T>::flat() @ akasha.core.RegExpResult.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.RegExpResult.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "flat",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method <S> akasha.lang.JsArray<S> akasha.lang.JsArray<T>::flat() @ akasha.lang.JsArray.Entry<T>",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.lang.JsArray.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "flat",
      "package": "akasha.lang"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method <S> akasha.lang.JsArray<S> akasha.lang.JsArray<T>::flat() @ akasha.rtc.RTCStatsReport.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.rtc.RTCStatsReport.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "flat",
      "package": "akasha.rtc"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method <S> akasha.lang.JsArray<S> akasha.lang.JsArray<T>::flat() @ akasha.xr.XRInputSourceArray.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.xr.XRInputSourceArray.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "flat",
      "package": "akasha.xr"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method <S> akasha.lang.JsArray<S> akasha.lang.JsArray<T>::flat()",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.lang.JsArray",
      "classSimpleName": "JsArray",
      "elementKind": "method",
      "methodName": "flat",
      "package": "akasha.lang"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method <S> akasha.lang.JsArray<S> akasha.lang.JsArray<T>::flat(double) @ akasha.CSSFontFeatureValuesMap.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.CSSFontFeatureValuesMap.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "flat",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method <S> akasha.lang.JsArray<S> akasha.lang.JsArray<T>::flat(double) @ akasha.CSSFontPaletteValuesRule.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.CSSFontPaletteValuesRule.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "flat",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method <S> akasha.lang.JsArray<S> akasha.lang.JsArray<T>::flat(double) @ akasha.DOMTokenList.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.DOMTokenList.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "flat",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method <S> akasha.lang.JsArray<S> akasha.lang.JsArray<T>::flat(double) @ akasha.FormData.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.FormData.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "flat",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method <S> akasha.lang.JsArray<S> akasha.lang.JsArray<T>::flat(double) @ akasha.Headers.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.Headers.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "flat",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method <S> akasha.lang.JsArray<S> akasha.lang.JsArray<T>::flat(double) @ akasha.MediaKeyStatusMap.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.MediaKeyStatusMap.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "flat",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method <S> akasha.lang.JsArray<S> akasha.lang.JsArray<T>::flat(double) @ akasha.NodeList.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.NodeList.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "flat",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method <S> akasha.lang.JsArray<S> akasha.lang.JsArray<T>::flat(double) @ akasha.URLSearchParams.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.URLSearchParams.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "flat",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method <S> akasha.lang.JsArray<S> akasha.lang.JsArray<T>::flat(double) @ akasha.audio.AudioParamMap.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.audio.AudioParamMap.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "flat",
      "package": "akasha.audio"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method <S> akasha.lang.JsArray<S> akasha.lang.JsArray<T>::flat(double) @ akasha.bluetooth.BluetoothManufacturerDataMap.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.bluetooth.BluetoothManufacturerDataMap.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "flat",
      "package": "akasha.bluetooth"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method <S> akasha.lang.JsArray<S> akasha.lang.JsArray<T>::flat(double) @ akasha.bluetooth.BluetoothServiceDataMap.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.bluetooth.BluetoothServiceDataMap.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "flat",
      "package": "akasha.bluetooth"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method <S> akasha.lang.JsArray<S> akasha.lang.JsArray<T>::flat(double) @ akasha.core.JsMap.Entry<K, V>",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.JsMap.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "flat",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method <S> akasha.lang.JsArray<S> akasha.lang.JsArray<T>::flat(double) @ akasha.core.JsWeakMap.Entry<K, V>",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.JsWeakMap.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "flat",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method <S> akasha.lang.JsArray<S> akasha.lang.JsArray<T>::flat(double) @ akasha.core.ObjectPropertyEntry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.ObjectPropertyEntry",
      "classSimpleName": "ObjectPropertyEntry",
      "elementKind": "method",
      "methodName": "flat",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method <S> akasha.lang.JsArray<S> akasha.lang.JsArray<T>::flat(double) @ akasha.core.RegExpGroups.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.RegExpGroups.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "flat",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method <S> akasha.lang.JsArray<S> akasha.lang.JsArray<T>::flat(double) @ akasha.core.RegExpResult.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.RegExpResult.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "flat",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method <S> akasha.lang.JsArray<S> akasha.lang.JsArray<T>::flat(double) @ akasha.lang.JsArray.Entry<T>",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.lang.JsArray.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "flat",
      "package": "akasha.lang"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method <S> akasha.lang.JsArray<S> akasha.lang.JsArray<T>::flat(double) @ akasha.rtc.RTCStatsReport.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.rtc.RTCStatsReport.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "flat",
      "package": "akasha.rtc"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method <S> akasha.lang.JsArray<S> akasha.lang.JsArray<T>::flat(double) @ akasha.xr.XRInputSourceArray.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.xr.XRInputSourceArray.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "flat",
      "package": "akasha.xr"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method <S> akasha.lang.JsArray<S> akasha.lang.JsArray<T>::flat(double)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.lang.JsArray",
      "classSimpleName": "JsArray",
      "elementKind": "method",
      "methodName": "flat",
      "package": "akasha.lang"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method <T> akasha.lang.JsArray<T> akasha.lang.JsArray<T>::of(T[]) @ akasha.CSSFontFeatureValuesMap.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.CSSFontFeatureValuesMap.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "of",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method <T> akasha.lang.JsArray<T> akasha.lang.JsArray<T>::of(T[]) @ akasha.CSSFontPaletteValuesRule.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.CSSFontPaletteValuesRule.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "of",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method <T> akasha.lang.JsArray<T> akasha.lang.JsArray<T>::of(T[]) @ akasha.DOMTokenList.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.DOMTokenList.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "of",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method <T> akasha.lang.JsArray<T> akasha.lang.JsArray<T>::of(T[]) @ akasha.FormData.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.FormData.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "of",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method <T> akasha.lang.JsArray<T> akasha.lang.JsArray<T>::of(T[]) @ akasha.Headers.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.Headers.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "of",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method <T> akasha.lang.JsArray<T> akasha.lang.JsArray<T>::of(T[]) @ akasha.MediaKeyStatusMap.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.MediaKeyStatusMap.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "of",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method <T> akasha.lang.JsArray<T> akasha.lang.JsArray<T>::of(T[]) @ akasha.NodeList.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.NodeList.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "of",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method <T> akasha.lang.JsArray<T> akasha.lang.JsArray<T>::of(T[]) @ akasha.URLSearchParams.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.URLSearchParams.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "of",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method <T> akasha.lang.JsArray<T> akasha.lang.JsArray<T>::of(T[]) @ akasha.audio.AudioParamMap.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.audio.AudioParamMap.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "of",
      "package": "akasha.audio"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method <T> akasha.lang.JsArray<T> akasha.lang.JsArray<T>::of(T[]) @ akasha.bluetooth.BluetoothManufacturerDataMap.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.bluetooth.BluetoothManufacturerDataMap.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "of",
      "package": "akasha.bluetooth"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method <T> akasha.lang.JsArray<T> akasha.lang.JsArray<T>::of(T[]) @ akasha.bluetooth.BluetoothServiceDataMap.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.bluetooth.BluetoothServiceDataMap.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "of",
      "package": "akasha.bluetooth"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method <T> akasha.lang.JsArray<T> akasha.lang.JsArray<T>::of(T[]) @ akasha.core.JsMap.Entry<K, V>",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.JsMap.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "of",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method <T> akasha.lang.JsArray<T> akasha.lang.JsArray<T>::of(T[]) @ akasha.core.JsWeakMap.Entry<K, V>",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.JsWeakMap.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "of",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method <T> akasha.lang.JsArray<T> akasha.lang.JsArray<T>::of(T[]) @ akasha.core.ObjectPropertyEntry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.ObjectPropertyEntry",
      "classSimpleName": "ObjectPropertyEntry",
      "elementKind": "method",
      "methodName": "of",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method <T> akasha.lang.JsArray<T> akasha.lang.JsArray<T>::of(T[]) @ akasha.core.RegExpGroups.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.RegExpGroups.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "of",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method <T> akasha.lang.JsArray<T> akasha.lang.JsArray<T>::of(T[]) @ akasha.core.RegExpResult.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.RegExpResult.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "of",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method <T> akasha.lang.JsArray<T> akasha.lang.JsArray<T>::of(T[]) @ akasha.lang.JsArray.Entry<T>",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.lang.JsArray.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "of",
      "package": "akasha.lang"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method <T> akasha.lang.JsArray<T> akasha.lang.JsArray<T>::of(T[]) @ akasha.rtc.RTCStatsReport.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.rtc.RTCStatsReport.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "of",
      "package": "akasha.rtc"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method <T> akasha.lang.JsArray<T> akasha.lang.JsArray<T>::of(T[]) @ akasha.xr.XRInputSourceArray.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.xr.XRInputSourceArray.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "of",
      "package": "akasha.xr"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method <T> akasha.lang.JsArray<T> akasha.lang.JsArray<T>::of(T[])",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.lang.JsArray",
      "classSimpleName": "JsArray",
      "elementKind": "method",
      "methodName": "of",
      "package": "akasha.lang"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method V akasha.core.JsMap<K, V>::get(K)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.JsMap",
      "classSimpleName": "JsMap",
      "elementKind": "method",
      "methodName": "get",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method V akasha.core.JsWeakMap<K, V>::get(K)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.JsWeakMap",
      "classSimpleName": "JsWeakMap",
      "elementKind": "method",
      "methodName": "get",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Attr akasha.Document::createAttribute(java.lang.String) @ akasha.XMLDocument",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.XMLDocument",
      "classSimpleName": "XMLDocument",
      "elementKind": "method",
      "methodName": "createAttribute",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Attr akasha.Document::createAttribute(java.lang.String)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.Document",
      "classSimpleName": "Document",
      "elementKind": "method",
      "methodName": "createAttribute",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Attr akasha.Element::getAttributeNode(java.lang.String) @ akasha.Audio",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.Audio",
      "classSimpleName": "Audio",
      "elementKind": "method",
      "methodName": "getAttributeNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Attr akasha.Element::getAttributeNode(java.lang.String) @ akasha.HTMLAnchorElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLAnchorElement",
      "classSimpleName": "HTMLAnchorElement",
      "elementKind": "method",
      "methodName": "getAttributeNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Attr akasha.Element::getAttributeNode(java.lang.String) @ akasha.HTMLAreaElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLAreaElement",
      "classSimpleName": "HTMLAreaElement",
      "elementKind": "method",
      "methodName": "getAttributeNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Attr akasha.Element::getAttributeNode(java.lang.String) @ akasha.HTMLAudioElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLAudioElement",
      "classSimpleName": "HTMLAudioElement",
      "elementKind": "method",
      "methodName": "getAttributeNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Attr akasha.Element::getAttributeNode(java.lang.String) @ akasha.HTMLBRElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLBRElement",
      "classSimpleName": "HTMLBRElement",
      "elementKind": "method",
      "methodName": "getAttributeNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Attr akasha.Element::getAttributeNode(java.lang.String) @ akasha.HTMLBaseElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLBaseElement",
      "classSimpleName": "HTMLBaseElement",
      "elementKind": "method",
      "methodName": "getAttributeNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Attr akasha.Element::getAttributeNode(java.lang.String) @ akasha.HTMLBodyElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLBodyElement",
      "classSimpleName": "HTMLBodyElement",
      "elementKind": "method",
      "methodName": "getAttributeNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Attr akasha.Element::getAttributeNode(java.lang.String) @ akasha.HTMLButtonElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLButtonElement",
      "classSimpleName": "HTMLButtonElement",
      "elementKind": "method",
      "methodName": "getAttributeNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Attr akasha.Element::getAttributeNode(java.lang.String) @ akasha.HTMLCanvasElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLCanvasElement",
      "classSimpleName": "HTMLCanvasElement",
      "elementKind": "method",
      "methodName": "getAttributeNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Attr akasha.Element::getAttributeNode(java.lang.String) @ akasha.HTMLDListElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLDListElement",
      "classSimpleName": "HTMLDListElement",
      "elementKind": "method",
      "methodName": "getAttributeNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Attr akasha.Element::getAttributeNode(java.lang.String) @ akasha.HTMLDataElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLDataElement",
      "classSimpleName": "HTMLDataElement",
      "elementKind": "method",
      "methodName": "getAttributeNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Attr akasha.Element::getAttributeNode(java.lang.String) @ akasha.HTMLDataListElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLDataListElement",
      "classSimpleName": "HTMLDataListElement",
      "elementKind": "method",
      "methodName": "getAttributeNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Attr akasha.Element::getAttributeNode(java.lang.String) @ akasha.HTMLDetailsElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLDetailsElement",
      "classSimpleName": "HTMLDetailsElement",
      "elementKind": "method",
      "methodName": "getAttributeNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Attr akasha.Element::getAttributeNode(java.lang.String) @ akasha.HTMLDialogElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLDialogElement",
      "classSimpleName": "HTMLDialogElement",
      "elementKind": "method",
      "methodName": "getAttributeNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Attr akasha.Element::getAttributeNode(java.lang.String) @ akasha.HTMLDirectoryElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLDirectoryElement",
      "classSimpleName": "HTMLDirectoryElement",
      "elementKind": "method",
      "methodName": "getAttributeNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Attr akasha.Element::getAttributeNode(java.lang.String) @ akasha.HTMLDivElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLDivElement",
      "classSimpleName": "HTMLDivElement",
      "elementKind": "method",
      "methodName": "getAttributeNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Attr akasha.Element::getAttributeNode(java.lang.String) @ akasha.HTMLElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLElement",
      "classSimpleName": "HTMLElement",
      "elementKind": "method",
      "methodName": "getAttributeNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Attr akasha.Element::getAttributeNode(java.lang.String) @ akasha.HTMLEmbedElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLEmbedElement",
      "classSimpleName": "HTMLEmbedElement",
      "elementKind": "method",
      "methodName": "getAttributeNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Attr akasha.Element::getAttributeNode(java.lang.String) @ akasha.HTMLFieldSetElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLFieldSetElement",
      "classSimpleName": "HTMLFieldSetElement",
      "elementKind": "method",
      "methodName": "getAttributeNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Attr akasha.Element::getAttributeNode(java.lang.String) @ akasha.HTMLFontElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLFontElement",
      "classSimpleName": "HTMLFontElement",
      "elementKind": "method",
      "methodName": "getAttributeNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Attr akasha.Element::getAttributeNode(java.lang.String) @ akasha.HTMLFormElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLFormElement",
      "classSimpleName": "HTMLFormElement",
      "elementKind": "method",
      "methodName": "getAttributeNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Attr akasha.Element::getAttributeNode(java.lang.String) @ akasha.HTMLFrameElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLFrameElement",
      "classSimpleName": "HTMLFrameElement",
      "elementKind": "method",
      "methodName": "getAttributeNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Attr akasha.Element::getAttributeNode(java.lang.String) @ akasha.HTMLFrameSetElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLFrameSetElement",
      "classSimpleName": "HTMLFrameSetElement",
      "elementKind": "method",
      "methodName": "getAttributeNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Attr akasha.Element::getAttributeNode(java.lang.String) @ akasha.HTMLHRElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLHRElement",
      "classSimpleName": "HTMLHRElement",
      "elementKind": "method",
      "methodName": "getAttributeNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Attr akasha.Element::getAttributeNode(java.lang.String) @ akasha.HTMLHeadElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLHeadElement",
      "classSimpleName": "HTMLHeadElement",
      "elementKind": "method",
      "methodName": "getAttributeNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Attr akasha.Element::getAttributeNode(java.lang.String) @ akasha.HTMLHeadingElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLHeadingElement",
      "classSimpleName": "HTMLHeadingElement",
      "elementKind": "method",
      "methodName": "getAttributeNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Attr akasha.Element::getAttributeNode(java.lang.String) @ akasha.HTMLHtmlElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLHtmlElement",
      "classSimpleName": "HTMLHtmlElement",
      "elementKind": "method",
      "methodName": "getAttributeNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Attr akasha.Element::getAttributeNode(java.lang.String) @ akasha.HTMLIFrameElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLIFrameElement",
      "classSimpleName": "HTMLIFrameElement",
      "elementKind": "method",
      "methodName": "getAttributeNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Attr akasha.Element::getAttributeNode(java.lang.String) @ akasha.HTMLImageElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLImageElement",
      "classSimpleName": "HTMLImageElement",
      "elementKind": "method",
      "methodName": "getAttributeNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Attr akasha.Element::getAttributeNode(java.lang.String) @ akasha.HTMLInputElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLInputElement",
      "classSimpleName": "HTMLInputElement",
      "elementKind": "method",
      "methodName": "getAttributeNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Attr akasha.Element::getAttributeNode(java.lang.String) @ akasha.HTMLLIElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLLIElement",
      "classSimpleName": "HTMLLIElement",
      "elementKind": "method",
      "methodName": "getAttributeNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Attr akasha.Element::getAttributeNode(java.lang.String) @ akasha.HTMLLabelElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLLabelElement",
      "classSimpleName": "HTMLLabelElement",
      "elementKind": "method",
      "methodName": "getAttributeNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Attr akasha.Element::getAttributeNode(java.lang.String) @ akasha.HTMLLegendElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLLegendElement",
      "classSimpleName": "HTMLLegendElement",
      "elementKind": "method",
      "methodName": "getAttributeNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Attr akasha.Element::getAttributeNode(java.lang.String) @ akasha.HTMLLinkElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLLinkElement",
      "classSimpleName": "HTMLLinkElement",
      "elementKind": "method",
      "methodName": "getAttributeNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Attr akasha.Element::getAttributeNode(java.lang.String) @ akasha.HTMLMapElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLMapElement",
      "classSimpleName": "HTMLMapElement",
      "elementKind": "method",
      "methodName": "getAttributeNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Attr akasha.Element::getAttributeNode(java.lang.String) @ akasha.HTMLMarqueeElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLMarqueeElement",
      "classSimpleName": "HTMLMarqueeElement",
      "elementKind": "method",
      "methodName": "getAttributeNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Attr akasha.Element::getAttributeNode(java.lang.String) @ akasha.HTMLMediaElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLMediaElement",
      "classSimpleName": "HTMLMediaElement",
      "elementKind": "method",
      "methodName": "getAttributeNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Attr akasha.Element::getAttributeNode(java.lang.String) @ akasha.HTMLMenuElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLMenuElement",
      "classSimpleName": "HTMLMenuElement",
      "elementKind": "method",
      "methodName": "getAttributeNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Attr akasha.Element::getAttributeNode(java.lang.String) @ akasha.HTMLMetaElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLMetaElement",
      "classSimpleName": "HTMLMetaElement",
      "elementKind": "method",
      "methodName": "getAttributeNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Attr akasha.Element::getAttributeNode(java.lang.String) @ akasha.HTMLMeterElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLMeterElement",
      "classSimpleName": "HTMLMeterElement",
      "elementKind": "method",
      "methodName": "getAttributeNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Attr akasha.Element::getAttributeNode(java.lang.String) @ akasha.HTMLModElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLModElement",
      "classSimpleName": "HTMLModElement",
      "elementKind": "method",
      "methodName": "getAttributeNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Attr akasha.Element::getAttributeNode(java.lang.String) @ akasha.HTMLOListElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLOListElement",
      "classSimpleName": "HTMLOListElement",
      "elementKind": "method",
      "methodName": "getAttributeNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Attr akasha.Element::getAttributeNode(java.lang.String) @ akasha.HTMLObjectElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLObjectElement",
      "classSimpleName": "HTMLObjectElement",
      "elementKind": "method",
      "methodName": "getAttributeNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Attr akasha.Element::getAttributeNode(java.lang.String) @ akasha.HTMLOptGroupElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLOptGroupElement",
      "classSimpleName": "HTMLOptGroupElement",
      "elementKind": "method",
      "methodName": "getAttributeNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Attr akasha.Element::getAttributeNode(java.lang.String) @ akasha.HTMLOptionElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLOptionElement",
      "classSimpleName": "HTMLOptionElement",
      "elementKind": "method",
      "methodName": "getAttributeNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Attr akasha.Element::getAttributeNode(java.lang.String) @ akasha.HTMLOutputElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLOutputElement",
      "classSimpleName": "HTMLOutputElement",
      "elementKind": "method",
      "methodName": "getAttributeNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Attr akasha.Element::getAttributeNode(java.lang.String) @ akasha.HTMLParagraphElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLParagraphElement",
      "classSimpleName": "HTMLParagraphElement",
      "elementKind": "method",
      "methodName": "getAttributeNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Attr akasha.Element::getAttributeNode(java.lang.String) @ akasha.HTMLParamElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLParamElement",
      "classSimpleName": "HTMLParamElement",
      "elementKind": "method",
      "methodName": "getAttributeNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Attr akasha.Element::getAttributeNode(java.lang.String) @ akasha.HTMLPictureElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLPictureElement",
      "classSimpleName": "HTMLPictureElement",
      "elementKind": "method",
      "methodName": "getAttributeNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Attr akasha.Element::getAttributeNode(java.lang.String) @ akasha.HTMLPreElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLPreElement",
      "classSimpleName": "HTMLPreElement",
      "elementKind": "method",
      "methodName": "getAttributeNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Attr akasha.Element::getAttributeNode(java.lang.String) @ akasha.HTMLProgressElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLProgressElement",
      "classSimpleName": "HTMLProgressElement",
      "elementKind": "method",
      "methodName": "getAttributeNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Attr akasha.Element::getAttributeNode(java.lang.String) @ akasha.HTMLQuoteElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLQuoteElement",
      "classSimpleName": "HTMLQuoteElement",
      "elementKind": "method",
      "methodName": "getAttributeNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Attr akasha.Element::getAttributeNode(java.lang.String) @ akasha.HTMLScriptElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLScriptElement",
      "classSimpleName": "HTMLScriptElement",
      "elementKind": "method",
      "methodName": "getAttributeNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Attr akasha.Element::getAttributeNode(java.lang.String) @ akasha.HTMLSelectElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLSelectElement",
      "classSimpleName": "HTMLSelectElement",
      "elementKind": "method",
      "methodName": "getAttributeNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Attr akasha.Element::getAttributeNode(java.lang.String) @ akasha.HTMLSlotElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLSlotElement",
      "classSimpleName": "HTMLSlotElement",
      "elementKind": "method",
      "methodName": "getAttributeNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Attr akasha.Element::getAttributeNode(java.lang.String) @ akasha.HTMLSourceElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLSourceElement",
      "classSimpleName": "HTMLSourceElement",
      "elementKind": "method",
      "methodName": "getAttributeNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Attr akasha.Element::getAttributeNode(java.lang.String) @ akasha.HTMLSpanElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLSpanElement",
      "classSimpleName": "HTMLSpanElement",
      "elementKind": "method",
      "methodName": "getAttributeNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Attr akasha.Element::getAttributeNode(java.lang.String) @ akasha.HTMLStyleElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLStyleElement",
      "classSimpleName": "HTMLStyleElement",
      "elementKind": "method",
      "methodName": "getAttributeNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Attr akasha.Element::getAttributeNode(java.lang.String) @ akasha.HTMLTableCaptionElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLTableCaptionElement",
      "classSimpleName": "HTMLTableCaptionElement",
      "elementKind": "method",
      "methodName": "getAttributeNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Attr akasha.Element::getAttributeNode(java.lang.String) @ akasha.HTMLTableCellElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLTableCellElement",
      "classSimpleName": "HTMLTableCellElement",
      "elementKind": "method",
      "methodName": "getAttributeNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Attr akasha.Element::getAttributeNode(java.lang.String) @ akasha.HTMLTableColElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLTableColElement",
      "classSimpleName": "HTMLTableColElement",
      "elementKind": "method",
      "methodName": "getAttributeNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Attr akasha.Element::getAttributeNode(java.lang.String) @ akasha.HTMLTableElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLTableElement",
      "classSimpleName": "HTMLTableElement",
      "elementKind": "method",
      "methodName": "getAttributeNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Attr akasha.Element::getAttributeNode(java.lang.String) @ akasha.HTMLTableRowElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLTableRowElement",
      "classSimpleName": "HTMLTableRowElement",
      "elementKind": "method",
      "methodName": "getAttributeNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Attr akasha.Element::getAttributeNode(java.lang.String) @ akasha.HTMLTableSectionElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLTableSectionElement",
      "classSimpleName": "HTMLTableSectionElement",
      "elementKind": "method",
      "methodName": "getAttributeNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Attr akasha.Element::getAttributeNode(java.lang.String) @ akasha.HTMLTemplateElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLTemplateElement",
      "classSimpleName": "HTMLTemplateElement",
      "elementKind": "method",
      "methodName": "getAttributeNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Attr akasha.Element::getAttributeNode(java.lang.String) @ akasha.HTMLTextAreaElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLTextAreaElement",
      "classSimpleName": "HTMLTextAreaElement",
      "elementKind": "method",
      "methodName": "getAttributeNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Attr akasha.Element::getAttributeNode(java.lang.String) @ akasha.HTMLTimeElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLTimeElement",
      "classSimpleName": "HTMLTimeElement",
      "elementKind": "method",
      "methodName": "getAttributeNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Attr akasha.Element::getAttributeNode(java.lang.String) @ akasha.HTMLTitleElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLTitleElement",
      "classSimpleName": "HTMLTitleElement",
      "elementKind": "method",
      "methodName": "getAttributeNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Attr akasha.Element::getAttributeNode(java.lang.String) @ akasha.HTMLTrackElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLTrackElement",
      "classSimpleName": "HTMLTrackElement",
      "elementKind": "method",
      "methodName": "getAttributeNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Attr akasha.Element::getAttributeNode(java.lang.String) @ akasha.HTMLUListElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLUListElement",
      "classSimpleName": "HTMLUListElement",
      "elementKind": "method",
      "methodName": "getAttributeNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Attr akasha.Element::getAttributeNode(java.lang.String) @ akasha.HTMLUnknownElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLUnknownElement",
      "classSimpleName": "HTMLUnknownElement",
      "elementKind": "method",
      "methodName": "getAttributeNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Attr akasha.Element::getAttributeNode(java.lang.String) @ akasha.HTMLVideoElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLVideoElement",
      "classSimpleName": "HTMLVideoElement",
      "elementKind": "method",
      "methodName": "getAttributeNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Attr akasha.Element::getAttributeNode(java.lang.String) @ akasha.Image",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.Image",
      "classSimpleName": "Image",
      "elementKind": "method",
      "methodName": "getAttributeNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Attr akasha.Element::getAttributeNode(java.lang.String) @ akasha.Option",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.Option",
      "classSimpleName": "Option",
      "elementKind": "method",
      "methodName": "getAttributeNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Attr akasha.Element::getAttributeNode(java.lang.String) @ akasha.svg.SVGAElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGAElement",
      "classSimpleName": "SVGAElement",
      "elementKind": "method",
      "methodName": "getAttributeNode",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Attr akasha.Element::getAttributeNode(java.lang.String) @ akasha.svg.SVGCircleElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGCircleElement",
      "classSimpleName": "SVGCircleElement",
      "elementKind": "method",
      "methodName": "getAttributeNode",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Attr akasha.Element::getAttributeNode(java.lang.String) @ akasha.svg.SVGClipPathElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGClipPathElement",
      "classSimpleName": "SVGClipPathElement",
      "elementKind": "method",
      "methodName": "getAttributeNode",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Attr akasha.Element::getAttributeNode(java.lang.String) @ akasha.svg.SVGComponentTransferFunctionElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGComponentTransferFunctionElement",
      "classSimpleName": "SVGComponentTransferFunctionElement",
      "elementKind": "method",
      "methodName": "getAttributeNode",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Attr akasha.Element::getAttributeNode(java.lang.String) @ akasha.svg.SVGDefsElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGDefsElement",
      "classSimpleName": "SVGDefsElement",
      "elementKind": "method",
      "methodName": "getAttributeNode",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Attr akasha.Element::getAttributeNode(java.lang.String) @ akasha.svg.SVGDescElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGDescElement",
      "classSimpleName": "SVGDescElement",
      "elementKind": "method",
      "methodName": "getAttributeNode",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Attr akasha.Element::getAttributeNode(java.lang.String) @ akasha.svg.SVGElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGElement",
      "classSimpleName": "SVGElement",
      "elementKind": "method",
      "methodName": "getAttributeNode",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Attr akasha.Element::getAttributeNode(java.lang.String) @ akasha.svg.SVGEllipseElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGEllipseElement",
      "classSimpleName": "SVGEllipseElement",
      "elementKind": "method",
      "methodName": "getAttributeNode",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Attr akasha.Element::getAttributeNode(java.lang.String) @ akasha.svg.SVGFEBlendElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEBlendElement",
      "classSimpleName": "SVGFEBlendElement",
      "elementKind": "method",
      "methodName": "getAttributeNode",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Attr akasha.Element::getAttributeNode(java.lang.String) @ akasha.svg.SVGFEColorMatrixElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEColorMatrixElement",
      "classSimpleName": "SVGFEColorMatrixElement",
      "elementKind": "method",
      "methodName": "getAttributeNode",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Attr akasha.Element::getAttributeNode(java.lang.String) @ akasha.svg.SVGFEComponentTransferElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEComponentTransferElement",
      "classSimpleName": "SVGFEComponentTransferElement",
      "elementKind": "method",
      "methodName": "getAttributeNode",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Attr akasha.Element::getAttributeNode(java.lang.String) @ akasha.svg.SVGFECompositeElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFECompositeElement",
      "classSimpleName": "SVGFECompositeElement",
      "elementKind": "method",
      "methodName": "getAttributeNode",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Attr akasha.Element::getAttributeNode(java.lang.String) @ akasha.svg.SVGFEConvolveMatrixElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEConvolveMatrixElement",
      "classSimpleName": "SVGFEConvolveMatrixElement",
      "elementKind": "method",
      "methodName": "getAttributeNode",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Attr akasha.Element::getAttributeNode(java.lang.String) @ akasha.svg.SVGFEDiffuseLightingElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEDiffuseLightingElement",
      "classSimpleName": "SVGFEDiffuseLightingElement",
      "elementKind": "method",
      "methodName": "getAttributeNode",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Attr akasha.Element::getAttributeNode(java.lang.String) @ akasha.svg.SVGFEDisplacementMapElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEDisplacementMapElement",
      "classSimpleName": "SVGFEDisplacementMapElement",
      "elementKind": "method",
      "methodName": "getAttributeNode",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Attr akasha.Element::getAttributeNode(java.lang.String) @ akasha.svg.SVGFEDistantLightElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEDistantLightElement",
      "classSimpleName": "SVGFEDistantLightElement",
      "elementKind": "method",
      "methodName": "getAttributeNode",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Attr akasha.Element::getAttributeNode(java.lang.String) @ akasha.svg.SVGFEDropShadowElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEDropShadowElement",
      "classSimpleName": "SVGFEDropShadowElement",
      "elementKind": "method",
      "methodName": "getAttributeNode",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Attr akasha.Element::getAttributeNode(java.lang.String) @ akasha.svg.SVGFEFloodElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEFloodElement",
      "classSimpleName": "SVGFEFloodElement",
      "elementKind": "method",
      "methodName": "getAttributeNode",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Attr akasha.Element::getAttributeNode(java.lang.String) @ akasha.svg.SVGFEFuncAElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEFuncAElement",
      "classSimpleName": "SVGFEFuncAElement",
      "elementKind": "method",
      "methodName": "getAttributeNode",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Attr akasha.Element::getAttributeNode(java.lang.String) @ akasha.svg.SVGFEFuncBElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEFuncBElement",
      "classSimpleName": "SVGFEFuncBElement",
      "elementKind": "method",
      "methodName": "getAttributeNode",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Attr akasha.Element::getAttributeNode(java.lang.String) @ akasha.svg.SVGFEFuncGElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEFuncGElement",
      "classSimpleName": "SVGFEFuncGElement",
      "elementKind": "method",
      "methodName": "getAttributeNode",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Attr akasha.Element::getAttributeNode(java.lang.String) @ akasha.svg.SVGFEFuncRElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEFuncRElement",
      "classSimpleName": "SVGFEFuncRElement",
      "elementKind": "method",
      "methodName": "getAttributeNode",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Attr akasha.Element::getAttributeNode(java.lang.String) @ akasha.svg.SVGFEGaussianBlurElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEGaussianBlurElement",
      "classSimpleName": "SVGFEGaussianBlurElement",
      "elementKind": "method",
      "methodName": "getAttributeNode",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Attr akasha.Element::getAttributeNode(java.lang.String) @ akasha.svg.SVGFEImageElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEImageElement",
      "classSimpleName": "SVGFEImageElement",
      "elementKind": "method",
      "methodName": "getAttributeNode",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Attr akasha.Element::getAttributeNode(java.lang.String) @ akasha.svg.SVGFEMergeElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEMergeElement",
      "classSimpleName": "SVGFEMergeElement",
      "elementKind": "method",
      "methodName": "getAttributeNode",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Attr akasha.Element::getAttributeNode(java.lang.String) @ akasha.svg.SVGFEMergeNodeElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEMergeNodeElement",
      "classSimpleName": "SVGFEMergeNodeElement",
      "elementKind": "method",
      "methodName": "getAttributeNode",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Attr akasha.Element::getAttributeNode(java.lang.String) @ akasha.svg.SVGFEMorphologyElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEMorphologyElement",
      "classSimpleName": "SVGFEMorphologyElement",
      "elementKind": "method",
      "methodName": "getAttributeNode",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Attr akasha.Element::getAttributeNode(java.lang.String) @ akasha.svg.SVGFEOffsetElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEOffsetElement",
      "classSimpleName": "SVGFEOffsetElement",
      "elementKind": "method",
      "methodName": "getAttributeNode",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Attr akasha.Element::getAttributeNode(java.lang.String) @ akasha.svg.SVGFEPointLightElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEPointLightElement",
      "classSimpleName": "SVGFEPointLightElement",
      "elementKind": "method",
      "methodName": "getAttributeNode",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Attr akasha.Element::getAttributeNode(java.lang.String) @ akasha.svg.SVGFESpecularLightingElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFESpecularLightingElement",
      "classSimpleName": "SVGFESpecularLightingElement",
      "elementKind": "method",
      "methodName": "getAttributeNode",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Attr akasha.Element::getAttributeNode(java.lang.String) @ akasha.svg.SVGFESpotLightElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFESpotLightElement",
      "classSimpleName": "SVGFESpotLightElement",
      "elementKind": "method",
      "methodName": "getAttributeNode",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Attr akasha.Element::getAttributeNode(java.lang.String) @ akasha.svg.SVGFETileElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFETileElement",
      "classSimpleName": "SVGFETileElement",
      "elementKind": "method",
      "methodName": "getAttributeNode",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Attr akasha.Element::getAttributeNode(java.lang.String) @ akasha.svg.SVGFETurbulenceElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFETurbulenceElement",
      "classSimpleName": "SVGFETurbulenceElement",
      "elementKind": "method",
      "methodName": "getAttributeNode",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Attr akasha.Element::getAttributeNode(java.lang.String) @ akasha.svg.SVGFilterElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFilterElement",
      "classSimpleName": "SVGFilterElement",
      "elementKind": "method",
      "methodName": "getAttributeNode",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Attr akasha.Element::getAttributeNode(java.lang.String) @ akasha.svg.SVGForeignObjectElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGForeignObjectElement",
      "classSimpleName": "SVGForeignObjectElement",
      "elementKind": "method",
      "methodName": "getAttributeNode",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Attr akasha.Element::getAttributeNode(java.lang.String) @ akasha.svg.SVGGElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGGElement",
      "classSimpleName": "SVGGElement",
      "elementKind": "method",
      "methodName": "getAttributeNode",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Attr akasha.Element::getAttributeNode(java.lang.String) @ akasha.svg.SVGGeometryElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGGeometryElement",
      "classSimpleName": "SVGGeometryElement",
      "elementKind": "method",
      "methodName": "getAttributeNode",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Attr akasha.Element::getAttributeNode(java.lang.String) @ akasha.svg.SVGGradientElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGGradientElement",
      "classSimpleName": "SVGGradientElement",
      "elementKind": "method",
      "methodName": "getAttributeNode",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Attr akasha.Element::getAttributeNode(java.lang.String) @ akasha.svg.SVGGraphicsElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGGraphicsElement",
      "classSimpleName": "SVGGraphicsElement",
      "elementKind": "method",
      "methodName": "getAttributeNode",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Attr akasha.Element::getAttributeNode(java.lang.String) @ akasha.svg.SVGImageElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGImageElement",
      "classSimpleName": "SVGImageElement",
      "elementKind": "method",
      "methodName": "getAttributeNode",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Attr akasha.Element::getAttributeNode(java.lang.String) @ akasha.svg.SVGLineElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGLineElement",
      "classSimpleName": "SVGLineElement",
      "elementKind": "method",
      "methodName": "getAttributeNode",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Attr akasha.Element::getAttributeNode(java.lang.String) @ akasha.svg.SVGLinearGradientElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGLinearGradientElement",
      "classSimpleName": "SVGLinearGradientElement",
      "elementKind": "method",
      "methodName": "getAttributeNode",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Attr akasha.Element::getAttributeNode(java.lang.String) @ akasha.svg.SVGMarkerElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGMarkerElement",
      "classSimpleName": "SVGMarkerElement",
      "elementKind": "method",
      "methodName": "getAttributeNode",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Attr akasha.Element::getAttributeNode(java.lang.String) @ akasha.svg.SVGMaskElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGMaskElement",
      "classSimpleName": "SVGMaskElement",
      "elementKind": "method",
      "methodName": "getAttributeNode",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Attr akasha.Element::getAttributeNode(java.lang.String) @ akasha.svg.SVGMetadataElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGMetadataElement",
      "classSimpleName": "SVGMetadataElement",
      "elementKind": "method",
      "methodName": "getAttributeNode",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Attr akasha.Element::getAttributeNode(java.lang.String) @ akasha.svg.SVGPathElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGPathElement",
      "classSimpleName": "SVGPathElement",
      "elementKind": "method",
      "methodName": "getAttributeNode",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Attr akasha.Element::getAttributeNode(java.lang.String) @ akasha.svg.SVGPatternElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGPatternElement",
      "classSimpleName": "SVGPatternElement",
      "elementKind": "method",
      "methodName": "getAttributeNode",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Attr akasha.Element::getAttributeNode(java.lang.String) @ akasha.svg.SVGPolygonElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGPolygonElement",
      "classSimpleName": "SVGPolygonElement",
      "elementKind": "method",
      "methodName": "getAttributeNode",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Attr akasha.Element::getAttributeNode(java.lang.String) @ akasha.svg.SVGPolylineElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGPolylineElement",
      "classSimpleName": "SVGPolylineElement",
      "elementKind": "method",
      "methodName": "getAttributeNode",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Attr akasha.Element::getAttributeNode(java.lang.String) @ akasha.svg.SVGRadialGradientElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGRadialGradientElement",
      "classSimpleName": "SVGRadialGradientElement",
      "elementKind": "method",
      "methodName": "getAttributeNode",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Attr akasha.Element::getAttributeNode(java.lang.String) @ akasha.svg.SVGRectElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGRectElement",
      "classSimpleName": "SVGRectElement",
      "elementKind": "method",
      "methodName": "getAttributeNode",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Attr akasha.Element::getAttributeNode(java.lang.String) @ akasha.svg.SVGSVGElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGSVGElement",
      "classSimpleName": "SVGSVGElement",
      "elementKind": "method",
      "methodName": "getAttributeNode",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Attr akasha.Element::getAttributeNode(java.lang.String) @ akasha.svg.SVGScriptElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGScriptElement",
      "classSimpleName": "SVGScriptElement",
      "elementKind": "method",
      "methodName": "getAttributeNode",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Attr akasha.Element::getAttributeNode(java.lang.String) @ akasha.svg.SVGStopElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGStopElement",
      "classSimpleName": "SVGStopElement",
      "elementKind": "method",
      "methodName": "getAttributeNode",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Attr akasha.Element::getAttributeNode(java.lang.String) @ akasha.svg.SVGStyleElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGStyleElement",
      "classSimpleName": "SVGStyleElement",
      "elementKind": "method",
      "methodName": "getAttributeNode",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Attr akasha.Element::getAttributeNode(java.lang.String) @ akasha.svg.SVGSwitchElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGSwitchElement",
      "classSimpleName": "SVGSwitchElement",
      "elementKind": "method",
      "methodName": "getAttributeNode",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Attr akasha.Element::getAttributeNode(java.lang.String) @ akasha.svg.SVGSymbolElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGSymbolElement",
      "classSimpleName": "SVGSymbolElement",
      "elementKind": "method",
      "methodName": "getAttributeNode",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Attr akasha.Element::getAttributeNode(java.lang.String) @ akasha.svg.SVGTSpanElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGTSpanElement",
      "classSimpleName": "SVGTSpanElement",
      "elementKind": "method",
      "methodName": "getAttributeNode",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Attr akasha.Element::getAttributeNode(java.lang.String) @ akasha.svg.SVGTextContentElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGTextContentElement",
      "classSimpleName": "SVGTextContentElement",
      "elementKind": "method",
      "methodName": "getAttributeNode",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Attr akasha.Element::getAttributeNode(java.lang.String) @ akasha.svg.SVGTextElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGTextElement",
      "classSimpleName": "SVGTextElement",
      "elementKind": "method",
      "methodName": "getAttributeNode",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Attr akasha.Element::getAttributeNode(java.lang.String) @ akasha.svg.SVGTextPathElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGTextPathElement",
      "classSimpleName": "SVGTextPathElement",
      "elementKind": "method",
      "methodName": "getAttributeNode",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Attr akasha.Element::getAttributeNode(java.lang.String) @ akasha.svg.SVGTextPositioningElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGTextPositioningElement",
      "classSimpleName": "SVGTextPositioningElement",
      "elementKind": "method",
      "methodName": "getAttributeNode",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Attr akasha.Element::getAttributeNode(java.lang.String) @ akasha.svg.SVGTitleElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGTitleElement",
      "classSimpleName": "SVGTitleElement",
      "elementKind": "method",
      "methodName": "getAttributeNode",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Attr akasha.Element::getAttributeNode(java.lang.String) @ akasha.svg.SVGUnknownElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGUnknownElement",
      "classSimpleName": "SVGUnknownElement",
      "elementKind": "method",
      "methodName": "getAttributeNode",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Attr akasha.Element::getAttributeNode(java.lang.String) @ akasha.svg.SVGUseElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGUseElement",
      "classSimpleName": "SVGUseElement",
      "elementKind": "method",
      "methodName": "getAttributeNode",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Attr akasha.Element::getAttributeNode(java.lang.String) @ akasha.svg.SVGViewElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGViewElement",
      "classSimpleName": "SVGViewElement",
      "elementKind": "method",
      "methodName": "getAttributeNode",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Attr akasha.Element::getAttributeNode(java.lang.String)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.Element",
      "classSimpleName": "Element",
      "elementKind": "method",
      "methodName": "getAttributeNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Attr akasha.Element::getAttributeNodeNS(java.lang.String, java.lang.String) @ akasha.Audio",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.Audio",
      "classSimpleName": "Audio",
      "elementKind": "method",
      "methodName": "getAttributeNodeNS",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Attr akasha.Element::getAttributeNodeNS(java.lang.String, java.lang.String) @ akasha.HTMLAnchorElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLAnchorElement",
      "classSimpleName": "HTMLAnchorElement",
      "elementKind": "method",
      "methodName": "getAttributeNodeNS",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Attr akasha.Element::getAttributeNodeNS(java.lang.String, java.lang.String) @ akasha.HTMLAreaElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLAreaElement",
      "classSimpleName": "HTMLAreaElement",
      "elementKind": "method",
      "methodName": "getAttributeNodeNS",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Attr akasha.Element::getAttributeNodeNS(java.lang.String, java.lang.String) @ akasha.HTMLAudioElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLAudioElement",
      "classSimpleName": "HTMLAudioElement",
      "elementKind": "method",
      "methodName": "getAttributeNodeNS",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Attr akasha.Element::getAttributeNodeNS(java.lang.String, java.lang.String) @ akasha.HTMLBRElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLBRElement",
      "classSimpleName": "HTMLBRElement",
      "elementKind": "method",
      "methodName": "getAttributeNodeNS",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Attr akasha.Element::getAttributeNodeNS(java.lang.String, java.lang.String) @ akasha.HTMLBaseElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLBaseElement",
      "classSimpleName": "HTMLBaseElement",
      "elementKind": "method",
      "methodName": "getAttributeNodeNS",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Attr akasha.Element::getAttributeNodeNS(java.lang.String, java.lang.String) @ akasha.HTMLBodyElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLBodyElement",
      "classSimpleName": "HTMLBodyElement",
      "elementKind": "method",
      "methodName": "getAttributeNodeNS",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Attr akasha.Element::getAttributeNodeNS(java.lang.String, java.lang.String) @ akasha.HTMLButtonElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLButtonElement",
      "classSimpleName": "HTMLButtonElement",
      "elementKind": "method",
      "methodName": "getAttributeNodeNS",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Attr akasha.Element::getAttributeNodeNS(java.lang.String, java.lang.String) @ akasha.HTMLCanvasElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLCanvasElement",
      "classSimpleName": "HTMLCanvasElement",
      "elementKind": "method",
      "methodName": "getAttributeNodeNS",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Attr akasha.Element::getAttributeNodeNS(java.lang.String, java.lang.String) @ akasha.HTMLDListElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLDListElement",
      "classSimpleName": "HTMLDListElement",
      "elementKind": "method",
      "methodName": "getAttributeNodeNS",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Attr akasha.Element::getAttributeNodeNS(java.lang.String, java.lang.String) @ akasha.HTMLDataElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLDataElement",
      "classSimpleName": "HTMLDataElement",
      "elementKind": "method",
      "methodName": "getAttributeNodeNS",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Attr akasha.Element::getAttributeNodeNS(java.lang.String, java.lang.String) @ akasha.HTMLDataListElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLDataListElement",
      "classSimpleName": "HTMLDataListElement",
      "elementKind": "method",
      "methodName": "getAttributeNodeNS",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Attr akasha.Element::getAttributeNodeNS(java.lang.String, java.lang.String) @ akasha.HTMLDetailsElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLDetailsElement",
      "classSimpleName": "HTMLDetailsElement",
      "elementKind": "method",
      "methodName": "getAttributeNodeNS",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Attr akasha.Element::getAttributeNodeNS(java.lang.String, java.lang.String) @ akasha.HTMLDialogElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLDialogElement",
      "classSimpleName": "HTMLDialogElement",
      "elementKind": "method",
      "methodName": "getAttributeNodeNS",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Attr akasha.Element::getAttributeNodeNS(java.lang.String, java.lang.String) @ akasha.HTMLDirectoryElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLDirectoryElement",
      "classSimpleName": "HTMLDirectoryElement",
      "elementKind": "method",
      "methodName": "getAttributeNodeNS",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Attr akasha.Element::getAttributeNodeNS(java.lang.String, java.lang.String) @ akasha.HTMLDivElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLDivElement",
      "classSimpleName": "HTMLDivElement",
      "elementKind": "method",
      "methodName": "getAttributeNodeNS",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Attr akasha.Element::getAttributeNodeNS(java.lang.String, java.lang.String) @ akasha.HTMLElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLElement",
      "classSimpleName": "HTMLElement",
      "elementKind": "method",
      "methodName": "getAttributeNodeNS",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Attr akasha.Element::getAttributeNodeNS(java.lang.String, java.lang.String) @ akasha.HTMLEmbedElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLEmbedElement",
      "classSimpleName": "HTMLEmbedElement",
      "elementKind": "method",
      "methodName": "getAttributeNodeNS",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Attr akasha.Element::getAttributeNodeNS(java.lang.String, java.lang.String) @ akasha.HTMLFieldSetElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLFieldSetElement",
      "classSimpleName": "HTMLFieldSetElement",
      "elementKind": "method",
      "methodName": "getAttributeNodeNS",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Attr akasha.Element::getAttributeNodeNS(java.lang.String, java.lang.String) @ akasha.HTMLFontElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLFontElement",
      "classSimpleName": "HTMLFontElement",
      "elementKind": "method",
      "methodName": "getAttributeNodeNS",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Attr akasha.Element::getAttributeNodeNS(java.lang.String, java.lang.String) @ akasha.HTMLFormElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLFormElement",
      "classSimpleName": "HTMLFormElement",
      "elementKind": "method",
      "methodName": "getAttributeNodeNS",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Attr akasha.Element::getAttributeNodeNS(java.lang.String, java.lang.String) @ akasha.HTMLFrameElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLFrameElement",
      "classSimpleName": "HTMLFrameElement",
      "elementKind": "method",
      "methodName": "getAttributeNodeNS",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Attr akasha.Element::getAttributeNodeNS(java.lang.String, java.lang.String) @ akasha.HTMLFrameSetElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLFrameSetElement",
      "classSimpleName": "HTMLFrameSetElement",
      "elementKind": "method",
      "methodName": "getAttributeNodeNS",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Attr akasha.Element::getAttributeNodeNS(java.lang.String, java.lang.String) @ akasha.HTMLHRElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLHRElement",
      "classSimpleName": "HTMLHRElement",
      "elementKind": "method",
      "methodName": "getAttributeNodeNS",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Attr akasha.Element::getAttributeNodeNS(java.lang.String, java.lang.String) @ akasha.HTMLHeadElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLHeadElement",
      "classSimpleName": "HTMLHeadElement",
      "elementKind": "method",
      "methodName": "getAttributeNodeNS",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Attr akasha.Element::getAttributeNodeNS(java.lang.String, java.lang.String) @ akasha.HTMLHeadingElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLHeadingElement",
      "classSimpleName": "HTMLHeadingElement",
      "elementKind": "method",
      "methodName": "getAttributeNodeNS",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Attr akasha.Element::getAttributeNodeNS(java.lang.String, java.lang.String) @ akasha.HTMLHtmlElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLHtmlElement",
      "classSimpleName": "HTMLHtmlElement",
      "elementKind": "method",
      "methodName": "getAttributeNodeNS",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Attr akasha.Element::getAttributeNodeNS(java.lang.String, java.lang.String) @ akasha.HTMLIFrameElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLIFrameElement",
      "classSimpleName": "HTMLIFrameElement",
      "elementKind": "method",
      "methodName": "getAttributeNodeNS",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Attr akasha.Element::getAttributeNodeNS(java.lang.String, java.lang.String) @ akasha.HTMLImageElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLImageElement",
      "classSimpleName": "HTMLImageElement",
      "elementKind": "method",
      "methodName": "getAttributeNodeNS",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Attr akasha.Element::getAttributeNodeNS(java.lang.String, java.lang.String) @ akasha.HTMLInputElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLInputElement",
      "classSimpleName": "HTMLInputElement",
      "elementKind": "method",
      "methodName": "getAttributeNodeNS",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Attr akasha.Element::getAttributeNodeNS(java.lang.String, java.lang.String) @ akasha.HTMLLIElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLLIElement",
      "classSimpleName": "HTMLLIElement",
      "elementKind": "method",
      "methodName": "getAttributeNodeNS",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Attr akasha.Element::getAttributeNodeNS(java.lang.String, java.lang.String) @ akasha.HTMLLabelElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLLabelElement",
      "classSimpleName": "HTMLLabelElement",
      "elementKind": "method",
      "methodName": "getAttributeNodeNS",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Attr akasha.Element::getAttributeNodeNS(java.lang.String, java.lang.String) @ akasha.HTMLLegendElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLLegendElement",
      "classSimpleName": "HTMLLegendElement",
      "elementKind": "method",
      "methodName": "getAttributeNodeNS",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Attr akasha.Element::getAttributeNodeNS(java.lang.String, java.lang.String) @ akasha.HTMLLinkElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLLinkElement",
      "classSimpleName": "HTMLLinkElement",
      "elementKind": "method",
      "methodName": "getAttributeNodeNS",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Attr akasha.Element::getAttributeNodeNS(java.lang.String, java.lang.String) @ akasha.HTMLMapElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLMapElement",
      "classSimpleName": "HTMLMapElement",
      "elementKind": "method",
      "methodName": "getAttributeNodeNS",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Attr akasha.Element::getAttributeNodeNS(java.lang.String, java.lang.String) @ akasha.HTMLMarqueeElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLMarqueeElement",
      "classSimpleName": "HTMLMarqueeElement",
      "elementKind": "method",
      "methodName": "getAttributeNodeNS",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Attr akasha.Element::getAttributeNodeNS(java.lang.String, java.lang.String) @ akasha.HTMLMediaElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLMediaElement",
      "classSimpleName": "HTMLMediaElement",
      "elementKind": "method",
      "methodName": "getAttributeNodeNS",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Attr akasha.Element::getAttributeNodeNS(java.lang.String, java.lang.String) @ akasha.HTMLMenuElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLMenuElement",
      "classSimpleName": "HTMLMenuElement",
      "elementKind": "method",
      "methodName": "getAttributeNodeNS",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Attr akasha.Element::getAttributeNodeNS(java.lang.String, java.lang.String) @ akasha.HTMLMetaElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLMetaElement",
      "classSimpleName": "HTMLMetaElement",
      "elementKind": "method",
      "methodName": "getAttributeNodeNS",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Attr akasha.Element::getAttributeNodeNS(java.lang.String, java.lang.String) @ akasha.HTMLMeterElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLMeterElement",
      "classSimpleName": "HTMLMeterElement",
      "elementKind": "method",
      "methodName": "getAttributeNodeNS",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Attr akasha.Element::getAttributeNodeNS(java.lang.String, java.lang.String) @ akasha.HTMLModElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLModElement",
      "classSimpleName": "HTMLModElement",
      "elementKind": "method",
      "methodName": "getAttributeNodeNS",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Attr akasha.Element::getAttributeNodeNS(java.lang.String, java.lang.String) @ akasha.HTMLOListElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLOListElement",
      "classSimpleName": "HTMLOListElement",
      "elementKind": "method",
      "methodName": "getAttributeNodeNS",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Attr akasha.Element::getAttributeNodeNS(java.lang.String, java.lang.String) @ akasha.HTMLObjectElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLObjectElement",
      "classSimpleName": "HTMLObjectElement",
      "elementKind": "method",
      "methodName": "getAttributeNodeNS",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Attr akasha.Element::getAttributeNodeNS(java.lang.String, java.lang.String) @ akasha.HTMLOptGroupElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLOptGroupElement",
      "classSimpleName": "HTMLOptGroupElement",
      "elementKind": "method",
      "methodName": "getAttributeNodeNS",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Attr akasha.Element::getAttributeNodeNS(java.lang.String, java.lang.String) @ akasha.HTMLOptionElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLOptionElement",
      "classSimpleName": "HTMLOptionElement",
      "elementKind": "method",
      "methodName": "getAttributeNodeNS",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Attr akasha.Element::getAttributeNodeNS(java.lang.String, java.lang.String) @ akasha.HTMLOutputElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLOutputElement",
      "classSimpleName": "HTMLOutputElement",
      "elementKind": "method",
      "methodName": "getAttributeNodeNS",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Attr akasha.Element::getAttributeNodeNS(java.lang.String, java.lang.String) @ akasha.HTMLParagraphElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLParagraphElement",
      "classSimpleName": "HTMLParagraphElement",
      "elementKind": "method",
      "methodName": "getAttributeNodeNS",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Attr akasha.Element::getAttributeNodeNS(java.lang.String, java.lang.String) @ akasha.HTMLParamElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLParamElement",
      "classSimpleName": "HTMLParamElement",
      "elementKind": "method",
      "methodName": "getAttributeNodeNS",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Attr akasha.Element::getAttributeNodeNS(java.lang.String, java.lang.String) @ akasha.HTMLPictureElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLPictureElement",
      "classSimpleName": "HTMLPictureElement",
      "elementKind": "method",
      "methodName": "getAttributeNodeNS",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Attr akasha.Element::getAttributeNodeNS(java.lang.String, java.lang.String) @ akasha.HTMLPreElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLPreElement",
      "classSimpleName": "HTMLPreElement",
      "elementKind": "method",
      "methodName": "getAttributeNodeNS",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Attr akasha.Element::getAttributeNodeNS(java.lang.String, java.lang.String) @ akasha.HTMLProgressElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLProgressElement",
      "classSimpleName": "HTMLProgressElement",
      "elementKind": "method",
      "methodName": "getAttributeNodeNS",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Attr akasha.Element::getAttributeNodeNS(java.lang.String, java.lang.String) @ akasha.HTMLQuoteElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLQuoteElement",
      "classSimpleName": "HTMLQuoteElement",
      "elementKind": "method",
      "methodName": "getAttributeNodeNS",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Attr akasha.Element::getAttributeNodeNS(java.lang.String, java.lang.String) @ akasha.HTMLScriptElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLScriptElement",
      "classSimpleName": "HTMLScriptElement",
      "elementKind": "method",
      "methodName": "getAttributeNodeNS",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Attr akasha.Element::getAttributeNodeNS(java.lang.String, java.lang.String) @ akasha.HTMLSelectElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLSelectElement",
      "classSimpleName": "HTMLSelectElement",
      "elementKind": "method",
      "methodName": "getAttributeNodeNS",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Attr akasha.Element::getAttributeNodeNS(java.lang.String, java.lang.String) @ akasha.HTMLSlotElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLSlotElement",
      "classSimpleName": "HTMLSlotElement",
      "elementKind": "method",
      "methodName": "getAttributeNodeNS",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Attr akasha.Element::getAttributeNodeNS(java.lang.String, java.lang.String) @ akasha.HTMLSourceElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLSourceElement",
      "classSimpleName": "HTMLSourceElement",
      "elementKind": "method",
      "methodName": "getAttributeNodeNS",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Attr akasha.Element::getAttributeNodeNS(java.lang.String, java.lang.String) @ akasha.HTMLSpanElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLSpanElement",
      "classSimpleName": "HTMLSpanElement",
      "elementKind": "method",
      "methodName": "getAttributeNodeNS",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Attr akasha.Element::getAttributeNodeNS(java.lang.String, java.lang.String) @ akasha.HTMLStyleElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLStyleElement",
      "classSimpleName": "HTMLStyleElement",
      "elementKind": "method",
      "methodName": "getAttributeNodeNS",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Attr akasha.Element::getAttributeNodeNS(java.lang.String, java.lang.String) @ akasha.HTMLTableCaptionElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLTableCaptionElement",
      "classSimpleName": "HTMLTableCaptionElement",
      "elementKind": "method",
      "methodName": "getAttributeNodeNS",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Attr akasha.Element::getAttributeNodeNS(java.lang.String, java.lang.String) @ akasha.HTMLTableCellElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLTableCellElement",
      "classSimpleName": "HTMLTableCellElement",
      "elementKind": "method",
      "methodName": "getAttributeNodeNS",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Attr akasha.Element::getAttributeNodeNS(java.lang.String, java.lang.String) @ akasha.HTMLTableColElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLTableColElement",
      "classSimpleName": "HTMLTableColElement",
      "elementKind": "method",
      "methodName": "getAttributeNodeNS",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Attr akasha.Element::getAttributeNodeNS(java.lang.String, java.lang.String) @ akasha.HTMLTableElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLTableElement",
      "classSimpleName": "HTMLTableElement",
      "elementKind": "method",
      "methodName": "getAttributeNodeNS",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Attr akasha.Element::getAttributeNodeNS(java.lang.String, java.lang.String) @ akasha.HTMLTableRowElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLTableRowElement",
      "classSimpleName": "HTMLTableRowElement",
      "elementKind": "method",
      "methodName": "getAttributeNodeNS",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Attr akasha.Element::getAttributeNodeNS(java.lang.String, java.lang.String) @ akasha.HTMLTableSectionElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLTableSectionElement",
      "classSimpleName": "HTMLTableSectionElement",
      "elementKind": "method",
      "methodName": "getAttributeNodeNS",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Attr akasha.Element::getAttributeNodeNS(java.lang.String, java.lang.String) @ akasha.HTMLTemplateElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLTemplateElement",
      "classSimpleName": "HTMLTemplateElement",
      "elementKind": "method",
      "methodName": "getAttributeNodeNS",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Attr akasha.Element::getAttributeNodeNS(java.lang.String, java.lang.String) @ akasha.HTMLTextAreaElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLTextAreaElement",
      "classSimpleName": "HTMLTextAreaElement",
      "elementKind": "method",
      "methodName": "getAttributeNodeNS",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Attr akasha.Element::getAttributeNodeNS(java.lang.String, java.lang.String) @ akasha.HTMLTimeElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLTimeElement",
      "classSimpleName": "HTMLTimeElement",
      "elementKind": "method",
      "methodName": "getAttributeNodeNS",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Attr akasha.Element::getAttributeNodeNS(java.lang.String, java.lang.String) @ akasha.HTMLTitleElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLTitleElement",
      "classSimpleName": "HTMLTitleElement",
      "elementKind": "method",
      "methodName": "getAttributeNodeNS",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Attr akasha.Element::getAttributeNodeNS(java.lang.String, java.lang.String) @ akasha.HTMLTrackElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLTrackElement",
      "classSimpleName": "HTMLTrackElement",
      "elementKind": "method",
      "methodName": "getAttributeNodeNS",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Attr akasha.Element::getAttributeNodeNS(java.lang.String, java.lang.String) @ akasha.HTMLUListElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLUListElement",
      "classSimpleName": "HTMLUListElement",
      "elementKind": "method",
      "methodName": "getAttributeNodeNS",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Attr akasha.Element::getAttributeNodeNS(java.lang.String, java.lang.String) @ akasha.HTMLUnknownElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLUnknownElement",
      "classSimpleName": "HTMLUnknownElement",
      "elementKind": "method",
      "methodName": "getAttributeNodeNS",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Attr akasha.Element::getAttributeNodeNS(java.lang.String, java.lang.String) @ akasha.HTMLVideoElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLVideoElement",
      "classSimpleName": "HTMLVideoElement",
      "elementKind": "method",
      "methodName": "getAttributeNodeNS",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Attr akasha.Element::getAttributeNodeNS(java.lang.String, java.lang.String) @ akasha.Image",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.Image",
      "classSimpleName": "Image",
      "elementKind": "method",
      "methodName": "getAttributeNodeNS",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Attr akasha.Element::getAttributeNodeNS(java.lang.String, java.lang.String) @ akasha.Option",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.Option",
      "classSimpleName": "Option",
      "elementKind": "method",
      "methodName": "getAttributeNodeNS",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Attr akasha.Element::getAttributeNodeNS(java.lang.String, java.lang.String) @ akasha.svg.SVGAElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGAElement",
      "classSimpleName": "SVGAElement",
      "elementKind": "method",
      "methodName": "getAttributeNodeNS",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Attr akasha.Element::getAttributeNodeNS(java.lang.String, java.lang.String) @ akasha.svg.SVGCircleElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGCircleElement",
      "classSimpleName": "SVGCircleElement",
      "elementKind": "method",
      "methodName": "getAttributeNodeNS",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Attr akasha.Element::getAttributeNodeNS(java.lang.String, java.lang.String) @ akasha.svg.SVGClipPathElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGClipPathElement",
      "classSimpleName": "SVGClipPathElement",
      "elementKind": "method",
      "methodName": "getAttributeNodeNS",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Attr akasha.Element::getAttributeNodeNS(java.lang.String, java.lang.String) @ akasha.svg.SVGComponentTransferFunctionElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGComponentTransferFunctionElement",
      "classSimpleName": "SVGComponentTransferFunctionElement",
      "elementKind": "method",
      "methodName": "getAttributeNodeNS",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Attr akasha.Element::getAttributeNodeNS(java.lang.String, java.lang.String) @ akasha.svg.SVGDefsElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGDefsElement",
      "classSimpleName": "SVGDefsElement",
      "elementKind": "method",
      "methodName": "getAttributeNodeNS",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Attr akasha.Element::getAttributeNodeNS(java.lang.String, java.lang.String) @ akasha.svg.SVGDescElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGDescElement",
      "classSimpleName": "SVGDescElement",
      "elementKind": "method",
      "methodName": "getAttributeNodeNS",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Attr akasha.Element::getAttributeNodeNS(java.lang.String, java.lang.String) @ akasha.svg.SVGElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGElement",
      "classSimpleName": "SVGElement",
      "elementKind": "method",
      "methodName": "getAttributeNodeNS",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Attr akasha.Element::getAttributeNodeNS(java.lang.String, java.lang.String) @ akasha.svg.SVGEllipseElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGEllipseElement",
      "classSimpleName": "SVGEllipseElement",
      "elementKind": "method",
      "methodName": "getAttributeNodeNS",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Attr akasha.Element::getAttributeNodeNS(java.lang.String, java.lang.String) @ akasha.svg.SVGFEBlendElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEBlendElement",
      "classSimpleName": "SVGFEBlendElement",
      "elementKind": "method",
      "methodName": "getAttributeNodeNS",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Attr akasha.Element::getAttributeNodeNS(java.lang.String, java.lang.String) @ akasha.svg.SVGFEColorMatrixElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEColorMatrixElement",
      "classSimpleName": "SVGFEColorMatrixElement",
      "elementKind": "method",
      "methodName": "getAttributeNodeNS",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Attr akasha.Element::getAttributeNodeNS(java.lang.String, java.lang.String) @ akasha.svg.SVGFEComponentTransferElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEComponentTransferElement",
      "classSimpleName": "SVGFEComponentTransferElement",
      "elementKind": "method",
      "methodName": "getAttributeNodeNS",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Attr akasha.Element::getAttributeNodeNS(java.lang.String, java.lang.String) @ akasha.svg.SVGFECompositeElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFECompositeElement",
      "classSimpleName": "SVGFECompositeElement",
      "elementKind": "method",
      "methodName": "getAttributeNodeNS",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Attr akasha.Element::getAttributeNodeNS(java.lang.String, java.lang.String) @ akasha.svg.SVGFEConvolveMatrixElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEConvolveMatrixElement",
      "classSimpleName": "SVGFEConvolveMatrixElement",
      "elementKind": "method",
      "methodName": "getAttributeNodeNS",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Attr akasha.Element::getAttributeNodeNS(java.lang.String, java.lang.String) @ akasha.svg.SVGFEDiffuseLightingElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEDiffuseLightingElement",
      "classSimpleName": "SVGFEDiffuseLightingElement",
      "elementKind": "method",
      "methodName": "getAttributeNodeNS",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Attr akasha.Element::getAttributeNodeNS(java.lang.String, java.lang.String) @ akasha.svg.SVGFEDisplacementMapElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEDisplacementMapElement",
      "classSimpleName": "SVGFEDisplacementMapElement",
      "elementKind": "method",
      "methodName": "getAttributeNodeNS",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Attr akasha.Element::getAttributeNodeNS(java.lang.String, java.lang.String) @ akasha.svg.SVGFEDistantLightElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEDistantLightElement",
      "classSimpleName": "SVGFEDistantLightElement",
      "elementKind": "method",
      "methodName": "getAttributeNodeNS",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Attr akasha.Element::getAttributeNodeNS(java.lang.String, java.lang.String) @ akasha.svg.SVGFEDropShadowElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEDropShadowElement",
      "classSimpleName": "SVGFEDropShadowElement",
      "elementKind": "method",
      "methodName": "getAttributeNodeNS",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Attr akasha.Element::getAttributeNodeNS(java.lang.String, java.lang.String) @ akasha.svg.SVGFEFloodElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEFloodElement",
      "classSimpleName": "SVGFEFloodElement",
      "elementKind": "method",
      "methodName": "getAttributeNodeNS",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Attr akasha.Element::getAttributeNodeNS(java.lang.String, java.lang.String) @ akasha.svg.SVGFEFuncAElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEFuncAElement",
      "classSimpleName": "SVGFEFuncAElement",
      "elementKind": "method",
      "methodName": "getAttributeNodeNS",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Attr akasha.Element::getAttributeNodeNS(java.lang.String, java.lang.String) @ akasha.svg.SVGFEFuncBElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEFuncBElement",
      "classSimpleName": "SVGFEFuncBElement",
      "elementKind": "method",
      "methodName": "getAttributeNodeNS",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Attr akasha.Element::getAttributeNodeNS(java.lang.String, java.lang.String) @ akasha.svg.SVGFEFuncGElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEFuncGElement",
      "classSimpleName": "SVGFEFuncGElement",
      "elementKind": "method",
      "methodName": "getAttributeNodeNS",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Attr akasha.Element::getAttributeNodeNS(java.lang.String, java.lang.String) @ akasha.svg.SVGFEFuncRElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEFuncRElement",
      "classSimpleName": "SVGFEFuncRElement",
      "elementKind": "method",
      "methodName": "getAttributeNodeNS",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Attr akasha.Element::getAttributeNodeNS(java.lang.String, java.lang.String) @ akasha.svg.SVGFEGaussianBlurElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEGaussianBlurElement",
      "classSimpleName": "SVGFEGaussianBlurElement",
      "elementKind": "method",
      "methodName": "getAttributeNodeNS",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Attr akasha.Element::getAttributeNodeNS(java.lang.String, java.lang.String) @ akasha.svg.SVGFEImageElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEImageElement",
      "classSimpleName": "SVGFEImageElement",
      "elementKind": "method",
      "methodName": "getAttributeNodeNS",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Attr akasha.Element::getAttributeNodeNS(java.lang.String, java.lang.String) @ akasha.svg.SVGFEMergeElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEMergeElement",
      "classSimpleName": "SVGFEMergeElement",
      "elementKind": "method",
      "methodName": "getAttributeNodeNS",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Attr akasha.Element::getAttributeNodeNS(java.lang.String, java.lang.String) @ akasha.svg.SVGFEMergeNodeElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEMergeNodeElement",
      "classSimpleName": "SVGFEMergeNodeElement",
      "elementKind": "method",
      "methodName": "getAttributeNodeNS",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Attr akasha.Element::getAttributeNodeNS(java.lang.String, java.lang.String) @ akasha.svg.SVGFEMorphologyElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEMorphologyElement",
      "classSimpleName": "SVGFEMorphologyElement",
      "elementKind": "method",
      "methodName": "getAttributeNodeNS",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Attr akasha.Element::getAttributeNodeNS(java.lang.String, java.lang.String) @ akasha.svg.SVGFEOffsetElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEOffsetElement",
      "classSimpleName": "SVGFEOffsetElement",
      "elementKind": "method",
      "methodName": "getAttributeNodeNS",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Attr akasha.Element::getAttributeNodeNS(java.lang.String, java.lang.String) @ akasha.svg.SVGFEPointLightElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEPointLightElement",
      "classSimpleName": "SVGFEPointLightElement",
      "elementKind": "method",
      "methodName": "getAttributeNodeNS",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Attr akasha.Element::getAttributeNodeNS(java.lang.String, java.lang.String) @ akasha.svg.SVGFESpecularLightingElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFESpecularLightingElement",
      "classSimpleName": "SVGFESpecularLightingElement",
      "elementKind": "method",
      "methodName": "getAttributeNodeNS",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Attr akasha.Element::getAttributeNodeNS(java.lang.String, java.lang.String) @ akasha.svg.SVGFESpotLightElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFESpotLightElement",
      "classSimpleName": "SVGFESpotLightElement",
      "elementKind": "method",
      "methodName": "getAttributeNodeNS",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Attr akasha.Element::getAttributeNodeNS(java.lang.String, java.lang.String) @ akasha.svg.SVGFETileElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFETileElement",
      "classSimpleName": "SVGFETileElement",
      "elementKind": "method",
      "methodName": "getAttributeNodeNS",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Attr akasha.Element::getAttributeNodeNS(java.lang.String, java.lang.String) @ akasha.svg.SVGFETurbulenceElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFETurbulenceElement",
      "classSimpleName": "SVGFETurbulenceElement",
      "elementKind": "method",
      "methodName": "getAttributeNodeNS",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Attr akasha.Element::getAttributeNodeNS(java.lang.String, java.lang.String) @ akasha.svg.SVGFilterElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFilterElement",
      "classSimpleName": "SVGFilterElement",
      "elementKind": "method",
      "methodName": "getAttributeNodeNS",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Attr akasha.Element::getAttributeNodeNS(java.lang.String, java.lang.String) @ akasha.svg.SVGForeignObjectElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGForeignObjectElement",
      "classSimpleName": "SVGForeignObjectElement",
      "elementKind": "method",
      "methodName": "getAttributeNodeNS",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Attr akasha.Element::getAttributeNodeNS(java.lang.String, java.lang.String) @ akasha.svg.SVGGElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGGElement",
      "classSimpleName": "SVGGElement",
      "elementKind": "method",
      "methodName": "getAttributeNodeNS",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Attr akasha.Element::getAttributeNodeNS(java.lang.String, java.lang.String) @ akasha.svg.SVGGeometryElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGGeometryElement",
      "classSimpleName": "SVGGeometryElement",
      "elementKind": "method",
      "methodName": "getAttributeNodeNS",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Attr akasha.Element::getAttributeNodeNS(java.lang.String, java.lang.String) @ akasha.svg.SVGGradientElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGGradientElement",
      "classSimpleName": "SVGGradientElement",
      "elementKind": "method",
      "methodName": "getAttributeNodeNS",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Attr akasha.Element::getAttributeNodeNS(java.lang.String, java.lang.String) @ akasha.svg.SVGGraphicsElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGGraphicsElement",
      "classSimpleName": "SVGGraphicsElement",
      "elementKind": "method",
      "methodName": "getAttributeNodeNS",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Attr akasha.Element::getAttributeNodeNS(java.lang.String, java.lang.String) @ akasha.svg.SVGImageElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGImageElement",
      "classSimpleName": "SVGImageElement",
      "elementKind": "method",
      "methodName": "getAttributeNodeNS",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Attr akasha.Element::getAttributeNodeNS(java.lang.String, java.lang.String) @ akasha.svg.SVGLineElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGLineElement",
      "classSimpleName": "SVGLineElement",
      "elementKind": "method",
      "methodName": "getAttributeNodeNS",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Attr akasha.Element::getAttributeNodeNS(java.lang.String, java.lang.String) @ akasha.svg.SVGLinearGradientElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGLinearGradientElement",
      "classSimpleName": "SVGLinearGradientElement",
      "elementKind": "method",
      "methodName": "getAttributeNodeNS",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Attr akasha.Element::getAttributeNodeNS(java.lang.String, java.lang.String) @ akasha.svg.SVGMarkerElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGMarkerElement",
      "classSimpleName": "SVGMarkerElement",
      "elementKind": "method",
      "methodName": "getAttributeNodeNS",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Attr akasha.Element::getAttributeNodeNS(java.lang.String, java.lang.String) @ akasha.svg.SVGMaskElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGMaskElement",
      "classSimpleName": "SVGMaskElement",
      "elementKind": "method",
      "methodName": "getAttributeNodeNS",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Attr akasha.Element::getAttributeNodeNS(java.lang.String, java.lang.String) @ akasha.svg.SVGMetadataElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGMetadataElement",
      "classSimpleName": "SVGMetadataElement",
      "elementKind": "method",
      "methodName": "getAttributeNodeNS",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Attr akasha.Element::getAttributeNodeNS(java.lang.String, java.lang.String) @ akasha.svg.SVGPathElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGPathElement",
      "classSimpleName": "SVGPathElement",
      "elementKind": "method",
      "methodName": "getAttributeNodeNS",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Attr akasha.Element::getAttributeNodeNS(java.lang.String, java.lang.String) @ akasha.svg.SVGPatternElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGPatternElement",
      "classSimpleName": "SVGPatternElement",
      "elementKind": "method",
      "methodName": "getAttributeNodeNS",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Attr akasha.Element::getAttributeNodeNS(java.lang.String, java.lang.String) @ akasha.svg.SVGPolygonElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGPolygonElement",
      "classSimpleName": "SVGPolygonElement",
      "elementKind": "method",
      "methodName": "getAttributeNodeNS",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Attr akasha.Element::getAttributeNodeNS(java.lang.String, java.lang.String) @ akasha.svg.SVGPolylineElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGPolylineElement",
      "classSimpleName": "SVGPolylineElement",
      "elementKind": "method",
      "methodName": "getAttributeNodeNS",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Attr akasha.Element::getAttributeNodeNS(java.lang.String, java.lang.String) @ akasha.svg.SVGRadialGradientElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGRadialGradientElement",
      "classSimpleName": "SVGRadialGradientElement",
      "elementKind": "method",
      "methodName": "getAttributeNodeNS",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Attr akasha.Element::getAttributeNodeNS(java.lang.String, java.lang.String) @ akasha.svg.SVGRectElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGRectElement",
      "classSimpleName": "SVGRectElement",
      "elementKind": "method",
      "methodName": "getAttributeNodeNS",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Attr akasha.Element::getAttributeNodeNS(java.lang.String, java.lang.String) @ akasha.svg.SVGSVGElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGSVGElement",
      "classSimpleName": "SVGSVGElement",
      "elementKind": "method",
      "methodName": "getAttributeNodeNS",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Attr akasha.Element::getAttributeNodeNS(java.lang.String, java.lang.String) @ akasha.svg.SVGScriptElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGScriptElement",
      "classSimpleName": "SVGScriptElement",
      "elementKind": "method",
      "methodName": "getAttributeNodeNS",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Attr akasha.Element::getAttributeNodeNS(java.lang.String, java.lang.String) @ akasha.svg.SVGStopElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGStopElement",
      "classSimpleName": "SVGStopElement",
      "elementKind": "method",
      "methodName": "getAttributeNodeNS",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Attr akasha.Element::getAttributeNodeNS(java.lang.String, java.lang.String) @ akasha.svg.SVGStyleElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGStyleElement",
      "classSimpleName": "SVGStyleElement",
      "elementKind": "method",
      "methodName": "getAttributeNodeNS",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Attr akasha.Element::getAttributeNodeNS(java.lang.String, java.lang.String) @ akasha.svg.SVGSwitchElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGSwitchElement",
      "classSimpleName": "SVGSwitchElement",
      "elementKind": "method",
      "methodName": "getAttributeNodeNS",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Attr akasha.Element::getAttributeNodeNS(java.lang.String, java.lang.String) @ akasha.svg.SVGSymbolElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGSymbolElement",
      "classSimpleName": "SVGSymbolElement",
      "elementKind": "method",
      "methodName": "getAttributeNodeNS",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Attr akasha.Element::getAttributeNodeNS(java.lang.String, java.lang.String) @ akasha.svg.SVGTSpanElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGTSpanElement",
      "classSimpleName": "SVGTSpanElement",
      "elementKind": "method",
      "methodName": "getAttributeNodeNS",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Attr akasha.Element::getAttributeNodeNS(java.lang.String, java.lang.String) @ akasha.svg.SVGTextContentElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGTextContentElement",
      "classSimpleName": "SVGTextContentElement",
      "elementKind": "method",
      "methodName": "getAttributeNodeNS",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Attr akasha.Element::getAttributeNodeNS(java.lang.String, java.lang.String) @ akasha.svg.SVGTextElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGTextElement",
      "classSimpleName": "SVGTextElement",
      "elementKind": "method",
      "methodName": "getAttributeNodeNS",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Attr akasha.Element::getAttributeNodeNS(java.lang.String, java.lang.String) @ akasha.svg.SVGTextPathElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGTextPathElement",
      "classSimpleName": "SVGTextPathElement",
      "elementKind": "method",
      "methodName": "getAttributeNodeNS",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Attr akasha.Element::getAttributeNodeNS(java.lang.String, java.lang.String) @ akasha.svg.SVGTextPositioningElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGTextPositioningElement",
      "classSimpleName": "SVGTextPositioningElement",
      "elementKind": "method",
      "methodName": "getAttributeNodeNS",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Attr akasha.Element::getAttributeNodeNS(java.lang.String, java.lang.String) @ akasha.svg.SVGTitleElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGTitleElement",
      "classSimpleName": "SVGTitleElement",
      "elementKind": "method",
      "methodName": "getAttributeNodeNS",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Attr akasha.Element::getAttributeNodeNS(java.lang.String, java.lang.String) @ akasha.svg.SVGUnknownElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGUnknownElement",
      "classSimpleName": "SVGUnknownElement",
      "elementKind": "method",
      "methodName": "getAttributeNodeNS",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Attr akasha.Element::getAttributeNodeNS(java.lang.String, java.lang.String) @ akasha.svg.SVGUseElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGUseElement",
      "classSimpleName": "SVGUseElement",
      "elementKind": "method",
      "methodName": "getAttributeNodeNS",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Attr akasha.Element::getAttributeNodeNS(java.lang.String, java.lang.String) @ akasha.svg.SVGViewElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGViewElement",
      "classSimpleName": "SVGViewElement",
      "elementKind": "method",
      "methodName": "getAttributeNodeNS",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Attr akasha.Element::getAttributeNodeNS(java.lang.String, java.lang.String)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.Element",
      "classSimpleName": "Element",
      "elementKind": "method",
      "methodName": "getAttributeNodeNS",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Attr akasha.NamedNodeMap::getNamedItem(java.lang.String)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.NamedNodeMap",
      "classSimpleName": "NamedNodeMap",
      "elementKind": "method",
      "methodName": "getNamedItem",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Attr akasha.NamedNodeMap::item(int)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.NamedNodeMap",
      "classSimpleName": "NamedNodeMap",
      "elementKind": "method",
      "methodName": "item",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Blob akasha.Blob::slice() @ akasha.File",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.File",
      "classSimpleName": "File",
      "elementKind": "method",
      "methodName": "slice",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Blob akasha.Blob::slice()",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.Blob",
      "classSimpleName": "Blob",
      "elementKind": "method",
      "methodName": "slice",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Blob akasha.Blob::slice(int) @ akasha.File",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.File",
      "classSimpleName": "File",
      "elementKind": "method",
      "methodName": "slice",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Blob akasha.Blob::slice(int)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.Blob",
      "classSimpleName": "Blob",
      "elementKind": "method",
      "methodName": "slice",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Blob akasha.Blob::slice(int, int) @ akasha.File",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.File",
      "classSimpleName": "File",
      "elementKind": "method",
      "methodName": "slice",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Blob akasha.Blob::slice(int, int)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.Blob",
      "classSimpleName": "Blob",
      "elementKind": "method",
      "methodName": "slice",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Blob akasha.Blob::slice(int, int, java.lang.String) @ akasha.File",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.File",
      "classSimpleName": "File",
      "elementKind": "method",
      "methodName": "slice",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Blob akasha.Blob::slice(int, int, java.lang.String)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.Blob",
      "classSimpleName": "Blob",
      "elementKind": "method",
      "methodName": "slice",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.CDATASection akasha.Document::createCDATASection(java.lang.String) @ akasha.XMLDocument",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.XMLDocument",
      "classSimpleName": "XMLDocument",
      "elementKind": "method",
      "methodName": "createCDATASection",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.CDATASection akasha.Document::createCDATASection(java.lang.String)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.Document",
      "classSimpleName": "Document",
      "elementKind": "method",
      "methodName": "createCDATASection",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.CSSRule akasha.CSSRuleList::item(int)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.CSSRuleList",
      "classSimpleName": "CSSRuleList",
      "elementKind": "method",
      "methodName": "item",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.CSSStyleDeclaration akasha.Window::getComputedStyle(akasha.Element)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.Window",
      "classSimpleName": "Window",
      "elementKind": "method",
      "methodName": "getComputedStyle",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.CSSStyleDeclaration akasha.Window::getComputedStyle(akasha.Element, java.lang.String)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.Window",
      "classSimpleName": "Window",
      "elementKind": "method",
      "methodName": "getComputedStyle",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.CSSStyleDeclaration akasha.WindowGlobal::getComputedStyle(akasha.Element)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.WindowGlobal",
      "classSimpleName": "WindowGlobal",
      "elementKind": "method",
      "methodName": "getComputedStyle",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.CSSStyleDeclaration akasha.WindowGlobal::getComputedStyle(akasha.Element, java.lang.String)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.WindowGlobal",
      "classSimpleName": "WindowGlobal",
      "elementKind": "method",
      "methodName": "getComputedStyle",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.CSSStyleSheet akasha.StyleSheetList::item(int)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.StyleSheetList",
      "classSimpleName": "StyleSheetList",
      "elementKind": "method",
      "methodName": "item",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Comment akasha.Document::createComment(java.lang.String) @ akasha.XMLDocument",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.XMLDocument",
      "classSimpleName": "XMLDocument",
      "elementKind": "method",
      "methodName": "createComment",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Comment akasha.Document::createComment(java.lang.String)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.Document",
      "classSimpleName": "Document",
      "elementKind": "method",
      "methodName": "createComment",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.DOMPoint akasha.svg.SVGPointList::getItem(int)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGPointList",
      "classSimpleName": "SVGPointList",
      "elementKind": "method",
      "methodName": "getItem",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.DOMRect akasha.DOMRectList::item(int)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.DOMRectList",
      "classSimpleName": "DOMRectList",
      "elementKind": "method",
      "methodName": "item",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.DocumentFragment akasha.Document::createDocumentFragment() @ akasha.XMLDocument",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.XMLDocument",
      "classSimpleName": "XMLDocument",
      "elementKind": "method",
      "methodName": "createDocumentFragment",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.DocumentFragment akasha.Document::createDocumentFragment()",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.Document",
      "classSimpleName": "Document",
      "elementKind": "method",
      "methodName": "createDocumentFragment",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.DocumentType akasha.DOMImplementation::createDocumentType(java.lang.String, java.lang.String, java.lang.String)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.DOMImplementation",
      "classSimpleName": "DOMImplementation",
      "elementKind": "method",
      "methodName": "createDocumentType",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Element akasha.Document::createElement(java.lang.String) @ akasha.XMLDocument",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.XMLDocument",
      "classSimpleName": "XMLDocument",
      "elementKind": "method",
      "methodName": "createElement",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Element akasha.Document::createElement(java.lang.String)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.Document",
      "classSimpleName": "Document",
      "elementKind": "method",
      "methodName": "createElement",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Element akasha.Document::createElement(java.lang.String, akasha.ElementCreationOptions) @ akasha.XMLDocument",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.XMLDocument",
      "classSimpleName": "XMLDocument",
      "elementKind": "method",
      "methodName": "createElement",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Element akasha.Document::createElement(java.lang.String, akasha.ElementCreationOptions)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.Document",
      "classSimpleName": "Document",
      "elementKind": "method",
      "methodName": "createElement",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Element akasha.Document::createElement(java.lang.String, java.lang.String) @ akasha.XMLDocument",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.XMLDocument",
      "classSimpleName": "XMLDocument",
      "elementKind": "method",
      "methodName": "createElement",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Element akasha.Document::createElement(java.lang.String, java.lang.String)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.Document",
      "classSimpleName": "Document",
      "elementKind": "method",
      "methodName": "createElement",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Element akasha.Document::elementFromPoint(double, double) @ akasha.XMLDocument",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.XMLDocument",
      "classSimpleName": "XMLDocument",
      "elementKind": "method",
      "methodName": "elementFromPoint",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Element akasha.Document::elementFromPoint(double, double)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.Document",
      "classSimpleName": "Document",
      "elementKind": "method",
      "methodName": "elementFromPoint",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Element akasha.Document::getElementById(java.lang.String) @ akasha.XMLDocument",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.XMLDocument",
      "classSimpleName": "XMLDocument",
      "elementKind": "method",
      "methodName": "getElementById",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Element akasha.Document::getElementById(java.lang.String)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.Document",
      "classSimpleName": "Document",
      "elementKind": "method",
      "methodName": "getElementById",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Element akasha.Document::querySelector(java.lang.String) @ akasha.XMLDocument",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.XMLDocument",
      "classSimpleName": "XMLDocument",
      "elementKind": "method",
      "methodName": "querySelector",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Element akasha.Document::querySelector(java.lang.String)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.Document",
      "classSimpleName": "Document",
      "elementKind": "method",
      "methodName": "querySelector",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Element akasha.DocumentFragment::getElementById(java.lang.String) @ akasha.ShadowRoot",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.ShadowRoot",
      "classSimpleName": "ShadowRoot",
      "elementKind": "method",
      "methodName": "getElementById",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Element akasha.DocumentFragment::getElementById(java.lang.String) @ akasha.svg.SVGUseElementShadowRoot",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGUseElementShadowRoot",
      "classSimpleName": "SVGUseElementShadowRoot",
      "elementKind": "method",
      "methodName": "getElementById",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Element akasha.DocumentFragment::getElementById(java.lang.String)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.DocumentFragment",
      "classSimpleName": "DocumentFragment",
      "elementKind": "method",
      "methodName": "getElementById",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Element akasha.DocumentFragment::querySelector(java.lang.String) @ akasha.ShadowRoot",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.ShadowRoot",
      "classSimpleName": "ShadowRoot",
      "elementKind": "method",
      "methodName": "querySelector",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Element akasha.DocumentFragment::querySelector(java.lang.String) @ akasha.svg.SVGUseElementShadowRoot",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGUseElementShadowRoot",
      "classSimpleName": "SVGUseElementShadowRoot",
      "elementKind": "method",
      "methodName": "querySelector",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Element akasha.DocumentFragment::querySelector(java.lang.String)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.DocumentFragment",
      "classSimpleName": "DocumentFragment",
      "elementKind": "method",
      "methodName": "querySelector",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Element akasha.Element::closest(java.lang.String) @ akasha.Audio",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.Audio",
      "classSimpleName": "Audio",
      "elementKind": "method",
      "methodName": "closest",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Element akasha.Element::closest(java.lang.String) @ akasha.HTMLAnchorElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLAnchorElement",
      "classSimpleName": "HTMLAnchorElement",
      "elementKind": "method",
      "methodName": "closest",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Element akasha.Element::closest(java.lang.String) @ akasha.HTMLAreaElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLAreaElement",
      "classSimpleName": "HTMLAreaElement",
      "elementKind": "method",
      "methodName": "closest",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Element akasha.Element::closest(java.lang.String) @ akasha.HTMLAudioElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLAudioElement",
      "classSimpleName": "HTMLAudioElement",
      "elementKind": "method",
      "methodName": "closest",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Element akasha.Element::closest(java.lang.String) @ akasha.HTMLBRElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLBRElement",
      "classSimpleName": "HTMLBRElement",
      "elementKind": "method",
      "methodName": "closest",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Element akasha.Element::closest(java.lang.String) @ akasha.HTMLBaseElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLBaseElement",
      "classSimpleName": "HTMLBaseElement",
      "elementKind": "method",
      "methodName": "closest",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Element akasha.Element::closest(java.lang.String) @ akasha.HTMLBodyElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLBodyElement",
      "classSimpleName": "HTMLBodyElement",
      "elementKind": "method",
      "methodName": "closest",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Element akasha.Element::closest(java.lang.String) @ akasha.HTMLButtonElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLButtonElement",
      "classSimpleName": "HTMLButtonElement",
      "elementKind": "method",
      "methodName": "closest",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Element akasha.Element::closest(java.lang.String) @ akasha.HTMLCanvasElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLCanvasElement",
      "classSimpleName": "HTMLCanvasElement",
      "elementKind": "method",
      "methodName": "closest",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Element akasha.Element::closest(java.lang.String) @ akasha.HTMLDListElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLDListElement",
      "classSimpleName": "HTMLDListElement",
      "elementKind": "method",
      "methodName": "closest",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Element akasha.Element::closest(java.lang.String) @ akasha.HTMLDataElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLDataElement",
      "classSimpleName": "HTMLDataElement",
      "elementKind": "method",
      "methodName": "closest",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Element akasha.Element::closest(java.lang.String) @ akasha.HTMLDataListElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLDataListElement",
      "classSimpleName": "HTMLDataListElement",
      "elementKind": "method",
      "methodName": "closest",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Element akasha.Element::closest(java.lang.String) @ akasha.HTMLDetailsElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLDetailsElement",
      "classSimpleName": "HTMLDetailsElement",
      "elementKind": "method",
      "methodName": "closest",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Element akasha.Element::closest(java.lang.String) @ akasha.HTMLDialogElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLDialogElement",
      "classSimpleName": "HTMLDialogElement",
      "elementKind": "method",
      "methodName": "closest",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Element akasha.Element::closest(java.lang.String) @ akasha.HTMLDirectoryElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLDirectoryElement",
      "classSimpleName": "HTMLDirectoryElement",
      "elementKind": "method",
      "methodName": "closest",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Element akasha.Element::closest(java.lang.String) @ akasha.HTMLDivElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLDivElement",
      "classSimpleName": "HTMLDivElement",
      "elementKind": "method",
      "methodName": "closest",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Element akasha.Element::closest(java.lang.String) @ akasha.HTMLElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLElement",
      "classSimpleName": "HTMLElement",
      "elementKind": "method",
      "methodName": "closest",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Element akasha.Element::closest(java.lang.String) @ akasha.HTMLEmbedElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLEmbedElement",
      "classSimpleName": "HTMLEmbedElement",
      "elementKind": "method",
      "methodName": "closest",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Element akasha.Element::closest(java.lang.String) @ akasha.HTMLFieldSetElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLFieldSetElement",
      "classSimpleName": "HTMLFieldSetElement",
      "elementKind": "method",
      "methodName": "closest",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Element akasha.Element::closest(java.lang.String) @ akasha.HTMLFontElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLFontElement",
      "classSimpleName": "HTMLFontElement",
      "elementKind": "method",
      "methodName": "closest",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Element akasha.Element::closest(java.lang.String) @ akasha.HTMLFormElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLFormElement",
      "classSimpleName": "HTMLFormElement",
      "elementKind": "method",
      "methodName": "closest",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Element akasha.Element::closest(java.lang.String) @ akasha.HTMLFrameElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLFrameElement",
      "classSimpleName": "HTMLFrameElement",
      "elementKind": "method",
      "methodName": "closest",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Element akasha.Element::closest(java.lang.String) @ akasha.HTMLFrameSetElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLFrameSetElement",
      "classSimpleName": "HTMLFrameSetElement",
      "elementKind": "method",
      "methodName": "closest",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Element akasha.Element::closest(java.lang.String) @ akasha.HTMLHRElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLHRElement",
      "classSimpleName": "HTMLHRElement",
      "elementKind": "method",
      "methodName": "closest",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Element akasha.Element::closest(java.lang.String) @ akasha.HTMLHeadElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLHeadElement",
      "classSimpleName": "HTMLHeadElement",
      "elementKind": "method",
      "methodName": "closest",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Element akasha.Element::closest(java.lang.String) @ akasha.HTMLHeadingElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLHeadingElement",
      "classSimpleName": "HTMLHeadingElement",
      "elementKind": "method",
      "methodName": "closest",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Element akasha.Element::closest(java.lang.String) @ akasha.HTMLHtmlElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLHtmlElement",
      "classSimpleName": "HTMLHtmlElement",
      "elementKind": "method",
      "methodName": "closest",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Element akasha.Element::closest(java.lang.String) @ akasha.HTMLIFrameElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLIFrameElement",
      "classSimpleName": "HTMLIFrameElement",
      "elementKind": "method",
      "methodName": "closest",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Element akasha.Element::closest(java.lang.String) @ akasha.HTMLImageElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLImageElement",
      "classSimpleName": "HTMLImageElement",
      "elementKind": "method",
      "methodName": "closest",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Element akasha.Element::closest(java.lang.String) @ akasha.HTMLInputElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLInputElement",
      "classSimpleName": "HTMLInputElement",
      "elementKind": "method",
      "methodName": "closest",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Element akasha.Element::closest(java.lang.String) @ akasha.HTMLLIElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLLIElement",
      "classSimpleName": "HTMLLIElement",
      "elementKind": "method",
      "methodName": "closest",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Element akasha.Element::closest(java.lang.String) @ akasha.HTMLLabelElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLLabelElement",
      "classSimpleName": "HTMLLabelElement",
      "elementKind": "method",
      "methodName": "closest",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Element akasha.Element::closest(java.lang.String) @ akasha.HTMLLegendElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLLegendElement",
      "classSimpleName": "HTMLLegendElement",
      "elementKind": "method",
      "methodName": "closest",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Element akasha.Element::closest(java.lang.String) @ akasha.HTMLLinkElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLLinkElement",
      "classSimpleName": "HTMLLinkElement",
      "elementKind": "method",
      "methodName": "closest",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Element akasha.Element::closest(java.lang.String) @ akasha.HTMLMapElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLMapElement",
      "classSimpleName": "HTMLMapElement",
      "elementKind": "method",
      "methodName": "closest",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Element akasha.Element::closest(java.lang.String) @ akasha.HTMLMarqueeElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLMarqueeElement",
      "classSimpleName": "HTMLMarqueeElement",
      "elementKind": "method",
      "methodName": "closest",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Element akasha.Element::closest(java.lang.String) @ akasha.HTMLMediaElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLMediaElement",
      "classSimpleName": "HTMLMediaElement",
      "elementKind": "method",
      "methodName": "closest",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Element akasha.Element::closest(java.lang.String) @ akasha.HTMLMenuElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLMenuElement",
      "classSimpleName": "HTMLMenuElement",
      "elementKind": "method",
      "methodName": "closest",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Element akasha.Element::closest(java.lang.String) @ akasha.HTMLMetaElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLMetaElement",
      "classSimpleName": "HTMLMetaElement",
      "elementKind": "method",
      "methodName": "closest",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Element akasha.Element::closest(java.lang.String) @ akasha.HTMLMeterElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLMeterElement",
      "classSimpleName": "HTMLMeterElement",
      "elementKind": "method",
      "methodName": "closest",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Element akasha.Element::closest(java.lang.String) @ akasha.HTMLModElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLModElement",
      "classSimpleName": "HTMLModElement",
      "elementKind": "method",
      "methodName": "closest",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Element akasha.Element::closest(java.lang.String) @ akasha.HTMLOListElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLOListElement",
      "classSimpleName": "HTMLOListElement",
      "elementKind": "method",
      "methodName": "closest",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Element akasha.Element::closest(java.lang.String) @ akasha.HTMLObjectElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLObjectElement",
      "classSimpleName": "HTMLObjectElement",
      "elementKind": "method",
      "methodName": "closest",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Element akasha.Element::closest(java.lang.String) @ akasha.HTMLOptGroupElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLOptGroupElement",
      "classSimpleName": "HTMLOptGroupElement",
      "elementKind": "method",
      "methodName": "closest",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Element akasha.Element::closest(java.lang.String) @ akasha.HTMLOptionElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLOptionElement",
      "classSimpleName": "HTMLOptionElement",
      "elementKind": "method",
      "methodName": "closest",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Element akasha.Element::closest(java.lang.String) @ akasha.HTMLOutputElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLOutputElement",
      "classSimpleName": "HTMLOutputElement",
      "elementKind": "method",
      "methodName": "closest",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Element akasha.Element::closest(java.lang.String) @ akasha.HTMLParagraphElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLParagraphElement",
      "classSimpleName": "HTMLParagraphElement",
      "elementKind": "method",
      "methodName": "closest",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Element akasha.Element::closest(java.lang.String) @ akasha.HTMLParamElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLParamElement",
      "classSimpleName": "HTMLParamElement",
      "elementKind": "method",
      "methodName": "closest",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Element akasha.Element::closest(java.lang.String) @ akasha.HTMLPictureElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLPictureElement",
      "classSimpleName": "HTMLPictureElement",
      "elementKind": "method",
      "methodName": "closest",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Element akasha.Element::closest(java.lang.String) @ akasha.HTMLPreElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLPreElement",
      "classSimpleName": "HTMLPreElement",
      "elementKind": "method",
      "methodName": "closest",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Element akasha.Element::closest(java.lang.String) @ akasha.HTMLProgressElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLProgressElement",
      "classSimpleName": "HTMLProgressElement",
      "elementKind": "method",
      "methodName": "closest",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Element akasha.Element::closest(java.lang.String) @ akasha.HTMLQuoteElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLQuoteElement",
      "classSimpleName": "HTMLQuoteElement",
      "elementKind": "method",
      "methodName": "closest",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Element akasha.Element::closest(java.lang.String) @ akasha.HTMLScriptElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLScriptElement",
      "classSimpleName": "HTMLScriptElement",
      "elementKind": "method",
      "methodName": "closest",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Element akasha.Element::closest(java.lang.String) @ akasha.HTMLSelectElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLSelectElement",
      "classSimpleName": "HTMLSelectElement",
      "elementKind": "method",
      "methodName": "closest",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Element akasha.Element::closest(java.lang.String) @ akasha.HTMLSlotElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLSlotElement",
      "classSimpleName": "HTMLSlotElement",
      "elementKind": "method",
      "methodName": "closest",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Element akasha.Element::closest(java.lang.String) @ akasha.HTMLSourceElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLSourceElement",
      "classSimpleName": "HTMLSourceElement",
      "elementKind": "method",
      "methodName": "closest",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Element akasha.Element::closest(java.lang.String) @ akasha.HTMLSpanElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLSpanElement",
      "classSimpleName": "HTMLSpanElement",
      "elementKind": "method",
      "methodName": "closest",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Element akasha.Element::closest(java.lang.String) @ akasha.HTMLStyleElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLStyleElement",
      "classSimpleName": "HTMLStyleElement",
      "elementKind": "method",
      "methodName": "closest",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Element akasha.Element::closest(java.lang.String) @ akasha.HTMLTableCaptionElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLTableCaptionElement",
      "classSimpleName": "HTMLTableCaptionElement",
      "elementKind": "method",
      "methodName": "closest",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Element akasha.Element::closest(java.lang.String) @ akasha.HTMLTableCellElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLTableCellElement",
      "classSimpleName": "HTMLTableCellElement",
      "elementKind": "method",
      "methodName": "closest",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Element akasha.Element::closest(java.lang.String) @ akasha.HTMLTableColElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLTableColElement",
      "classSimpleName": "HTMLTableColElement",
      "elementKind": "method",
      "methodName": "closest",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Element akasha.Element::closest(java.lang.String) @ akasha.HTMLTableElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLTableElement",
      "classSimpleName": "HTMLTableElement",
      "elementKind": "method",
      "methodName": "closest",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Element akasha.Element::closest(java.lang.String) @ akasha.HTMLTableRowElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLTableRowElement",
      "classSimpleName": "HTMLTableRowElement",
      "elementKind": "method",
      "methodName": "closest",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Element akasha.Element::closest(java.lang.String) @ akasha.HTMLTableSectionElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLTableSectionElement",
      "classSimpleName": "HTMLTableSectionElement",
      "elementKind": "method",
      "methodName": "closest",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Element akasha.Element::closest(java.lang.String) @ akasha.HTMLTemplateElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLTemplateElement",
      "classSimpleName": "HTMLTemplateElement",
      "elementKind": "method",
      "methodName": "closest",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Element akasha.Element::closest(java.lang.String) @ akasha.HTMLTextAreaElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLTextAreaElement",
      "classSimpleName": "HTMLTextAreaElement",
      "elementKind": "method",
      "methodName": "closest",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Element akasha.Element::closest(java.lang.String) @ akasha.HTMLTimeElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLTimeElement",
      "classSimpleName": "HTMLTimeElement",
      "elementKind": "method",
      "methodName": "closest",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Element akasha.Element::closest(java.lang.String) @ akasha.HTMLTitleElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLTitleElement",
      "classSimpleName": "HTMLTitleElement",
      "elementKind": "method",
      "methodName": "closest",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Element akasha.Element::closest(java.lang.String) @ akasha.HTMLTrackElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLTrackElement",
      "classSimpleName": "HTMLTrackElement",
      "elementKind": "method",
      "methodName": "closest",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Element akasha.Element::closest(java.lang.String) @ akasha.HTMLUListElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLUListElement",
      "classSimpleName": "HTMLUListElement",
      "elementKind": "method",
      "methodName": "closest",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Element akasha.Element::closest(java.lang.String) @ akasha.HTMLUnknownElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLUnknownElement",
      "classSimpleName": "HTMLUnknownElement",
      "elementKind": "method",
      "methodName": "closest",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Element akasha.Element::closest(java.lang.String) @ akasha.HTMLVideoElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLVideoElement",
      "classSimpleName": "HTMLVideoElement",
      "elementKind": "method",
      "methodName": "closest",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Element akasha.Element::closest(java.lang.String) @ akasha.Image",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.Image",
      "classSimpleName": "Image",
      "elementKind": "method",
      "methodName": "closest",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Element akasha.Element::closest(java.lang.String) @ akasha.Option",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.Option",
      "classSimpleName": "Option",
      "elementKind": "method",
      "methodName": "closest",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Element akasha.Element::closest(java.lang.String) @ akasha.svg.SVGAElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGAElement",
      "classSimpleName": "SVGAElement",
      "elementKind": "method",
      "methodName": "closest",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Element akasha.Element::closest(java.lang.String) @ akasha.svg.SVGCircleElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGCircleElement",
      "classSimpleName": "SVGCircleElement",
      "elementKind": "method",
      "methodName": "closest",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Element akasha.Element::closest(java.lang.String) @ akasha.svg.SVGClipPathElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGClipPathElement",
      "classSimpleName": "SVGClipPathElement",
      "elementKind": "method",
      "methodName": "closest",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Element akasha.Element::closest(java.lang.String) @ akasha.svg.SVGComponentTransferFunctionElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGComponentTransferFunctionElement",
      "classSimpleName": "SVGComponentTransferFunctionElement",
      "elementKind": "method",
      "methodName": "closest",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Element akasha.Element::closest(java.lang.String) @ akasha.svg.SVGDefsElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGDefsElement",
      "classSimpleName": "SVGDefsElement",
      "elementKind": "method",
      "methodName": "closest",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Element akasha.Element::closest(java.lang.String) @ akasha.svg.SVGDescElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGDescElement",
      "classSimpleName": "SVGDescElement",
      "elementKind": "method",
      "methodName": "closest",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Element akasha.Element::closest(java.lang.String) @ akasha.svg.SVGElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGElement",
      "classSimpleName": "SVGElement",
      "elementKind": "method",
      "methodName": "closest",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Element akasha.Element::closest(java.lang.String) @ akasha.svg.SVGEllipseElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGEllipseElement",
      "classSimpleName": "SVGEllipseElement",
      "elementKind": "method",
      "methodName": "closest",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Element akasha.Element::closest(java.lang.String) @ akasha.svg.SVGFEBlendElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEBlendElement",
      "classSimpleName": "SVGFEBlendElement",
      "elementKind": "method",
      "methodName": "closest",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Element akasha.Element::closest(java.lang.String) @ akasha.svg.SVGFEColorMatrixElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEColorMatrixElement",
      "classSimpleName": "SVGFEColorMatrixElement",
      "elementKind": "method",
      "methodName": "closest",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Element akasha.Element::closest(java.lang.String) @ akasha.svg.SVGFEComponentTransferElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEComponentTransferElement",
      "classSimpleName": "SVGFEComponentTransferElement",
      "elementKind": "method",
      "methodName": "closest",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Element akasha.Element::closest(java.lang.String) @ akasha.svg.SVGFECompositeElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFECompositeElement",
      "classSimpleName": "SVGFECompositeElement",
      "elementKind": "method",
      "methodName": "closest",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Element akasha.Element::closest(java.lang.String) @ akasha.svg.SVGFEConvolveMatrixElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEConvolveMatrixElement",
      "classSimpleName": "SVGFEConvolveMatrixElement",
      "elementKind": "method",
      "methodName": "closest",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Element akasha.Element::closest(java.lang.String) @ akasha.svg.SVGFEDiffuseLightingElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEDiffuseLightingElement",
      "classSimpleName": "SVGFEDiffuseLightingElement",
      "elementKind": "method",
      "methodName": "closest",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Element akasha.Element::closest(java.lang.String) @ akasha.svg.SVGFEDisplacementMapElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEDisplacementMapElement",
      "classSimpleName": "SVGFEDisplacementMapElement",
      "elementKind": "method",
      "methodName": "closest",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Element akasha.Element::closest(java.lang.String) @ akasha.svg.SVGFEDistantLightElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEDistantLightElement",
      "classSimpleName": "SVGFEDistantLightElement",
      "elementKind": "method",
      "methodName": "closest",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Element akasha.Element::closest(java.lang.String) @ akasha.svg.SVGFEDropShadowElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEDropShadowElement",
      "classSimpleName": "SVGFEDropShadowElement",
      "elementKind": "method",
      "methodName": "closest",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Element akasha.Element::closest(java.lang.String) @ akasha.svg.SVGFEFloodElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEFloodElement",
      "classSimpleName": "SVGFEFloodElement",
      "elementKind": "method",
      "methodName": "closest",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Element akasha.Element::closest(java.lang.String) @ akasha.svg.SVGFEFuncAElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEFuncAElement",
      "classSimpleName": "SVGFEFuncAElement",
      "elementKind": "method",
      "methodName": "closest",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Element akasha.Element::closest(java.lang.String) @ akasha.svg.SVGFEFuncBElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEFuncBElement",
      "classSimpleName": "SVGFEFuncBElement",
      "elementKind": "method",
      "methodName": "closest",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Element akasha.Element::closest(java.lang.String) @ akasha.svg.SVGFEFuncGElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEFuncGElement",
      "classSimpleName": "SVGFEFuncGElement",
      "elementKind": "method",
      "methodName": "closest",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Element akasha.Element::closest(java.lang.String) @ akasha.svg.SVGFEFuncRElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEFuncRElement",
      "classSimpleName": "SVGFEFuncRElement",
      "elementKind": "method",
      "methodName": "closest",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Element akasha.Element::closest(java.lang.String) @ akasha.svg.SVGFEGaussianBlurElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEGaussianBlurElement",
      "classSimpleName": "SVGFEGaussianBlurElement",
      "elementKind": "method",
      "methodName": "closest",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Element akasha.Element::closest(java.lang.String) @ akasha.svg.SVGFEImageElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEImageElement",
      "classSimpleName": "SVGFEImageElement",
      "elementKind": "method",
      "methodName": "closest",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Element akasha.Element::closest(java.lang.String) @ akasha.svg.SVGFEMergeElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEMergeElement",
      "classSimpleName": "SVGFEMergeElement",
      "elementKind": "method",
      "methodName": "closest",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Element akasha.Element::closest(java.lang.String) @ akasha.svg.SVGFEMergeNodeElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEMergeNodeElement",
      "classSimpleName": "SVGFEMergeNodeElement",
      "elementKind": "method",
      "methodName": "closest",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Element akasha.Element::closest(java.lang.String) @ akasha.svg.SVGFEMorphologyElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEMorphologyElement",
      "classSimpleName": "SVGFEMorphologyElement",
      "elementKind": "method",
      "methodName": "closest",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Element akasha.Element::closest(java.lang.String) @ akasha.svg.SVGFEOffsetElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEOffsetElement",
      "classSimpleName": "SVGFEOffsetElement",
      "elementKind": "method",
      "methodName": "closest",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Element akasha.Element::closest(java.lang.String) @ akasha.svg.SVGFEPointLightElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEPointLightElement",
      "classSimpleName": "SVGFEPointLightElement",
      "elementKind": "method",
      "methodName": "closest",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Element akasha.Element::closest(java.lang.String) @ akasha.svg.SVGFESpecularLightingElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFESpecularLightingElement",
      "classSimpleName": "SVGFESpecularLightingElement",
      "elementKind": "method",
      "methodName": "closest",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Element akasha.Element::closest(java.lang.String) @ akasha.svg.SVGFESpotLightElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFESpotLightElement",
      "classSimpleName": "SVGFESpotLightElement",
      "elementKind": "method",
      "methodName": "closest",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Element akasha.Element::closest(java.lang.String) @ akasha.svg.SVGFETileElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFETileElement",
      "classSimpleName": "SVGFETileElement",
      "elementKind": "method",
      "methodName": "closest",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Element akasha.Element::closest(java.lang.String) @ akasha.svg.SVGFETurbulenceElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFETurbulenceElement",
      "classSimpleName": "SVGFETurbulenceElement",
      "elementKind": "method",
      "methodName": "closest",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Element akasha.Element::closest(java.lang.String) @ akasha.svg.SVGFilterElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFilterElement",
      "classSimpleName": "SVGFilterElement",
      "elementKind": "method",
      "methodName": "closest",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Element akasha.Element::closest(java.lang.String) @ akasha.svg.SVGForeignObjectElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGForeignObjectElement",
      "classSimpleName": "SVGForeignObjectElement",
      "elementKind": "method",
      "methodName": "closest",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Element akasha.Element::closest(java.lang.String) @ akasha.svg.SVGGElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGGElement",
      "classSimpleName": "SVGGElement",
      "elementKind": "method",
      "methodName": "closest",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Element akasha.Element::closest(java.lang.String) @ akasha.svg.SVGGeometryElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGGeometryElement",
      "classSimpleName": "SVGGeometryElement",
      "elementKind": "method",
      "methodName": "closest",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Element akasha.Element::closest(java.lang.String) @ akasha.svg.SVGGradientElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGGradientElement",
      "classSimpleName": "SVGGradientElement",
      "elementKind": "method",
      "methodName": "closest",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Element akasha.Element::closest(java.lang.String) @ akasha.svg.SVGGraphicsElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGGraphicsElement",
      "classSimpleName": "SVGGraphicsElement",
      "elementKind": "method",
      "methodName": "closest",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Element akasha.Element::closest(java.lang.String) @ akasha.svg.SVGImageElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGImageElement",
      "classSimpleName": "SVGImageElement",
      "elementKind": "method",
      "methodName": "closest",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Element akasha.Element::closest(java.lang.String) @ akasha.svg.SVGLineElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGLineElement",
      "classSimpleName": "SVGLineElement",
      "elementKind": "method",
      "methodName": "closest",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Element akasha.Element::closest(java.lang.String) @ akasha.svg.SVGLinearGradientElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGLinearGradientElement",
      "classSimpleName": "SVGLinearGradientElement",
      "elementKind": "method",
      "methodName": "closest",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Element akasha.Element::closest(java.lang.String) @ akasha.svg.SVGMarkerElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGMarkerElement",
      "classSimpleName": "SVGMarkerElement",
      "elementKind": "method",
      "methodName": "closest",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Element akasha.Element::closest(java.lang.String) @ akasha.svg.SVGMaskElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGMaskElement",
      "classSimpleName": "SVGMaskElement",
      "elementKind": "method",
      "methodName": "closest",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Element akasha.Element::closest(java.lang.String) @ akasha.svg.SVGMetadataElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGMetadataElement",
      "classSimpleName": "SVGMetadataElement",
      "elementKind": "method",
      "methodName": "closest",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Element akasha.Element::closest(java.lang.String) @ akasha.svg.SVGPathElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGPathElement",
      "classSimpleName": "SVGPathElement",
      "elementKind": "method",
      "methodName": "closest",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Element akasha.Element::closest(java.lang.String) @ akasha.svg.SVGPatternElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGPatternElement",
      "classSimpleName": "SVGPatternElement",
      "elementKind": "method",
      "methodName": "closest",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Element akasha.Element::closest(java.lang.String) @ akasha.svg.SVGPolygonElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGPolygonElement",
      "classSimpleName": "SVGPolygonElement",
      "elementKind": "method",
      "methodName": "closest",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Element akasha.Element::closest(java.lang.String) @ akasha.svg.SVGPolylineElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGPolylineElement",
      "classSimpleName": "SVGPolylineElement",
      "elementKind": "method",
      "methodName": "closest",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Element akasha.Element::closest(java.lang.String) @ akasha.svg.SVGRadialGradientElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGRadialGradientElement",
      "classSimpleName": "SVGRadialGradientElement",
      "elementKind": "method",
      "methodName": "closest",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Element akasha.Element::closest(java.lang.String) @ akasha.svg.SVGRectElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGRectElement",
      "classSimpleName": "SVGRectElement",
      "elementKind": "method",
      "methodName": "closest",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Element akasha.Element::closest(java.lang.String) @ akasha.svg.SVGSVGElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGSVGElement",
      "classSimpleName": "SVGSVGElement",
      "elementKind": "method",
      "methodName": "closest",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Element akasha.Element::closest(java.lang.String) @ akasha.svg.SVGScriptElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGScriptElement",
      "classSimpleName": "SVGScriptElement",
      "elementKind": "method",
      "methodName": "closest",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Element akasha.Element::closest(java.lang.String) @ akasha.svg.SVGStopElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGStopElement",
      "classSimpleName": "SVGStopElement",
      "elementKind": "method",
      "methodName": "closest",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Element akasha.Element::closest(java.lang.String) @ akasha.svg.SVGStyleElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGStyleElement",
      "classSimpleName": "SVGStyleElement",
      "elementKind": "method",
      "methodName": "closest",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Element akasha.Element::closest(java.lang.String) @ akasha.svg.SVGSwitchElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGSwitchElement",
      "classSimpleName": "SVGSwitchElement",
      "elementKind": "method",
      "methodName": "closest",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Element akasha.Element::closest(java.lang.String) @ akasha.svg.SVGSymbolElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGSymbolElement",
      "classSimpleName": "SVGSymbolElement",
      "elementKind": "method",
      "methodName": "closest",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Element akasha.Element::closest(java.lang.String) @ akasha.svg.SVGTSpanElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGTSpanElement",
      "classSimpleName": "SVGTSpanElement",
      "elementKind": "method",
      "methodName": "closest",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Element akasha.Element::closest(java.lang.String) @ akasha.svg.SVGTextContentElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGTextContentElement",
      "classSimpleName": "SVGTextContentElement",
      "elementKind": "method",
      "methodName": "closest",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Element akasha.Element::closest(java.lang.String) @ akasha.svg.SVGTextElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGTextElement",
      "classSimpleName": "SVGTextElement",
      "elementKind": "method",
      "methodName": "closest",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Element akasha.Element::closest(java.lang.String) @ akasha.svg.SVGTextPathElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGTextPathElement",
      "classSimpleName": "SVGTextPathElement",
      "elementKind": "method",
      "methodName": "closest",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Element akasha.Element::closest(java.lang.String) @ akasha.svg.SVGTextPositioningElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGTextPositioningElement",
      "classSimpleName": "SVGTextPositioningElement",
      "elementKind": "method",
      "methodName": "closest",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Element akasha.Element::closest(java.lang.String) @ akasha.svg.SVGTitleElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGTitleElement",
      "classSimpleName": "SVGTitleElement",
      "elementKind": "method",
      "methodName": "closest",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Element akasha.Element::closest(java.lang.String) @ akasha.svg.SVGUnknownElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGUnknownElement",
      "classSimpleName": "SVGUnknownElement",
      "elementKind": "method",
      "methodName": "closest",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Element akasha.Element::closest(java.lang.String) @ akasha.svg.SVGUseElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGUseElement",
      "classSimpleName": "SVGUseElement",
      "elementKind": "method",
      "methodName": "closest",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Element akasha.Element::closest(java.lang.String) @ akasha.svg.SVGViewElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGViewElement",
      "classSimpleName": "SVGViewElement",
      "elementKind": "method",
      "methodName": "closest",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Element akasha.Element::closest(java.lang.String)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.Element",
      "classSimpleName": "Element",
      "elementKind": "method",
      "methodName": "closest",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Element akasha.Element::querySelector(java.lang.String) @ akasha.Audio",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.Audio",
      "classSimpleName": "Audio",
      "elementKind": "method",
      "methodName": "querySelector",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Element akasha.Element::querySelector(java.lang.String) @ akasha.HTMLAnchorElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLAnchorElement",
      "classSimpleName": "HTMLAnchorElement",
      "elementKind": "method",
      "methodName": "querySelector",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Element akasha.Element::querySelector(java.lang.String) @ akasha.HTMLAreaElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLAreaElement",
      "classSimpleName": "HTMLAreaElement",
      "elementKind": "method",
      "methodName": "querySelector",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Element akasha.Element::querySelector(java.lang.String) @ akasha.HTMLAudioElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLAudioElement",
      "classSimpleName": "HTMLAudioElement",
      "elementKind": "method",
      "methodName": "querySelector",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Element akasha.Element::querySelector(java.lang.String) @ akasha.HTMLBRElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLBRElement",
      "classSimpleName": "HTMLBRElement",
      "elementKind": "method",
      "methodName": "querySelector",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Element akasha.Element::querySelector(java.lang.String) @ akasha.HTMLBaseElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLBaseElement",
      "classSimpleName": "HTMLBaseElement",
      "elementKind": "method",
      "methodName": "querySelector",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Element akasha.Element::querySelector(java.lang.String) @ akasha.HTMLBodyElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLBodyElement",
      "classSimpleName": "HTMLBodyElement",
      "elementKind": "method",
      "methodName": "querySelector",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Element akasha.Element::querySelector(java.lang.String) @ akasha.HTMLButtonElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLButtonElement",
      "classSimpleName": "HTMLButtonElement",
      "elementKind": "method",
      "methodName": "querySelector",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Element akasha.Element::querySelector(java.lang.String) @ akasha.HTMLCanvasElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLCanvasElement",
      "classSimpleName": "HTMLCanvasElement",
      "elementKind": "method",
      "methodName": "querySelector",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Element akasha.Element::querySelector(java.lang.String) @ akasha.HTMLDListElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLDListElement",
      "classSimpleName": "HTMLDListElement",
      "elementKind": "method",
      "methodName": "querySelector",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Element akasha.Element::querySelector(java.lang.String) @ akasha.HTMLDataElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLDataElement",
      "classSimpleName": "HTMLDataElement",
      "elementKind": "method",
      "methodName": "querySelector",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Element akasha.Element::querySelector(java.lang.String) @ akasha.HTMLDataListElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLDataListElement",
      "classSimpleName": "HTMLDataListElement",
      "elementKind": "method",
      "methodName": "querySelector",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Element akasha.Element::querySelector(java.lang.String) @ akasha.HTMLDetailsElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLDetailsElement",
      "classSimpleName": "HTMLDetailsElement",
      "elementKind": "method",
      "methodName": "querySelector",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Element akasha.Element::querySelector(java.lang.String) @ akasha.HTMLDialogElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLDialogElement",
      "classSimpleName": "HTMLDialogElement",
      "elementKind": "method",
      "methodName": "querySelector",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Element akasha.Element::querySelector(java.lang.String) @ akasha.HTMLDirectoryElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLDirectoryElement",
      "classSimpleName": "HTMLDirectoryElement",
      "elementKind": "method",
      "methodName": "querySelector",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Element akasha.Element::querySelector(java.lang.String) @ akasha.HTMLDivElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLDivElement",
      "classSimpleName": "HTMLDivElement",
      "elementKind": "method",
      "methodName": "querySelector",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Element akasha.Element::querySelector(java.lang.String) @ akasha.HTMLElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLElement",
      "classSimpleName": "HTMLElement",
      "elementKind": "method",
      "methodName": "querySelector",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Element akasha.Element::querySelector(java.lang.String) @ akasha.HTMLEmbedElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLEmbedElement",
      "classSimpleName": "HTMLEmbedElement",
      "elementKind": "method",
      "methodName": "querySelector",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Element akasha.Element::querySelector(java.lang.String) @ akasha.HTMLFieldSetElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLFieldSetElement",
      "classSimpleName": "HTMLFieldSetElement",
      "elementKind": "method",
      "methodName": "querySelector",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Element akasha.Element::querySelector(java.lang.String) @ akasha.HTMLFontElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLFontElement",
      "classSimpleName": "HTMLFontElement",
      "elementKind": "method",
      "methodName": "querySelector",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Element akasha.Element::querySelector(java.lang.String) @ akasha.HTMLFormElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLFormElement",
      "classSimpleName": "HTMLFormElement",
      "elementKind": "method",
      "methodName": "querySelector",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Element akasha.Element::querySelector(java.lang.String) @ akasha.HTMLFrameElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLFrameElement",
      "classSimpleName": "HTMLFrameElement",
      "elementKind": "method",
      "methodName": "querySelector",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Element akasha.Element::querySelector(java.lang.String) @ akasha.HTMLFrameSetElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLFrameSetElement",
      "classSimpleName": "HTMLFrameSetElement",
      "elementKind": "method",
      "methodName": "querySelector",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Element akasha.Element::querySelector(java.lang.String) @ akasha.HTMLHRElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLHRElement",
      "classSimpleName": "HTMLHRElement",
      "elementKind": "method",
      "methodName": "querySelector",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Element akasha.Element::querySelector(java.lang.String) @ akasha.HTMLHeadElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLHeadElement",
      "classSimpleName": "HTMLHeadElement",
      "elementKind": "method",
      "methodName": "querySelector",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Element akasha.Element::querySelector(java.lang.String) @ akasha.HTMLHeadingElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLHeadingElement",
      "classSimpleName": "HTMLHeadingElement",
      "elementKind": "method",
      "methodName": "querySelector",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Element akasha.Element::querySelector(java.lang.String) @ akasha.HTMLHtmlElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLHtmlElement",
      "classSimpleName": "HTMLHtmlElement",
      "elementKind": "method",
      "methodName": "querySelector",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Element akasha.Element::querySelector(java.lang.String) @ akasha.HTMLIFrameElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLIFrameElement",
      "classSimpleName": "HTMLIFrameElement",
      "elementKind": "method",
      "methodName": "querySelector",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Element akasha.Element::querySelector(java.lang.String) @ akasha.HTMLImageElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLImageElement",
      "classSimpleName": "HTMLImageElement",
      "elementKind": "method",
      "methodName": "querySelector",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Element akasha.Element::querySelector(java.lang.String) @ akasha.HTMLInputElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLInputElement",
      "classSimpleName": "HTMLInputElement",
      "elementKind": "method",
      "methodName": "querySelector",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Element akasha.Element::querySelector(java.lang.String) @ akasha.HTMLLIElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLLIElement",
      "classSimpleName": "HTMLLIElement",
      "elementKind": "method",
      "methodName": "querySelector",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Element akasha.Element::querySelector(java.lang.String) @ akasha.HTMLLabelElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLLabelElement",
      "classSimpleName": "HTMLLabelElement",
      "elementKind": "method",
      "methodName": "querySelector",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Element akasha.Element::querySelector(java.lang.String) @ akasha.HTMLLegendElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLLegendElement",
      "classSimpleName": "HTMLLegendElement",
      "elementKind": "method",
      "methodName": "querySelector",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Element akasha.Element::querySelector(java.lang.String) @ akasha.HTMLLinkElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLLinkElement",
      "classSimpleName": "HTMLLinkElement",
      "elementKind": "method",
      "methodName": "querySelector",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Element akasha.Element::querySelector(java.lang.String) @ akasha.HTMLMapElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLMapElement",
      "classSimpleName": "HTMLMapElement",
      "elementKind": "method",
      "methodName": "querySelector",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Element akasha.Element::querySelector(java.lang.String) @ akasha.HTMLMarqueeElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLMarqueeElement",
      "classSimpleName": "HTMLMarqueeElement",
      "elementKind": "method",
      "methodName": "querySelector",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Element akasha.Element::querySelector(java.lang.String) @ akasha.HTMLMediaElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLMediaElement",
      "classSimpleName": "HTMLMediaElement",
      "elementKind": "method",
      "methodName": "querySelector",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Element akasha.Element::querySelector(java.lang.String) @ akasha.HTMLMenuElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLMenuElement",
      "classSimpleName": "HTMLMenuElement",
      "elementKind": "method",
      "methodName": "querySelector",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Element akasha.Element::querySelector(java.lang.String) @ akasha.HTMLMetaElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLMetaElement",
      "classSimpleName": "HTMLMetaElement",
      "elementKind": "method",
      "methodName": "querySelector",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Element akasha.Element::querySelector(java.lang.String) @ akasha.HTMLMeterElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLMeterElement",
      "classSimpleName": "HTMLMeterElement",
      "elementKind": "method",
      "methodName": "querySelector",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Element akasha.Element::querySelector(java.lang.String) @ akasha.HTMLModElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLModElement",
      "classSimpleName": "HTMLModElement",
      "elementKind": "method",
      "methodName": "querySelector",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Element akasha.Element::querySelector(java.lang.String) @ akasha.HTMLOListElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLOListElement",
      "classSimpleName": "HTMLOListElement",
      "elementKind": "method",
      "methodName": "querySelector",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Element akasha.Element::querySelector(java.lang.String) @ akasha.HTMLObjectElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLObjectElement",
      "classSimpleName": "HTMLObjectElement",
      "elementKind": "method",
      "methodName": "querySelector",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Element akasha.Element::querySelector(java.lang.String) @ akasha.HTMLOptGroupElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLOptGroupElement",
      "classSimpleName": "HTMLOptGroupElement",
      "elementKind": "method",
      "methodName": "querySelector",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Element akasha.Element::querySelector(java.lang.String) @ akasha.HTMLOptionElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLOptionElement",
      "classSimpleName": "HTMLOptionElement",
      "elementKind": "method",
      "methodName": "querySelector",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Element akasha.Element::querySelector(java.lang.String) @ akasha.HTMLOutputElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLOutputElement",
      "classSimpleName": "HTMLOutputElement",
      "elementKind": "method",
      "methodName": "querySelector",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Element akasha.Element::querySelector(java.lang.String) @ akasha.HTMLParagraphElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLParagraphElement",
      "classSimpleName": "HTMLParagraphElement",
      "elementKind": "method",
      "methodName": "querySelector",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Element akasha.Element::querySelector(java.lang.String) @ akasha.HTMLParamElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLParamElement",
      "classSimpleName": "HTMLParamElement",
      "elementKind": "method",
      "methodName": "querySelector",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Element akasha.Element::querySelector(java.lang.String) @ akasha.HTMLPictureElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLPictureElement",
      "classSimpleName": "HTMLPictureElement",
      "elementKind": "method",
      "methodName": "querySelector",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Element akasha.Element::querySelector(java.lang.String) @ akasha.HTMLPreElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLPreElement",
      "classSimpleName": "HTMLPreElement",
      "elementKind": "method",
      "methodName": "querySelector",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Element akasha.Element::querySelector(java.lang.String) @ akasha.HTMLProgressElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLProgressElement",
      "classSimpleName": "HTMLProgressElement",
      "elementKind": "method",
      "methodName": "querySelector",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Element akasha.Element::querySelector(java.lang.String) @ akasha.HTMLQuoteElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLQuoteElement",
      "classSimpleName": "HTMLQuoteElement",
      "elementKind": "method",
      "methodName": "querySelector",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Element akasha.Element::querySelector(java.lang.String) @ akasha.HTMLScriptElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLScriptElement",
      "classSimpleName": "HTMLScriptElement",
      "elementKind": "method",
      "methodName": "querySelector",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Element akasha.Element::querySelector(java.lang.String) @ akasha.HTMLSelectElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLSelectElement",
      "classSimpleName": "HTMLSelectElement",
      "elementKind": "method",
      "methodName": "querySelector",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Element akasha.Element::querySelector(java.lang.String) @ akasha.HTMLSlotElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLSlotElement",
      "classSimpleName": "HTMLSlotElement",
      "elementKind": "method",
      "methodName": "querySelector",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Element akasha.Element::querySelector(java.lang.String) @ akasha.HTMLSourceElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLSourceElement",
      "classSimpleName": "HTMLSourceElement",
      "elementKind": "method",
      "methodName": "querySelector",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Element akasha.Element::querySelector(java.lang.String) @ akasha.HTMLSpanElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLSpanElement",
      "classSimpleName": "HTMLSpanElement",
      "elementKind": "method",
      "methodName": "querySelector",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Element akasha.Element::querySelector(java.lang.String) @ akasha.HTMLStyleElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLStyleElement",
      "classSimpleName": "HTMLStyleElement",
      "elementKind": "method",
      "methodName": "querySelector",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Element akasha.Element::querySelector(java.lang.String) @ akasha.HTMLTableCaptionElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLTableCaptionElement",
      "classSimpleName": "HTMLTableCaptionElement",
      "elementKind": "method",
      "methodName": "querySelector",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Element akasha.Element::querySelector(java.lang.String) @ akasha.HTMLTableCellElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLTableCellElement",
      "classSimpleName": "HTMLTableCellElement",
      "elementKind": "method",
      "methodName": "querySelector",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Element akasha.Element::querySelector(java.lang.String) @ akasha.HTMLTableColElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLTableColElement",
      "classSimpleName": "HTMLTableColElement",
      "elementKind": "method",
      "methodName": "querySelector",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Element akasha.Element::querySelector(java.lang.String) @ akasha.HTMLTableElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLTableElement",
      "classSimpleName": "HTMLTableElement",
      "elementKind": "method",
      "methodName": "querySelector",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Element akasha.Element::querySelector(java.lang.String) @ akasha.HTMLTableRowElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLTableRowElement",
      "classSimpleName": "HTMLTableRowElement",
      "elementKind": "method",
      "methodName": "querySelector",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Element akasha.Element::querySelector(java.lang.String) @ akasha.HTMLTableSectionElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLTableSectionElement",
      "classSimpleName": "HTMLTableSectionElement",
      "elementKind": "method",
      "methodName": "querySelector",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Element akasha.Element::querySelector(java.lang.String) @ akasha.HTMLTemplateElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLTemplateElement",
      "classSimpleName": "HTMLTemplateElement",
      "elementKind": "method",
      "methodName": "querySelector",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Element akasha.Element::querySelector(java.lang.String) @ akasha.HTMLTextAreaElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLTextAreaElement",
      "classSimpleName": "HTMLTextAreaElement",
      "elementKind": "method",
      "methodName": "querySelector",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Element akasha.Element::querySelector(java.lang.String) @ akasha.HTMLTimeElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLTimeElement",
      "classSimpleName": "HTMLTimeElement",
      "elementKind": "method",
      "methodName": "querySelector",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Element akasha.Element::querySelector(java.lang.String) @ akasha.HTMLTitleElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLTitleElement",
      "classSimpleName": "HTMLTitleElement",
      "elementKind": "method",
      "methodName": "querySelector",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Element akasha.Element::querySelector(java.lang.String) @ akasha.HTMLTrackElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLTrackElement",
      "classSimpleName": "HTMLTrackElement",
      "elementKind": "method",
      "methodName": "querySelector",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Element akasha.Element::querySelector(java.lang.String) @ akasha.HTMLUListElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLUListElement",
      "classSimpleName": "HTMLUListElement",
      "elementKind": "method",
      "methodName": "querySelector",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Element akasha.Element::querySelector(java.lang.String) @ akasha.HTMLUnknownElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLUnknownElement",
      "classSimpleName": "HTMLUnknownElement",
      "elementKind": "method",
      "methodName": "querySelector",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Element akasha.Element::querySelector(java.lang.String) @ akasha.HTMLVideoElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLVideoElement",
      "classSimpleName": "HTMLVideoElement",
      "elementKind": "method",
      "methodName": "querySelector",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Element akasha.Element::querySelector(java.lang.String) @ akasha.Image",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.Image",
      "classSimpleName": "Image",
      "elementKind": "method",
      "methodName": "querySelector",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Element akasha.Element::querySelector(java.lang.String) @ akasha.Option",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.Option",
      "classSimpleName": "Option",
      "elementKind": "method",
      "methodName": "querySelector",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Element akasha.Element::querySelector(java.lang.String) @ akasha.svg.SVGAElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGAElement",
      "classSimpleName": "SVGAElement",
      "elementKind": "method",
      "methodName": "querySelector",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Element akasha.Element::querySelector(java.lang.String) @ akasha.svg.SVGCircleElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGCircleElement",
      "classSimpleName": "SVGCircleElement",
      "elementKind": "method",
      "methodName": "querySelector",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Element akasha.Element::querySelector(java.lang.String) @ akasha.svg.SVGClipPathElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGClipPathElement",
      "classSimpleName": "SVGClipPathElement",
      "elementKind": "method",
      "methodName": "querySelector",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Element akasha.Element::querySelector(java.lang.String) @ akasha.svg.SVGComponentTransferFunctionElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGComponentTransferFunctionElement",
      "classSimpleName": "SVGComponentTransferFunctionElement",
      "elementKind": "method",
      "methodName": "querySelector",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Element akasha.Element::querySelector(java.lang.String) @ akasha.svg.SVGDefsElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGDefsElement",
      "classSimpleName": "SVGDefsElement",
      "elementKind": "method",
      "methodName": "querySelector",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Element akasha.Element::querySelector(java.lang.String) @ akasha.svg.SVGDescElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGDescElement",
      "classSimpleName": "SVGDescElement",
      "elementKind": "method",
      "methodName": "querySelector",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Element akasha.Element::querySelector(java.lang.String) @ akasha.svg.SVGElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGElement",
      "classSimpleName": "SVGElement",
      "elementKind": "method",
      "methodName": "querySelector",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Element akasha.Element::querySelector(java.lang.String) @ akasha.svg.SVGEllipseElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGEllipseElement",
      "classSimpleName": "SVGEllipseElement",
      "elementKind": "method",
      "methodName": "querySelector",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Element akasha.Element::querySelector(java.lang.String) @ akasha.svg.SVGFEBlendElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEBlendElement",
      "classSimpleName": "SVGFEBlendElement",
      "elementKind": "method",
      "methodName": "querySelector",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Element akasha.Element::querySelector(java.lang.String) @ akasha.svg.SVGFEColorMatrixElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEColorMatrixElement",
      "classSimpleName": "SVGFEColorMatrixElement",
      "elementKind": "method",
      "methodName": "querySelector",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Element akasha.Element::querySelector(java.lang.String) @ akasha.svg.SVGFEComponentTransferElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEComponentTransferElement",
      "classSimpleName": "SVGFEComponentTransferElement",
      "elementKind": "method",
      "methodName": "querySelector",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Element akasha.Element::querySelector(java.lang.String) @ akasha.svg.SVGFECompositeElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFECompositeElement",
      "classSimpleName": "SVGFECompositeElement",
      "elementKind": "method",
      "methodName": "querySelector",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Element akasha.Element::querySelector(java.lang.String) @ akasha.svg.SVGFEConvolveMatrixElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEConvolveMatrixElement",
      "classSimpleName": "SVGFEConvolveMatrixElement",
      "elementKind": "method",
      "methodName": "querySelector",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Element akasha.Element::querySelector(java.lang.String) @ akasha.svg.SVGFEDiffuseLightingElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEDiffuseLightingElement",
      "classSimpleName": "SVGFEDiffuseLightingElement",
      "elementKind": "method",
      "methodName": "querySelector",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Element akasha.Element::querySelector(java.lang.String) @ akasha.svg.SVGFEDisplacementMapElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEDisplacementMapElement",
      "classSimpleName": "SVGFEDisplacementMapElement",
      "elementKind": "method",
      "methodName": "querySelector",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Element akasha.Element::querySelector(java.lang.String) @ akasha.svg.SVGFEDistantLightElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEDistantLightElement",
      "classSimpleName": "SVGFEDistantLightElement",
      "elementKind": "method",
      "methodName": "querySelector",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Element akasha.Element::querySelector(java.lang.String) @ akasha.svg.SVGFEDropShadowElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEDropShadowElement",
      "classSimpleName": "SVGFEDropShadowElement",
      "elementKind": "method",
      "methodName": "querySelector",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Element akasha.Element::querySelector(java.lang.String) @ akasha.svg.SVGFEFloodElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEFloodElement",
      "classSimpleName": "SVGFEFloodElement",
      "elementKind": "method",
      "methodName": "querySelector",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Element akasha.Element::querySelector(java.lang.String) @ akasha.svg.SVGFEFuncAElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEFuncAElement",
      "classSimpleName": "SVGFEFuncAElement",
      "elementKind": "method",
      "methodName": "querySelector",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Element akasha.Element::querySelector(java.lang.String) @ akasha.svg.SVGFEFuncBElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEFuncBElement",
      "classSimpleName": "SVGFEFuncBElement",
      "elementKind": "method",
      "methodName": "querySelector",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Element akasha.Element::querySelector(java.lang.String) @ akasha.svg.SVGFEFuncGElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEFuncGElement",
      "classSimpleName": "SVGFEFuncGElement",
      "elementKind": "method",
      "methodName": "querySelector",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Element akasha.Element::querySelector(java.lang.String) @ akasha.svg.SVGFEFuncRElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEFuncRElement",
      "classSimpleName": "SVGFEFuncRElement",
      "elementKind": "method",
      "methodName": "querySelector",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Element akasha.Element::querySelector(java.lang.String) @ akasha.svg.SVGFEGaussianBlurElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEGaussianBlurElement",
      "classSimpleName": "SVGFEGaussianBlurElement",
      "elementKind": "method",
      "methodName": "querySelector",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Element akasha.Element::querySelector(java.lang.String) @ akasha.svg.SVGFEImageElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEImageElement",
      "classSimpleName": "SVGFEImageElement",
      "elementKind": "method",
      "methodName": "querySelector",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Element akasha.Element::querySelector(java.lang.String) @ akasha.svg.SVGFEMergeElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEMergeElement",
      "classSimpleName": "SVGFEMergeElement",
      "elementKind": "method",
      "methodName": "querySelector",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Element akasha.Element::querySelector(java.lang.String) @ akasha.svg.SVGFEMergeNodeElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEMergeNodeElement",
      "classSimpleName": "SVGFEMergeNodeElement",
      "elementKind": "method",
      "methodName": "querySelector",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Element akasha.Element::querySelector(java.lang.String) @ akasha.svg.SVGFEMorphologyElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEMorphologyElement",
      "classSimpleName": "SVGFEMorphologyElement",
      "elementKind": "method",
      "methodName": "querySelector",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Element akasha.Element::querySelector(java.lang.String) @ akasha.svg.SVGFEOffsetElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEOffsetElement",
      "classSimpleName": "SVGFEOffsetElement",
      "elementKind": "method",
      "methodName": "querySelector",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Element akasha.Element::querySelector(java.lang.String) @ akasha.svg.SVGFEPointLightElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEPointLightElement",
      "classSimpleName": "SVGFEPointLightElement",
      "elementKind": "method",
      "methodName": "querySelector",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Element akasha.Element::querySelector(java.lang.String) @ akasha.svg.SVGFESpecularLightingElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFESpecularLightingElement",
      "classSimpleName": "SVGFESpecularLightingElement",
      "elementKind": "method",
      "methodName": "querySelector",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Element akasha.Element::querySelector(java.lang.String) @ akasha.svg.SVGFESpotLightElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFESpotLightElement",
      "classSimpleName": "SVGFESpotLightElement",
      "elementKind": "method",
      "methodName": "querySelector",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Element akasha.Element::querySelector(java.lang.String) @ akasha.svg.SVGFETileElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFETileElement",
      "classSimpleName": "SVGFETileElement",
      "elementKind": "method",
      "methodName": "querySelector",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Element akasha.Element::querySelector(java.lang.String) @ akasha.svg.SVGFETurbulenceElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFETurbulenceElement",
      "classSimpleName": "SVGFETurbulenceElement",
      "elementKind": "method",
      "methodName": "querySelector",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Element akasha.Element::querySelector(java.lang.String) @ akasha.svg.SVGFilterElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFilterElement",
      "classSimpleName": "SVGFilterElement",
      "elementKind": "method",
      "methodName": "querySelector",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Element akasha.Element::querySelector(java.lang.String) @ akasha.svg.SVGForeignObjectElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGForeignObjectElement",
      "classSimpleName": "SVGForeignObjectElement",
      "elementKind": "method",
      "methodName": "querySelector",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Element akasha.Element::querySelector(java.lang.String) @ akasha.svg.SVGGElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGGElement",
      "classSimpleName": "SVGGElement",
      "elementKind": "method",
      "methodName": "querySelector",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Element akasha.Element::querySelector(java.lang.String) @ akasha.svg.SVGGeometryElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGGeometryElement",
      "classSimpleName": "SVGGeometryElement",
      "elementKind": "method",
      "methodName": "querySelector",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Element akasha.Element::querySelector(java.lang.String) @ akasha.svg.SVGGradientElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGGradientElement",
      "classSimpleName": "SVGGradientElement",
      "elementKind": "method",
      "methodName": "querySelector",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Element akasha.Element::querySelector(java.lang.String) @ akasha.svg.SVGGraphicsElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGGraphicsElement",
      "classSimpleName": "SVGGraphicsElement",
      "elementKind": "method",
      "methodName": "querySelector",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Element akasha.Element::querySelector(java.lang.String) @ akasha.svg.SVGImageElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGImageElement",
      "classSimpleName": "SVGImageElement",
      "elementKind": "method",
      "methodName": "querySelector",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Element akasha.Element::querySelector(java.lang.String) @ akasha.svg.SVGLineElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGLineElement",
      "classSimpleName": "SVGLineElement",
      "elementKind": "method",
      "methodName": "querySelector",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Element akasha.Element::querySelector(java.lang.String) @ akasha.svg.SVGLinearGradientElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGLinearGradientElement",
      "classSimpleName": "SVGLinearGradientElement",
      "elementKind": "method",
      "methodName": "querySelector",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Element akasha.Element::querySelector(java.lang.String) @ akasha.svg.SVGMarkerElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGMarkerElement",
      "classSimpleName": "SVGMarkerElement",
      "elementKind": "method",
      "methodName": "querySelector",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Element akasha.Element::querySelector(java.lang.String) @ akasha.svg.SVGMaskElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGMaskElement",
      "classSimpleName": "SVGMaskElement",
      "elementKind": "method",
      "methodName": "querySelector",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Element akasha.Element::querySelector(java.lang.String) @ akasha.svg.SVGMetadataElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGMetadataElement",
      "classSimpleName": "SVGMetadataElement",
      "elementKind": "method",
      "methodName": "querySelector",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Element akasha.Element::querySelector(java.lang.String) @ akasha.svg.SVGPathElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGPathElement",
      "classSimpleName": "SVGPathElement",
      "elementKind": "method",
      "methodName": "querySelector",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Element akasha.Element::querySelector(java.lang.String) @ akasha.svg.SVGPatternElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGPatternElement",
      "classSimpleName": "SVGPatternElement",
      "elementKind": "method",
      "methodName": "querySelector",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Element akasha.Element::querySelector(java.lang.String) @ akasha.svg.SVGPolygonElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGPolygonElement",
      "classSimpleName": "SVGPolygonElement",
      "elementKind": "method",
      "methodName": "querySelector",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Element akasha.Element::querySelector(java.lang.String) @ akasha.svg.SVGPolylineElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGPolylineElement",
      "classSimpleName": "SVGPolylineElement",
      "elementKind": "method",
      "methodName": "querySelector",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Element akasha.Element::querySelector(java.lang.String) @ akasha.svg.SVGRadialGradientElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGRadialGradientElement",
      "classSimpleName": "SVGRadialGradientElement",
      "elementKind": "method",
      "methodName": "querySelector",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Element akasha.Element::querySelector(java.lang.String) @ akasha.svg.SVGRectElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGRectElement",
      "classSimpleName": "SVGRectElement",
      "elementKind": "method",
      "methodName": "querySelector",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Element akasha.Element::querySelector(java.lang.String) @ akasha.svg.SVGSVGElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGSVGElement",
      "classSimpleName": "SVGSVGElement",
      "elementKind": "method",
      "methodName": "querySelector",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Element akasha.Element::querySelector(java.lang.String) @ akasha.svg.SVGScriptElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGScriptElement",
      "classSimpleName": "SVGScriptElement",
      "elementKind": "method",
      "methodName": "querySelector",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Element akasha.Element::querySelector(java.lang.String) @ akasha.svg.SVGStopElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGStopElement",
      "classSimpleName": "SVGStopElement",
      "elementKind": "method",
      "methodName": "querySelector",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Element akasha.Element::querySelector(java.lang.String) @ akasha.svg.SVGStyleElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGStyleElement",
      "classSimpleName": "SVGStyleElement",
      "elementKind": "method",
      "methodName": "querySelector",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Element akasha.Element::querySelector(java.lang.String) @ akasha.svg.SVGSwitchElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGSwitchElement",
      "classSimpleName": "SVGSwitchElement",
      "elementKind": "method",
      "methodName": "querySelector",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Element akasha.Element::querySelector(java.lang.String) @ akasha.svg.SVGSymbolElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGSymbolElement",
      "classSimpleName": "SVGSymbolElement",
      "elementKind": "method",
      "methodName": "querySelector",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Element akasha.Element::querySelector(java.lang.String) @ akasha.svg.SVGTSpanElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGTSpanElement",
      "classSimpleName": "SVGTSpanElement",
      "elementKind": "method",
      "methodName": "querySelector",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Element akasha.Element::querySelector(java.lang.String) @ akasha.svg.SVGTextContentElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGTextContentElement",
      "classSimpleName": "SVGTextContentElement",
      "elementKind": "method",
      "methodName": "querySelector",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Element akasha.Element::querySelector(java.lang.String) @ akasha.svg.SVGTextElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGTextElement",
      "classSimpleName": "SVGTextElement",
      "elementKind": "method",
      "methodName": "querySelector",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Element akasha.Element::querySelector(java.lang.String) @ akasha.svg.SVGTextPathElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGTextPathElement",
      "classSimpleName": "SVGTextPathElement",
      "elementKind": "method",
      "methodName": "querySelector",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Element akasha.Element::querySelector(java.lang.String) @ akasha.svg.SVGTextPositioningElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGTextPositioningElement",
      "classSimpleName": "SVGTextPositioningElement",
      "elementKind": "method",
      "methodName": "querySelector",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Element akasha.Element::querySelector(java.lang.String) @ akasha.svg.SVGTitleElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGTitleElement",
      "classSimpleName": "SVGTitleElement",
      "elementKind": "method",
      "methodName": "querySelector",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Element akasha.Element::querySelector(java.lang.String) @ akasha.svg.SVGUnknownElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGUnknownElement",
      "classSimpleName": "SVGUnknownElement",
      "elementKind": "method",
      "methodName": "querySelector",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Element akasha.Element::querySelector(java.lang.String) @ akasha.svg.SVGUseElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGUseElement",
      "classSimpleName": "SVGUseElement",
      "elementKind": "method",
      "methodName": "querySelector",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Element akasha.Element::querySelector(java.lang.String) @ akasha.svg.SVGViewElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGViewElement",
      "classSimpleName": "SVGViewElement",
      "elementKind": "method",
      "methodName": "querySelector",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Element akasha.Element::querySelector(java.lang.String)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.Element",
      "classSimpleName": "Element",
      "elementKind": "method",
      "methodName": "querySelector",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Element akasha.HTMLCollection::item(int) @ akasha.HTMLOptionsCollection",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLOptionsCollection",
      "classSimpleName": "HTMLOptionsCollection",
      "elementKind": "method",
      "methodName": "item",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Element akasha.HTMLCollection::item(int)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLCollection",
      "classSimpleName": "HTMLCollection",
      "elementKind": "method",
      "methodName": "item",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Element akasha.HTMLCollection::namedItem(java.lang.String) @ akasha.HTMLOptionsCollection",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLOptionsCollection",
      "classSimpleName": "HTMLOptionsCollection",
      "elementKind": "method",
      "methodName": "namedItem",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Element akasha.HTMLCollection::namedItem(java.lang.String)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLCollection",
      "classSimpleName": "HTMLCollection",
      "elementKind": "method",
      "methodName": "namedItem",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Element akasha.HTMLSelectElement::item(int)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLSelectElement",
      "classSimpleName": "HTMLSelectElement",
      "elementKind": "method",
      "methodName": "item",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Element akasha.svg.SVGSVGElement::getElementById(java.lang.String)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGSVGElement",
      "classSimpleName": "SVGSVGElement",
      "elementKind": "method",
      "methodName": "getElementById",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.File akasha.DataTransferItem::getAsFile()",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.DataTransferItem",
      "classSimpleName": "DataTransferItem",
      "elementKind": "method",
      "methodName": "getAsFile",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.File akasha.FileList::item(int)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.FileList",
      "classSimpleName": "FileList",
      "elementKind": "method",
      "methodName": "item",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Document::getElementsByClassName(java.lang.String) @ akasha.XMLDocument",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.XMLDocument",
      "classSimpleName": "XMLDocument",
      "elementKind": "method",
      "methodName": "getElementsByClassName",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Document::getElementsByClassName(java.lang.String)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.Document",
      "classSimpleName": "Document",
      "elementKind": "method",
      "methodName": "getElementsByClassName",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Document::getElementsByTagName(java.lang.String) @ akasha.XMLDocument",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.XMLDocument",
      "classSimpleName": "XMLDocument",
      "elementKind": "method",
      "methodName": "getElementsByTagName",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Document::getElementsByTagName(java.lang.String)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.Document",
      "classSimpleName": "Document",
      "elementKind": "method",
      "methodName": "getElementsByTagName",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Document::getElementsByTagNameNS(java.lang.String, java.lang.String) @ akasha.XMLDocument",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.XMLDocument",
      "classSimpleName": "XMLDocument",
      "elementKind": "method",
      "methodName": "getElementsByTagNameNS",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Document::getElementsByTagNameNS(java.lang.String, java.lang.String)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.Document",
      "classSimpleName": "Document",
      "elementKind": "method",
      "methodName": "getElementsByTagNameNS",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByClassName(java.lang.String) @ akasha.Audio",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.Audio",
      "classSimpleName": "Audio",
      "elementKind": "method",
      "methodName": "getElementsByClassName",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByClassName(java.lang.String) @ akasha.HTMLAnchorElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLAnchorElement",
      "classSimpleName": "HTMLAnchorElement",
      "elementKind": "method",
      "methodName": "getElementsByClassName",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByClassName(java.lang.String) @ akasha.HTMLAreaElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLAreaElement",
      "classSimpleName": "HTMLAreaElement",
      "elementKind": "method",
      "methodName": "getElementsByClassName",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByClassName(java.lang.String) @ akasha.HTMLAudioElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLAudioElement",
      "classSimpleName": "HTMLAudioElement",
      "elementKind": "method",
      "methodName": "getElementsByClassName",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByClassName(java.lang.String) @ akasha.HTMLBRElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLBRElement",
      "classSimpleName": "HTMLBRElement",
      "elementKind": "method",
      "methodName": "getElementsByClassName",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByClassName(java.lang.String) @ akasha.HTMLBaseElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLBaseElement",
      "classSimpleName": "HTMLBaseElement",
      "elementKind": "method",
      "methodName": "getElementsByClassName",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByClassName(java.lang.String) @ akasha.HTMLBodyElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLBodyElement",
      "classSimpleName": "HTMLBodyElement",
      "elementKind": "method",
      "methodName": "getElementsByClassName",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByClassName(java.lang.String) @ akasha.HTMLButtonElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLButtonElement",
      "classSimpleName": "HTMLButtonElement",
      "elementKind": "method",
      "methodName": "getElementsByClassName",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByClassName(java.lang.String) @ akasha.HTMLCanvasElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLCanvasElement",
      "classSimpleName": "HTMLCanvasElement",
      "elementKind": "method",
      "methodName": "getElementsByClassName",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByClassName(java.lang.String) @ akasha.HTMLDListElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLDListElement",
      "classSimpleName": "HTMLDListElement",
      "elementKind": "method",
      "methodName": "getElementsByClassName",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByClassName(java.lang.String) @ akasha.HTMLDataElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLDataElement",
      "classSimpleName": "HTMLDataElement",
      "elementKind": "method",
      "methodName": "getElementsByClassName",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByClassName(java.lang.String) @ akasha.HTMLDataListElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLDataListElement",
      "classSimpleName": "HTMLDataListElement",
      "elementKind": "method",
      "methodName": "getElementsByClassName",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByClassName(java.lang.String) @ akasha.HTMLDetailsElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLDetailsElement",
      "classSimpleName": "HTMLDetailsElement",
      "elementKind": "method",
      "methodName": "getElementsByClassName",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByClassName(java.lang.String) @ akasha.HTMLDialogElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLDialogElement",
      "classSimpleName": "HTMLDialogElement",
      "elementKind": "method",
      "methodName": "getElementsByClassName",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByClassName(java.lang.String) @ akasha.HTMLDirectoryElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLDirectoryElement",
      "classSimpleName": "HTMLDirectoryElement",
      "elementKind": "method",
      "methodName": "getElementsByClassName",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByClassName(java.lang.String) @ akasha.HTMLDivElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLDivElement",
      "classSimpleName": "HTMLDivElement",
      "elementKind": "method",
      "methodName": "getElementsByClassName",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByClassName(java.lang.String) @ akasha.HTMLElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLElement",
      "classSimpleName": "HTMLElement",
      "elementKind": "method",
      "methodName": "getElementsByClassName",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByClassName(java.lang.String) @ akasha.HTMLEmbedElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLEmbedElement",
      "classSimpleName": "HTMLEmbedElement",
      "elementKind": "method",
      "methodName": "getElementsByClassName",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByClassName(java.lang.String) @ akasha.HTMLFieldSetElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLFieldSetElement",
      "classSimpleName": "HTMLFieldSetElement",
      "elementKind": "method",
      "methodName": "getElementsByClassName",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByClassName(java.lang.String) @ akasha.HTMLFontElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLFontElement",
      "classSimpleName": "HTMLFontElement",
      "elementKind": "method",
      "methodName": "getElementsByClassName",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByClassName(java.lang.String) @ akasha.HTMLFormElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLFormElement",
      "classSimpleName": "HTMLFormElement",
      "elementKind": "method",
      "methodName": "getElementsByClassName",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByClassName(java.lang.String) @ akasha.HTMLFrameElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLFrameElement",
      "classSimpleName": "HTMLFrameElement",
      "elementKind": "method",
      "methodName": "getElementsByClassName",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByClassName(java.lang.String) @ akasha.HTMLFrameSetElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLFrameSetElement",
      "classSimpleName": "HTMLFrameSetElement",
      "elementKind": "method",
      "methodName": "getElementsByClassName",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByClassName(java.lang.String) @ akasha.HTMLHRElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLHRElement",
      "classSimpleName": "HTMLHRElement",
      "elementKind": "method",
      "methodName": "getElementsByClassName",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByClassName(java.lang.String) @ akasha.HTMLHeadElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLHeadElement",
      "classSimpleName": "HTMLHeadElement",
      "elementKind": "method",
      "methodName": "getElementsByClassName",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByClassName(java.lang.String) @ akasha.HTMLHeadingElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLHeadingElement",
      "classSimpleName": "HTMLHeadingElement",
      "elementKind": "method",
      "methodName": "getElementsByClassName",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByClassName(java.lang.String) @ akasha.HTMLHtmlElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLHtmlElement",
      "classSimpleName": "HTMLHtmlElement",
      "elementKind": "method",
      "methodName": "getElementsByClassName",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByClassName(java.lang.String) @ akasha.HTMLIFrameElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLIFrameElement",
      "classSimpleName": "HTMLIFrameElement",
      "elementKind": "method",
      "methodName": "getElementsByClassName",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByClassName(java.lang.String) @ akasha.HTMLImageElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLImageElement",
      "classSimpleName": "HTMLImageElement",
      "elementKind": "method",
      "methodName": "getElementsByClassName",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByClassName(java.lang.String) @ akasha.HTMLInputElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLInputElement",
      "classSimpleName": "HTMLInputElement",
      "elementKind": "method",
      "methodName": "getElementsByClassName",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByClassName(java.lang.String) @ akasha.HTMLLIElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLLIElement",
      "classSimpleName": "HTMLLIElement",
      "elementKind": "method",
      "methodName": "getElementsByClassName",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByClassName(java.lang.String) @ akasha.HTMLLabelElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLLabelElement",
      "classSimpleName": "HTMLLabelElement",
      "elementKind": "method",
      "methodName": "getElementsByClassName",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByClassName(java.lang.String) @ akasha.HTMLLegendElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLLegendElement",
      "classSimpleName": "HTMLLegendElement",
      "elementKind": "method",
      "methodName": "getElementsByClassName",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByClassName(java.lang.String) @ akasha.HTMLLinkElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLLinkElement",
      "classSimpleName": "HTMLLinkElement",
      "elementKind": "method",
      "methodName": "getElementsByClassName",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByClassName(java.lang.String) @ akasha.HTMLMapElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLMapElement",
      "classSimpleName": "HTMLMapElement",
      "elementKind": "method",
      "methodName": "getElementsByClassName",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByClassName(java.lang.String) @ akasha.HTMLMarqueeElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLMarqueeElement",
      "classSimpleName": "HTMLMarqueeElement",
      "elementKind": "method",
      "methodName": "getElementsByClassName",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByClassName(java.lang.String) @ akasha.HTMLMediaElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLMediaElement",
      "classSimpleName": "HTMLMediaElement",
      "elementKind": "method",
      "methodName": "getElementsByClassName",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByClassName(java.lang.String) @ akasha.HTMLMenuElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLMenuElement",
      "classSimpleName": "HTMLMenuElement",
      "elementKind": "method",
      "methodName": "getElementsByClassName",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByClassName(java.lang.String) @ akasha.HTMLMetaElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLMetaElement",
      "classSimpleName": "HTMLMetaElement",
      "elementKind": "method",
      "methodName": "getElementsByClassName",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByClassName(java.lang.String) @ akasha.HTMLMeterElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLMeterElement",
      "classSimpleName": "HTMLMeterElement",
      "elementKind": "method",
      "methodName": "getElementsByClassName",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByClassName(java.lang.String) @ akasha.HTMLModElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLModElement",
      "classSimpleName": "HTMLModElement",
      "elementKind": "method",
      "methodName": "getElementsByClassName",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByClassName(java.lang.String) @ akasha.HTMLOListElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLOListElement",
      "classSimpleName": "HTMLOListElement",
      "elementKind": "method",
      "methodName": "getElementsByClassName",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByClassName(java.lang.String) @ akasha.HTMLObjectElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLObjectElement",
      "classSimpleName": "HTMLObjectElement",
      "elementKind": "method",
      "methodName": "getElementsByClassName",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByClassName(java.lang.String) @ akasha.HTMLOptGroupElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLOptGroupElement",
      "classSimpleName": "HTMLOptGroupElement",
      "elementKind": "method",
      "methodName": "getElementsByClassName",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByClassName(java.lang.String) @ akasha.HTMLOptionElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLOptionElement",
      "classSimpleName": "HTMLOptionElement",
      "elementKind": "method",
      "methodName": "getElementsByClassName",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByClassName(java.lang.String) @ akasha.HTMLOutputElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLOutputElement",
      "classSimpleName": "HTMLOutputElement",
      "elementKind": "method",
      "methodName": "getElementsByClassName",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByClassName(java.lang.String) @ akasha.HTMLParagraphElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLParagraphElement",
      "classSimpleName": "HTMLParagraphElement",
      "elementKind": "method",
      "methodName": "getElementsByClassName",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByClassName(java.lang.String) @ akasha.HTMLParamElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLParamElement",
      "classSimpleName": "HTMLParamElement",
      "elementKind": "method",
      "methodName": "getElementsByClassName",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByClassName(java.lang.String) @ akasha.HTMLPictureElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLPictureElement",
      "classSimpleName": "HTMLPictureElement",
      "elementKind": "method",
      "methodName": "getElementsByClassName",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByClassName(java.lang.String) @ akasha.HTMLPreElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLPreElement",
      "classSimpleName": "HTMLPreElement",
      "elementKind": "method",
      "methodName": "getElementsByClassName",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByClassName(java.lang.String) @ akasha.HTMLProgressElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLProgressElement",
      "classSimpleName": "HTMLProgressElement",
      "elementKind": "method",
      "methodName": "getElementsByClassName",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByClassName(java.lang.String) @ akasha.HTMLQuoteElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLQuoteElement",
      "classSimpleName": "HTMLQuoteElement",
      "elementKind": "method",
      "methodName": "getElementsByClassName",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByClassName(java.lang.String) @ akasha.HTMLScriptElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLScriptElement",
      "classSimpleName": "HTMLScriptElement",
      "elementKind": "method",
      "methodName": "getElementsByClassName",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByClassName(java.lang.String) @ akasha.HTMLSelectElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLSelectElement",
      "classSimpleName": "HTMLSelectElement",
      "elementKind": "method",
      "methodName": "getElementsByClassName",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByClassName(java.lang.String) @ akasha.HTMLSlotElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLSlotElement",
      "classSimpleName": "HTMLSlotElement",
      "elementKind": "method",
      "methodName": "getElementsByClassName",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByClassName(java.lang.String) @ akasha.HTMLSourceElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLSourceElement",
      "classSimpleName": "HTMLSourceElement",
      "elementKind": "method",
      "methodName": "getElementsByClassName",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByClassName(java.lang.String) @ akasha.HTMLSpanElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLSpanElement",
      "classSimpleName": "HTMLSpanElement",
      "elementKind": "method",
      "methodName": "getElementsByClassName",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByClassName(java.lang.String) @ akasha.HTMLStyleElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLStyleElement",
      "classSimpleName": "HTMLStyleElement",
      "elementKind": "method",
      "methodName": "getElementsByClassName",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByClassName(java.lang.String) @ akasha.HTMLTableCaptionElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLTableCaptionElement",
      "classSimpleName": "HTMLTableCaptionElement",
      "elementKind": "method",
      "methodName": "getElementsByClassName",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByClassName(java.lang.String) @ akasha.HTMLTableCellElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLTableCellElement",
      "classSimpleName": "HTMLTableCellElement",
      "elementKind": "method",
      "methodName": "getElementsByClassName",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByClassName(java.lang.String) @ akasha.HTMLTableColElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLTableColElement",
      "classSimpleName": "HTMLTableColElement",
      "elementKind": "method",
      "methodName": "getElementsByClassName",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByClassName(java.lang.String) @ akasha.HTMLTableElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLTableElement",
      "classSimpleName": "HTMLTableElement",
      "elementKind": "method",
      "methodName": "getElementsByClassName",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByClassName(java.lang.String) @ akasha.HTMLTableRowElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLTableRowElement",
      "classSimpleName": "HTMLTableRowElement",
      "elementKind": "method",
      "methodName": "getElementsByClassName",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByClassName(java.lang.String) @ akasha.HTMLTableSectionElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLTableSectionElement",
      "classSimpleName": "HTMLTableSectionElement",
      "elementKind": "method",
      "methodName": "getElementsByClassName",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByClassName(java.lang.String) @ akasha.HTMLTemplateElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLTemplateElement",
      "classSimpleName": "HTMLTemplateElement",
      "elementKind": "method",
      "methodName": "getElementsByClassName",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByClassName(java.lang.String) @ akasha.HTMLTextAreaElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLTextAreaElement",
      "classSimpleName": "HTMLTextAreaElement",
      "elementKind": "method",
      "methodName": "getElementsByClassName",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByClassName(java.lang.String) @ akasha.HTMLTimeElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLTimeElement",
      "classSimpleName": "HTMLTimeElement",
      "elementKind": "method",
      "methodName": "getElementsByClassName",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByClassName(java.lang.String) @ akasha.HTMLTitleElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLTitleElement",
      "classSimpleName": "HTMLTitleElement",
      "elementKind": "method",
      "methodName": "getElementsByClassName",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByClassName(java.lang.String) @ akasha.HTMLTrackElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLTrackElement",
      "classSimpleName": "HTMLTrackElement",
      "elementKind": "method",
      "methodName": "getElementsByClassName",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByClassName(java.lang.String) @ akasha.HTMLUListElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLUListElement",
      "classSimpleName": "HTMLUListElement",
      "elementKind": "method",
      "methodName": "getElementsByClassName",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByClassName(java.lang.String) @ akasha.HTMLUnknownElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLUnknownElement",
      "classSimpleName": "HTMLUnknownElement",
      "elementKind": "method",
      "methodName": "getElementsByClassName",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByClassName(java.lang.String) @ akasha.HTMLVideoElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLVideoElement",
      "classSimpleName": "HTMLVideoElement",
      "elementKind": "method",
      "methodName": "getElementsByClassName",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByClassName(java.lang.String) @ akasha.Image",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.Image",
      "classSimpleName": "Image",
      "elementKind": "method",
      "methodName": "getElementsByClassName",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByClassName(java.lang.String) @ akasha.Option",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.Option",
      "classSimpleName": "Option",
      "elementKind": "method",
      "methodName": "getElementsByClassName",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByClassName(java.lang.String) @ akasha.svg.SVGAElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGAElement",
      "classSimpleName": "SVGAElement",
      "elementKind": "method",
      "methodName": "getElementsByClassName",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByClassName(java.lang.String) @ akasha.svg.SVGCircleElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGCircleElement",
      "classSimpleName": "SVGCircleElement",
      "elementKind": "method",
      "methodName": "getElementsByClassName",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByClassName(java.lang.String) @ akasha.svg.SVGClipPathElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGClipPathElement",
      "classSimpleName": "SVGClipPathElement",
      "elementKind": "method",
      "methodName": "getElementsByClassName",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByClassName(java.lang.String) @ akasha.svg.SVGComponentTransferFunctionElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGComponentTransferFunctionElement",
      "classSimpleName": "SVGComponentTransferFunctionElement",
      "elementKind": "method",
      "methodName": "getElementsByClassName",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByClassName(java.lang.String) @ akasha.svg.SVGDefsElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGDefsElement",
      "classSimpleName": "SVGDefsElement",
      "elementKind": "method",
      "methodName": "getElementsByClassName",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByClassName(java.lang.String) @ akasha.svg.SVGDescElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGDescElement",
      "classSimpleName": "SVGDescElement",
      "elementKind": "method",
      "methodName": "getElementsByClassName",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByClassName(java.lang.String) @ akasha.svg.SVGElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGElement",
      "classSimpleName": "SVGElement",
      "elementKind": "method",
      "methodName": "getElementsByClassName",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByClassName(java.lang.String) @ akasha.svg.SVGEllipseElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGEllipseElement",
      "classSimpleName": "SVGEllipseElement",
      "elementKind": "method",
      "methodName": "getElementsByClassName",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByClassName(java.lang.String) @ akasha.svg.SVGFEBlendElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEBlendElement",
      "classSimpleName": "SVGFEBlendElement",
      "elementKind": "method",
      "methodName": "getElementsByClassName",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByClassName(java.lang.String) @ akasha.svg.SVGFEColorMatrixElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEColorMatrixElement",
      "classSimpleName": "SVGFEColorMatrixElement",
      "elementKind": "method",
      "methodName": "getElementsByClassName",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByClassName(java.lang.String) @ akasha.svg.SVGFEComponentTransferElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEComponentTransferElement",
      "classSimpleName": "SVGFEComponentTransferElement",
      "elementKind": "method",
      "methodName": "getElementsByClassName",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByClassName(java.lang.String) @ akasha.svg.SVGFECompositeElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFECompositeElement",
      "classSimpleName": "SVGFECompositeElement",
      "elementKind": "method",
      "methodName": "getElementsByClassName",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByClassName(java.lang.String) @ akasha.svg.SVGFEConvolveMatrixElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEConvolveMatrixElement",
      "classSimpleName": "SVGFEConvolveMatrixElement",
      "elementKind": "method",
      "methodName": "getElementsByClassName",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByClassName(java.lang.String) @ akasha.svg.SVGFEDiffuseLightingElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEDiffuseLightingElement",
      "classSimpleName": "SVGFEDiffuseLightingElement",
      "elementKind": "method",
      "methodName": "getElementsByClassName",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByClassName(java.lang.String) @ akasha.svg.SVGFEDisplacementMapElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEDisplacementMapElement",
      "classSimpleName": "SVGFEDisplacementMapElement",
      "elementKind": "method",
      "methodName": "getElementsByClassName",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByClassName(java.lang.String) @ akasha.svg.SVGFEDistantLightElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEDistantLightElement",
      "classSimpleName": "SVGFEDistantLightElement",
      "elementKind": "method",
      "methodName": "getElementsByClassName",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByClassName(java.lang.String) @ akasha.svg.SVGFEDropShadowElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEDropShadowElement",
      "classSimpleName": "SVGFEDropShadowElement",
      "elementKind": "method",
      "methodName": "getElementsByClassName",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByClassName(java.lang.String) @ akasha.svg.SVGFEFloodElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEFloodElement",
      "classSimpleName": "SVGFEFloodElement",
      "elementKind": "method",
      "methodName": "getElementsByClassName",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByClassName(java.lang.String) @ akasha.svg.SVGFEFuncAElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEFuncAElement",
      "classSimpleName": "SVGFEFuncAElement",
      "elementKind": "method",
      "methodName": "getElementsByClassName",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByClassName(java.lang.String) @ akasha.svg.SVGFEFuncBElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEFuncBElement",
      "classSimpleName": "SVGFEFuncBElement",
      "elementKind": "method",
      "methodName": "getElementsByClassName",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByClassName(java.lang.String) @ akasha.svg.SVGFEFuncGElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEFuncGElement",
      "classSimpleName": "SVGFEFuncGElement",
      "elementKind": "method",
      "methodName": "getElementsByClassName",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByClassName(java.lang.String) @ akasha.svg.SVGFEFuncRElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEFuncRElement",
      "classSimpleName": "SVGFEFuncRElement",
      "elementKind": "method",
      "methodName": "getElementsByClassName",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByClassName(java.lang.String) @ akasha.svg.SVGFEGaussianBlurElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEGaussianBlurElement",
      "classSimpleName": "SVGFEGaussianBlurElement",
      "elementKind": "method",
      "methodName": "getElementsByClassName",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByClassName(java.lang.String) @ akasha.svg.SVGFEImageElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEImageElement",
      "classSimpleName": "SVGFEImageElement",
      "elementKind": "method",
      "methodName": "getElementsByClassName",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByClassName(java.lang.String) @ akasha.svg.SVGFEMergeElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEMergeElement",
      "classSimpleName": "SVGFEMergeElement",
      "elementKind": "method",
      "methodName": "getElementsByClassName",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByClassName(java.lang.String) @ akasha.svg.SVGFEMergeNodeElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEMergeNodeElement",
      "classSimpleName": "SVGFEMergeNodeElement",
      "elementKind": "method",
      "methodName": "getElementsByClassName",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByClassName(java.lang.String) @ akasha.svg.SVGFEMorphologyElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEMorphologyElement",
      "classSimpleName": "SVGFEMorphologyElement",
      "elementKind": "method",
      "methodName": "getElementsByClassName",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByClassName(java.lang.String) @ akasha.svg.SVGFEOffsetElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEOffsetElement",
      "classSimpleName": "SVGFEOffsetElement",
      "elementKind": "method",
      "methodName": "getElementsByClassName",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByClassName(java.lang.String) @ akasha.svg.SVGFEPointLightElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEPointLightElement",
      "classSimpleName": "SVGFEPointLightElement",
      "elementKind": "method",
      "methodName": "getElementsByClassName",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByClassName(java.lang.String) @ akasha.svg.SVGFESpecularLightingElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFESpecularLightingElement",
      "classSimpleName": "SVGFESpecularLightingElement",
      "elementKind": "method",
      "methodName": "getElementsByClassName",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByClassName(java.lang.String) @ akasha.svg.SVGFESpotLightElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFESpotLightElement",
      "classSimpleName": "SVGFESpotLightElement",
      "elementKind": "method",
      "methodName": "getElementsByClassName",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByClassName(java.lang.String) @ akasha.svg.SVGFETileElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFETileElement",
      "classSimpleName": "SVGFETileElement",
      "elementKind": "method",
      "methodName": "getElementsByClassName",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByClassName(java.lang.String) @ akasha.svg.SVGFETurbulenceElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFETurbulenceElement",
      "classSimpleName": "SVGFETurbulenceElement",
      "elementKind": "method",
      "methodName": "getElementsByClassName",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByClassName(java.lang.String) @ akasha.svg.SVGFilterElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFilterElement",
      "classSimpleName": "SVGFilterElement",
      "elementKind": "method",
      "methodName": "getElementsByClassName",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByClassName(java.lang.String) @ akasha.svg.SVGForeignObjectElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGForeignObjectElement",
      "classSimpleName": "SVGForeignObjectElement",
      "elementKind": "method",
      "methodName": "getElementsByClassName",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByClassName(java.lang.String) @ akasha.svg.SVGGElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGGElement",
      "classSimpleName": "SVGGElement",
      "elementKind": "method",
      "methodName": "getElementsByClassName",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByClassName(java.lang.String) @ akasha.svg.SVGGeometryElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGGeometryElement",
      "classSimpleName": "SVGGeometryElement",
      "elementKind": "method",
      "methodName": "getElementsByClassName",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByClassName(java.lang.String) @ akasha.svg.SVGGradientElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGGradientElement",
      "classSimpleName": "SVGGradientElement",
      "elementKind": "method",
      "methodName": "getElementsByClassName",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByClassName(java.lang.String) @ akasha.svg.SVGGraphicsElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGGraphicsElement",
      "classSimpleName": "SVGGraphicsElement",
      "elementKind": "method",
      "methodName": "getElementsByClassName",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByClassName(java.lang.String) @ akasha.svg.SVGImageElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGImageElement",
      "classSimpleName": "SVGImageElement",
      "elementKind": "method",
      "methodName": "getElementsByClassName",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByClassName(java.lang.String) @ akasha.svg.SVGLineElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGLineElement",
      "classSimpleName": "SVGLineElement",
      "elementKind": "method",
      "methodName": "getElementsByClassName",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByClassName(java.lang.String) @ akasha.svg.SVGLinearGradientElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGLinearGradientElement",
      "classSimpleName": "SVGLinearGradientElement",
      "elementKind": "method",
      "methodName": "getElementsByClassName",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByClassName(java.lang.String) @ akasha.svg.SVGMarkerElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGMarkerElement",
      "classSimpleName": "SVGMarkerElement",
      "elementKind": "method",
      "methodName": "getElementsByClassName",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByClassName(java.lang.String) @ akasha.svg.SVGMaskElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGMaskElement",
      "classSimpleName": "SVGMaskElement",
      "elementKind": "method",
      "methodName": "getElementsByClassName",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByClassName(java.lang.String) @ akasha.svg.SVGMetadataElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGMetadataElement",
      "classSimpleName": "SVGMetadataElement",
      "elementKind": "method",
      "methodName": "getElementsByClassName",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByClassName(java.lang.String) @ akasha.svg.SVGPathElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGPathElement",
      "classSimpleName": "SVGPathElement",
      "elementKind": "method",
      "methodName": "getElementsByClassName",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByClassName(java.lang.String) @ akasha.svg.SVGPatternElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGPatternElement",
      "classSimpleName": "SVGPatternElement",
      "elementKind": "method",
      "methodName": "getElementsByClassName",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByClassName(java.lang.String) @ akasha.svg.SVGPolygonElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGPolygonElement",
      "classSimpleName": "SVGPolygonElement",
      "elementKind": "method",
      "methodName": "getElementsByClassName",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByClassName(java.lang.String) @ akasha.svg.SVGPolylineElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGPolylineElement",
      "classSimpleName": "SVGPolylineElement",
      "elementKind": "method",
      "methodName": "getElementsByClassName",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByClassName(java.lang.String) @ akasha.svg.SVGRadialGradientElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGRadialGradientElement",
      "classSimpleName": "SVGRadialGradientElement",
      "elementKind": "method",
      "methodName": "getElementsByClassName",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByClassName(java.lang.String) @ akasha.svg.SVGRectElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGRectElement",
      "classSimpleName": "SVGRectElement",
      "elementKind": "method",
      "methodName": "getElementsByClassName",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByClassName(java.lang.String) @ akasha.svg.SVGSVGElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGSVGElement",
      "classSimpleName": "SVGSVGElement",
      "elementKind": "method",
      "methodName": "getElementsByClassName",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByClassName(java.lang.String) @ akasha.svg.SVGScriptElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGScriptElement",
      "classSimpleName": "SVGScriptElement",
      "elementKind": "method",
      "methodName": "getElementsByClassName",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByClassName(java.lang.String) @ akasha.svg.SVGStopElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGStopElement",
      "classSimpleName": "SVGStopElement",
      "elementKind": "method",
      "methodName": "getElementsByClassName",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByClassName(java.lang.String) @ akasha.svg.SVGStyleElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGStyleElement",
      "classSimpleName": "SVGStyleElement",
      "elementKind": "method",
      "methodName": "getElementsByClassName",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByClassName(java.lang.String) @ akasha.svg.SVGSwitchElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGSwitchElement",
      "classSimpleName": "SVGSwitchElement",
      "elementKind": "method",
      "methodName": "getElementsByClassName",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByClassName(java.lang.String) @ akasha.svg.SVGSymbolElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGSymbolElement",
      "classSimpleName": "SVGSymbolElement",
      "elementKind": "method",
      "methodName": "getElementsByClassName",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByClassName(java.lang.String) @ akasha.svg.SVGTSpanElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGTSpanElement",
      "classSimpleName": "SVGTSpanElement",
      "elementKind": "method",
      "methodName": "getElementsByClassName",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByClassName(java.lang.String) @ akasha.svg.SVGTextContentElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGTextContentElement",
      "classSimpleName": "SVGTextContentElement",
      "elementKind": "method",
      "methodName": "getElementsByClassName",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByClassName(java.lang.String) @ akasha.svg.SVGTextElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGTextElement",
      "classSimpleName": "SVGTextElement",
      "elementKind": "method",
      "methodName": "getElementsByClassName",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByClassName(java.lang.String) @ akasha.svg.SVGTextPathElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGTextPathElement",
      "classSimpleName": "SVGTextPathElement",
      "elementKind": "method",
      "methodName": "getElementsByClassName",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByClassName(java.lang.String) @ akasha.svg.SVGTextPositioningElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGTextPositioningElement",
      "classSimpleName": "SVGTextPositioningElement",
      "elementKind": "method",
      "methodName": "getElementsByClassName",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByClassName(java.lang.String) @ akasha.svg.SVGTitleElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGTitleElement",
      "classSimpleName": "SVGTitleElement",
      "elementKind": "method",
      "methodName": "getElementsByClassName",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByClassName(java.lang.String) @ akasha.svg.SVGUnknownElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGUnknownElement",
      "classSimpleName": "SVGUnknownElement",
      "elementKind": "method",
      "methodName": "getElementsByClassName",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByClassName(java.lang.String) @ akasha.svg.SVGUseElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGUseElement",
      "classSimpleName": "SVGUseElement",
      "elementKind": "method",
      "methodName": "getElementsByClassName",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByClassName(java.lang.String) @ akasha.svg.SVGViewElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGViewElement",
      "classSimpleName": "SVGViewElement",
      "elementKind": "method",
      "methodName": "getElementsByClassName",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByClassName(java.lang.String)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.Element",
      "classSimpleName": "Element",
      "elementKind": "method",
      "methodName": "getElementsByClassName",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByTagName(java.lang.String) @ akasha.Audio",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.Audio",
      "classSimpleName": "Audio",
      "elementKind": "method",
      "methodName": "getElementsByTagName",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByTagName(java.lang.String) @ akasha.HTMLAnchorElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLAnchorElement",
      "classSimpleName": "HTMLAnchorElement",
      "elementKind": "method",
      "methodName": "getElementsByTagName",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByTagName(java.lang.String) @ akasha.HTMLAreaElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLAreaElement",
      "classSimpleName": "HTMLAreaElement",
      "elementKind": "method",
      "methodName": "getElementsByTagName",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByTagName(java.lang.String) @ akasha.HTMLAudioElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLAudioElement",
      "classSimpleName": "HTMLAudioElement",
      "elementKind": "method",
      "methodName": "getElementsByTagName",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByTagName(java.lang.String) @ akasha.HTMLBRElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLBRElement",
      "classSimpleName": "HTMLBRElement",
      "elementKind": "method",
      "methodName": "getElementsByTagName",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByTagName(java.lang.String) @ akasha.HTMLBaseElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLBaseElement",
      "classSimpleName": "HTMLBaseElement",
      "elementKind": "method",
      "methodName": "getElementsByTagName",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByTagName(java.lang.String) @ akasha.HTMLBodyElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLBodyElement",
      "classSimpleName": "HTMLBodyElement",
      "elementKind": "method",
      "methodName": "getElementsByTagName",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByTagName(java.lang.String) @ akasha.HTMLButtonElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLButtonElement",
      "classSimpleName": "HTMLButtonElement",
      "elementKind": "method",
      "methodName": "getElementsByTagName",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByTagName(java.lang.String) @ akasha.HTMLCanvasElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLCanvasElement",
      "classSimpleName": "HTMLCanvasElement",
      "elementKind": "method",
      "methodName": "getElementsByTagName",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByTagName(java.lang.String) @ akasha.HTMLDListElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLDListElement",
      "classSimpleName": "HTMLDListElement",
      "elementKind": "method",
      "methodName": "getElementsByTagName",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByTagName(java.lang.String) @ akasha.HTMLDataElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLDataElement",
      "classSimpleName": "HTMLDataElement",
      "elementKind": "method",
      "methodName": "getElementsByTagName",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByTagName(java.lang.String) @ akasha.HTMLDataListElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLDataListElement",
      "classSimpleName": "HTMLDataListElement",
      "elementKind": "method",
      "methodName": "getElementsByTagName",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByTagName(java.lang.String) @ akasha.HTMLDetailsElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLDetailsElement",
      "classSimpleName": "HTMLDetailsElement",
      "elementKind": "method",
      "methodName": "getElementsByTagName",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByTagName(java.lang.String) @ akasha.HTMLDialogElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLDialogElement",
      "classSimpleName": "HTMLDialogElement",
      "elementKind": "method",
      "methodName": "getElementsByTagName",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByTagName(java.lang.String) @ akasha.HTMLDirectoryElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLDirectoryElement",
      "classSimpleName": "HTMLDirectoryElement",
      "elementKind": "method",
      "methodName": "getElementsByTagName",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByTagName(java.lang.String) @ akasha.HTMLDivElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLDivElement",
      "classSimpleName": "HTMLDivElement",
      "elementKind": "method",
      "methodName": "getElementsByTagName",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByTagName(java.lang.String) @ akasha.HTMLElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLElement",
      "classSimpleName": "HTMLElement",
      "elementKind": "method",
      "methodName": "getElementsByTagName",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByTagName(java.lang.String) @ akasha.HTMLEmbedElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLEmbedElement",
      "classSimpleName": "HTMLEmbedElement",
      "elementKind": "method",
      "methodName": "getElementsByTagName",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByTagName(java.lang.String) @ akasha.HTMLFieldSetElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLFieldSetElement",
      "classSimpleName": "HTMLFieldSetElement",
      "elementKind": "method",
      "methodName": "getElementsByTagName",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByTagName(java.lang.String) @ akasha.HTMLFontElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLFontElement",
      "classSimpleName": "HTMLFontElement",
      "elementKind": "method",
      "methodName": "getElementsByTagName",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByTagName(java.lang.String) @ akasha.HTMLFormElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLFormElement",
      "classSimpleName": "HTMLFormElement",
      "elementKind": "method",
      "methodName": "getElementsByTagName",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByTagName(java.lang.String) @ akasha.HTMLFrameElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLFrameElement",
      "classSimpleName": "HTMLFrameElement",
      "elementKind": "method",
      "methodName": "getElementsByTagName",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByTagName(java.lang.String) @ akasha.HTMLFrameSetElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLFrameSetElement",
      "classSimpleName": "HTMLFrameSetElement",
      "elementKind": "method",
      "methodName": "getElementsByTagName",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByTagName(java.lang.String) @ akasha.HTMLHRElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLHRElement",
      "classSimpleName": "HTMLHRElement",
      "elementKind": "method",
      "methodName": "getElementsByTagName",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByTagName(java.lang.String) @ akasha.HTMLHeadElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLHeadElement",
      "classSimpleName": "HTMLHeadElement",
      "elementKind": "method",
      "methodName": "getElementsByTagName",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByTagName(java.lang.String) @ akasha.HTMLHeadingElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLHeadingElement",
      "classSimpleName": "HTMLHeadingElement",
      "elementKind": "method",
      "methodName": "getElementsByTagName",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByTagName(java.lang.String) @ akasha.HTMLHtmlElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLHtmlElement",
      "classSimpleName": "HTMLHtmlElement",
      "elementKind": "method",
      "methodName": "getElementsByTagName",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByTagName(java.lang.String) @ akasha.HTMLIFrameElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLIFrameElement",
      "classSimpleName": "HTMLIFrameElement",
      "elementKind": "method",
      "methodName": "getElementsByTagName",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByTagName(java.lang.String) @ akasha.HTMLImageElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLImageElement",
      "classSimpleName": "HTMLImageElement",
      "elementKind": "method",
      "methodName": "getElementsByTagName",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByTagName(java.lang.String) @ akasha.HTMLInputElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLInputElement",
      "classSimpleName": "HTMLInputElement",
      "elementKind": "method",
      "methodName": "getElementsByTagName",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByTagName(java.lang.String) @ akasha.HTMLLIElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLLIElement",
      "classSimpleName": "HTMLLIElement",
      "elementKind": "method",
      "methodName": "getElementsByTagName",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByTagName(java.lang.String) @ akasha.HTMLLabelElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLLabelElement",
      "classSimpleName": "HTMLLabelElement",
      "elementKind": "method",
      "methodName": "getElementsByTagName",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByTagName(java.lang.String) @ akasha.HTMLLegendElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLLegendElement",
      "classSimpleName": "HTMLLegendElement",
      "elementKind": "method",
      "methodName": "getElementsByTagName",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByTagName(java.lang.String) @ akasha.HTMLLinkElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLLinkElement",
      "classSimpleName": "HTMLLinkElement",
      "elementKind": "method",
      "methodName": "getElementsByTagName",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByTagName(java.lang.String) @ akasha.HTMLMapElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLMapElement",
      "classSimpleName": "HTMLMapElement",
      "elementKind": "method",
      "methodName": "getElementsByTagName",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByTagName(java.lang.String) @ akasha.HTMLMarqueeElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLMarqueeElement",
      "classSimpleName": "HTMLMarqueeElement",
      "elementKind": "method",
      "methodName": "getElementsByTagName",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByTagName(java.lang.String) @ akasha.HTMLMediaElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLMediaElement",
      "classSimpleName": "HTMLMediaElement",
      "elementKind": "method",
      "methodName": "getElementsByTagName",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByTagName(java.lang.String) @ akasha.HTMLMenuElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLMenuElement",
      "classSimpleName": "HTMLMenuElement",
      "elementKind": "method",
      "methodName": "getElementsByTagName",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByTagName(java.lang.String) @ akasha.HTMLMetaElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLMetaElement",
      "classSimpleName": "HTMLMetaElement",
      "elementKind": "method",
      "methodName": "getElementsByTagName",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByTagName(java.lang.String) @ akasha.HTMLMeterElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLMeterElement",
      "classSimpleName": "HTMLMeterElement",
      "elementKind": "method",
      "methodName": "getElementsByTagName",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByTagName(java.lang.String) @ akasha.HTMLModElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLModElement",
      "classSimpleName": "HTMLModElement",
      "elementKind": "method",
      "methodName": "getElementsByTagName",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByTagName(java.lang.String) @ akasha.HTMLOListElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLOListElement",
      "classSimpleName": "HTMLOListElement",
      "elementKind": "method",
      "methodName": "getElementsByTagName",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByTagName(java.lang.String) @ akasha.HTMLObjectElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLObjectElement",
      "classSimpleName": "HTMLObjectElement",
      "elementKind": "method",
      "methodName": "getElementsByTagName",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByTagName(java.lang.String) @ akasha.HTMLOptGroupElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLOptGroupElement",
      "classSimpleName": "HTMLOptGroupElement",
      "elementKind": "method",
      "methodName": "getElementsByTagName",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByTagName(java.lang.String) @ akasha.HTMLOptionElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLOptionElement",
      "classSimpleName": "HTMLOptionElement",
      "elementKind": "method",
      "methodName": "getElementsByTagName",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByTagName(java.lang.String) @ akasha.HTMLOutputElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLOutputElement",
      "classSimpleName": "HTMLOutputElement",
      "elementKind": "method",
      "methodName": "getElementsByTagName",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByTagName(java.lang.String) @ akasha.HTMLParagraphElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLParagraphElement",
      "classSimpleName": "HTMLParagraphElement",
      "elementKind": "method",
      "methodName": "getElementsByTagName",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByTagName(java.lang.String) @ akasha.HTMLParamElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLParamElement",
      "classSimpleName": "HTMLParamElement",
      "elementKind": "method",
      "methodName": "getElementsByTagName",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByTagName(java.lang.String) @ akasha.HTMLPictureElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLPictureElement",
      "classSimpleName": "HTMLPictureElement",
      "elementKind": "method",
      "methodName": "getElementsByTagName",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByTagName(java.lang.String) @ akasha.HTMLPreElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLPreElement",
      "classSimpleName": "HTMLPreElement",
      "elementKind": "method",
      "methodName": "getElementsByTagName",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByTagName(java.lang.String) @ akasha.HTMLProgressElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLProgressElement",
      "classSimpleName": "HTMLProgressElement",
      "elementKind": "method",
      "methodName": "getElementsByTagName",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByTagName(java.lang.String) @ akasha.HTMLQuoteElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLQuoteElement",
      "classSimpleName": "HTMLQuoteElement",
      "elementKind": "method",
      "methodName": "getElementsByTagName",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByTagName(java.lang.String) @ akasha.HTMLScriptElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLScriptElement",
      "classSimpleName": "HTMLScriptElement",
      "elementKind": "method",
      "methodName": "getElementsByTagName",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByTagName(java.lang.String) @ akasha.HTMLSelectElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLSelectElement",
      "classSimpleName": "HTMLSelectElement",
      "elementKind": "method",
      "methodName": "getElementsByTagName",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByTagName(java.lang.String) @ akasha.HTMLSlotElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLSlotElement",
      "classSimpleName": "HTMLSlotElement",
      "elementKind": "method",
      "methodName": "getElementsByTagName",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByTagName(java.lang.String) @ akasha.HTMLSourceElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLSourceElement",
      "classSimpleName": "HTMLSourceElement",
      "elementKind": "method",
      "methodName": "getElementsByTagName",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByTagName(java.lang.String) @ akasha.HTMLSpanElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLSpanElement",
      "classSimpleName": "HTMLSpanElement",
      "elementKind": "method",
      "methodName": "getElementsByTagName",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByTagName(java.lang.String) @ akasha.HTMLStyleElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLStyleElement",
      "classSimpleName": "HTMLStyleElement",
      "elementKind": "method",
      "methodName": "getElementsByTagName",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByTagName(java.lang.String) @ akasha.HTMLTableCaptionElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLTableCaptionElement",
      "classSimpleName": "HTMLTableCaptionElement",
      "elementKind": "method",
      "methodName": "getElementsByTagName",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByTagName(java.lang.String) @ akasha.HTMLTableCellElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLTableCellElement",
      "classSimpleName": "HTMLTableCellElement",
      "elementKind": "method",
      "methodName": "getElementsByTagName",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByTagName(java.lang.String) @ akasha.HTMLTableColElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLTableColElement",
      "classSimpleName": "HTMLTableColElement",
      "elementKind": "method",
      "methodName": "getElementsByTagName",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByTagName(java.lang.String) @ akasha.HTMLTableElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLTableElement",
      "classSimpleName": "HTMLTableElement",
      "elementKind": "method",
      "methodName": "getElementsByTagName",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByTagName(java.lang.String) @ akasha.HTMLTableRowElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLTableRowElement",
      "classSimpleName": "HTMLTableRowElement",
      "elementKind": "method",
      "methodName": "getElementsByTagName",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByTagName(java.lang.String) @ akasha.HTMLTableSectionElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLTableSectionElement",
      "classSimpleName": "HTMLTableSectionElement",
      "elementKind": "method",
      "methodName": "getElementsByTagName",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByTagName(java.lang.String) @ akasha.HTMLTemplateElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLTemplateElement",
      "classSimpleName": "HTMLTemplateElement",
      "elementKind": "method",
      "methodName": "getElementsByTagName",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByTagName(java.lang.String) @ akasha.HTMLTextAreaElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLTextAreaElement",
      "classSimpleName": "HTMLTextAreaElement",
      "elementKind": "method",
      "methodName": "getElementsByTagName",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByTagName(java.lang.String) @ akasha.HTMLTimeElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLTimeElement",
      "classSimpleName": "HTMLTimeElement",
      "elementKind": "method",
      "methodName": "getElementsByTagName",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByTagName(java.lang.String) @ akasha.HTMLTitleElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLTitleElement",
      "classSimpleName": "HTMLTitleElement",
      "elementKind": "method",
      "methodName": "getElementsByTagName",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByTagName(java.lang.String) @ akasha.HTMLTrackElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLTrackElement",
      "classSimpleName": "HTMLTrackElement",
      "elementKind": "method",
      "methodName": "getElementsByTagName",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByTagName(java.lang.String) @ akasha.HTMLUListElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLUListElement",
      "classSimpleName": "HTMLUListElement",
      "elementKind": "method",
      "methodName": "getElementsByTagName",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByTagName(java.lang.String) @ akasha.HTMLUnknownElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLUnknownElement",
      "classSimpleName": "HTMLUnknownElement",
      "elementKind": "method",
      "methodName": "getElementsByTagName",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByTagName(java.lang.String) @ akasha.HTMLVideoElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLVideoElement",
      "classSimpleName": "HTMLVideoElement",
      "elementKind": "method",
      "methodName": "getElementsByTagName",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByTagName(java.lang.String) @ akasha.Image",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.Image",
      "classSimpleName": "Image",
      "elementKind": "method",
      "methodName": "getElementsByTagName",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByTagName(java.lang.String) @ akasha.Option",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.Option",
      "classSimpleName": "Option",
      "elementKind": "method",
      "methodName": "getElementsByTagName",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByTagName(java.lang.String) @ akasha.svg.SVGAElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGAElement",
      "classSimpleName": "SVGAElement",
      "elementKind": "method",
      "methodName": "getElementsByTagName",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByTagName(java.lang.String) @ akasha.svg.SVGCircleElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGCircleElement",
      "classSimpleName": "SVGCircleElement",
      "elementKind": "method",
      "methodName": "getElementsByTagName",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByTagName(java.lang.String) @ akasha.svg.SVGClipPathElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGClipPathElement",
      "classSimpleName": "SVGClipPathElement",
      "elementKind": "method",
      "methodName": "getElementsByTagName",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByTagName(java.lang.String) @ akasha.svg.SVGComponentTransferFunctionElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGComponentTransferFunctionElement",
      "classSimpleName": "SVGComponentTransferFunctionElement",
      "elementKind": "method",
      "methodName": "getElementsByTagName",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByTagName(java.lang.String) @ akasha.svg.SVGDefsElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGDefsElement",
      "classSimpleName": "SVGDefsElement",
      "elementKind": "method",
      "methodName": "getElementsByTagName",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByTagName(java.lang.String) @ akasha.svg.SVGDescElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGDescElement",
      "classSimpleName": "SVGDescElement",
      "elementKind": "method",
      "methodName": "getElementsByTagName",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByTagName(java.lang.String) @ akasha.svg.SVGElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGElement",
      "classSimpleName": "SVGElement",
      "elementKind": "method",
      "methodName": "getElementsByTagName",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByTagName(java.lang.String) @ akasha.svg.SVGEllipseElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGEllipseElement",
      "classSimpleName": "SVGEllipseElement",
      "elementKind": "method",
      "methodName": "getElementsByTagName",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByTagName(java.lang.String) @ akasha.svg.SVGFEBlendElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEBlendElement",
      "classSimpleName": "SVGFEBlendElement",
      "elementKind": "method",
      "methodName": "getElementsByTagName",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByTagName(java.lang.String) @ akasha.svg.SVGFEColorMatrixElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEColorMatrixElement",
      "classSimpleName": "SVGFEColorMatrixElement",
      "elementKind": "method",
      "methodName": "getElementsByTagName",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByTagName(java.lang.String) @ akasha.svg.SVGFEComponentTransferElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEComponentTransferElement",
      "classSimpleName": "SVGFEComponentTransferElement",
      "elementKind": "method",
      "methodName": "getElementsByTagName",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByTagName(java.lang.String) @ akasha.svg.SVGFECompositeElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFECompositeElement",
      "classSimpleName": "SVGFECompositeElement",
      "elementKind": "method",
      "methodName": "getElementsByTagName",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByTagName(java.lang.String) @ akasha.svg.SVGFEConvolveMatrixElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEConvolveMatrixElement",
      "classSimpleName": "SVGFEConvolveMatrixElement",
      "elementKind": "method",
      "methodName": "getElementsByTagName",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByTagName(java.lang.String) @ akasha.svg.SVGFEDiffuseLightingElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEDiffuseLightingElement",
      "classSimpleName": "SVGFEDiffuseLightingElement",
      "elementKind": "method",
      "methodName": "getElementsByTagName",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByTagName(java.lang.String) @ akasha.svg.SVGFEDisplacementMapElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEDisplacementMapElement",
      "classSimpleName": "SVGFEDisplacementMapElement",
      "elementKind": "method",
      "methodName": "getElementsByTagName",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByTagName(java.lang.String) @ akasha.svg.SVGFEDistantLightElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEDistantLightElement",
      "classSimpleName": "SVGFEDistantLightElement",
      "elementKind": "method",
      "methodName": "getElementsByTagName",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByTagName(java.lang.String) @ akasha.svg.SVGFEDropShadowElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEDropShadowElement",
      "classSimpleName": "SVGFEDropShadowElement",
      "elementKind": "method",
      "methodName": "getElementsByTagName",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByTagName(java.lang.String) @ akasha.svg.SVGFEFloodElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEFloodElement",
      "classSimpleName": "SVGFEFloodElement",
      "elementKind": "method",
      "methodName": "getElementsByTagName",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByTagName(java.lang.String) @ akasha.svg.SVGFEFuncAElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEFuncAElement",
      "classSimpleName": "SVGFEFuncAElement",
      "elementKind": "method",
      "methodName": "getElementsByTagName",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByTagName(java.lang.String) @ akasha.svg.SVGFEFuncBElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEFuncBElement",
      "classSimpleName": "SVGFEFuncBElement",
      "elementKind": "method",
      "methodName": "getElementsByTagName",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByTagName(java.lang.String) @ akasha.svg.SVGFEFuncGElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEFuncGElement",
      "classSimpleName": "SVGFEFuncGElement",
      "elementKind": "method",
      "methodName": "getElementsByTagName",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByTagName(java.lang.String) @ akasha.svg.SVGFEFuncRElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEFuncRElement",
      "classSimpleName": "SVGFEFuncRElement",
      "elementKind": "method",
      "methodName": "getElementsByTagName",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByTagName(java.lang.String) @ akasha.svg.SVGFEGaussianBlurElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEGaussianBlurElement",
      "classSimpleName": "SVGFEGaussianBlurElement",
      "elementKind": "method",
      "methodName": "getElementsByTagName",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByTagName(java.lang.String) @ akasha.svg.SVGFEImageElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEImageElement",
      "classSimpleName": "SVGFEImageElement",
      "elementKind": "method",
      "methodName": "getElementsByTagName",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByTagName(java.lang.String) @ akasha.svg.SVGFEMergeElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEMergeElement",
      "classSimpleName": "SVGFEMergeElement",
      "elementKind": "method",
      "methodName": "getElementsByTagName",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByTagName(java.lang.String) @ akasha.svg.SVGFEMergeNodeElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEMergeNodeElement",
      "classSimpleName": "SVGFEMergeNodeElement",
      "elementKind": "method",
      "methodName": "getElementsByTagName",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByTagName(java.lang.String) @ akasha.svg.SVGFEMorphologyElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEMorphologyElement",
      "classSimpleName": "SVGFEMorphologyElement",
      "elementKind": "method",
      "methodName": "getElementsByTagName",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByTagName(java.lang.String) @ akasha.svg.SVGFEOffsetElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEOffsetElement",
      "classSimpleName": "SVGFEOffsetElement",
      "elementKind": "method",
      "methodName": "getElementsByTagName",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByTagName(java.lang.String) @ akasha.svg.SVGFEPointLightElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEPointLightElement",
      "classSimpleName": "SVGFEPointLightElement",
      "elementKind": "method",
      "methodName": "getElementsByTagName",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByTagName(java.lang.String) @ akasha.svg.SVGFESpecularLightingElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFESpecularLightingElement",
      "classSimpleName": "SVGFESpecularLightingElement",
      "elementKind": "method",
      "methodName": "getElementsByTagName",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByTagName(java.lang.String) @ akasha.svg.SVGFESpotLightElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFESpotLightElement",
      "classSimpleName": "SVGFESpotLightElement",
      "elementKind": "method",
      "methodName": "getElementsByTagName",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByTagName(java.lang.String) @ akasha.svg.SVGFETileElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFETileElement",
      "classSimpleName": "SVGFETileElement",
      "elementKind": "method",
      "methodName": "getElementsByTagName",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByTagName(java.lang.String) @ akasha.svg.SVGFETurbulenceElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFETurbulenceElement",
      "classSimpleName": "SVGFETurbulenceElement",
      "elementKind": "method",
      "methodName": "getElementsByTagName",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByTagName(java.lang.String) @ akasha.svg.SVGFilterElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFilterElement",
      "classSimpleName": "SVGFilterElement",
      "elementKind": "method",
      "methodName": "getElementsByTagName",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByTagName(java.lang.String) @ akasha.svg.SVGForeignObjectElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGForeignObjectElement",
      "classSimpleName": "SVGForeignObjectElement",
      "elementKind": "method",
      "methodName": "getElementsByTagName",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByTagName(java.lang.String) @ akasha.svg.SVGGElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGGElement",
      "classSimpleName": "SVGGElement",
      "elementKind": "method",
      "methodName": "getElementsByTagName",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByTagName(java.lang.String) @ akasha.svg.SVGGeometryElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGGeometryElement",
      "classSimpleName": "SVGGeometryElement",
      "elementKind": "method",
      "methodName": "getElementsByTagName",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByTagName(java.lang.String) @ akasha.svg.SVGGradientElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGGradientElement",
      "classSimpleName": "SVGGradientElement",
      "elementKind": "method",
      "methodName": "getElementsByTagName",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByTagName(java.lang.String) @ akasha.svg.SVGGraphicsElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGGraphicsElement",
      "classSimpleName": "SVGGraphicsElement",
      "elementKind": "method",
      "methodName": "getElementsByTagName",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByTagName(java.lang.String) @ akasha.svg.SVGImageElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGImageElement",
      "classSimpleName": "SVGImageElement",
      "elementKind": "method",
      "methodName": "getElementsByTagName",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByTagName(java.lang.String) @ akasha.svg.SVGLineElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGLineElement",
      "classSimpleName": "SVGLineElement",
      "elementKind": "method",
      "methodName": "getElementsByTagName",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByTagName(java.lang.String) @ akasha.svg.SVGLinearGradientElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGLinearGradientElement",
      "classSimpleName": "SVGLinearGradientElement",
      "elementKind": "method",
      "methodName": "getElementsByTagName",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByTagName(java.lang.String) @ akasha.svg.SVGMarkerElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGMarkerElement",
      "classSimpleName": "SVGMarkerElement",
      "elementKind": "method",
      "methodName": "getElementsByTagName",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByTagName(java.lang.String) @ akasha.svg.SVGMaskElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGMaskElement",
      "classSimpleName": "SVGMaskElement",
      "elementKind": "method",
      "methodName": "getElementsByTagName",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByTagName(java.lang.String) @ akasha.svg.SVGMetadataElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGMetadataElement",
      "classSimpleName": "SVGMetadataElement",
      "elementKind": "method",
      "methodName": "getElementsByTagName",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByTagName(java.lang.String) @ akasha.svg.SVGPathElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGPathElement",
      "classSimpleName": "SVGPathElement",
      "elementKind": "method",
      "methodName": "getElementsByTagName",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByTagName(java.lang.String) @ akasha.svg.SVGPatternElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGPatternElement",
      "classSimpleName": "SVGPatternElement",
      "elementKind": "method",
      "methodName": "getElementsByTagName",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByTagName(java.lang.String) @ akasha.svg.SVGPolygonElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGPolygonElement",
      "classSimpleName": "SVGPolygonElement",
      "elementKind": "method",
      "methodName": "getElementsByTagName",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByTagName(java.lang.String) @ akasha.svg.SVGPolylineElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGPolylineElement",
      "classSimpleName": "SVGPolylineElement",
      "elementKind": "method",
      "methodName": "getElementsByTagName",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByTagName(java.lang.String) @ akasha.svg.SVGRadialGradientElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGRadialGradientElement",
      "classSimpleName": "SVGRadialGradientElement",
      "elementKind": "method",
      "methodName": "getElementsByTagName",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByTagName(java.lang.String) @ akasha.svg.SVGRectElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGRectElement",
      "classSimpleName": "SVGRectElement",
      "elementKind": "method",
      "methodName": "getElementsByTagName",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByTagName(java.lang.String) @ akasha.svg.SVGSVGElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGSVGElement",
      "classSimpleName": "SVGSVGElement",
      "elementKind": "method",
      "methodName": "getElementsByTagName",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByTagName(java.lang.String) @ akasha.svg.SVGScriptElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGScriptElement",
      "classSimpleName": "SVGScriptElement",
      "elementKind": "method",
      "methodName": "getElementsByTagName",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByTagName(java.lang.String) @ akasha.svg.SVGStopElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGStopElement",
      "classSimpleName": "SVGStopElement",
      "elementKind": "method",
      "methodName": "getElementsByTagName",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByTagName(java.lang.String) @ akasha.svg.SVGStyleElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGStyleElement",
      "classSimpleName": "SVGStyleElement",
      "elementKind": "method",
      "methodName": "getElementsByTagName",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByTagName(java.lang.String) @ akasha.svg.SVGSwitchElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGSwitchElement",
      "classSimpleName": "SVGSwitchElement",
      "elementKind": "method",
      "methodName": "getElementsByTagName",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByTagName(java.lang.String) @ akasha.svg.SVGSymbolElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGSymbolElement",
      "classSimpleName": "SVGSymbolElement",
      "elementKind": "method",
      "methodName": "getElementsByTagName",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByTagName(java.lang.String) @ akasha.svg.SVGTSpanElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGTSpanElement",
      "classSimpleName": "SVGTSpanElement",
      "elementKind": "method",
      "methodName": "getElementsByTagName",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByTagName(java.lang.String) @ akasha.svg.SVGTextContentElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGTextContentElement",
      "classSimpleName": "SVGTextContentElement",
      "elementKind": "method",
      "methodName": "getElementsByTagName",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByTagName(java.lang.String) @ akasha.svg.SVGTextElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGTextElement",
      "classSimpleName": "SVGTextElement",
      "elementKind": "method",
      "methodName": "getElementsByTagName",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByTagName(java.lang.String) @ akasha.svg.SVGTextPathElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGTextPathElement",
      "classSimpleName": "SVGTextPathElement",
      "elementKind": "method",
      "methodName": "getElementsByTagName",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByTagName(java.lang.String) @ akasha.svg.SVGTextPositioningElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGTextPositioningElement",
      "classSimpleName": "SVGTextPositioningElement",
      "elementKind": "method",
      "methodName": "getElementsByTagName",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByTagName(java.lang.String) @ akasha.svg.SVGTitleElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGTitleElement",
      "classSimpleName": "SVGTitleElement",
      "elementKind": "method",
      "methodName": "getElementsByTagName",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByTagName(java.lang.String) @ akasha.svg.SVGUnknownElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGUnknownElement",
      "classSimpleName": "SVGUnknownElement",
      "elementKind": "method",
      "methodName": "getElementsByTagName",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByTagName(java.lang.String) @ akasha.svg.SVGUseElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGUseElement",
      "classSimpleName": "SVGUseElement",
      "elementKind": "method",
      "methodName": "getElementsByTagName",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByTagName(java.lang.String) @ akasha.svg.SVGViewElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGViewElement",
      "classSimpleName": "SVGViewElement",
      "elementKind": "method",
      "methodName": "getElementsByTagName",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByTagName(java.lang.String)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.Element",
      "classSimpleName": "Element",
      "elementKind": "method",
      "methodName": "getElementsByTagName",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByTagNameNS(java.lang.String, java.lang.String) @ akasha.Audio",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.Audio",
      "classSimpleName": "Audio",
      "elementKind": "method",
      "methodName": "getElementsByTagNameNS",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByTagNameNS(java.lang.String, java.lang.String) @ akasha.HTMLAnchorElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLAnchorElement",
      "classSimpleName": "HTMLAnchorElement",
      "elementKind": "method",
      "methodName": "getElementsByTagNameNS",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByTagNameNS(java.lang.String, java.lang.String) @ akasha.HTMLAreaElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLAreaElement",
      "classSimpleName": "HTMLAreaElement",
      "elementKind": "method",
      "methodName": "getElementsByTagNameNS",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByTagNameNS(java.lang.String, java.lang.String) @ akasha.HTMLAudioElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLAudioElement",
      "classSimpleName": "HTMLAudioElement",
      "elementKind": "method",
      "methodName": "getElementsByTagNameNS",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByTagNameNS(java.lang.String, java.lang.String) @ akasha.HTMLBRElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLBRElement",
      "classSimpleName": "HTMLBRElement",
      "elementKind": "method",
      "methodName": "getElementsByTagNameNS",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByTagNameNS(java.lang.String, java.lang.String) @ akasha.HTMLBaseElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLBaseElement",
      "classSimpleName": "HTMLBaseElement",
      "elementKind": "method",
      "methodName": "getElementsByTagNameNS",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByTagNameNS(java.lang.String, java.lang.String) @ akasha.HTMLBodyElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLBodyElement",
      "classSimpleName": "HTMLBodyElement",
      "elementKind": "method",
      "methodName": "getElementsByTagNameNS",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByTagNameNS(java.lang.String, java.lang.String) @ akasha.HTMLButtonElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLButtonElement",
      "classSimpleName": "HTMLButtonElement",
      "elementKind": "method",
      "methodName": "getElementsByTagNameNS",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByTagNameNS(java.lang.String, java.lang.String) @ akasha.HTMLCanvasElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLCanvasElement",
      "classSimpleName": "HTMLCanvasElement",
      "elementKind": "method",
      "methodName": "getElementsByTagNameNS",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByTagNameNS(java.lang.String, java.lang.String) @ akasha.HTMLDListElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLDListElement",
      "classSimpleName": "HTMLDListElement",
      "elementKind": "method",
      "methodName": "getElementsByTagNameNS",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByTagNameNS(java.lang.String, java.lang.String) @ akasha.HTMLDataElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLDataElement",
      "classSimpleName": "HTMLDataElement",
      "elementKind": "method",
      "methodName": "getElementsByTagNameNS",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByTagNameNS(java.lang.String, java.lang.String) @ akasha.HTMLDataListElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLDataListElement",
      "classSimpleName": "HTMLDataListElement",
      "elementKind": "method",
      "methodName": "getElementsByTagNameNS",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByTagNameNS(java.lang.String, java.lang.String) @ akasha.HTMLDetailsElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLDetailsElement",
      "classSimpleName": "HTMLDetailsElement",
      "elementKind": "method",
      "methodName": "getElementsByTagNameNS",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByTagNameNS(java.lang.String, java.lang.String) @ akasha.HTMLDialogElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLDialogElement",
      "classSimpleName": "HTMLDialogElement",
      "elementKind": "method",
      "methodName": "getElementsByTagNameNS",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByTagNameNS(java.lang.String, java.lang.String) @ akasha.HTMLDirectoryElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLDirectoryElement",
      "classSimpleName": "HTMLDirectoryElement",
      "elementKind": "method",
      "methodName": "getElementsByTagNameNS",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByTagNameNS(java.lang.String, java.lang.String) @ akasha.HTMLDivElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLDivElement",
      "classSimpleName": "HTMLDivElement",
      "elementKind": "method",
      "methodName": "getElementsByTagNameNS",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByTagNameNS(java.lang.String, java.lang.String) @ akasha.HTMLElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLElement",
      "classSimpleName": "HTMLElement",
      "elementKind": "method",
      "methodName": "getElementsByTagNameNS",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByTagNameNS(java.lang.String, java.lang.String) @ akasha.HTMLEmbedElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLEmbedElement",
      "classSimpleName": "HTMLEmbedElement",
      "elementKind": "method",
      "methodName": "getElementsByTagNameNS",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByTagNameNS(java.lang.String, java.lang.String) @ akasha.HTMLFieldSetElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLFieldSetElement",
      "classSimpleName": "HTMLFieldSetElement",
      "elementKind": "method",
      "methodName": "getElementsByTagNameNS",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByTagNameNS(java.lang.String, java.lang.String) @ akasha.HTMLFontElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLFontElement",
      "classSimpleName": "HTMLFontElement",
      "elementKind": "method",
      "methodName": "getElementsByTagNameNS",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByTagNameNS(java.lang.String, java.lang.String) @ akasha.HTMLFormElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLFormElement",
      "classSimpleName": "HTMLFormElement",
      "elementKind": "method",
      "methodName": "getElementsByTagNameNS",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByTagNameNS(java.lang.String, java.lang.String) @ akasha.HTMLFrameElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLFrameElement",
      "classSimpleName": "HTMLFrameElement",
      "elementKind": "method",
      "methodName": "getElementsByTagNameNS",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByTagNameNS(java.lang.String, java.lang.String) @ akasha.HTMLFrameSetElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLFrameSetElement",
      "classSimpleName": "HTMLFrameSetElement",
      "elementKind": "method",
      "methodName": "getElementsByTagNameNS",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByTagNameNS(java.lang.String, java.lang.String) @ akasha.HTMLHRElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLHRElement",
      "classSimpleName": "HTMLHRElement",
      "elementKind": "method",
      "methodName": "getElementsByTagNameNS",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByTagNameNS(java.lang.String, java.lang.String) @ akasha.HTMLHeadElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLHeadElement",
      "classSimpleName": "HTMLHeadElement",
      "elementKind": "method",
      "methodName": "getElementsByTagNameNS",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByTagNameNS(java.lang.String, java.lang.String) @ akasha.HTMLHeadingElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLHeadingElement",
      "classSimpleName": "HTMLHeadingElement",
      "elementKind": "method",
      "methodName": "getElementsByTagNameNS",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByTagNameNS(java.lang.String, java.lang.String) @ akasha.HTMLHtmlElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLHtmlElement",
      "classSimpleName": "HTMLHtmlElement",
      "elementKind": "method",
      "methodName": "getElementsByTagNameNS",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByTagNameNS(java.lang.String, java.lang.String) @ akasha.HTMLIFrameElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLIFrameElement",
      "classSimpleName": "HTMLIFrameElement",
      "elementKind": "method",
      "methodName": "getElementsByTagNameNS",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByTagNameNS(java.lang.String, java.lang.String) @ akasha.HTMLImageElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLImageElement",
      "classSimpleName": "HTMLImageElement",
      "elementKind": "method",
      "methodName": "getElementsByTagNameNS",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByTagNameNS(java.lang.String, java.lang.String) @ akasha.HTMLInputElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLInputElement",
      "classSimpleName": "HTMLInputElement",
      "elementKind": "method",
      "methodName": "getElementsByTagNameNS",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByTagNameNS(java.lang.String, java.lang.String) @ akasha.HTMLLIElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLLIElement",
      "classSimpleName": "HTMLLIElement",
      "elementKind": "method",
      "methodName": "getElementsByTagNameNS",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByTagNameNS(java.lang.String, java.lang.String) @ akasha.HTMLLabelElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLLabelElement",
      "classSimpleName": "HTMLLabelElement",
      "elementKind": "method",
      "methodName": "getElementsByTagNameNS",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByTagNameNS(java.lang.String, java.lang.String) @ akasha.HTMLLegendElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLLegendElement",
      "classSimpleName": "HTMLLegendElement",
      "elementKind": "method",
      "methodName": "getElementsByTagNameNS",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByTagNameNS(java.lang.String, java.lang.String) @ akasha.HTMLLinkElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLLinkElement",
      "classSimpleName": "HTMLLinkElement",
      "elementKind": "method",
      "methodName": "getElementsByTagNameNS",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByTagNameNS(java.lang.String, java.lang.String) @ akasha.HTMLMapElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLMapElement",
      "classSimpleName": "HTMLMapElement",
      "elementKind": "method",
      "methodName": "getElementsByTagNameNS",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByTagNameNS(java.lang.String, java.lang.String) @ akasha.HTMLMarqueeElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLMarqueeElement",
      "classSimpleName": "HTMLMarqueeElement",
      "elementKind": "method",
      "methodName": "getElementsByTagNameNS",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByTagNameNS(java.lang.String, java.lang.String) @ akasha.HTMLMediaElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLMediaElement",
      "classSimpleName": "HTMLMediaElement",
      "elementKind": "method",
      "methodName": "getElementsByTagNameNS",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByTagNameNS(java.lang.String, java.lang.String) @ akasha.HTMLMenuElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLMenuElement",
      "classSimpleName": "HTMLMenuElement",
      "elementKind": "method",
      "methodName": "getElementsByTagNameNS",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByTagNameNS(java.lang.String, java.lang.String) @ akasha.HTMLMetaElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLMetaElement",
      "classSimpleName": "HTMLMetaElement",
      "elementKind": "method",
      "methodName": "getElementsByTagNameNS",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByTagNameNS(java.lang.String, java.lang.String) @ akasha.HTMLMeterElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLMeterElement",
      "classSimpleName": "HTMLMeterElement",
      "elementKind": "method",
      "methodName": "getElementsByTagNameNS",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByTagNameNS(java.lang.String, java.lang.String) @ akasha.HTMLModElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLModElement",
      "classSimpleName": "HTMLModElement",
      "elementKind": "method",
      "methodName": "getElementsByTagNameNS",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByTagNameNS(java.lang.String, java.lang.String) @ akasha.HTMLOListElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLOListElement",
      "classSimpleName": "HTMLOListElement",
      "elementKind": "method",
      "methodName": "getElementsByTagNameNS",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByTagNameNS(java.lang.String, java.lang.String) @ akasha.HTMLObjectElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLObjectElement",
      "classSimpleName": "HTMLObjectElement",
      "elementKind": "method",
      "methodName": "getElementsByTagNameNS",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByTagNameNS(java.lang.String, java.lang.String) @ akasha.HTMLOptGroupElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLOptGroupElement",
      "classSimpleName": "HTMLOptGroupElement",
      "elementKind": "method",
      "methodName": "getElementsByTagNameNS",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByTagNameNS(java.lang.String, java.lang.String) @ akasha.HTMLOptionElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLOptionElement",
      "classSimpleName": "HTMLOptionElement",
      "elementKind": "method",
      "methodName": "getElementsByTagNameNS",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByTagNameNS(java.lang.String, java.lang.String) @ akasha.HTMLOutputElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLOutputElement",
      "classSimpleName": "HTMLOutputElement",
      "elementKind": "method",
      "methodName": "getElementsByTagNameNS",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByTagNameNS(java.lang.String, java.lang.String) @ akasha.HTMLParagraphElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLParagraphElement",
      "classSimpleName": "HTMLParagraphElement",
      "elementKind": "method",
      "methodName": "getElementsByTagNameNS",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByTagNameNS(java.lang.String, java.lang.String) @ akasha.HTMLParamElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLParamElement",
      "classSimpleName": "HTMLParamElement",
      "elementKind": "method",
      "methodName": "getElementsByTagNameNS",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByTagNameNS(java.lang.String, java.lang.String) @ akasha.HTMLPictureElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLPictureElement",
      "classSimpleName": "HTMLPictureElement",
      "elementKind": "method",
      "methodName": "getElementsByTagNameNS",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByTagNameNS(java.lang.String, java.lang.String) @ akasha.HTMLPreElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLPreElement",
      "classSimpleName": "HTMLPreElement",
      "elementKind": "method",
      "methodName": "getElementsByTagNameNS",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByTagNameNS(java.lang.String, java.lang.String) @ akasha.HTMLProgressElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLProgressElement",
      "classSimpleName": "HTMLProgressElement",
      "elementKind": "method",
      "methodName": "getElementsByTagNameNS",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByTagNameNS(java.lang.String, java.lang.String) @ akasha.HTMLQuoteElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLQuoteElement",
      "classSimpleName": "HTMLQuoteElement",
      "elementKind": "method",
      "methodName": "getElementsByTagNameNS",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByTagNameNS(java.lang.String, java.lang.String) @ akasha.HTMLScriptElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLScriptElement",
      "classSimpleName": "HTMLScriptElement",
      "elementKind": "method",
      "methodName": "getElementsByTagNameNS",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByTagNameNS(java.lang.String, java.lang.String) @ akasha.HTMLSelectElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLSelectElement",
      "classSimpleName": "HTMLSelectElement",
      "elementKind": "method",
      "methodName": "getElementsByTagNameNS",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByTagNameNS(java.lang.String, java.lang.String) @ akasha.HTMLSlotElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLSlotElement",
      "classSimpleName": "HTMLSlotElement",
      "elementKind": "method",
      "methodName": "getElementsByTagNameNS",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByTagNameNS(java.lang.String, java.lang.String) @ akasha.HTMLSourceElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLSourceElement",
      "classSimpleName": "HTMLSourceElement",
      "elementKind": "method",
      "methodName": "getElementsByTagNameNS",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByTagNameNS(java.lang.String, java.lang.String) @ akasha.HTMLSpanElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLSpanElement",
      "classSimpleName": "HTMLSpanElement",
      "elementKind": "method",
      "methodName": "getElementsByTagNameNS",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByTagNameNS(java.lang.String, java.lang.String) @ akasha.HTMLStyleElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLStyleElement",
      "classSimpleName": "HTMLStyleElement",
      "elementKind": "method",
      "methodName": "getElementsByTagNameNS",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByTagNameNS(java.lang.String, java.lang.String) @ akasha.HTMLTableCaptionElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLTableCaptionElement",
      "classSimpleName": "HTMLTableCaptionElement",
      "elementKind": "method",
      "methodName": "getElementsByTagNameNS",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByTagNameNS(java.lang.String, java.lang.String) @ akasha.HTMLTableCellElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLTableCellElement",
      "classSimpleName": "HTMLTableCellElement",
      "elementKind": "method",
      "methodName": "getElementsByTagNameNS",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByTagNameNS(java.lang.String, java.lang.String) @ akasha.HTMLTableColElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLTableColElement",
      "classSimpleName": "HTMLTableColElement",
      "elementKind": "method",
      "methodName": "getElementsByTagNameNS",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByTagNameNS(java.lang.String, java.lang.String) @ akasha.HTMLTableElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLTableElement",
      "classSimpleName": "HTMLTableElement",
      "elementKind": "method",
      "methodName": "getElementsByTagNameNS",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByTagNameNS(java.lang.String, java.lang.String) @ akasha.HTMLTableRowElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLTableRowElement",
      "classSimpleName": "HTMLTableRowElement",
      "elementKind": "method",
      "methodName": "getElementsByTagNameNS",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByTagNameNS(java.lang.String, java.lang.String) @ akasha.HTMLTableSectionElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLTableSectionElement",
      "classSimpleName": "HTMLTableSectionElement",
      "elementKind": "method",
      "methodName": "getElementsByTagNameNS",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByTagNameNS(java.lang.String, java.lang.String) @ akasha.HTMLTemplateElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLTemplateElement",
      "classSimpleName": "HTMLTemplateElement",
      "elementKind": "method",
      "methodName": "getElementsByTagNameNS",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByTagNameNS(java.lang.String, java.lang.String) @ akasha.HTMLTextAreaElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLTextAreaElement",
      "classSimpleName": "HTMLTextAreaElement",
      "elementKind": "method",
      "methodName": "getElementsByTagNameNS",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByTagNameNS(java.lang.String, java.lang.String) @ akasha.HTMLTimeElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLTimeElement",
      "classSimpleName": "HTMLTimeElement",
      "elementKind": "method",
      "methodName": "getElementsByTagNameNS",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByTagNameNS(java.lang.String, java.lang.String) @ akasha.HTMLTitleElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLTitleElement",
      "classSimpleName": "HTMLTitleElement",
      "elementKind": "method",
      "methodName": "getElementsByTagNameNS",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByTagNameNS(java.lang.String, java.lang.String) @ akasha.HTMLTrackElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLTrackElement",
      "classSimpleName": "HTMLTrackElement",
      "elementKind": "method",
      "methodName": "getElementsByTagNameNS",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByTagNameNS(java.lang.String, java.lang.String) @ akasha.HTMLUListElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLUListElement",
      "classSimpleName": "HTMLUListElement",
      "elementKind": "method",
      "methodName": "getElementsByTagNameNS",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByTagNameNS(java.lang.String, java.lang.String) @ akasha.HTMLUnknownElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLUnknownElement",
      "classSimpleName": "HTMLUnknownElement",
      "elementKind": "method",
      "methodName": "getElementsByTagNameNS",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByTagNameNS(java.lang.String, java.lang.String) @ akasha.HTMLVideoElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLVideoElement",
      "classSimpleName": "HTMLVideoElement",
      "elementKind": "method",
      "methodName": "getElementsByTagNameNS",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByTagNameNS(java.lang.String, java.lang.String) @ akasha.Image",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.Image",
      "classSimpleName": "Image",
      "elementKind": "method",
      "methodName": "getElementsByTagNameNS",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByTagNameNS(java.lang.String, java.lang.String) @ akasha.Option",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.Option",
      "classSimpleName": "Option",
      "elementKind": "method",
      "methodName": "getElementsByTagNameNS",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByTagNameNS(java.lang.String, java.lang.String) @ akasha.svg.SVGAElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGAElement",
      "classSimpleName": "SVGAElement",
      "elementKind": "method",
      "methodName": "getElementsByTagNameNS",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByTagNameNS(java.lang.String, java.lang.String) @ akasha.svg.SVGCircleElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGCircleElement",
      "classSimpleName": "SVGCircleElement",
      "elementKind": "method",
      "methodName": "getElementsByTagNameNS",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByTagNameNS(java.lang.String, java.lang.String) @ akasha.svg.SVGClipPathElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGClipPathElement",
      "classSimpleName": "SVGClipPathElement",
      "elementKind": "method",
      "methodName": "getElementsByTagNameNS",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByTagNameNS(java.lang.String, java.lang.String) @ akasha.svg.SVGComponentTransferFunctionElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGComponentTransferFunctionElement",
      "classSimpleName": "SVGComponentTransferFunctionElement",
      "elementKind": "method",
      "methodName": "getElementsByTagNameNS",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByTagNameNS(java.lang.String, java.lang.String) @ akasha.svg.SVGDefsElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGDefsElement",
      "classSimpleName": "SVGDefsElement",
      "elementKind": "method",
      "methodName": "getElementsByTagNameNS",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByTagNameNS(java.lang.String, java.lang.String) @ akasha.svg.SVGDescElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGDescElement",
      "classSimpleName": "SVGDescElement",
      "elementKind": "method",
      "methodName": "getElementsByTagNameNS",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByTagNameNS(java.lang.String, java.lang.String) @ akasha.svg.SVGElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGElement",
      "classSimpleName": "SVGElement",
      "elementKind": "method",
      "methodName": "getElementsByTagNameNS",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByTagNameNS(java.lang.String, java.lang.String) @ akasha.svg.SVGEllipseElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGEllipseElement",
      "classSimpleName": "SVGEllipseElement",
      "elementKind": "method",
      "methodName": "getElementsByTagNameNS",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByTagNameNS(java.lang.String, java.lang.String) @ akasha.svg.SVGFEBlendElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEBlendElement",
      "classSimpleName": "SVGFEBlendElement",
      "elementKind": "method",
      "methodName": "getElementsByTagNameNS",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByTagNameNS(java.lang.String, java.lang.String) @ akasha.svg.SVGFEColorMatrixElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEColorMatrixElement",
      "classSimpleName": "SVGFEColorMatrixElement",
      "elementKind": "method",
      "methodName": "getElementsByTagNameNS",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByTagNameNS(java.lang.String, java.lang.String) @ akasha.svg.SVGFEComponentTransferElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEComponentTransferElement",
      "classSimpleName": "SVGFEComponentTransferElement",
      "elementKind": "method",
      "methodName": "getElementsByTagNameNS",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByTagNameNS(java.lang.String, java.lang.String) @ akasha.svg.SVGFECompositeElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFECompositeElement",
      "classSimpleName": "SVGFECompositeElement",
      "elementKind": "method",
      "methodName": "getElementsByTagNameNS",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByTagNameNS(java.lang.String, java.lang.String) @ akasha.svg.SVGFEConvolveMatrixElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEConvolveMatrixElement",
      "classSimpleName": "SVGFEConvolveMatrixElement",
      "elementKind": "method",
      "methodName": "getElementsByTagNameNS",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByTagNameNS(java.lang.String, java.lang.String) @ akasha.svg.SVGFEDiffuseLightingElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEDiffuseLightingElement",
      "classSimpleName": "SVGFEDiffuseLightingElement",
      "elementKind": "method",
      "methodName": "getElementsByTagNameNS",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByTagNameNS(java.lang.String, java.lang.String) @ akasha.svg.SVGFEDisplacementMapElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEDisplacementMapElement",
      "classSimpleName": "SVGFEDisplacementMapElement",
      "elementKind": "method",
      "methodName": "getElementsByTagNameNS",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByTagNameNS(java.lang.String, java.lang.String) @ akasha.svg.SVGFEDistantLightElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEDistantLightElement",
      "classSimpleName": "SVGFEDistantLightElement",
      "elementKind": "method",
      "methodName": "getElementsByTagNameNS",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByTagNameNS(java.lang.String, java.lang.String) @ akasha.svg.SVGFEDropShadowElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEDropShadowElement",
      "classSimpleName": "SVGFEDropShadowElement",
      "elementKind": "method",
      "methodName": "getElementsByTagNameNS",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByTagNameNS(java.lang.String, java.lang.String) @ akasha.svg.SVGFEFloodElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEFloodElement",
      "classSimpleName": "SVGFEFloodElement",
      "elementKind": "method",
      "methodName": "getElementsByTagNameNS",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByTagNameNS(java.lang.String, java.lang.String) @ akasha.svg.SVGFEFuncAElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEFuncAElement",
      "classSimpleName": "SVGFEFuncAElement",
      "elementKind": "method",
      "methodName": "getElementsByTagNameNS",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByTagNameNS(java.lang.String, java.lang.String) @ akasha.svg.SVGFEFuncBElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEFuncBElement",
      "classSimpleName": "SVGFEFuncBElement",
      "elementKind": "method",
      "methodName": "getElementsByTagNameNS",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByTagNameNS(java.lang.String, java.lang.String) @ akasha.svg.SVGFEFuncGElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEFuncGElement",
      "classSimpleName": "SVGFEFuncGElement",
      "elementKind": "method",
      "methodName": "getElementsByTagNameNS",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByTagNameNS(java.lang.String, java.lang.String) @ akasha.svg.SVGFEFuncRElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEFuncRElement",
      "classSimpleName": "SVGFEFuncRElement",
      "elementKind": "method",
      "methodName": "getElementsByTagNameNS",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByTagNameNS(java.lang.String, java.lang.String) @ akasha.svg.SVGFEGaussianBlurElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEGaussianBlurElement",
      "classSimpleName": "SVGFEGaussianBlurElement",
      "elementKind": "method",
      "methodName": "getElementsByTagNameNS",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByTagNameNS(java.lang.String, java.lang.String) @ akasha.svg.SVGFEImageElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEImageElement",
      "classSimpleName": "SVGFEImageElement",
      "elementKind": "method",
      "methodName": "getElementsByTagNameNS",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByTagNameNS(java.lang.String, java.lang.String) @ akasha.svg.SVGFEMergeElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEMergeElement",
      "classSimpleName": "SVGFEMergeElement",
      "elementKind": "method",
      "methodName": "getElementsByTagNameNS",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByTagNameNS(java.lang.String, java.lang.String) @ akasha.svg.SVGFEMergeNodeElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEMergeNodeElement",
      "classSimpleName": "SVGFEMergeNodeElement",
      "elementKind": "method",
      "methodName": "getElementsByTagNameNS",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByTagNameNS(java.lang.String, java.lang.String) @ akasha.svg.SVGFEMorphologyElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEMorphologyElement",
      "classSimpleName": "SVGFEMorphologyElement",
      "elementKind": "method",
      "methodName": "getElementsByTagNameNS",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByTagNameNS(java.lang.String, java.lang.String) @ akasha.svg.SVGFEOffsetElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEOffsetElement",
      "classSimpleName": "SVGFEOffsetElement",
      "elementKind": "method",
      "methodName": "getElementsByTagNameNS",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByTagNameNS(java.lang.String, java.lang.String) @ akasha.svg.SVGFEPointLightElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEPointLightElement",
      "classSimpleName": "SVGFEPointLightElement",
      "elementKind": "method",
      "methodName": "getElementsByTagNameNS",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByTagNameNS(java.lang.String, java.lang.String) @ akasha.svg.SVGFESpecularLightingElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFESpecularLightingElement",
      "classSimpleName": "SVGFESpecularLightingElement",
      "elementKind": "method",
      "methodName": "getElementsByTagNameNS",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByTagNameNS(java.lang.String, java.lang.String) @ akasha.svg.SVGFESpotLightElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFESpotLightElement",
      "classSimpleName": "SVGFESpotLightElement",
      "elementKind": "method",
      "methodName": "getElementsByTagNameNS",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByTagNameNS(java.lang.String, java.lang.String) @ akasha.svg.SVGFETileElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFETileElement",
      "classSimpleName": "SVGFETileElement",
      "elementKind": "method",
      "methodName": "getElementsByTagNameNS",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByTagNameNS(java.lang.String, java.lang.String) @ akasha.svg.SVGFETurbulenceElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFETurbulenceElement",
      "classSimpleName": "SVGFETurbulenceElement",
      "elementKind": "method",
      "methodName": "getElementsByTagNameNS",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByTagNameNS(java.lang.String, java.lang.String) @ akasha.svg.SVGFilterElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFilterElement",
      "classSimpleName": "SVGFilterElement",
      "elementKind": "method",
      "methodName": "getElementsByTagNameNS",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByTagNameNS(java.lang.String, java.lang.String) @ akasha.svg.SVGForeignObjectElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGForeignObjectElement",
      "classSimpleName": "SVGForeignObjectElement",
      "elementKind": "method",
      "methodName": "getElementsByTagNameNS",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByTagNameNS(java.lang.String, java.lang.String) @ akasha.svg.SVGGElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGGElement",
      "classSimpleName": "SVGGElement",
      "elementKind": "method",
      "methodName": "getElementsByTagNameNS",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByTagNameNS(java.lang.String, java.lang.String) @ akasha.svg.SVGGeometryElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGGeometryElement",
      "classSimpleName": "SVGGeometryElement",
      "elementKind": "method",
      "methodName": "getElementsByTagNameNS",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByTagNameNS(java.lang.String, java.lang.String) @ akasha.svg.SVGGradientElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGGradientElement",
      "classSimpleName": "SVGGradientElement",
      "elementKind": "method",
      "methodName": "getElementsByTagNameNS",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByTagNameNS(java.lang.String, java.lang.String) @ akasha.svg.SVGGraphicsElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGGraphicsElement",
      "classSimpleName": "SVGGraphicsElement",
      "elementKind": "method",
      "methodName": "getElementsByTagNameNS",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByTagNameNS(java.lang.String, java.lang.String) @ akasha.svg.SVGImageElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGImageElement",
      "classSimpleName": "SVGImageElement",
      "elementKind": "method",
      "methodName": "getElementsByTagNameNS",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByTagNameNS(java.lang.String, java.lang.String) @ akasha.svg.SVGLineElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGLineElement",
      "classSimpleName": "SVGLineElement",
      "elementKind": "method",
      "methodName": "getElementsByTagNameNS",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByTagNameNS(java.lang.String, java.lang.String) @ akasha.svg.SVGLinearGradientElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGLinearGradientElement",
      "classSimpleName": "SVGLinearGradientElement",
      "elementKind": "method",
      "methodName": "getElementsByTagNameNS",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByTagNameNS(java.lang.String, java.lang.String) @ akasha.svg.SVGMarkerElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGMarkerElement",
      "classSimpleName": "SVGMarkerElement",
      "elementKind": "method",
      "methodName": "getElementsByTagNameNS",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByTagNameNS(java.lang.String, java.lang.String) @ akasha.svg.SVGMaskElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGMaskElement",
      "classSimpleName": "SVGMaskElement",
      "elementKind": "method",
      "methodName": "getElementsByTagNameNS",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByTagNameNS(java.lang.String, java.lang.String) @ akasha.svg.SVGMetadataElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGMetadataElement",
      "classSimpleName": "SVGMetadataElement",
      "elementKind": "method",
      "methodName": "getElementsByTagNameNS",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByTagNameNS(java.lang.String, java.lang.String) @ akasha.svg.SVGPathElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGPathElement",
      "classSimpleName": "SVGPathElement",
      "elementKind": "method",
      "methodName": "getElementsByTagNameNS",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByTagNameNS(java.lang.String, java.lang.String) @ akasha.svg.SVGPatternElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGPatternElement",
      "classSimpleName": "SVGPatternElement",
      "elementKind": "method",
      "methodName": "getElementsByTagNameNS",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByTagNameNS(java.lang.String, java.lang.String) @ akasha.svg.SVGPolygonElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGPolygonElement",
      "classSimpleName": "SVGPolygonElement",
      "elementKind": "method",
      "methodName": "getElementsByTagNameNS",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByTagNameNS(java.lang.String, java.lang.String) @ akasha.svg.SVGPolylineElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGPolylineElement",
      "classSimpleName": "SVGPolylineElement",
      "elementKind": "method",
      "methodName": "getElementsByTagNameNS",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByTagNameNS(java.lang.String, java.lang.String) @ akasha.svg.SVGRadialGradientElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGRadialGradientElement",
      "classSimpleName": "SVGRadialGradientElement",
      "elementKind": "method",
      "methodName": "getElementsByTagNameNS",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByTagNameNS(java.lang.String, java.lang.String) @ akasha.svg.SVGRectElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGRectElement",
      "classSimpleName": "SVGRectElement",
      "elementKind": "method",
      "methodName": "getElementsByTagNameNS",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByTagNameNS(java.lang.String, java.lang.String) @ akasha.svg.SVGSVGElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGSVGElement",
      "classSimpleName": "SVGSVGElement",
      "elementKind": "method",
      "methodName": "getElementsByTagNameNS",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByTagNameNS(java.lang.String, java.lang.String) @ akasha.svg.SVGScriptElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGScriptElement",
      "classSimpleName": "SVGScriptElement",
      "elementKind": "method",
      "methodName": "getElementsByTagNameNS",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByTagNameNS(java.lang.String, java.lang.String) @ akasha.svg.SVGStopElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGStopElement",
      "classSimpleName": "SVGStopElement",
      "elementKind": "method",
      "methodName": "getElementsByTagNameNS",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByTagNameNS(java.lang.String, java.lang.String) @ akasha.svg.SVGStyleElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGStyleElement",
      "classSimpleName": "SVGStyleElement",
      "elementKind": "method",
      "methodName": "getElementsByTagNameNS",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByTagNameNS(java.lang.String, java.lang.String) @ akasha.svg.SVGSwitchElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGSwitchElement",
      "classSimpleName": "SVGSwitchElement",
      "elementKind": "method",
      "methodName": "getElementsByTagNameNS",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByTagNameNS(java.lang.String, java.lang.String) @ akasha.svg.SVGSymbolElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGSymbolElement",
      "classSimpleName": "SVGSymbolElement",
      "elementKind": "method",
      "methodName": "getElementsByTagNameNS",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByTagNameNS(java.lang.String, java.lang.String) @ akasha.svg.SVGTSpanElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGTSpanElement",
      "classSimpleName": "SVGTSpanElement",
      "elementKind": "method",
      "methodName": "getElementsByTagNameNS",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByTagNameNS(java.lang.String, java.lang.String) @ akasha.svg.SVGTextContentElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGTextContentElement",
      "classSimpleName": "SVGTextContentElement",
      "elementKind": "method",
      "methodName": "getElementsByTagNameNS",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByTagNameNS(java.lang.String, java.lang.String) @ akasha.svg.SVGTextElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGTextElement",
      "classSimpleName": "SVGTextElement",
      "elementKind": "method",
      "methodName": "getElementsByTagNameNS",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByTagNameNS(java.lang.String, java.lang.String) @ akasha.svg.SVGTextPathElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGTextPathElement",
      "classSimpleName": "SVGTextPathElement",
      "elementKind": "method",
      "methodName": "getElementsByTagNameNS",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByTagNameNS(java.lang.String, java.lang.String) @ akasha.svg.SVGTextPositioningElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGTextPositioningElement",
      "classSimpleName": "SVGTextPositioningElement",
      "elementKind": "method",
      "methodName": "getElementsByTagNameNS",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByTagNameNS(java.lang.String, java.lang.String) @ akasha.svg.SVGTitleElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGTitleElement",
      "classSimpleName": "SVGTitleElement",
      "elementKind": "method",
      "methodName": "getElementsByTagNameNS",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByTagNameNS(java.lang.String, java.lang.String) @ akasha.svg.SVGUnknownElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGUnknownElement",
      "classSimpleName": "SVGUnknownElement",
      "elementKind": "method",
      "methodName": "getElementsByTagNameNS",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByTagNameNS(java.lang.String, java.lang.String) @ akasha.svg.SVGUseElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGUseElement",
      "classSimpleName": "SVGUseElement",
      "elementKind": "method",
      "methodName": "getElementsByTagNameNS",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByTagNameNS(java.lang.String, java.lang.String) @ akasha.svg.SVGViewElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGViewElement",
      "classSimpleName": "SVGViewElement",
      "elementKind": "method",
      "methodName": "getElementsByTagNameNS",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollection akasha.Element::getElementsByTagNameNS(java.lang.String, java.lang.String)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.Element",
      "classSimpleName": "Element",
      "elementKind": "method",
      "methodName": "getElementsByTagNameNS",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.HTMLCollectionOrElementUnion akasha.HTMLAllCollection::namedItem(java.lang.String)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLAllCollection",
      "classSimpleName": "HTMLAllCollection",
      "elementKind": "method",
      "methodName": "namedItem",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.ImageData akasha.CanvasRenderingContext2D::createImageData(akasha.ImageData)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.CanvasRenderingContext2D",
      "classSimpleName": "CanvasRenderingContext2D",
      "elementKind": "method",
      "methodName": "createImageData",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.ImageData akasha.CanvasRenderingContext2D::createImageData(int, int)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.CanvasRenderingContext2D",
      "classSimpleName": "CanvasRenderingContext2D",
      "elementKind": "method",
      "methodName": "createImageData",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.ImageData akasha.OffscreenCanvasRenderingContext2D::createImageData(akasha.ImageData)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.OffscreenCanvasRenderingContext2D",
      "classSimpleName": "OffscreenCanvasRenderingContext2D",
      "elementKind": "method",
      "methodName": "createImageData",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.ImageData akasha.OffscreenCanvasRenderingContext2D::createImageData(int, int)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.OffscreenCanvasRenderingContext2D",
      "classSimpleName": "OffscreenCanvasRenderingContext2D",
      "elementKind": "method",
      "methodName": "createImageData",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Node akasha.Node::cloneNode() @ akasha.Attr",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.Attr",
      "classSimpleName": "Attr",
      "elementKind": "method",
      "methodName": "cloneNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Node akasha.Node::cloneNode() @ akasha.Audio",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.Audio",
      "classSimpleName": "Audio",
      "elementKind": "method",
      "methodName": "cloneNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Node akasha.Node::cloneNode() @ akasha.CDATASection",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.CDATASection",
      "classSimpleName": "CDATASection",
      "elementKind": "method",
      "methodName": "cloneNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Node akasha.Node::cloneNode() @ akasha.CharacterData",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.CharacterData",
      "classSimpleName": "CharacterData",
      "elementKind": "method",
      "methodName": "cloneNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Node akasha.Node::cloneNode() @ akasha.Comment",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.Comment",
      "classSimpleName": "Comment",
      "elementKind": "method",
      "methodName": "cloneNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Node akasha.Node::cloneNode() @ akasha.Document",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.Document",
      "classSimpleName": "Document",
      "elementKind": "method",
      "methodName": "cloneNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Node akasha.Node::cloneNode() @ akasha.DocumentFragment",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.DocumentFragment",
      "classSimpleName": "DocumentFragment",
      "elementKind": "method",
      "methodName": "cloneNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Node akasha.Node::cloneNode() @ akasha.DocumentType",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.DocumentType",
      "classSimpleName": "DocumentType",
      "elementKind": "method",
      "methodName": "cloneNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Node akasha.Node::cloneNode() @ akasha.Element",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.Element",
      "classSimpleName": "Element",
      "elementKind": "method",
      "methodName": "cloneNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Node akasha.Node::cloneNode() @ akasha.HTMLAnchorElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLAnchorElement",
      "classSimpleName": "HTMLAnchorElement",
      "elementKind": "method",
      "methodName": "cloneNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Node akasha.Node::cloneNode() @ akasha.HTMLAreaElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLAreaElement",
      "classSimpleName": "HTMLAreaElement",
      "elementKind": "method",
      "methodName": "cloneNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Node akasha.Node::cloneNode() @ akasha.HTMLAudioElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLAudioElement",
      "classSimpleName": "HTMLAudioElement",
      "elementKind": "method",
      "methodName": "cloneNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Node akasha.Node::cloneNode() @ akasha.HTMLBRElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLBRElement",
      "classSimpleName": "HTMLBRElement",
      "elementKind": "method",
      "methodName": "cloneNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Node akasha.Node::cloneNode() @ akasha.HTMLBaseElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLBaseElement",
      "classSimpleName": "HTMLBaseElement",
      "elementKind": "method",
      "methodName": "cloneNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Node akasha.Node::cloneNode() @ akasha.HTMLBodyElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLBodyElement",
      "classSimpleName": "HTMLBodyElement",
      "elementKind": "method",
      "methodName": "cloneNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Node akasha.Node::cloneNode() @ akasha.HTMLButtonElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLButtonElement",
      "classSimpleName": "HTMLButtonElement",
      "elementKind": "method",
      "methodName": "cloneNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Node akasha.Node::cloneNode() @ akasha.HTMLCanvasElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLCanvasElement",
      "classSimpleName": "HTMLCanvasElement",
      "elementKind": "method",
      "methodName": "cloneNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Node akasha.Node::cloneNode() @ akasha.HTMLDListElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLDListElement",
      "classSimpleName": "HTMLDListElement",
      "elementKind": "method",
      "methodName": "cloneNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Node akasha.Node::cloneNode() @ akasha.HTMLDataElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLDataElement",
      "classSimpleName": "HTMLDataElement",
      "elementKind": "method",
      "methodName": "cloneNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Node akasha.Node::cloneNode() @ akasha.HTMLDataListElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLDataListElement",
      "classSimpleName": "HTMLDataListElement",
      "elementKind": "method",
      "methodName": "cloneNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Node akasha.Node::cloneNode() @ akasha.HTMLDetailsElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLDetailsElement",
      "classSimpleName": "HTMLDetailsElement",
      "elementKind": "method",
      "methodName": "cloneNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Node akasha.Node::cloneNode() @ akasha.HTMLDialogElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLDialogElement",
      "classSimpleName": "HTMLDialogElement",
      "elementKind": "method",
      "methodName": "cloneNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Node akasha.Node::cloneNode() @ akasha.HTMLDirectoryElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLDirectoryElement",
      "classSimpleName": "HTMLDirectoryElement",
      "elementKind": "method",
      "methodName": "cloneNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Node akasha.Node::cloneNode() @ akasha.HTMLDivElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLDivElement",
      "classSimpleName": "HTMLDivElement",
      "elementKind": "method",
      "methodName": "cloneNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Node akasha.Node::cloneNode() @ akasha.HTMLElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLElement",
      "classSimpleName": "HTMLElement",
      "elementKind": "method",
      "methodName": "cloneNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Node akasha.Node::cloneNode() @ akasha.HTMLEmbedElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLEmbedElement",
      "classSimpleName": "HTMLEmbedElement",
      "elementKind": "method",
      "methodName": "cloneNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Node akasha.Node::cloneNode() @ akasha.HTMLFieldSetElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLFieldSetElement",
      "classSimpleName": "HTMLFieldSetElement",
      "elementKind": "method",
      "methodName": "cloneNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Node akasha.Node::cloneNode() @ akasha.HTMLFontElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLFontElement",
      "classSimpleName": "HTMLFontElement",
      "elementKind": "method",
      "methodName": "cloneNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Node akasha.Node::cloneNode() @ akasha.HTMLFormElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLFormElement",
      "classSimpleName": "HTMLFormElement",
      "elementKind": "method",
      "methodName": "cloneNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Node akasha.Node::cloneNode() @ akasha.HTMLFrameElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLFrameElement",
      "classSimpleName": "HTMLFrameElement",
      "elementKind": "method",
      "methodName": "cloneNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Node akasha.Node::cloneNode() @ akasha.HTMLFrameSetElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLFrameSetElement",
      "classSimpleName": "HTMLFrameSetElement",
      "elementKind": "method",
      "methodName": "cloneNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Node akasha.Node::cloneNode() @ akasha.HTMLHRElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLHRElement",
      "classSimpleName": "HTMLHRElement",
      "elementKind": "method",
      "methodName": "cloneNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Node akasha.Node::cloneNode() @ akasha.HTMLHeadElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLHeadElement",
      "classSimpleName": "HTMLHeadElement",
      "elementKind": "method",
      "methodName": "cloneNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Node akasha.Node::cloneNode() @ akasha.HTMLHeadingElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLHeadingElement",
      "classSimpleName": "HTMLHeadingElement",
      "elementKind": "method",
      "methodName": "cloneNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Node akasha.Node::cloneNode() @ akasha.HTMLHtmlElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLHtmlElement",
      "classSimpleName": "HTMLHtmlElement",
      "elementKind": "method",
      "methodName": "cloneNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Node akasha.Node::cloneNode() @ akasha.HTMLIFrameElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLIFrameElement",
      "classSimpleName": "HTMLIFrameElement",
      "elementKind": "method",
      "methodName": "cloneNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Node akasha.Node::cloneNode() @ akasha.HTMLImageElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLImageElement",
      "classSimpleName": "HTMLImageElement",
      "elementKind": "method",
      "methodName": "cloneNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Node akasha.Node::cloneNode() @ akasha.HTMLInputElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLInputElement",
      "classSimpleName": "HTMLInputElement",
      "elementKind": "method",
      "methodName": "cloneNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Node akasha.Node::cloneNode() @ akasha.HTMLLIElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLLIElement",
      "classSimpleName": "HTMLLIElement",
      "elementKind": "method",
      "methodName": "cloneNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Node akasha.Node::cloneNode() @ akasha.HTMLLabelElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLLabelElement",
      "classSimpleName": "HTMLLabelElement",
      "elementKind": "method",
      "methodName": "cloneNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Node akasha.Node::cloneNode() @ akasha.HTMLLegendElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLLegendElement",
      "classSimpleName": "HTMLLegendElement",
      "elementKind": "method",
      "methodName": "cloneNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Node akasha.Node::cloneNode() @ akasha.HTMLLinkElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLLinkElement",
      "classSimpleName": "HTMLLinkElement",
      "elementKind": "method",
      "methodName": "cloneNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Node akasha.Node::cloneNode() @ akasha.HTMLMapElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLMapElement",
      "classSimpleName": "HTMLMapElement",
      "elementKind": "method",
      "methodName": "cloneNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Node akasha.Node::cloneNode() @ akasha.HTMLMarqueeElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLMarqueeElement",
      "classSimpleName": "HTMLMarqueeElement",
      "elementKind": "method",
      "methodName": "cloneNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Node akasha.Node::cloneNode() @ akasha.HTMLMediaElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLMediaElement",
      "classSimpleName": "HTMLMediaElement",
      "elementKind": "method",
      "methodName": "cloneNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Node akasha.Node::cloneNode() @ akasha.HTMLMenuElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLMenuElement",
      "classSimpleName": "HTMLMenuElement",
      "elementKind": "method",
      "methodName": "cloneNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Node akasha.Node::cloneNode() @ akasha.HTMLMetaElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLMetaElement",
      "classSimpleName": "HTMLMetaElement",
      "elementKind": "method",
      "methodName": "cloneNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Node akasha.Node::cloneNode() @ akasha.HTMLMeterElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLMeterElement",
      "classSimpleName": "HTMLMeterElement",
      "elementKind": "method",
      "methodName": "cloneNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Node akasha.Node::cloneNode() @ akasha.HTMLModElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLModElement",
      "classSimpleName": "HTMLModElement",
      "elementKind": "method",
      "methodName": "cloneNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Node akasha.Node::cloneNode() @ akasha.HTMLOListElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLOListElement",
      "classSimpleName": "HTMLOListElement",
      "elementKind": "method",
      "methodName": "cloneNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Node akasha.Node::cloneNode() @ akasha.HTMLObjectElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLObjectElement",
      "classSimpleName": "HTMLObjectElement",
      "elementKind": "method",
      "methodName": "cloneNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Node akasha.Node::cloneNode() @ akasha.HTMLOptGroupElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLOptGroupElement",
      "classSimpleName": "HTMLOptGroupElement",
      "elementKind": "method",
      "methodName": "cloneNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Node akasha.Node::cloneNode() @ akasha.HTMLOptionElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLOptionElement",
      "classSimpleName": "HTMLOptionElement",
      "elementKind": "method",
      "methodName": "cloneNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Node akasha.Node::cloneNode() @ akasha.HTMLOutputElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLOutputElement",
      "classSimpleName": "HTMLOutputElement",
      "elementKind": "method",
      "methodName": "cloneNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Node akasha.Node::cloneNode() @ akasha.HTMLParagraphElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLParagraphElement",
      "classSimpleName": "HTMLParagraphElement",
      "elementKind": "method",
      "methodName": "cloneNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Node akasha.Node::cloneNode() @ akasha.HTMLParamElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLParamElement",
      "classSimpleName": "HTMLParamElement",
      "elementKind": "method",
      "methodName": "cloneNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Node akasha.Node::cloneNode() @ akasha.HTMLPictureElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLPictureElement",
      "classSimpleName": "HTMLPictureElement",
      "elementKind": "method",
      "methodName": "cloneNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Node akasha.Node::cloneNode() @ akasha.HTMLPreElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLPreElement",
      "classSimpleName": "HTMLPreElement",
      "elementKind": "method",
      "methodName": "cloneNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Node akasha.Node::cloneNode() @ akasha.HTMLProgressElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLProgressElement",
      "classSimpleName": "HTMLProgressElement",
      "elementKind": "method",
      "methodName": "cloneNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Node akasha.Node::cloneNode() @ akasha.HTMLQuoteElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLQuoteElement",
      "classSimpleName": "HTMLQuoteElement",
      "elementKind": "method",
      "methodName": "cloneNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Node akasha.Node::cloneNode() @ akasha.HTMLScriptElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLScriptElement",
      "classSimpleName": "HTMLScriptElement",
      "elementKind": "method",
      "methodName": "cloneNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Node akasha.Node::cloneNode() @ akasha.HTMLSelectElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLSelectElement",
      "classSimpleName": "HTMLSelectElement",
      "elementKind": "method",
      "methodName": "cloneNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Node akasha.Node::cloneNode() @ akasha.HTMLSlotElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLSlotElement",
      "classSimpleName": "HTMLSlotElement",
      "elementKind": "method",
      "methodName": "cloneNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Node akasha.Node::cloneNode() @ akasha.HTMLSourceElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLSourceElement",
      "classSimpleName": "HTMLSourceElement",
      "elementKind": "method",
      "methodName": "cloneNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Node akasha.Node::cloneNode() @ akasha.HTMLSpanElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLSpanElement",
      "classSimpleName": "HTMLSpanElement",
      "elementKind": "method",
      "methodName": "cloneNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Node akasha.Node::cloneNode() @ akasha.HTMLStyleElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLStyleElement",
      "classSimpleName": "HTMLStyleElement",
      "elementKind": "method",
      "methodName": "cloneNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Node akasha.Node::cloneNode() @ akasha.HTMLTableCaptionElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLTableCaptionElement",
      "classSimpleName": "HTMLTableCaptionElement",
      "elementKind": "method",
      "methodName": "cloneNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Node akasha.Node::cloneNode() @ akasha.HTMLTableCellElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLTableCellElement",
      "classSimpleName": "HTMLTableCellElement",
      "elementKind": "method",
      "methodName": "cloneNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Node akasha.Node::cloneNode() @ akasha.HTMLTableColElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLTableColElement",
      "classSimpleName": "HTMLTableColElement",
      "elementKind": "method",
      "methodName": "cloneNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Node akasha.Node::cloneNode() @ akasha.HTMLTableElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLTableElement",
      "classSimpleName": "HTMLTableElement",
      "elementKind": "method",
      "methodName": "cloneNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Node akasha.Node::cloneNode() @ akasha.HTMLTableRowElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLTableRowElement",
      "classSimpleName": "HTMLTableRowElement",
      "elementKind": "method",
      "methodName": "cloneNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Node akasha.Node::cloneNode() @ akasha.HTMLTableSectionElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLTableSectionElement",
      "classSimpleName": "HTMLTableSectionElement",
      "elementKind": "method",
      "methodName": "cloneNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Node akasha.Node::cloneNode() @ akasha.HTMLTemplateElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLTemplateElement",
      "classSimpleName": "HTMLTemplateElement",
      "elementKind": "method",
      "methodName": "cloneNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Node akasha.Node::cloneNode() @ akasha.HTMLTextAreaElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLTextAreaElement",
      "classSimpleName": "HTMLTextAreaElement",
      "elementKind": "method",
      "methodName": "cloneNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Node akasha.Node::cloneNode() @ akasha.HTMLTimeElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLTimeElement",
      "classSimpleName": "HTMLTimeElement",
      "elementKind": "method",
      "methodName": "cloneNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Node akasha.Node::cloneNode() @ akasha.HTMLTitleElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLTitleElement",
      "classSimpleName": "HTMLTitleElement",
      "elementKind": "method",
      "methodName": "cloneNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Node akasha.Node::cloneNode() @ akasha.HTMLTrackElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLTrackElement",
      "classSimpleName": "HTMLTrackElement",
      "elementKind": "method",
      "methodName": "cloneNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Node akasha.Node::cloneNode() @ akasha.HTMLUListElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLUListElement",
      "classSimpleName": "HTMLUListElement",
      "elementKind": "method",
      "methodName": "cloneNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Node akasha.Node::cloneNode() @ akasha.HTMLUnknownElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLUnknownElement",
      "classSimpleName": "HTMLUnknownElement",
      "elementKind": "method",
      "methodName": "cloneNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Node akasha.Node::cloneNode() @ akasha.HTMLVideoElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLVideoElement",
      "classSimpleName": "HTMLVideoElement",
      "elementKind": "method",
      "methodName": "cloneNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Node akasha.Node::cloneNode() @ akasha.Image",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.Image",
      "classSimpleName": "Image",
      "elementKind": "method",
      "methodName": "cloneNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Node akasha.Node::cloneNode() @ akasha.Option",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.Option",
      "classSimpleName": "Option",
      "elementKind": "method",
      "methodName": "cloneNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Node akasha.Node::cloneNode() @ akasha.ProcessingInstruction",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.ProcessingInstruction",
      "classSimpleName": "ProcessingInstruction",
      "elementKind": "method",
      "methodName": "cloneNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Node akasha.Node::cloneNode() @ akasha.ShadowRoot",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.ShadowRoot",
      "classSimpleName": "ShadowRoot",
      "elementKind": "method",
      "methodName": "cloneNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Node akasha.Node::cloneNode() @ akasha.Text",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.Text",
      "classSimpleName": "Text",
      "elementKind": "method",
      "methodName": "cloneNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Node akasha.Node::cloneNode() @ akasha.XMLDocument",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.XMLDocument",
      "classSimpleName": "XMLDocument",
      "elementKind": "method",
      "methodName": "cloneNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Node akasha.Node::cloneNode() @ akasha.svg.SVGAElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGAElement",
      "classSimpleName": "SVGAElement",
      "elementKind": "method",
      "methodName": "cloneNode",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Node akasha.Node::cloneNode() @ akasha.svg.SVGCircleElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGCircleElement",
      "classSimpleName": "SVGCircleElement",
      "elementKind": "method",
      "methodName": "cloneNode",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Node akasha.Node::cloneNode() @ akasha.svg.SVGClipPathElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGClipPathElement",
      "classSimpleName": "SVGClipPathElement",
      "elementKind": "method",
      "methodName": "cloneNode",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Node akasha.Node::cloneNode() @ akasha.svg.SVGComponentTransferFunctionElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGComponentTransferFunctionElement",
      "classSimpleName": "SVGComponentTransferFunctionElement",
      "elementKind": "method",
      "methodName": "cloneNode",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Node akasha.Node::cloneNode() @ akasha.svg.SVGDefsElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGDefsElement",
      "classSimpleName": "SVGDefsElement",
      "elementKind": "method",
      "methodName": "cloneNode",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Node akasha.Node::cloneNode() @ akasha.svg.SVGDescElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGDescElement",
      "classSimpleName": "SVGDescElement",
      "elementKind": "method",
      "methodName": "cloneNode",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Node akasha.Node::cloneNode() @ akasha.svg.SVGElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGElement",
      "classSimpleName": "SVGElement",
      "elementKind": "method",
      "methodName": "cloneNode",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Node akasha.Node::cloneNode() @ akasha.svg.SVGEllipseElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGEllipseElement",
      "classSimpleName": "SVGEllipseElement",
      "elementKind": "method",
      "methodName": "cloneNode",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Node akasha.Node::cloneNode() @ akasha.svg.SVGFEBlendElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEBlendElement",
      "classSimpleName": "SVGFEBlendElement",
      "elementKind": "method",
      "methodName": "cloneNode",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Node akasha.Node::cloneNode() @ akasha.svg.SVGFEColorMatrixElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEColorMatrixElement",
      "classSimpleName": "SVGFEColorMatrixElement",
      "elementKind": "method",
      "methodName": "cloneNode",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Node akasha.Node::cloneNode() @ akasha.svg.SVGFEComponentTransferElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEComponentTransferElement",
      "classSimpleName": "SVGFEComponentTransferElement",
      "elementKind": "method",
      "methodName": "cloneNode",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Node akasha.Node::cloneNode() @ akasha.svg.SVGFECompositeElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFECompositeElement",
      "classSimpleName": "SVGFECompositeElement",
      "elementKind": "method",
      "methodName": "cloneNode",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Node akasha.Node::cloneNode() @ akasha.svg.SVGFEConvolveMatrixElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEConvolveMatrixElement",
      "classSimpleName": "SVGFEConvolveMatrixElement",
      "elementKind": "method",
      "methodName": "cloneNode",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Node akasha.Node::cloneNode() @ akasha.svg.SVGFEDiffuseLightingElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEDiffuseLightingElement",
      "classSimpleName": "SVGFEDiffuseLightingElement",
      "elementKind": "method",
      "methodName": "cloneNode",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Node akasha.Node::cloneNode() @ akasha.svg.SVGFEDisplacementMapElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEDisplacementMapElement",
      "classSimpleName": "SVGFEDisplacementMapElement",
      "elementKind": "method",
      "methodName": "cloneNode",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Node akasha.Node::cloneNode() @ akasha.svg.SVGFEDistantLightElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEDistantLightElement",
      "classSimpleName": "SVGFEDistantLightElement",
      "elementKind": "method",
      "methodName": "cloneNode",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Node akasha.Node::cloneNode() @ akasha.svg.SVGFEDropShadowElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEDropShadowElement",
      "classSimpleName": "SVGFEDropShadowElement",
      "elementKind": "method",
      "methodName": "cloneNode",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Node akasha.Node::cloneNode() @ akasha.svg.SVGFEFloodElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEFloodElement",
      "classSimpleName": "SVGFEFloodElement",
      "elementKind": "method",
      "methodName": "cloneNode",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Node akasha.Node::cloneNode() @ akasha.svg.SVGFEFuncAElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEFuncAElement",
      "classSimpleName": "SVGFEFuncAElement",
      "elementKind": "method",
      "methodName": "cloneNode",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Node akasha.Node::cloneNode() @ akasha.svg.SVGFEFuncBElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEFuncBElement",
      "classSimpleName": "SVGFEFuncBElement",
      "elementKind": "method",
      "methodName": "cloneNode",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Node akasha.Node::cloneNode() @ akasha.svg.SVGFEFuncGElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEFuncGElement",
      "classSimpleName": "SVGFEFuncGElement",
      "elementKind": "method",
      "methodName": "cloneNode",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Node akasha.Node::cloneNode() @ akasha.svg.SVGFEFuncRElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEFuncRElement",
      "classSimpleName": "SVGFEFuncRElement",
      "elementKind": "method",
      "methodName": "cloneNode",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Node akasha.Node::cloneNode() @ akasha.svg.SVGFEGaussianBlurElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEGaussianBlurElement",
      "classSimpleName": "SVGFEGaussianBlurElement",
      "elementKind": "method",
      "methodName": "cloneNode",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Node akasha.Node::cloneNode() @ akasha.svg.SVGFEImageElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEImageElement",
      "classSimpleName": "SVGFEImageElement",
      "elementKind": "method",
      "methodName": "cloneNode",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Node akasha.Node::cloneNode() @ akasha.svg.SVGFEMergeElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEMergeElement",
      "classSimpleName": "SVGFEMergeElement",
      "elementKind": "method",
      "methodName": "cloneNode",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Node akasha.Node::cloneNode() @ akasha.svg.SVGFEMergeNodeElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEMergeNodeElement",
      "classSimpleName": "SVGFEMergeNodeElement",
      "elementKind": "method",
      "methodName": "cloneNode",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Node akasha.Node::cloneNode() @ akasha.svg.SVGFEMorphologyElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEMorphologyElement",
      "classSimpleName": "SVGFEMorphologyElement",
      "elementKind": "method",
      "methodName": "cloneNode",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Node akasha.Node::cloneNode() @ akasha.svg.SVGFEOffsetElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEOffsetElement",
      "classSimpleName": "SVGFEOffsetElement",
      "elementKind": "method",
      "methodName": "cloneNode",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Node akasha.Node::cloneNode() @ akasha.svg.SVGFEPointLightElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEPointLightElement",
      "classSimpleName": "SVGFEPointLightElement",
      "elementKind": "method",
      "methodName": "cloneNode",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Node akasha.Node::cloneNode() @ akasha.svg.SVGFESpecularLightingElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFESpecularLightingElement",
      "classSimpleName": "SVGFESpecularLightingElement",
      "elementKind": "method",
      "methodName": "cloneNode",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Node akasha.Node::cloneNode() @ akasha.svg.SVGFESpotLightElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFESpotLightElement",
      "classSimpleName": "SVGFESpotLightElement",
      "elementKind": "method",
      "methodName": "cloneNode",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Node akasha.Node::cloneNode() @ akasha.svg.SVGFETileElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFETileElement",
      "classSimpleName": "SVGFETileElement",
      "elementKind": "method",
      "methodName": "cloneNode",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Node akasha.Node::cloneNode() @ akasha.svg.SVGFETurbulenceElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFETurbulenceElement",
      "classSimpleName": "SVGFETurbulenceElement",
      "elementKind": "method",
      "methodName": "cloneNode",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Node akasha.Node::cloneNode() @ akasha.svg.SVGFilterElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFilterElement",
      "classSimpleName": "SVGFilterElement",
      "elementKind": "method",
      "methodName": "cloneNode",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Node akasha.Node::cloneNode() @ akasha.svg.SVGForeignObjectElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGForeignObjectElement",
      "classSimpleName": "SVGForeignObjectElement",
      "elementKind": "method",
      "methodName": "cloneNode",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Node akasha.Node::cloneNode() @ akasha.svg.SVGGElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGGElement",
      "classSimpleName": "SVGGElement",
      "elementKind": "method",
      "methodName": "cloneNode",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Node akasha.Node::cloneNode() @ akasha.svg.SVGGeometryElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGGeometryElement",
      "classSimpleName": "SVGGeometryElement",
      "elementKind": "method",
      "methodName": "cloneNode",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Node akasha.Node::cloneNode() @ akasha.svg.SVGGradientElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGGradientElement",
      "classSimpleName": "SVGGradientElement",
      "elementKind": "method",
      "methodName": "cloneNode",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Node akasha.Node::cloneNode() @ akasha.svg.SVGGraphicsElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGGraphicsElement",
      "classSimpleName": "SVGGraphicsElement",
      "elementKind": "method",
      "methodName": "cloneNode",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Node akasha.Node::cloneNode() @ akasha.svg.SVGImageElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGImageElement",
      "classSimpleName": "SVGImageElement",
      "elementKind": "method",
      "methodName": "cloneNode",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Node akasha.Node::cloneNode() @ akasha.svg.SVGLineElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGLineElement",
      "classSimpleName": "SVGLineElement",
      "elementKind": "method",
      "methodName": "cloneNode",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Node akasha.Node::cloneNode() @ akasha.svg.SVGLinearGradientElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGLinearGradientElement",
      "classSimpleName": "SVGLinearGradientElement",
      "elementKind": "method",
      "methodName": "cloneNode",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Node akasha.Node::cloneNode() @ akasha.svg.SVGMarkerElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGMarkerElement",
      "classSimpleName": "SVGMarkerElement",
      "elementKind": "method",
      "methodName": "cloneNode",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Node akasha.Node::cloneNode() @ akasha.svg.SVGMaskElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGMaskElement",
      "classSimpleName": "SVGMaskElement",
      "elementKind": "method",
      "methodName": "cloneNode",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Node akasha.Node::cloneNode() @ akasha.svg.SVGMetadataElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGMetadataElement",
      "classSimpleName": "SVGMetadataElement",
      "elementKind": "method",
      "methodName": "cloneNode",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Node akasha.Node::cloneNode() @ akasha.svg.SVGPathElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGPathElement",
      "classSimpleName": "SVGPathElement",
      "elementKind": "method",
      "methodName": "cloneNode",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Node akasha.Node::cloneNode() @ akasha.svg.SVGPatternElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGPatternElement",
      "classSimpleName": "SVGPatternElement",
      "elementKind": "method",
      "methodName": "cloneNode",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Node akasha.Node::cloneNode() @ akasha.svg.SVGPolygonElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGPolygonElement",
      "classSimpleName": "SVGPolygonElement",
      "elementKind": "method",
      "methodName": "cloneNode",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Node akasha.Node::cloneNode() @ akasha.svg.SVGPolylineElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGPolylineElement",
      "classSimpleName": "SVGPolylineElement",
      "elementKind": "method",
      "methodName": "cloneNode",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Node akasha.Node::cloneNode() @ akasha.svg.SVGRadialGradientElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGRadialGradientElement",
      "classSimpleName": "SVGRadialGradientElement",
      "elementKind": "method",
      "methodName": "cloneNode",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Node akasha.Node::cloneNode() @ akasha.svg.SVGRectElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGRectElement",
      "classSimpleName": "SVGRectElement",
      "elementKind": "method",
      "methodName": "cloneNode",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Node akasha.Node::cloneNode() @ akasha.svg.SVGSVGElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGSVGElement",
      "classSimpleName": "SVGSVGElement",
      "elementKind": "method",
      "methodName": "cloneNode",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Node akasha.Node::cloneNode() @ akasha.svg.SVGScriptElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGScriptElement",
      "classSimpleName": "SVGScriptElement",
      "elementKind": "method",
      "methodName": "cloneNode",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Node akasha.Node::cloneNode() @ akasha.svg.SVGStopElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGStopElement",
      "classSimpleName": "SVGStopElement",
      "elementKind": "method",
      "methodName": "cloneNode",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Node akasha.Node::cloneNode() @ akasha.svg.SVGStyleElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGStyleElement",
      "classSimpleName": "SVGStyleElement",
      "elementKind": "method",
      "methodName": "cloneNode",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Node akasha.Node::cloneNode() @ akasha.svg.SVGSwitchElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGSwitchElement",
      "classSimpleName": "SVGSwitchElement",
      "elementKind": "method",
      "methodName": "cloneNode",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Node akasha.Node::cloneNode() @ akasha.svg.SVGSymbolElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGSymbolElement",
      "classSimpleName": "SVGSymbolElement",
      "elementKind": "method",
      "methodName": "cloneNode",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Node akasha.Node::cloneNode() @ akasha.svg.SVGTSpanElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGTSpanElement",
      "classSimpleName": "SVGTSpanElement",
      "elementKind": "method",
      "methodName": "cloneNode",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Node akasha.Node::cloneNode() @ akasha.svg.SVGTextContentElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGTextContentElement",
      "classSimpleName": "SVGTextContentElement",
      "elementKind": "method",
      "methodName": "cloneNode",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Node akasha.Node::cloneNode() @ akasha.svg.SVGTextElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGTextElement",
      "classSimpleName": "SVGTextElement",
      "elementKind": "method",
      "methodName": "cloneNode",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Node akasha.Node::cloneNode() @ akasha.svg.SVGTextPathElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGTextPathElement",
      "classSimpleName": "SVGTextPathElement",
      "elementKind": "method",
      "methodName": "cloneNode",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Node akasha.Node::cloneNode() @ akasha.svg.SVGTextPositioningElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGTextPositioningElement",
      "classSimpleName": "SVGTextPositioningElement",
      "elementKind": "method",
      "methodName": "cloneNode",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Node akasha.Node::cloneNode() @ akasha.svg.SVGTitleElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGTitleElement",
      "classSimpleName": "SVGTitleElement",
      "elementKind": "method",
      "methodName": "cloneNode",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Node akasha.Node::cloneNode() @ akasha.svg.SVGUnknownElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGUnknownElement",
      "classSimpleName": "SVGUnknownElement",
      "elementKind": "method",
      "methodName": "cloneNode",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Node akasha.Node::cloneNode() @ akasha.svg.SVGUseElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGUseElement",
      "classSimpleName": "SVGUseElement",
      "elementKind": "method",
      "methodName": "cloneNode",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Node akasha.Node::cloneNode() @ akasha.svg.SVGUseElementShadowRoot",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGUseElementShadowRoot",
      "classSimpleName": "SVGUseElementShadowRoot",
      "elementKind": "method",
      "methodName": "cloneNode",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Node akasha.Node::cloneNode() @ akasha.svg.SVGViewElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGViewElement",
      "classSimpleName": "SVGViewElement",
      "elementKind": "method",
      "methodName": "cloneNode",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Node akasha.Node::cloneNode()",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.Node",
      "classSimpleName": "Node",
      "elementKind": "method",
      "methodName": "cloneNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Node akasha.Node::cloneNode(boolean) @ akasha.Attr",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.Attr",
      "classSimpleName": "Attr",
      "elementKind": "method",
      "methodName": "cloneNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Node akasha.Node::cloneNode(boolean) @ akasha.Audio",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.Audio",
      "classSimpleName": "Audio",
      "elementKind": "method",
      "methodName": "cloneNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Node akasha.Node::cloneNode(boolean) @ akasha.CDATASection",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.CDATASection",
      "classSimpleName": "CDATASection",
      "elementKind": "method",
      "methodName": "cloneNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Node akasha.Node::cloneNode(boolean) @ akasha.CharacterData",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.CharacterData",
      "classSimpleName": "CharacterData",
      "elementKind": "method",
      "methodName": "cloneNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Node akasha.Node::cloneNode(boolean) @ akasha.Comment",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.Comment",
      "classSimpleName": "Comment",
      "elementKind": "method",
      "methodName": "cloneNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Node akasha.Node::cloneNode(boolean) @ akasha.Document",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.Document",
      "classSimpleName": "Document",
      "elementKind": "method",
      "methodName": "cloneNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Node akasha.Node::cloneNode(boolean) @ akasha.DocumentFragment",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.DocumentFragment",
      "classSimpleName": "DocumentFragment",
      "elementKind": "method",
      "methodName": "cloneNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Node akasha.Node::cloneNode(boolean) @ akasha.DocumentType",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.DocumentType",
      "classSimpleName": "DocumentType",
      "elementKind": "method",
      "methodName": "cloneNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Node akasha.Node::cloneNode(boolean) @ akasha.Element",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.Element",
      "classSimpleName": "Element",
      "elementKind": "method",
      "methodName": "cloneNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Node akasha.Node::cloneNode(boolean) @ akasha.HTMLAnchorElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLAnchorElement",
      "classSimpleName": "HTMLAnchorElement",
      "elementKind": "method",
      "methodName": "cloneNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Node akasha.Node::cloneNode(boolean) @ akasha.HTMLAreaElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLAreaElement",
      "classSimpleName": "HTMLAreaElement",
      "elementKind": "method",
      "methodName": "cloneNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Node akasha.Node::cloneNode(boolean) @ akasha.HTMLAudioElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLAudioElement",
      "classSimpleName": "HTMLAudioElement",
      "elementKind": "method",
      "methodName": "cloneNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Node akasha.Node::cloneNode(boolean) @ akasha.HTMLBRElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLBRElement",
      "classSimpleName": "HTMLBRElement",
      "elementKind": "method",
      "methodName": "cloneNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Node akasha.Node::cloneNode(boolean) @ akasha.HTMLBaseElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLBaseElement",
      "classSimpleName": "HTMLBaseElement",
      "elementKind": "method",
      "methodName": "cloneNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Node akasha.Node::cloneNode(boolean) @ akasha.HTMLBodyElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLBodyElement",
      "classSimpleName": "HTMLBodyElement",
      "elementKind": "method",
      "methodName": "cloneNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Node akasha.Node::cloneNode(boolean) @ akasha.HTMLButtonElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLButtonElement",
      "classSimpleName": "HTMLButtonElement",
      "elementKind": "method",
      "methodName": "cloneNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Node akasha.Node::cloneNode(boolean) @ akasha.HTMLCanvasElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLCanvasElement",
      "classSimpleName": "HTMLCanvasElement",
      "elementKind": "method",
      "methodName": "cloneNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Node akasha.Node::cloneNode(boolean) @ akasha.HTMLDListElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLDListElement",
      "classSimpleName": "HTMLDListElement",
      "elementKind": "method",
      "methodName": "cloneNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Node akasha.Node::cloneNode(boolean) @ akasha.HTMLDataElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLDataElement",
      "classSimpleName": "HTMLDataElement",
      "elementKind": "method",
      "methodName": "cloneNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Node akasha.Node::cloneNode(boolean) @ akasha.HTMLDataListElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLDataListElement",
      "classSimpleName": "HTMLDataListElement",
      "elementKind": "method",
      "methodName": "cloneNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Node akasha.Node::cloneNode(boolean) @ akasha.HTMLDetailsElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLDetailsElement",
      "classSimpleName": "HTMLDetailsElement",
      "elementKind": "method",
      "methodName": "cloneNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Node akasha.Node::cloneNode(boolean) @ akasha.HTMLDialogElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLDialogElement",
      "classSimpleName": "HTMLDialogElement",
      "elementKind": "method",
      "methodName": "cloneNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Node akasha.Node::cloneNode(boolean) @ akasha.HTMLDirectoryElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLDirectoryElement",
      "classSimpleName": "HTMLDirectoryElement",
      "elementKind": "method",
      "methodName": "cloneNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Node akasha.Node::cloneNode(boolean) @ akasha.HTMLDivElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLDivElement",
      "classSimpleName": "HTMLDivElement",
      "elementKind": "method",
      "methodName": "cloneNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Node akasha.Node::cloneNode(boolean) @ akasha.HTMLElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLElement",
      "classSimpleName": "HTMLElement",
      "elementKind": "method",
      "methodName": "cloneNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Node akasha.Node::cloneNode(boolean) @ akasha.HTMLEmbedElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLEmbedElement",
      "classSimpleName": "HTMLEmbedElement",
      "elementKind": "method",
      "methodName": "cloneNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Node akasha.Node::cloneNode(boolean) @ akasha.HTMLFieldSetElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLFieldSetElement",
      "classSimpleName": "HTMLFieldSetElement",
      "elementKind": "method",
      "methodName": "cloneNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Node akasha.Node::cloneNode(boolean) @ akasha.HTMLFontElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLFontElement",
      "classSimpleName": "HTMLFontElement",
      "elementKind": "method",
      "methodName": "cloneNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Node akasha.Node::cloneNode(boolean) @ akasha.HTMLFormElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLFormElement",
      "classSimpleName": "HTMLFormElement",
      "elementKind": "method",
      "methodName": "cloneNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Node akasha.Node::cloneNode(boolean) @ akasha.HTMLFrameElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLFrameElement",
      "classSimpleName": "HTMLFrameElement",
      "elementKind": "method",
      "methodName": "cloneNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Node akasha.Node::cloneNode(boolean) @ akasha.HTMLFrameSetElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLFrameSetElement",
      "classSimpleName": "HTMLFrameSetElement",
      "elementKind": "method",
      "methodName": "cloneNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Node akasha.Node::cloneNode(boolean) @ akasha.HTMLHRElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLHRElement",
      "classSimpleName": "HTMLHRElement",
      "elementKind": "method",
      "methodName": "cloneNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Node akasha.Node::cloneNode(boolean) @ akasha.HTMLHeadElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLHeadElement",
      "classSimpleName": "HTMLHeadElement",
      "elementKind": "method",
      "methodName": "cloneNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Node akasha.Node::cloneNode(boolean) @ akasha.HTMLHeadingElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLHeadingElement",
      "classSimpleName": "HTMLHeadingElement",
      "elementKind": "method",
      "methodName": "cloneNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Node akasha.Node::cloneNode(boolean) @ akasha.HTMLHtmlElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLHtmlElement",
      "classSimpleName": "HTMLHtmlElement",
      "elementKind": "method",
      "methodName": "cloneNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Node akasha.Node::cloneNode(boolean) @ akasha.HTMLIFrameElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLIFrameElement",
      "classSimpleName": "HTMLIFrameElement",
      "elementKind": "method",
      "methodName": "cloneNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Node akasha.Node::cloneNode(boolean) @ akasha.HTMLImageElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLImageElement",
      "classSimpleName": "HTMLImageElement",
      "elementKind": "method",
      "methodName": "cloneNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Node akasha.Node::cloneNode(boolean) @ akasha.HTMLInputElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLInputElement",
      "classSimpleName": "HTMLInputElement",
      "elementKind": "method",
      "methodName": "cloneNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Node akasha.Node::cloneNode(boolean) @ akasha.HTMLLIElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLLIElement",
      "classSimpleName": "HTMLLIElement",
      "elementKind": "method",
      "methodName": "cloneNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Node akasha.Node::cloneNode(boolean) @ akasha.HTMLLabelElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLLabelElement",
      "classSimpleName": "HTMLLabelElement",
      "elementKind": "method",
      "methodName": "cloneNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Node akasha.Node::cloneNode(boolean) @ akasha.HTMLLegendElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLLegendElement",
      "classSimpleName": "HTMLLegendElement",
      "elementKind": "method",
      "methodName": "cloneNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Node akasha.Node::cloneNode(boolean) @ akasha.HTMLLinkElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLLinkElement",
      "classSimpleName": "HTMLLinkElement",
      "elementKind": "method",
      "methodName": "cloneNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Node akasha.Node::cloneNode(boolean) @ akasha.HTMLMapElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLMapElement",
      "classSimpleName": "HTMLMapElement",
      "elementKind": "method",
      "methodName": "cloneNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Node akasha.Node::cloneNode(boolean) @ akasha.HTMLMarqueeElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLMarqueeElement",
      "classSimpleName": "HTMLMarqueeElement",
      "elementKind": "method",
      "methodName": "cloneNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Node akasha.Node::cloneNode(boolean) @ akasha.HTMLMediaElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLMediaElement",
      "classSimpleName": "HTMLMediaElement",
      "elementKind": "method",
      "methodName": "cloneNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Node akasha.Node::cloneNode(boolean) @ akasha.HTMLMenuElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLMenuElement",
      "classSimpleName": "HTMLMenuElement",
      "elementKind": "method",
      "methodName": "cloneNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Node akasha.Node::cloneNode(boolean) @ akasha.HTMLMetaElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLMetaElement",
      "classSimpleName": "HTMLMetaElement",
      "elementKind": "method",
      "methodName": "cloneNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Node akasha.Node::cloneNode(boolean) @ akasha.HTMLMeterElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLMeterElement",
      "classSimpleName": "HTMLMeterElement",
      "elementKind": "method",
      "methodName": "cloneNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Node akasha.Node::cloneNode(boolean) @ akasha.HTMLModElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLModElement",
      "classSimpleName": "HTMLModElement",
      "elementKind": "method",
      "methodName": "cloneNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Node akasha.Node::cloneNode(boolean) @ akasha.HTMLOListElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLOListElement",
      "classSimpleName": "HTMLOListElement",
      "elementKind": "method",
      "methodName": "cloneNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Node akasha.Node::cloneNode(boolean) @ akasha.HTMLObjectElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLObjectElement",
      "classSimpleName": "HTMLObjectElement",
      "elementKind": "method",
      "methodName": "cloneNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Node akasha.Node::cloneNode(boolean) @ akasha.HTMLOptGroupElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLOptGroupElement",
      "classSimpleName": "HTMLOptGroupElement",
      "elementKind": "method",
      "methodName": "cloneNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Node akasha.Node::cloneNode(boolean) @ akasha.HTMLOptionElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLOptionElement",
      "classSimpleName": "HTMLOptionElement",
      "elementKind": "method",
      "methodName": "cloneNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Node akasha.Node::cloneNode(boolean) @ akasha.HTMLOutputElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLOutputElement",
      "classSimpleName": "HTMLOutputElement",
      "elementKind": "method",
      "methodName": "cloneNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Node akasha.Node::cloneNode(boolean) @ akasha.HTMLParagraphElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLParagraphElement",
      "classSimpleName": "HTMLParagraphElement",
      "elementKind": "method",
      "methodName": "cloneNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Node akasha.Node::cloneNode(boolean) @ akasha.HTMLParamElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLParamElement",
      "classSimpleName": "HTMLParamElement",
      "elementKind": "method",
      "methodName": "cloneNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Node akasha.Node::cloneNode(boolean) @ akasha.HTMLPictureElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLPictureElement",
      "classSimpleName": "HTMLPictureElement",
      "elementKind": "method",
      "methodName": "cloneNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Node akasha.Node::cloneNode(boolean) @ akasha.HTMLPreElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLPreElement",
      "classSimpleName": "HTMLPreElement",
      "elementKind": "method",
      "methodName": "cloneNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Node akasha.Node::cloneNode(boolean) @ akasha.HTMLProgressElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLProgressElement",
      "classSimpleName": "HTMLProgressElement",
      "elementKind": "method",
      "methodName": "cloneNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Node akasha.Node::cloneNode(boolean) @ akasha.HTMLQuoteElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLQuoteElement",
      "classSimpleName": "HTMLQuoteElement",
      "elementKind": "method",
      "methodName": "cloneNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Node akasha.Node::cloneNode(boolean) @ akasha.HTMLScriptElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLScriptElement",
      "classSimpleName": "HTMLScriptElement",
      "elementKind": "method",
      "methodName": "cloneNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Node akasha.Node::cloneNode(boolean) @ akasha.HTMLSelectElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLSelectElement",
      "classSimpleName": "HTMLSelectElement",
      "elementKind": "method",
      "methodName": "cloneNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Node akasha.Node::cloneNode(boolean) @ akasha.HTMLSlotElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLSlotElement",
      "classSimpleName": "HTMLSlotElement",
      "elementKind": "method",
      "methodName": "cloneNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Node akasha.Node::cloneNode(boolean) @ akasha.HTMLSourceElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLSourceElement",
      "classSimpleName": "HTMLSourceElement",
      "elementKind": "method",
      "methodName": "cloneNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Node akasha.Node::cloneNode(boolean) @ akasha.HTMLSpanElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLSpanElement",
      "classSimpleName": "HTMLSpanElement",
      "elementKind": "method",
      "methodName": "cloneNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Node akasha.Node::cloneNode(boolean) @ akasha.HTMLStyleElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLStyleElement",
      "classSimpleName": "HTMLStyleElement",
      "elementKind": "method",
      "methodName": "cloneNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Node akasha.Node::cloneNode(boolean) @ akasha.HTMLTableCaptionElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLTableCaptionElement",
      "classSimpleName": "HTMLTableCaptionElement",
      "elementKind": "method",
      "methodName": "cloneNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Node akasha.Node::cloneNode(boolean) @ akasha.HTMLTableCellElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLTableCellElement",
      "classSimpleName": "HTMLTableCellElement",
      "elementKind": "method",
      "methodName": "cloneNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Node akasha.Node::cloneNode(boolean) @ akasha.HTMLTableColElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLTableColElement",
      "classSimpleName": "HTMLTableColElement",
      "elementKind": "method",
      "methodName": "cloneNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Node akasha.Node::cloneNode(boolean) @ akasha.HTMLTableElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLTableElement",
      "classSimpleName": "HTMLTableElement",
      "elementKind": "method",
      "methodName": "cloneNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Node akasha.Node::cloneNode(boolean) @ akasha.HTMLTableRowElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLTableRowElement",
      "classSimpleName": "HTMLTableRowElement",
      "elementKind": "method",
      "methodName": "cloneNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Node akasha.Node::cloneNode(boolean) @ akasha.HTMLTableSectionElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLTableSectionElement",
      "classSimpleName": "HTMLTableSectionElement",
      "elementKind": "method",
      "methodName": "cloneNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Node akasha.Node::cloneNode(boolean) @ akasha.HTMLTemplateElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLTemplateElement",
      "classSimpleName": "HTMLTemplateElement",
      "elementKind": "method",
      "methodName": "cloneNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Node akasha.Node::cloneNode(boolean) @ akasha.HTMLTextAreaElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLTextAreaElement",
      "classSimpleName": "HTMLTextAreaElement",
      "elementKind": "method",
      "methodName": "cloneNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Node akasha.Node::cloneNode(boolean) @ akasha.HTMLTimeElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLTimeElement",
      "classSimpleName": "HTMLTimeElement",
      "elementKind": "method",
      "methodName": "cloneNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Node akasha.Node::cloneNode(boolean) @ akasha.HTMLTitleElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLTitleElement",
      "classSimpleName": "HTMLTitleElement",
      "elementKind": "method",
      "methodName": "cloneNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Node akasha.Node::cloneNode(boolean) @ akasha.HTMLTrackElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLTrackElement",
      "classSimpleName": "HTMLTrackElement",
      "elementKind": "method",
      "methodName": "cloneNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Node akasha.Node::cloneNode(boolean) @ akasha.HTMLUListElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLUListElement",
      "classSimpleName": "HTMLUListElement",
      "elementKind": "method",
      "methodName": "cloneNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Node akasha.Node::cloneNode(boolean) @ akasha.HTMLUnknownElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLUnknownElement",
      "classSimpleName": "HTMLUnknownElement",
      "elementKind": "method",
      "methodName": "cloneNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Node akasha.Node::cloneNode(boolean) @ akasha.HTMLVideoElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLVideoElement",
      "classSimpleName": "HTMLVideoElement",
      "elementKind": "method",
      "methodName": "cloneNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Node akasha.Node::cloneNode(boolean) @ akasha.Image",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.Image",
      "classSimpleName": "Image",
      "elementKind": "method",
      "methodName": "cloneNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Node akasha.Node::cloneNode(boolean) @ akasha.Option",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.Option",
      "classSimpleName": "Option",
      "elementKind": "method",
      "methodName": "cloneNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Node akasha.Node::cloneNode(boolean) @ akasha.ProcessingInstruction",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.ProcessingInstruction",
      "classSimpleName": "ProcessingInstruction",
      "elementKind": "method",
      "methodName": "cloneNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Node akasha.Node::cloneNode(boolean) @ akasha.ShadowRoot",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.ShadowRoot",
      "classSimpleName": "ShadowRoot",
      "elementKind": "method",
      "methodName": "cloneNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Node akasha.Node::cloneNode(boolean) @ akasha.Text",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.Text",
      "classSimpleName": "Text",
      "elementKind": "method",
      "methodName": "cloneNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Node akasha.Node::cloneNode(boolean) @ akasha.XMLDocument",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.XMLDocument",
      "classSimpleName": "XMLDocument",
      "elementKind": "method",
      "methodName": "cloneNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Node akasha.Node::cloneNode(boolean) @ akasha.svg.SVGAElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGAElement",
      "classSimpleName": "SVGAElement",
      "elementKind": "method",
      "methodName": "cloneNode",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Node akasha.Node::cloneNode(boolean) @ akasha.svg.SVGCircleElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGCircleElement",
      "classSimpleName": "SVGCircleElement",
      "elementKind": "method",
      "methodName": "cloneNode",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Node akasha.Node::cloneNode(boolean) @ akasha.svg.SVGClipPathElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGClipPathElement",
      "classSimpleName": "SVGClipPathElement",
      "elementKind": "method",
      "methodName": "cloneNode",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Node akasha.Node::cloneNode(boolean) @ akasha.svg.SVGComponentTransferFunctionElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGComponentTransferFunctionElement",
      "classSimpleName": "SVGComponentTransferFunctionElement",
      "elementKind": "method",
      "methodName": "cloneNode",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Node akasha.Node::cloneNode(boolean) @ akasha.svg.SVGDefsElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGDefsElement",
      "classSimpleName": "SVGDefsElement",
      "elementKind": "method",
      "methodName": "cloneNode",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Node akasha.Node::cloneNode(boolean) @ akasha.svg.SVGDescElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGDescElement",
      "classSimpleName": "SVGDescElement",
      "elementKind": "method",
      "methodName": "cloneNode",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Node akasha.Node::cloneNode(boolean) @ akasha.svg.SVGElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGElement",
      "classSimpleName": "SVGElement",
      "elementKind": "method",
      "methodName": "cloneNode",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Node akasha.Node::cloneNode(boolean) @ akasha.svg.SVGEllipseElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGEllipseElement",
      "classSimpleName": "SVGEllipseElement",
      "elementKind": "method",
      "methodName": "cloneNode",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Node akasha.Node::cloneNode(boolean) @ akasha.svg.SVGFEBlendElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEBlendElement",
      "classSimpleName": "SVGFEBlendElement",
      "elementKind": "method",
      "methodName": "cloneNode",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Node akasha.Node::cloneNode(boolean) @ akasha.svg.SVGFEColorMatrixElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEColorMatrixElement",
      "classSimpleName": "SVGFEColorMatrixElement",
      "elementKind": "method",
      "methodName": "cloneNode",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Node akasha.Node::cloneNode(boolean) @ akasha.svg.SVGFEComponentTransferElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEComponentTransferElement",
      "classSimpleName": "SVGFEComponentTransferElement",
      "elementKind": "method",
      "methodName": "cloneNode",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Node akasha.Node::cloneNode(boolean) @ akasha.svg.SVGFECompositeElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFECompositeElement",
      "classSimpleName": "SVGFECompositeElement",
      "elementKind": "method",
      "methodName": "cloneNode",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Node akasha.Node::cloneNode(boolean) @ akasha.svg.SVGFEConvolveMatrixElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEConvolveMatrixElement",
      "classSimpleName": "SVGFEConvolveMatrixElement",
      "elementKind": "method",
      "methodName": "cloneNode",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Node akasha.Node::cloneNode(boolean) @ akasha.svg.SVGFEDiffuseLightingElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEDiffuseLightingElement",
      "classSimpleName": "SVGFEDiffuseLightingElement",
      "elementKind": "method",
      "methodName": "cloneNode",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Node akasha.Node::cloneNode(boolean) @ akasha.svg.SVGFEDisplacementMapElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEDisplacementMapElement",
      "classSimpleName": "SVGFEDisplacementMapElement",
      "elementKind": "method",
      "methodName": "cloneNode",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Node akasha.Node::cloneNode(boolean) @ akasha.svg.SVGFEDistantLightElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEDistantLightElement",
      "classSimpleName": "SVGFEDistantLightElement",
      "elementKind": "method",
      "methodName": "cloneNode",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Node akasha.Node::cloneNode(boolean) @ akasha.svg.SVGFEDropShadowElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEDropShadowElement",
      "classSimpleName": "SVGFEDropShadowElement",
      "elementKind": "method",
      "methodName": "cloneNode",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Node akasha.Node::cloneNode(boolean) @ akasha.svg.SVGFEFloodElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEFloodElement",
      "classSimpleName": "SVGFEFloodElement",
      "elementKind": "method",
      "methodName": "cloneNode",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Node akasha.Node::cloneNode(boolean) @ akasha.svg.SVGFEFuncAElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEFuncAElement",
      "classSimpleName": "SVGFEFuncAElement",
      "elementKind": "method",
      "methodName": "cloneNode",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Node akasha.Node::cloneNode(boolean) @ akasha.svg.SVGFEFuncBElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEFuncBElement",
      "classSimpleName": "SVGFEFuncBElement",
      "elementKind": "method",
      "methodName": "cloneNode",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Node akasha.Node::cloneNode(boolean) @ akasha.svg.SVGFEFuncGElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEFuncGElement",
      "classSimpleName": "SVGFEFuncGElement",
      "elementKind": "method",
      "methodName": "cloneNode",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Node akasha.Node::cloneNode(boolean) @ akasha.svg.SVGFEFuncRElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEFuncRElement",
      "classSimpleName": "SVGFEFuncRElement",
      "elementKind": "method",
      "methodName": "cloneNode",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Node akasha.Node::cloneNode(boolean) @ akasha.svg.SVGFEGaussianBlurElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEGaussianBlurElement",
      "classSimpleName": "SVGFEGaussianBlurElement",
      "elementKind": "method",
      "methodName": "cloneNode",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Node akasha.Node::cloneNode(boolean) @ akasha.svg.SVGFEImageElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEImageElement",
      "classSimpleName": "SVGFEImageElement",
      "elementKind": "method",
      "methodName": "cloneNode",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Node akasha.Node::cloneNode(boolean) @ akasha.svg.SVGFEMergeElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEMergeElement",
      "classSimpleName": "SVGFEMergeElement",
      "elementKind": "method",
      "methodName": "cloneNode",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Node akasha.Node::cloneNode(boolean) @ akasha.svg.SVGFEMergeNodeElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEMergeNodeElement",
      "classSimpleName": "SVGFEMergeNodeElement",
      "elementKind": "method",
      "methodName": "cloneNode",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Node akasha.Node::cloneNode(boolean) @ akasha.svg.SVGFEMorphologyElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEMorphologyElement",
      "classSimpleName": "SVGFEMorphologyElement",
      "elementKind": "method",
      "methodName": "cloneNode",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Node akasha.Node::cloneNode(boolean) @ akasha.svg.SVGFEOffsetElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEOffsetElement",
      "classSimpleName": "SVGFEOffsetElement",
      "elementKind": "method",
      "methodName": "cloneNode",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Node akasha.Node::cloneNode(boolean) @ akasha.svg.SVGFEPointLightElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEPointLightElement",
      "classSimpleName": "SVGFEPointLightElement",
      "elementKind": "method",
      "methodName": "cloneNode",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Node akasha.Node::cloneNode(boolean) @ akasha.svg.SVGFESpecularLightingElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFESpecularLightingElement",
      "classSimpleName": "SVGFESpecularLightingElement",
      "elementKind": "method",
      "methodName": "cloneNode",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Node akasha.Node::cloneNode(boolean) @ akasha.svg.SVGFESpotLightElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFESpotLightElement",
      "classSimpleName": "SVGFESpotLightElement",
      "elementKind": "method",
      "methodName": "cloneNode",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Node akasha.Node::cloneNode(boolean) @ akasha.svg.SVGFETileElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFETileElement",
      "classSimpleName": "SVGFETileElement",
      "elementKind": "method",
      "methodName": "cloneNode",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Node akasha.Node::cloneNode(boolean) @ akasha.svg.SVGFETurbulenceElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFETurbulenceElement",
      "classSimpleName": "SVGFETurbulenceElement",
      "elementKind": "method",
      "methodName": "cloneNode",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Node akasha.Node::cloneNode(boolean) @ akasha.svg.SVGFilterElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFilterElement",
      "classSimpleName": "SVGFilterElement",
      "elementKind": "method",
      "methodName": "cloneNode",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Node akasha.Node::cloneNode(boolean) @ akasha.svg.SVGForeignObjectElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGForeignObjectElement",
      "classSimpleName": "SVGForeignObjectElement",
      "elementKind": "method",
      "methodName": "cloneNode",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Node akasha.Node::cloneNode(boolean) @ akasha.svg.SVGGElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGGElement",
      "classSimpleName": "SVGGElement",
      "elementKind": "method",
      "methodName": "cloneNode",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Node akasha.Node::cloneNode(boolean) @ akasha.svg.SVGGeometryElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGGeometryElement",
      "classSimpleName": "SVGGeometryElement",
      "elementKind": "method",
      "methodName": "cloneNode",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Node akasha.Node::cloneNode(boolean) @ akasha.svg.SVGGradientElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGGradientElement",
      "classSimpleName": "SVGGradientElement",
      "elementKind": "method",
      "methodName": "cloneNode",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Node akasha.Node::cloneNode(boolean) @ akasha.svg.SVGGraphicsElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGGraphicsElement",
      "classSimpleName": "SVGGraphicsElement",
      "elementKind": "method",
      "methodName": "cloneNode",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Node akasha.Node::cloneNode(boolean) @ akasha.svg.SVGImageElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGImageElement",
      "classSimpleName": "SVGImageElement",
      "elementKind": "method",
      "methodName": "cloneNode",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Node akasha.Node::cloneNode(boolean) @ akasha.svg.SVGLineElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGLineElement",
      "classSimpleName": "SVGLineElement",
      "elementKind": "method",
      "methodName": "cloneNode",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Node akasha.Node::cloneNode(boolean) @ akasha.svg.SVGLinearGradientElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGLinearGradientElement",
      "classSimpleName": "SVGLinearGradientElement",
      "elementKind": "method",
      "methodName": "cloneNode",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Node akasha.Node::cloneNode(boolean) @ akasha.svg.SVGMarkerElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGMarkerElement",
      "classSimpleName": "SVGMarkerElement",
      "elementKind": "method",
      "methodName": "cloneNode",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Node akasha.Node::cloneNode(boolean) @ akasha.svg.SVGMaskElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGMaskElement",
      "classSimpleName": "SVGMaskElement",
      "elementKind": "method",
      "methodName": "cloneNode",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Node akasha.Node::cloneNode(boolean) @ akasha.svg.SVGMetadataElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGMetadataElement",
      "classSimpleName": "SVGMetadataElement",
      "elementKind": "method",
      "methodName": "cloneNode",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Node akasha.Node::cloneNode(boolean) @ akasha.svg.SVGPathElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGPathElement",
      "classSimpleName": "SVGPathElement",
      "elementKind": "method",
      "methodName": "cloneNode",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Node akasha.Node::cloneNode(boolean) @ akasha.svg.SVGPatternElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGPatternElement",
      "classSimpleName": "SVGPatternElement",
      "elementKind": "method",
      "methodName": "cloneNode",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Node akasha.Node::cloneNode(boolean) @ akasha.svg.SVGPolygonElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGPolygonElement",
      "classSimpleName": "SVGPolygonElement",
      "elementKind": "method",
      "methodName": "cloneNode",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Node akasha.Node::cloneNode(boolean) @ akasha.svg.SVGPolylineElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGPolylineElement",
      "classSimpleName": "SVGPolylineElement",
      "elementKind": "method",
      "methodName": "cloneNode",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Node akasha.Node::cloneNode(boolean) @ akasha.svg.SVGRadialGradientElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGRadialGradientElement",
      "classSimpleName": "SVGRadialGradientElement",
      "elementKind": "method",
      "methodName": "cloneNode",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Node akasha.Node::cloneNode(boolean) @ akasha.svg.SVGRectElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGRectElement",
      "classSimpleName": "SVGRectElement",
      "elementKind": "method",
      "methodName": "cloneNode",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Node akasha.Node::cloneNode(boolean) @ akasha.svg.SVGSVGElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGSVGElement",
      "classSimpleName": "SVGSVGElement",
      "elementKind": "method",
      "methodName": "cloneNode",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Node akasha.Node::cloneNode(boolean) @ akasha.svg.SVGScriptElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGScriptElement",
      "classSimpleName": "SVGScriptElement",
      "elementKind": "method",
      "methodName": "cloneNode",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Node akasha.Node::cloneNode(boolean) @ akasha.svg.SVGStopElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGStopElement",
      "classSimpleName": "SVGStopElement",
      "elementKind": "method",
      "methodName": "cloneNode",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Node akasha.Node::cloneNode(boolean) @ akasha.svg.SVGStyleElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGStyleElement",
      "classSimpleName": "SVGStyleElement",
      "elementKind": "method",
      "methodName": "cloneNode",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Node akasha.Node::cloneNode(boolean) @ akasha.svg.SVGSwitchElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGSwitchElement",
      "classSimpleName": "SVGSwitchElement",
      "elementKind": "method",
      "methodName": "cloneNode",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Node akasha.Node::cloneNode(boolean) @ akasha.svg.SVGSymbolElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGSymbolElement",
      "classSimpleName": "SVGSymbolElement",
      "elementKind": "method",
      "methodName": "cloneNode",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Node akasha.Node::cloneNode(boolean) @ akasha.svg.SVGTSpanElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGTSpanElement",
      "classSimpleName": "SVGTSpanElement",
      "elementKind": "method",
      "methodName": "cloneNode",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Node akasha.Node::cloneNode(boolean) @ akasha.svg.SVGTextContentElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGTextContentElement",
      "classSimpleName": "SVGTextContentElement",
      "elementKind": "method",
      "methodName": "cloneNode",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Node akasha.Node::cloneNode(boolean) @ akasha.svg.SVGTextElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGTextElement",
      "classSimpleName": "SVGTextElement",
      "elementKind": "method",
      "methodName": "cloneNode",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Node akasha.Node::cloneNode(boolean) @ akasha.svg.SVGTextPathElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGTextPathElement",
      "classSimpleName": "SVGTextPathElement",
      "elementKind": "method",
      "methodName": "cloneNode",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Node akasha.Node::cloneNode(boolean) @ akasha.svg.SVGTextPositioningElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGTextPositioningElement",
      "classSimpleName": "SVGTextPositioningElement",
      "elementKind": "method",
      "methodName": "cloneNode",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Node akasha.Node::cloneNode(boolean) @ akasha.svg.SVGTitleElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGTitleElement",
      "classSimpleName": "SVGTitleElement",
      "elementKind": "method",
      "methodName": "cloneNode",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Node akasha.Node::cloneNode(boolean) @ akasha.svg.SVGUnknownElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGUnknownElement",
      "classSimpleName": "SVGUnknownElement",
      "elementKind": "method",
      "methodName": "cloneNode",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Node akasha.Node::cloneNode(boolean) @ akasha.svg.SVGUseElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGUseElement",
      "classSimpleName": "SVGUseElement",
      "elementKind": "method",
      "methodName": "cloneNode",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Node akasha.Node::cloneNode(boolean) @ akasha.svg.SVGUseElementShadowRoot",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGUseElementShadowRoot",
      "classSimpleName": "SVGUseElementShadowRoot",
      "elementKind": "method",
      "methodName": "cloneNode",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Node akasha.Node::cloneNode(boolean) @ akasha.svg.SVGViewElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGViewElement",
      "classSimpleName": "SVGViewElement",
      "elementKind": "method",
      "methodName": "cloneNode",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Node akasha.Node::cloneNode(boolean)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.Node",
      "classSimpleName": "Node",
      "elementKind": "method",
      "methodName": "cloneNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Node akasha.NodeList::item(int) @ akasha.RadioNodeList",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.RadioNodeList",
      "classSimpleName": "RadioNodeList",
      "elementKind": "method",
      "methodName": "item",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Node akasha.NodeList::item(int)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.NodeList",
      "classSimpleName": "NodeList",
      "elementKind": "method",
      "methodName": "item",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.NodeIterator akasha.Document::createNodeIterator(akasha.Node) @ akasha.XMLDocument",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.XMLDocument",
      "classSimpleName": "XMLDocument",
      "elementKind": "method",
      "methodName": "createNodeIterator",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.NodeIterator akasha.Document::createNodeIterator(akasha.Node)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.Document",
      "classSimpleName": "Document",
      "elementKind": "method",
      "methodName": "createNodeIterator",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.NodeIterator akasha.Document::createNodeIterator(akasha.Node, int) @ akasha.XMLDocument",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.XMLDocument",
      "classSimpleName": "XMLDocument",
      "elementKind": "method",
      "methodName": "createNodeIterator",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.NodeIterator akasha.Document::createNodeIterator(akasha.Node, int)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.Document",
      "classSimpleName": "Document",
      "elementKind": "method",
      "methodName": "createNodeIterator",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.NodeIterator akasha.Document::createNodeIterator(akasha.Node, int, akasha.NodeFilter) @ akasha.XMLDocument",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.XMLDocument",
      "classSimpleName": "XMLDocument",
      "elementKind": "method",
      "methodName": "createNodeIterator",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.NodeIterator akasha.Document::createNodeIterator(akasha.Node, int, akasha.NodeFilter)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.Document",
      "classSimpleName": "Document",
      "elementKind": "method",
      "methodName": "createNodeIterator",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.NodeList akasha.Document::getElementsByName(java.lang.String) @ akasha.XMLDocument",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.XMLDocument",
      "classSimpleName": "XMLDocument",
      "elementKind": "method",
      "methodName": "getElementsByName",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.NodeList akasha.Document::getElementsByName(java.lang.String)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.Document",
      "classSimpleName": "Document",
      "elementKind": "method",
      "methodName": "getElementsByName",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.NodeList akasha.Document::querySelectorAll(java.lang.String) @ akasha.XMLDocument",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.XMLDocument",
      "classSimpleName": "XMLDocument",
      "elementKind": "method",
      "methodName": "querySelectorAll",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.NodeList akasha.Document::querySelectorAll(java.lang.String)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.Document",
      "classSimpleName": "Document",
      "elementKind": "method",
      "methodName": "querySelectorAll",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.NodeList akasha.DocumentFragment::querySelectorAll(java.lang.String) @ akasha.ShadowRoot",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.ShadowRoot",
      "classSimpleName": "ShadowRoot",
      "elementKind": "method",
      "methodName": "querySelectorAll",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.NodeList akasha.DocumentFragment::querySelectorAll(java.lang.String) @ akasha.svg.SVGUseElementShadowRoot",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGUseElementShadowRoot",
      "classSimpleName": "SVGUseElementShadowRoot",
      "elementKind": "method",
      "methodName": "querySelectorAll",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.NodeList akasha.DocumentFragment::querySelectorAll(java.lang.String)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.DocumentFragment",
      "classSimpleName": "DocumentFragment",
      "elementKind": "method",
      "methodName": "querySelectorAll",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.NodeList akasha.Element::querySelectorAll(java.lang.String) @ akasha.Audio",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.Audio",
      "classSimpleName": "Audio",
      "elementKind": "method",
      "methodName": "querySelectorAll",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.NodeList akasha.Element::querySelectorAll(java.lang.String) @ akasha.HTMLAnchorElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLAnchorElement",
      "classSimpleName": "HTMLAnchorElement",
      "elementKind": "method",
      "methodName": "querySelectorAll",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.NodeList akasha.Element::querySelectorAll(java.lang.String) @ akasha.HTMLAreaElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLAreaElement",
      "classSimpleName": "HTMLAreaElement",
      "elementKind": "method",
      "methodName": "querySelectorAll",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.NodeList akasha.Element::querySelectorAll(java.lang.String) @ akasha.HTMLAudioElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLAudioElement",
      "classSimpleName": "HTMLAudioElement",
      "elementKind": "method",
      "methodName": "querySelectorAll",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.NodeList akasha.Element::querySelectorAll(java.lang.String) @ akasha.HTMLBRElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLBRElement",
      "classSimpleName": "HTMLBRElement",
      "elementKind": "method",
      "methodName": "querySelectorAll",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.NodeList akasha.Element::querySelectorAll(java.lang.String) @ akasha.HTMLBaseElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLBaseElement",
      "classSimpleName": "HTMLBaseElement",
      "elementKind": "method",
      "methodName": "querySelectorAll",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.NodeList akasha.Element::querySelectorAll(java.lang.String) @ akasha.HTMLBodyElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLBodyElement",
      "classSimpleName": "HTMLBodyElement",
      "elementKind": "method",
      "methodName": "querySelectorAll",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.NodeList akasha.Element::querySelectorAll(java.lang.String) @ akasha.HTMLButtonElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLButtonElement",
      "classSimpleName": "HTMLButtonElement",
      "elementKind": "method",
      "methodName": "querySelectorAll",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.NodeList akasha.Element::querySelectorAll(java.lang.String) @ akasha.HTMLCanvasElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLCanvasElement",
      "classSimpleName": "HTMLCanvasElement",
      "elementKind": "method",
      "methodName": "querySelectorAll",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.NodeList akasha.Element::querySelectorAll(java.lang.String) @ akasha.HTMLDListElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLDListElement",
      "classSimpleName": "HTMLDListElement",
      "elementKind": "method",
      "methodName": "querySelectorAll",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.NodeList akasha.Element::querySelectorAll(java.lang.String) @ akasha.HTMLDataElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLDataElement",
      "classSimpleName": "HTMLDataElement",
      "elementKind": "method",
      "methodName": "querySelectorAll",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.NodeList akasha.Element::querySelectorAll(java.lang.String) @ akasha.HTMLDataListElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLDataListElement",
      "classSimpleName": "HTMLDataListElement",
      "elementKind": "method",
      "methodName": "querySelectorAll",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.NodeList akasha.Element::querySelectorAll(java.lang.String) @ akasha.HTMLDetailsElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLDetailsElement",
      "classSimpleName": "HTMLDetailsElement",
      "elementKind": "method",
      "methodName": "querySelectorAll",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.NodeList akasha.Element::querySelectorAll(java.lang.String) @ akasha.HTMLDialogElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLDialogElement",
      "classSimpleName": "HTMLDialogElement",
      "elementKind": "method",
      "methodName": "querySelectorAll",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.NodeList akasha.Element::querySelectorAll(java.lang.String) @ akasha.HTMLDirectoryElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLDirectoryElement",
      "classSimpleName": "HTMLDirectoryElement",
      "elementKind": "method",
      "methodName": "querySelectorAll",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.NodeList akasha.Element::querySelectorAll(java.lang.String) @ akasha.HTMLDivElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLDivElement",
      "classSimpleName": "HTMLDivElement",
      "elementKind": "method",
      "methodName": "querySelectorAll",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.NodeList akasha.Element::querySelectorAll(java.lang.String) @ akasha.HTMLElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLElement",
      "classSimpleName": "HTMLElement",
      "elementKind": "method",
      "methodName": "querySelectorAll",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.NodeList akasha.Element::querySelectorAll(java.lang.String) @ akasha.HTMLEmbedElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLEmbedElement",
      "classSimpleName": "HTMLEmbedElement",
      "elementKind": "method",
      "methodName": "querySelectorAll",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.NodeList akasha.Element::querySelectorAll(java.lang.String) @ akasha.HTMLFieldSetElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLFieldSetElement",
      "classSimpleName": "HTMLFieldSetElement",
      "elementKind": "method",
      "methodName": "querySelectorAll",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.NodeList akasha.Element::querySelectorAll(java.lang.String) @ akasha.HTMLFontElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLFontElement",
      "classSimpleName": "HTMLFontElement",
      "elementKind": "method",
      "methodName": "querySelectorAll",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.NodeList akasha.Element::querySelectorAll(java.lang.String) @ akasha.HTMLFormElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLFormElement",
      "classSimpleName": "HTMLFormElement",
      "elementKind": "method",
      "methodName": "querySelectorAll",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.NodeList akasha.Element::querySelectorAll(java.lang.String) @ akasha.HTMLFrameElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLFrameElement",
      "classSimpleName": "HTMLFrameElement",
      "elementKind": "method",
      "methodName": "querySelectorAll",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.NodeList akasha.Element::querySelectorAll(java.lang.String) @ akasha.HTMLFrameSetElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLFrameSetElement",
      "classSimpleName": "HTMLFrameSetElement",
      "elementKind": "method",
      "methodName": "querySelectorAll",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.NodeList akasha.Element::querySelectorAll(java.lang.String) @ akasha.HTMLHRElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLHRElement",
      "classSimpleName": "HTMLHRElement",
      "elementKind": "method",
      "methodName": "querySelectorAll",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.NodeList akasha.Element::querySelectorAll(java.lang.String) @ akasha.HTMLHeadElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLHeadElement",
      "classSimpleName": "HTMLHeadElement",
      "elementKind": "method",
      "methodName": "querySelectorAll",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.NodeList akasha.Element::querySelectorAll(java.lang.String) @ akasha.HTMLHeadingElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLHeadingElement",
      "classSimpleName": "HTMLHeadingElement",
      "elementKind": "method",
      "methodName": "querySelectorAll",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.NodeList akasha.Element::querySelectorAll(java.lang.String) @ akasha.HTMLHtmlElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLHtmlElement",
      "classSimpleName": "HTMLHtmlElement",
      "elementKind": "method",
      "methodName": "querySelectorAll",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.NodeList akasha.Element::querySelectorAll(java.lang.String) @ akasha.HTMLIFrameElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLIFrameElement",
      "classSimpleName": "HTMLIFrameElement",
      "elementKind": "method",
      "methodName": "querySelectorAll",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.NodeList akasha.Element::querySelectorAll(java.lang.String) @ akasha.HTMLImageElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLImageElement",
      "classSimpleName": "HTMLImageElement",
      "elementKind": "method",
      "methodName": "querySelectorAll",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.NodeList akasha.Element::querySelectorAll(java.lang.String) @ akasha.HTMLInputElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLInputElement",
      "classSimpleName": "HTMLInputElement",
      "elementKind": "method",
      "methodName": "querySelectorAll",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.NodeList akasha.Element::querySelectorAll(java.lang.String) @ akasha.HTMLLIElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLLIElement",
      "classSimpleName": "HTMLLIElement",
      "elementKind": "method",
      "methodName": "querySelectorAll",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.NodeList akasha.Element::querySelectorAll(java.lang.String) @ akasha.HTMLLabelElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLLabelElement",
      "classSimpleName": "HTMLLabelElement",
      "elementKind": "method",
      "methodName": "querySelectorAll",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.NodeList akasha.Element::querySelectorAll(java.lang.String) @ akasha.HTMLLegendElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLLegendElement",
      "classSimpleName": "HTMLLegendElement",
      "elementKind": "method",
      "methodName": "querySelectorAll",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.NodeList akasha.Element::querySelectorAll(java.lang.String) @ akasha.HTMLLinkElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLLinkElement",
      "classSimpleName": "HTMLLinkElement",
      "elementKind": "method",
      "methodName": "querySelectorAll",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.NodeList akasha.Element::querySelectorAll(java.lang.String) @ akasha.HTMLMapElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLMapElement",
      "classSimpleName": "HTMLMapElement",
      "elementKind": "method",
      "methodName": "querySelectorAll",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.NodeList akasha.Element::querySelectorAll(java.lang.String) @ akasha.HTMLMarqueeElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLMarqueeElement",
      "classSimpleName": "HTMLMarqueeElement",
      "elementKind": "method",
      "methodName": "querySelectorAll",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.NodeList akasha.Element::querySelectorAll(java.lang.String) @ akasha.HTMLMediaElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLMediaElement",
      "classSimpleName": "HTMLMediaElement",
      "elementKind": "method",
      "methodName": "querySelectorAll",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.NodeList akasha.Element::querySelectorAll(java.lang.String) @ akasha.HTMLMenuElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLMenuElement",
      "classSimpleName": "HTMLMenuElement",
      "elementKind": "method",
      "methodName": "querySelectorAll",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.NodeList akasha.Element::querySelectorAll(java.lang.String) @ akasha.HTMLMetaElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLMetaElement",
      "classSimpleName": "HTMLMetaElement",
      "elementKind": "method",
      "methodName": "querySelectorAll",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.NodeList akasha.Element::querySelectorAll(java.lang.String) @ akasha.HTMLMeterElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLMeterElement",
      "classSimpleName": "HTMLMeterElement",
      "elementKind": "method",
      "methodName": "querySelectorAll",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.NodeList akasha.Element::querySelectorAll(java.lang.String) @ akasha.HTMLModElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLModElement",
      "classSimpleName": "HTMLModElement",
      "elementKind": "method",
      "methodName": "querySelectorAll",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.NodeList akasha.Element::querySelectorAll(java.lang.String) @ akasha.HTMLOListElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLOListElement",
      "classSimpleName": "HTMLOListElement",
      "elementKind": "method",
      "methodName": "querySelectorAll",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.NodeList akasha.Element::querySelectorAll(java.lang.String) @ akasha.HTMLObjectElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLObjectElement",
      "classSimpleName": "HTMLObjectElement",
      "elementKind": "method",
      "methodName": "querySelectorAll",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.NodeList akasha.Element::querySelectorAll(java.lang.String) @ akasha.HTMLOptGroupElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLOptGroupElement",
      "classSimpleName": "HTMLOptGroupElement",
      "elementKind": "method",
      "methodName": "querySelectorAll",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.NodeList akasha.Element::querySelectorAll(java.lang.String) @ akasha.HTMLOptionElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLOptionElement",
      "classSimpleName": "HTMLOptionElement",
      "elementKind": "method",
      "methodName": "querySelectorAll",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.NodeList akasha.Element::querySelectorAll(java.lang.String) @ akasha.HTMLOutputElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLOutputElement",
      "classSimpleName": "HTMLOutputElement",
      "elementKind": "method",
      "methodName": "querySelectorAll",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.NodeList akasha.Element::querySelectorAll(java.lang.String) @ akasha.HTMLParagraphElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLParagraphElement",
      "classSimpleName": "HTMLParagraphElement",
      "elementKind": "method",
      "methodName": "querySelectorAll",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.NodeList akasha.Element::querySelectorAll(java.lang.String) @ akasha.HTMLParamElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLParamElement",
      "classSimpleName": "HTMLParamElement",
      "elementKind": "method",
      "methodName": "querySelectorAll",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.NodeList akasha.Element::querySelectorAll(java.lang.String) @ akasha.HTMLPictureElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLPictureElement",
      "classSimpleName": "HTMLPictureElement",
      "elementKind": "method",
      "methodName": "querySelectorAll",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.NodeList akasha.Element::querySelectorAll(java.lang.String) @ akasha.HTMLPreElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLPreElement",
      "classSimpleName": "HTMLPreElement",
      "elementKind": "method",
      "methodName": "querySelectorAll",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.NodeList akasha.Element::querySelectorAll(java.lang.String) @ akasha.HTMLProgressElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLProgressElement",
      "classSimpleName": "HTMLProgressElement",
      "elementKind": "method",
      "methodName": "querySelectorAll",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.NodeList akasha.Element::querySelectorAll(java.lang.String) @ akasha.HTMLQuoteElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLQuoteElement",
      "classSimpleName": "HTMLQuoteElement",
      "elementKind": "method",
      "methodName": "querySelectorAll",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.NodeList akasha.Element::querySelectorAll(java.lang.String) @ akasha.HTMLScriptElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLScriptElement",
      "classSimpleName": "HTMLScriptElement",
      "elementKind": "method",
      "methodName": "querySelectorAll",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.NodeList akasha.Element::querySelectorAll(java.lang.String) @ akasha.HTMLSelectElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLSelectElement",
      "classSimpleName": "HTMLSelectElement",
      "elementKind": "method",
      "methodName": "querySelectorAll",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.NodeList akasha.Element::querySelectorAll(java.lang.String) @ akasha.HTMLSlotElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLSlotElement",
      "classSimpleName": "HTMLSlotElement",
      "elementKind": "method",
      "methodName": "querySelectorAll",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.NodeList akasha.Element::querySelectorAll(java.lang.String) @ akasha.HTMLSourceElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLSourceElement",
      "classSimpleName": "HTMLSourceElement",
      "elementKind": "method",
      "methodName": "querySelectorAll",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.NodeList akasha.Element::querySelectorAll(java.lang.String) @ akasha.HTMLSpanElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLSpanElement",
      "classSimpleName": "HTMLSpanElement",
      "elementKind": "method",
      "methodName": "querySelectorAll",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.NodeList akasha.Element::querySelectorAll(java.lang.String) @ akasha.HTMLStyleElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLStyleElement",
      "classSimpleName": "HTMLStyleElement",
      "elementKind": "method",
      "methodName": "querySelectorAll",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.NodeList akasha.Element::querySelectorAll(java.lang.String) @ akasha.HTMLTableCaptionElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLTableCaptionElement",
      "classSimpleName": "HTMLTableCaptionElement",
      "elementKind": "method",
      "methodName": "querySelectorAll",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.NodeList akasha.Element::querySelectorAll(java.lang.String) @ akasha.HTMLTableCellElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLTableCellElement",
      "classSimpleName": "HTMLTableCellElement",
      "elementKind": "method",
      "methodName": "querySelectorAll",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.NodeList akasha.Element::querySelectorAll(java.lang.String) @ akasha.HTMLTableColElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLTableColElement",
      "classSimpleName": "HTMLTableColElement",
      "elementKind": "method",
      "methodName": "querySelectorAll",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.NodeList akasha.Element::querySelectorAll(java.lang.String) @ akasha.HTMLTableElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLTableElement",
      "classSimpleName": "HTMLTableElement",
      "elementKind": "method",
      "methodName": "querySelectorAll",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.NodeList akasha.Element::querySelectorAll(java.lang.String) @ akasha.HTMLTableRowElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLTableRowElement",
      "classSimpleName": "HTMLTableRowElement",
      "elementKind": "method",
      "methodName": "querySelectorAll",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.NodeList akasha.Element::querySelectorAll(java.lang.String) @ akasha.HTMLTableSectionElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLTableSectionElement",
      "classSimpleName": "HTMLTableSectionElement",
      "elementKind": "method",
      "methodName": "querySelectorAll",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.NodeList akasha.Element::querySelectorAll(java.lang.String) @ akasha.HTMLTemplateElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLTemplateElement",
      "classSimpleName": "HTMLTemplateElement",
      "elementKind": "method",
      "methodName": "querySelectorAll",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.NodeList akasha.Element::querySelectorAll(java.lang.String) @ akasha.HTMLTextAreaElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLTextAreaElement",
      "classSimpleName": "HTMLTextAreaElement",
      "elementKind": "method",
      "methodName": "querySelectorAll",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.NodeList akasha.Element::querySelectorAll(java.lang.String) @ akasha.HTMLTimeElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLTimeElement",
      "classSimpleName": "HTMLTimeElement",
      "elementKind": "method",
      "methodName": "querySelectorAll",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.NodeList akasha.Element::querySelectorAll(java.lang.String) @ akasha.HTMLTitleElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLTitleElement",
      "classSimpleName": "HTMLTitleElement",
      "elementKind": "method",
      "methodName": "querySelectorAll",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.NodeList akasha.Element::querySelectorAll(java.lang.String) @ akasha.HTMLTrackElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLTrackElement",
      "classSimpleName": "HTMLTrackElement",
      "elementKind": "method",
      "methodName": "querySelectorAll",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.NodeList akasha.Element::querySelectorAll(java.lang.String) @ akasha.HTMLUListElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLUListElement",
      "classSimpleName": "HTMLUListElement",
      "elementKind": "method",
      "methodName": "querySelectorAll",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.NodeList akasha.Element::querySelectorAll(java.lang.String) @ akasha.HTMLUnknownElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLUnknownElement",
      "classSimpleName": "HTMLUnknownElement",
      "elementKind": "method",
      "methodName": "querySelectorAll",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.NodeList akasha.Element::querySelectorAll(java.lang.String) @ akasha.HTMLVideoElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLVideoElement",
      "classSimpleName": "HTMLVideoElement",
      "elementKind": "method",
      "methodName": "querySelectorAll",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.NodeList akasha.Element::querySelectorAll(java.lang.String) @ akasha.Image",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.Image",
      "classSimpleName": "Image",
      "elementKind": "method",
      "methodName": "querySelectorAll",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.NodeList akasha.Element::querySelectorAll(java.lang.String) @ akasha.Option",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.Option",
      "classSimpleName": "Option",
      "elementKind": "method",
      "methodName": "querySelectorAll",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.NodeList akasha.Element::querySelectorAll(java.lang.String) @ akasha.svg.SVGAElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGAElement",
      "classSimpleName": "SVGAElement",
      "elementKind": "method",
      "methodName": "querySelectorAll",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.NodeList akasha.Element::querySelectorAll(java.lang.String) @ akasha.svg.SVGCircleElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGCircleElement",
      "classSimpleName": "SVGCircleElement",
      "elementKind": "method",
      "methodName": "querySelectorAll",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.NodeList akasha.Element::querySelectorAll(java.lang.String) @ akasha.svg.SVGClipPathElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGClipPathElement",
      "classSimpleName": "SVGClipPathElement",
      "elementKind": "method",
      "methodName": "querySelectorAll",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.NodeList akasha.Element::querySelectorAll(java.lang.String) @ akasha.svg.SVGComponentTransferFunctionElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGComponentTransferFunctionElement",
      "classSimpleName": "SVGComponentTransferFunctionElement",
      "elementKind": "method",
      "methodName": "querySelectorAll",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.NodeList akasha.Element::querySelectorAll(java.lang.String) @ akasha.svg.SVGDefsElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGDefsElement",
      "classSimpleName": "SVGDefsElement",
      "elementKind": "method",
      "methodName": "querySelectorAll",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.NodeList akasha.Element::querySelectorAll(java.lang.String) @ akasha.svg.SVGDescElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGDescElement",
      "classSimpleName": "SVGDescElement",
      "elementKind": "method",
      "methodName": "querySelectorAll",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.NodeList akasha.Element::querySelectorAll(java.lang.String) @ akasha.svg.SVGElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGElement",
      "classSimpleName": "SVGElement",
      "elementKind": "method",
      "methodName": "querySelectorAll",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.NodeList akasha.Element::querySelectorAll(java.lang.String) @ akasha.svg.SVGEllipseElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGEllipseElement",
      "classSimpleName": "SVGEllipseElement",
      "elementKind": "method",
      "methodName": "querySelectorAll",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.NodeList akasha.Element::querySelectorAll(java.lang.String) @ akasha.svg.SVGFEBlendElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEBlendElement",
      "classSimpleName": "SVGFEBlendElement",
      "elementKind": "method",
      "methodName": "querySelectorAll",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.NodeList akasha.Element::querySelectorAll(java.lang.String) @ akasha.svg.SVGFEColorMatrixElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEColorMatrixElement",
      "classSimpleName": "SVGFEColorMatrixElement",
      "elementKind": "method",
      "methodName": "querySelectorAll",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.NodeList akasha.Element::querySelectorAll(java.lang.String) @ akasha.svg.SVGFEComponentTransferElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEComponentTransferElement",
      "classSimpleName": "SVGFEComponentTransferElement",
      "elementKind": "method",
      "methodName": "querySelectorAll",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.NodeList akasha.Element::querySelectorAll(java.lang.String) @ akasha.svg.SVGFECompositeElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFECompositeElement",
      "classSimpleName": "SVGFECompositeElement",
      "elementKind": "method",
      "methodName": "querySelectorAll",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.NodeList akasha.Element::querySelectorAll(java.lang.String) @ akasha.svg.SVGFEConvolveMatrixElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEConvolveMatrixElement",
      "classSimpleName": "SVGFEConvolveMatrixElement",
      "elementKind": "method",
      "methodName": "querySelectorAll",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.NodeList akasha.Element::querySelectorAll(java.lang.String) @ akasha.svg.SVGFEDiffuseLightingElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEDiffuseLightingElement",
      "classSimpleName": "SVGFEDiffuseLightingElement",
      "elementKind": "method",
      "methodName": "querySelectorAll",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.NodeList akasha.Element::querySelectorAll(java.lang.String) @ akasha.svg.SVGFEDisplacementMapElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEDisplacementMapElement",
      "classSimpleName": "SVGFEDisplacementMapElement",
      "elementKind": "method",
      "methodName": "querySelectorAll",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.NodeList akasha.Element::querySelectorAll(java.lang.String) @ akasha.svg.SVGFEDistantLightElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEDistantLightElement",
      "classSimpleName": "SVGFEDistantLightElement",
      "elementKind": "method",
      "methodName": "querySelectorAll",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.NodeList akasha.Element::querySelectorAll(java.lang.String) @ akasha.svg.SVGFEDropShadowElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEDropShadowElement",
      "classSimpleName": "SVGFEDropShadowElement",
      "elementKind": "method",
      "methodName": "querySelectorAll",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.NodeList akasha.Element::querySelectorAll(java.lang.String) @ akasha.svg.SVGFEFloodElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEFloodElement",
      "classSimpleName": "SVGFEFloodElement",
      "elementKind": "method",
      "methodName": "querySelectorAll",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.NodeList akasha.Element::querySelectorAll(java.lang.String) @ akasha.svg.SVGFEFuncAElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEFuncAElement",
      "classSimpleName": "SVGFEFuncAElement",
      "elementKind": "method",
      "methodName": "querySelectorAll",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.NodeList akasha.Element::querySelectorAll(java.lang.String) @ akasha.svg.SVGFEFuncBElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEFuncBElement",
      "classSimpleName": "SVGFEFuncBElement",
      "elementKind": "method",
      "methodName": "querySelectorAll",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.NodeList akasha.Element::querySelectorAll(java.lang.String) @ akasha.svg.SVGFEFuncGElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEFuncGElement",
      "classSimpleName": "SVGFEFuncGElement",
      "elementKind": "method",
      "methodName": "querySelectorAll",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.NodeList akasha.Element::querySelectorAll(java.lang.String) @ akasha.svg.SVGFEFuncRElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEFuncRElement",
      "classSimpleName": "SVGFEFuncRElement",
      "elementKind": "method",
      "methodName": "querySelectorAll",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.NodeList akasha.Element::querySelectorAll(java.lang.String) @ akasha.svg.SVGFEGaussianBlurElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEGaussianBlurElement",
      "classSimpleName": "SVGFEGaussianBlurElement",
      "elementKind": "method",
      "methodName": "querySelectorAll",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.NodeList akasha.Element::querySelectorAll(java.lang.String) @ akasha.svg.SVGFEImageElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEImageElement",
      "classSimpleName": "SVGFEImageElement",
      "elementKind": "method",
      "methodName": "querySelectorAll",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.NodeList akasha.Element::querySelectorAll(java.lang.String) @ akasha.svg.SVGFEMergeElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEMergeElement",
      "classSimpleName": "SVGFEMergeElement",
      "elementKind": "method",
      "methodName": "querySelectorAll",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.NodeList akasha.Element::querySelectorAll(java.lang.String) @ akasha.svg.SVGFEMergeNodeElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEMergeNodeElement",
      "classSimpleName": "SVGFEMergeNodeElement",
      "elementKind": "method",
      "methodName": "querySelectorAll",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.NodeList akasha.Element::querySelectorAll(java.lang.String) @ akasha.svg.SVGFEMorphologyElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEMorphologyElement",
      "classSimpleName": "SVGFEMorphologyElement",
      "elementKind": "method",
      "methodName": "querySelectorAll",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.NodeList akasha.Element::querySelectorAll(java.lang.String) @ akasha.svg.SVGFEOffsetElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEOffsetElement",
      "classSimpleName": "SVGFEOffsetElement",
      "elementKind": "method",
      "methodName": "querySelectorAll",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.NodeList akasha.Element::querySelectorAll(java.lang.String) @ akasha.svg.SVGFEPointLightElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEPointLightElement",
      "classSimpleName": "SVGFEPointLightElement",
      "elementKind": "method",
      "methodName": "querySelectorAll",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.NodeList akasha.Element::querySelectorAll(java.lang.String) @ akasha.svg.SVGFESpecularLightingElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFESpecularLightingElement",
      "classSimpleName": "SVGFESpecularLightingElement",
      "elementKind": "method",
      "methodName": "querySelectorAll",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.NodeList akasha.Element::querySelectorAll(java.lang.String) @ akasha.svg.SVGFESpotLightElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFESpotLightElement",
      "classSimpleName": "SVGFESpotLightElement",
      "elementKind": "method",
      "methodName": "querySelectorAll",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.NodeList akasha.Element::querySelectorAll(java.lang.String) @ akasha.svg.SVGFETileElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFETileElement",
      "classSimpleName": "SVGFETileElement",
      "elementKind": "method",
      "methodName": "querySelectorAll",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.NodeList akasha.Element::querySelectorAll(java.lang.String) @ akasha.svg.SVGFETurbulenceElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFETurbulenceElement",
      "classSimpleName": "SVGFETurbulenceElement",
      "elementKind": "method",
      "methodName": "querySelectorAll",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.NodeList akasha.Element::querySelectorAll(java.lang.String) @ akasha.svg.SVGFilterElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFilterElement",
      "classSimpleName": "SVGFilterElement",
      "elementKind": "method",
      "methodName": "querySelectorAll",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.NodeList akasha.Element::querySelectorAll(java.lang.String) @ akasha.svg.SVGForeignObjectElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGForeignObjectElement",
      "classSimpleName": "SVGForeignObjectElement",
      "elementKind": "method",
      "methodName": "querySelectorAll",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.NodeList akasha.Element::querySelectorAll(java.lang.String) @ akasha.svg.SVGGElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGGElement",
      "classSimpleName": "SVGGElement",
      "elementKind": "method",
      "methodName": "querySelectorAll",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.NodeList akasha.Element::querySelectorAll(java.lang.String) @ akasha.svg.SVGGeometryElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGGeometryElement",
      "classSimpleName": "SVGGeometryElement",
      "elementKind": "method",
      "methodName": "querySelectorAll",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.NodeList akasha.Element::querySelectorAll(java.lang.String) @ akasha.svg.SVGGradientElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGGradientElement",
      "classSimpleName": "SVGGradientElement",
      "elementKind": "method",
      "methodName": "querySelectorAll",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.NodeList akasha.Element::querySelectorAll(java.lang.String) @ akasha.svg.SVGGraphicsElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGGraphicsElement",
      "classSimpleName": "SVGGraphicsElement",
      "elementKind": "method",
      "methodName": "querySelectorAll",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.NodeList akasha.Element::querySelectorAll(java.lang.String) @ akasha.svg.SVGImageElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGImageElement",
      "classSimpleName": "SVGImageElement",
      "elementKind": "method",
      "methodName": "querySelectorAll",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.NodeList akasha.Element::querySelectorAll(java.lang.String) @ akasha.svg.SVGLineElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGLineElement",
      "classSimpleName": "SVGLineElement",
      "elementKind": "method",
      "methodName": "querySelectorAll",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.NodeList akasha.Element::querySelectorAll(java.lang.String) @ akasha.svg.SVGLinearGradientElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGLinearGradientElement",
      "classSimpleName": "SVGLinearGradientElement",
      "elementKind": "method",
      "methodName": "querySelectorAll",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.NodeList akasha.Element::querySelectorAll(java.lang.String) @ akasha.svg.SVGMarkerElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGMarkerElement",
      "classSimpleName": "SVGMarkerElement",
      "elementKind": "method",
      "methodName": "querySelectorAll",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.NodeList akasha.Element::querySelectorAll(java.lang.String) @ akasha.svg.SVGMaskElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGMaskElement",
      "classSimpleName": "SVGMaskElement",
      "elementKind": "method",
      "methodName": "querySelectorAll",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.NodeList akasha.Element::querySelectorAll(java.lang.String) @ akasha.svg.SVGMetadataElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGMetadataElement",
      "classSimpleName": "SVGMetadataElement",
      "elementKind": "method",
      "methodName": "querySelectorAll",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.NodeList akasha.Element::querySelectorAll(java.lang.String) @ akasha.svg.SVGPathElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGPathElement",
      "classSimpleName": "SVGPathElement",
      "elementKind": "method",
      "methodName": "querySelectorAll",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.NodeList akasha.Element::querySelectorAll(java.lang.String) @ akasha.svg.SVGPatternElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGPatternElement",
      "classSimpleName": "SVGPatternElement",
      "elementKind": "method",
      "methodName": "querySelectorAll",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.NodeList akasha.Element::querySelectorAll(java.lang.String) @ akasha.svg.SVGPolygonElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGPolygonElement",
      "classSimpleName": "SVGPolygonElement",
      "elementKind": "method",
      "methodName": "querySelectorAll",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.NodeList akasha.Element::querySelectorAll(java.lang.String) @ akasha.svg.SVGPolylineElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGPolylineElement",
      "classSimpleName": "SVGPolylineElement",
      "elementKind": "method",
      "methodName": "querySelectorAll",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.NodeList akasha.Element::querySelectorAll(java.lang.String) @ akasha.svg.SVGRadialGradientElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGRadialGradientElement",
      "classSimpleName": "SVGRadialGradientElement",
      "elementKind": "method",
      "methodName": "querySelectorAll",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.NodeList akasha.Element::querySelectorAll(java.lang.String) @ akasha.svg.SVGRectElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGRectElement",
      "classSimpleName": "SVGRectElement",
      "elementKind": "method",
      "methodName": "querySelectorAll",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.NodeList akasha.Element::querySelectorAll(java.lang.String) @ akasha.svg.SVGSVGElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGSVGElement",
      "classSimpleName": "SVGSVGElement",
      "elementKind": "method",
      "methodName": "querySelectorAll",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.NodeList akasha.Element::querySelectorAll(java.lang.String) @ akasha.svg.SVGScriptElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGScriptElement",
      "classSimpleName": "SVGScriptElement",
      "elementKind": "method",
      "methodName": "querySelectorAll",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.NodeList akasha.Element::querySelectorAll(java.lang.String) @ akasha.svg.SVGStopElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGStopElement",
      "classSimpleName": "SVGStopElement",
      "elementKind": "method",
      "methodName": "querySelectorAll",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.NodeList akasha.Element::querySelectorAll(java.lang.String) @ akasha.svg.SVGStyleElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGStyleElement",
      "classSimpleName": "SVGStyleElement",
      "elementKind": "method",
      "methodName": "querySelectorAll",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.NodeList akasha.Element::querySelectorAll(java.lang.String) @ akasha.svg.SVGSwitchElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGSwitchElement",
      "classSimpleName": "SVGSwitchElement",
      "elementKind": "method",
      "methodName": "querySelectorAll",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.NodeList akasha.Element::querySelectorAll(java.lang.String) @ akasha.svg.SVGSymbolElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGSymbolElement",
      "classSimpleName": "SVGSymbolElement",
      "elementKind": "method",
      "methodName": "querySelectorAll",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.NodeList akasha.Element::querySelectorAll(java.lang.String) @ akasha.svg.SVGTSpanElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGTSpanElement",
      "classSimpleName": "SVGTSpanElement",
      "elementKind": "method",
      "methodName": "querySelectorAll",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.NodeList akasha.Element::querySelectorAll(java.lang.String) @ akasha.svg.SVGTextContentElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGTextContentElement",
      "classSimpleName": "SVGTextContentElement",
      "elementKind": "method",
      "methodName": "querySelectorAll",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.NodeList akasha.Element::querySelectorAll(java.lang.String) @ akasha.svg.SVGTextElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGTextElement",
      "classSimpleName": "SVGTextElement",
      "elementKind": "method",
      "methodName": "querySelectorAll",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.NodeList akasha.Element::querySelectorAll(java.lang.String) @ akasha.svg.SVGTextPathElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGTextPathElement",
      "classSimpleName": "SVGTextPathElement",
      "elementKind": "method",
      "methodName": "querySelectorAll",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.NodeList akasha.Element::querySelectorAll(java.lang.String) @ akasha.svg.SVGTextPositioningElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGTextPositioningElement",
      "classSimpleName": "SVGTextPositioningElement",
      "elementKind": "method",
      "methodName": "querySelectorAll",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.NodeList akasha.Element::querySelectorAll(java.lang.String) @ akasha.svg.SVGTitleElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGTitleElement",
      "classSimpleName": "SVGTitleElement",
      "elementKind": "method",
      "methodName": "querySelectorAll",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.NodeList akasha.Element::querySelectorAll(java.lang.String) @ akasha.svg.SVGUnknownElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGUnknownElement",
      "classSimpleName": "SVGUnknownElement",
      "elementKind": "method",
      "methodName": "querySelectorAll",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.NodeList akasha.Element::querySelectorAll(java.lang.String) @ akasha.svg.SVGUseElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGUseElement",
      "classSimpleName": "SVGUseElement",
      "elementKind": "method",
      "methodName": "querySelectorAll",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.NodeList akasha.Element::querySelectorAll(java.lang.String) @ akasha.svg.SVGViewElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGViewElement",
      "classSimpleName": "SVGViewElement",
      "elementKind": "method",
      "methodName": "querySelectorAll",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.NodeList akasha.Element::querySelectorAll(java.lang.String)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.Element",
      "classSimpleName": "Element",
      "elementKind": "method",
      "methodName": "querySelectorAll",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.ProcessingInstruction akasha.Document::createProcessingInstruction(java.lang.String, java.lang.String) @ akasha.XMLDocument",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.XMLDocument",
      "classSimpleName": "XMLDocument",
      "elementKind": "method",
      "methodName": "createProcessingInstruction",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.ProcessingInstruction akasha.Document::createProcessingInstruction(java.lang.String, java.lang.String)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.Document",
      "classSimpleName": "Document",
      "elementKind": "method",
      "methodName": "createProcessingInstruction",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.RadioNodeListOrElementUnion akasha.HTMLFormControlsCollection::item(int)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLFormControlsCollection",
      "classSimpleName": "HTMLFormControlsCollection",
      "elementKind": "method",
      "methodName": "item",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.RadioNodeListOrElementUnion akasha.HTMLFormControlsCollection::namedItem(java.lang.String)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLFormControlsCollection",
      "classSimpleName": "HTMLFormControlsCollection",
      "elementKind": "method",
      "methodName": "namedItem",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Range akasha.Selection::getRangeAt(int)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.Selection",
      "classSimpleName": "Selection",
      "elementKind": "method",
      "methodName": "getRangeAt",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Selection akasha.Document::getSelection() @ akasha.XMLDocument",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.XMLDocument",
      "classSimpleName": "XMLDocument",
      "elementKind": "method",
      "methodName": "getSelection",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Selection akasha.Document::getSelection()",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.Document",
      "classSimpleName": "Document",
      "elementKind": "method",
      "methodName": "getSelection",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Selection akasha.Window::getSelection()",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.Window",
      "classSimpleName": "Window",
      "elementKind": "method",
      "methodName": "getSelection",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Selection akasha.WindowGlobal::getSelection()",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.WindowGlobal",
      "classSimpleName": "WindowGlobal",
      "elementKind": "method",
      "methodName": "getSelection",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Text akasha.Document::createTextNode(java.lang.String) @ akasha.XMLDocument",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.XMLDocument",
      "classSimpleName": "XMLDocument",
      "elementKind": "method",
      "methodName": "createTextNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Text akasha.Document::createTextNode(java.lang.String)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.Document",
      "classSimpleName": "Document",
      "elementKind": "method",
      "methodName": "createTextNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.TextMetrics akasha.CanvasRenderingContext2D::measureText(java.lang.String)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.CanvasRenderingContext2D",
      "classSimpleName": "CanvasRenderingContext2D",
      "elementKind": "method",
      "methodName": "measureText",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.TextMetrics akasha.OffscreenCanvasRenderingContext2D::measureText(java.lang.String)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.OffscreenCanvasRenderingContext2D",
      "classSimpleName": "OffscreenCanvasRenderingContext2D",
      "elementKind": "method",
      "methodName": "measureText",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.Touch akasha.TouchList::item(int)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.TouchList",
      "classSimpleName": "TouchList",
      "elementKind": "method",
      "methodName": "item",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.TreeWalker akasha.Document::createTreeWalker(akasha.Node) @ akasha.XMLDocument",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.XMLDocument",
      "classSimpleName": "XMLDocument",
      "elementKind": "method",
      "methodName": "createTreeWalker",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.TreeWalker akasha.Document::createTreeWalker(akasha.Node)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.Document",
      "classSimpleName": "Document",
      "elementKind": "method",
      "methodName": "createTreeWalker",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.TreeWalker akasha.Document::createTreeWalker(akasha.Node, int) @ akasha.XMLDocument",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.XMLDocument",
      "classSimpleName": "XMLDocument",
      "elementKind": "method",
      "methodName": "createTreeWalker",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.TreeWalker akasha.Document::createTreeWalker(akasha.Node, int)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.Document",
      "classSimpleName": "Document",
      "elementKind": "method",
      "methodName": "createTreeWalker",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.TreeWalker akasha.Document::createTreeWalker(akasha.Node, int, akasha.NodeFilter) @ akasha.XMLDocument",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.XMLDocument",
      "classSimpleName": "XMLDocument",
      "elementKind": "method",
      "methodName": "createTreeWalker",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.TreeWalker akasha.Document::createTreeWalker(akasha.Node, int, akasha.NodeFilter)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.Document",
      "classSimpleName": "Document",
      "elementKind": "method",
      "methodName": "createTreeWalker",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.XMLDocument akasha.DOMImplementation::createDocument(java.lang.String, java.lang.String)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.DOMImplementation",
      "classSimpleName": "DOMImplementation",
      "elementKind": "method",
      "methodName": "createDocument",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.XMLDocument akasha.DOMImplementation::createDocument(java.lang.String, java.lang.String, akasha.DocumentType)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.DOMImplementation",
      "classSimpleName": "DOMImplementation",
      "elementKind": "method",
      "methodName": "createDocument",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.audio.AudioParam akasha.audio.AudioParamMap::get(java.lang.String)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.audio.AudioParamMap",
      "classSimpleName": "AudioParamMap",
      "elementKind": "method",
      "methodName": "get",
      "package": "akasha.audio"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.core.ArrayBuffer akasha.core.ArrayBuffer::slice(int)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.ArrayBuffer",
      "classSimpleName": "ArrayBuffer",
      "elementKind": "method",
      "methodName": "slice",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.core.ArrayBuffer akasha.core.ArrayBuffer::slice(int, int)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.ArrayBuffer",
      "classSimpleName": "ArrayBuffer",
      "elementKind": "method",
      "methodName": "slice",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.core.DataView akasha.bluetooth.BluetoothManufacturerDataMap::get(int)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.bluetooth.BluetoothManufacturerDataMap",
      "classSimpleName": "BluetoothManufacturerDataMap",
      "elementKind": "method",
      "methodName": "get",
      "package": "akasha.bluetooth"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.core.DataView akasha.bluetooth.BluetoothServiceDataMap::get(java.lang.String)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.bluetooth.BluetoothServiceDataMap",
      "classSimpleName": "BluetoothServiceDataMap",
      "elementKind": "method",
      "methodName": "get",
      "package": "akasha.bluetooth"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.core.SharedArrayBuffer akasha.core.SharedArrayBuffer::slice()",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.SharedArrayBuffer",
      "classSimpleName": "SharedArrayBuffer",
      "elementKind": "method",
      "methodName": "slice",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.core.SharedArrayBuffer akasha.core.SharedArrayBuffer::slice(int)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.SharedArrayBuffer",
      "classSimpleName": "SharedArrayBuffer",
      "elementKind": "method",
      "methodName": "slice",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.core.SharedArrayBuffer akasha.core.SharedArrayBuffer::slice(int, int)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.SharedArrayBuffer",
      "classSimpleName": "SharedArrayBuffer",
      "elementKind": "method",
      "methodName": "slice",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.gl.WebGLActiveInfo akasha.gl.WebGL2RenderingContext::getActiveAttrib(akasha.gl.WebGLProgram, int)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.gl.WebGL2RenderingContext",
      "classSimpleName": "WebGL2RenderingContext",
      "elementKind": "method",
      "methodName": "getActiveAttrib",
      "package": "akasha.gl"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.gl.WebGLActiveInfo akasha.gl.WebGL2RenderingContext::getActiveUniform(akasha.gl.WebGLProgram, int)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.gl.WebGL2RenderingContext",
      "classSimpleName": "WebGL2RenderingContext",
      "elementKind": "method",
      "methodName": "getActiveUniform",
      "package": "akasha.gl"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.gl.WebGLActiveInfo akasha.gl.WebGL2RenderingContext::getTransformFeedbackVarying(akasha.gl.WebGLProgram, int)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.gl.WebGL2RenderingContext",
      "classSimpleName": "WebGL2RenderingContext",
      "elementKind": "method",
      "methodName": "getTransformFeedbackVarying",
      "package": "akasha.gl"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.gl.WebGLActiveInfo akasha.gl.WebGLRenderingContext::getActiveAttrib(akasha.gl.WebGLProgram, int)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.gl.WebGLRenderingContext",
      "classSimpleName": "WebGLRenderingContext",
      "elementKind": "method",
      "methodName": "getActiveAttrib",
      "package": "akasha.gl"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.gl.WebGLActiveInfo akasha.gl.WebGLRenderingContext::getActiveUniform(akasha.gl.WebGLProgram, int)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.gl.WebGLRenderingContext",
      "classSimpleName": "WebGLRenderingContext",
      "elementKind": "method",
      "methodName": "getActiveUniform",
      "package": "akasha.gl"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.gl.WebGLBuffer akasha.gl.WebGL2RenderingContext::createBuffer()",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.gl.WebGL2RenderingContext",
      "classSimpleName": "WebGL2RenderingContext",
      "elementKind": "method",
      "methodName": "createBuffer",
      "package": "akasha.gl"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.gl.WebGLBuffer akasha.gl.WebGLRenderingContext::createBuffer()",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.gl.WebGLRenderingContext",
      "classSimpleName": "WebGLRenderingContext",
      "elementKind": "method",
      "methodName": "createBuffer",
      "package": "akasha.gl"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.gl.WebGLContextAttributes akasha.gl.WebGL2RenderingContext::getContextAttributes()",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.gl.WebGL2RenderingContext",
      "classSimpleName": "WebGL2RenderingContext",
      "elementKind": "method",
      "methodName": "getContextAttributes",
      "package": "akasha.gl"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.gl.WebGLContextAttributes akasha.gl.WebGLRenderingContext::getContextAttributes()",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.gl.WebGLRenderingContext",
      "classSimpleName": "WebGLRenderingContext",
      "elementKind": "method",
      "methodName": "getContextAttributes",
      "package": "akasha.gl"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.gl.WebGLFramebuffer akasha.gl.WebGL2RenderingContext::createFramebuffer()",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.gl.WebGL2RenderingContext",
      "classSimpleName": "WebGL2RenderingContext",
      "elementKind": "method",
      "methodName": "createFramebuffer",
      "package": "akasha.gl"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.gl.WebGLFramebuffer akasha.gl.WebGLRenderingContext::createFramebuffer()",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.gl.WebGLRenderingContext",
      "classSimpleName": "WebGLRenderingContext",
      "elementKind": "method",
      "methodName": "createFramebuffer",
      "package": "akasha.gl"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.gl.WebGLProgram akasha.gl.WebGL2RenderingContext::createProgram()",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.gl.WebGL2RenderingContext",
      "classSimpleName": "WebGL2RenderingContext",
      "elementKind": "method",
      "methodName": "createProgram",
      "package": "akasha.gl"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.gl.WebGLProgram akasha.gl.WebGLRenderingContext::createProgram()",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.gl.WebGLRenderingContext",
      "classSimpleName": "WebGLRenderingContext",
      "elementKind": "method",
      "methodName": "createProgram",
      "package": "akasha.gl"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.gl.WebGLQuery akasha.gl.WebGL2RenderingContext::getQuery(int, int)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.gl.WebGL2RenderingContext",
      "classSimpleName": "WebGL2RenderingContext",
      "elementKind": "method",
      "methodName": "getQuery",
      "package": "akasha.gl"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.gl.WebGLRenderbuffer akasha.gl.WebGL2RenderingContext::createRenderbuffer()",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.gl.WebGL2RenderingContext",
      "classSimpleName": "WebGL2RenderingContext",
      "elementKind": "method",
      "methodName": "createRenderbuffer",
      "package": "akasha.gl"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.gl.WebGLRenderbuffer akasha.gl.WebGLRenderingContext::createRenderbuffer()",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.gl.WebGLRenderingContext",
      "classSimpleName": "WebGLRenderingContext",
      "elementKind": "method",
      "methodName": "createRenderbuffer",
      "package": "akasha.gl"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.gl.WebGLShader akasha.gl.WebGL2RenderingContext::createShader(int)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.gl.WebGL2RenderingContext",
      "classSimpleName": "WebGL2RenderingContext",
      "elementKind": "method",
      "methodName": "createShader",
      "package": "akasha.gl"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.gl.WebGLShader akasha.gl.WebGLRenderingContext::createShader(int)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.gl.WebGLRenderingContext",
      "classSimpleName": "WebGLRenderingContext",
      "elementKind": "method",
      "methodName": "createShader",
      "package": "akasha.gl"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.gl.WebGLShaderPrecisionFormat akasha.gl.WebGL2RenderingContext::getShaderPrecisionFormat(int, int)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.gl.WebGL2RenderingContext",
      "classSimpleName": "WebGL2RenderingContext",
      "elementKind": "method",
      "methodName": "getShaderPrecisionFormat",
      "package": "akasha.gl"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.gl.WebGLShaderPrecisionFormat akasha.gl.WebGLRenderingContext::getShaderPrecisionFormat(int, int)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.gl.WebGLRenderingContext",
      "classSimpleName": "WebGLRenderingContext",
      "elementKind": "method",
      "methodName": "getShaderPrecisionFormat",
      "package": "akasha.gl"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.gl.WebGLTexture akasha.gl.WebGL2RenderingContext::createTexture()",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.gl.WebGL2RenderingContext",
      "classSimpleName": "WebGL2RenderingContext",
      "elementKind": "method",
      "methodName": "createTexture",
      "package": "akasha.gl"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.gl.WebGLTexture akasha.gl.WebGLRenderingContext::createTexture()",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.gl.WebGLRenderingContext",
      "classSimpleName": "WebGLRenderingContext",
      "elementKind": "method",
      "methodName": "createTexture",
      "package": "akasha.gl"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.gl.WebGLUniformLocation akasha.gl.WebGL2RenderingContext::getUniformLocation(akasha.gl.WebGLProgram, java.lang.String)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.gl.WebGL2RenderingContext",
      "classSimpleName": "WebGL2RenderingContext",
      "elementKind": "method",
      "methodName": "getUniformLocation",
      "package": "akasha.gl"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.gl.WebGLUniformLocation akasha.gl.WebGLRenderingContext::getUniformLocation(akasha.gl.WebGLProgram, java.lang.String)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.gl.WebGLRenderingContext",
      "classSimpleName": "WebGLRenderingContext",
      "elementKind": "method",
      "methodName": "getUniformLocation",
      "package": "akasha.gl"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.gl.WebGLVertexArrayObjectOES akasha.gl.OES_vertex_array_object::createVertexArrayOES()",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.gl.OES_vertex_array_object",
      "classSimpleName": "OES_vertex_array_object",
      "elementKind": "method",
      "methodName": "createVertexArrayOES",
      "package": "akasha.gl"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsArray<T> akasha.lang.JsArray<T>::concat(T[]) @ akasha.CSSFontFeatureValuesMap.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.CSSFontFeatureValuesMap.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "concat",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsArray<T> akasha.lang.JsArray<T>::concat(T[]) @ akasha.CSSFontPaletteValuesRule.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.CSSFontPaletteValuesRule.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "concat",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsArray<T> akasha.lang.JsArray<T>::concat(T[]) @ akasha.DOMTokenList.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.DOMTokenList.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "concat",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsArray<T> akasha.lang.JsArray<T>::concat(T[]) @ akasha.FormData.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.FormData.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "concat",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsArray<T> akasha.lang.JsArray<T>::concat(T[]) @ akasha.Headers.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.Headers.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "concat",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsArray<T> akasha.lang.JsArray<T>::concat(T[]) @ akasha.MediaKeyStatusMap.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.MediaKeyStatusMap.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "concat",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsArray<T> akasha.lang.JsArray<T>::concat(T[]) @ akasha.NodeList.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.NodeList.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "concat",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsArray<T> akasha.lang.JsArray<T>::concat(T[]) @ akasha.URLSearchParams.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.URLSearchParams.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "concat",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsArray<T> akasha.lang.JsArray<T>::concat(T[]) @ akasha.audio.AudioParamMap.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.audio.AudioParamMap.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "concat",
      "package": "akasha.audio"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsArray<T> akasha.lang.JsArray<T>::concat(T[]) @ akasha.bluetooth.BluetoothManufacturerDataMap.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.bluetooth.BluetoothManufacturerDataMap.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "concat",
      "package": "akasha.bluetooth"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsArray<T> akasha.lang.JsArray<T>::concat(T[]) @ akasha.bluetooth.BluetoothServiceDataMap.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.bluetooth.BluetoothServiceDataMap.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "concat",
      "package": "akasha.bluetooth"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsArray<T> akasha.lang.JsArray<T>::concat(T[]) @ akasha.core.JsMap.Entry<K, V>",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.JsMap.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "concat",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsArray<T> akasha.lang.JsArray<T>::concat(T[]) @ akasha.core.JsWeakMap.Entry<K, V>",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.JsWeakMap.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "concat",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsArray<T> akasha.lang.JsArray<T>::concat(T[]) @ akasha.core.ObjectPropertyEntry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.ObjectPropertyEntry",
      "classSimpleName": "ObjectPropertyEntry",
      "elementKind": "method",
      "methodName": "concat",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsArray<T> akasha.lang.JsArray<T>::concat(T[]) @ akasha.core.RegExpGroups.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.RegExpGroups.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "concat",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsArray<T> akasha.lang.JsArray<T>::concat(T[]) @ akasha.core.RegExpResult.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.RegExpResult.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "concat",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsArray<T> akasha.lang.JsArray<T>::concat(T[]) @ akasha.lang.JsArray.Entry<T>",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.lang.JsArray.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "concat",
      "package": "akasha.lang"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsArray<T> akasha.lang.JsArray<T>::concat(T[]) @ akasha.rtc.RTCStatsReport.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.rtc.RTCStatsReport.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "concat",
      "package": "akasha.rtc"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsArray<T> akasha.lang.JsArray<T>::concat(T[]) @ akasha.xr.XRInputSourceArray.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.xr.XRInputSourceArray.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "concat",
      "package": "akasha.xr"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsArray<T> akasha.lang.JsArray<T>::concat(T[])",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.lang.JsArray",
      "classSimpleName": "JsArray",
      "elementKind": "method",
      "methodName": "concat",
      "package": "akasha.lang"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsArray<T> akasha.lang.JsArray<T>::slice() @ akasha.CSSFontFeatureValuesMap.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.CSSFontFeatureValuesMap.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "slice",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsArray<T> akasha.lang.JsArray<T>::slice() @ akasha.CSSFontPaletteValuesRule.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.CSSFontPaletteValuesRule.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "slice",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsArray<T> akasha.lang.JsArray<T>::slice() @ akasha.DOMTokenList.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.DOMTokenList.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "slice",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsArray<T> akasha.lang.JsArray<T>::slice() @ akasha.FormData.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.FormData.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "slice",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsArray<T> akasha.lang.JsArray<T>::slice() @ akasha.Headers.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.Headers.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "slice",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsArray<T> akasha.lang.JsArray<T>::slice() @ akasha.MediaKeyStatusMap.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.MediaKeyStatusMap.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "slice",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsArray<T> akasha.lang.JsArray<T>::slice() @ akasha.NodeList.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.NodeList.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "slice",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsArray<T> akasha.lang.JsArray<T>::slice() @ akasha.URLSearchParams.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.URLSearchParams.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "slice",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsArray<T> akasha.lang.JsArray<T>::slice() @ akasha.audio.AudioParamMap.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.audio.AudioParamMap.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "slice",
      "package": "akasha.audio"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsArray<T> akasha.lang.JsArray<T>::slice() @ akasha.bluetooth.BluetoothManufacturerDataMap.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.bluetooth.BluetoothManufacturerDataMap.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "slice",
      "package": "akasha.bluetooth"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsArray<T> akasha.lang.JsArray<T>::slice() @ akasha.bluetooth.BluetoothServiceDataMap.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.bluetooth.BluetoothServiceDataMap.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "slice",
      "package": "akasha.bluetooth"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsArray<T> akasha.lang.JsArray<T>::slice() @ akasha.core.JsMap.Entry<K, V>",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.JsMap.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "slice",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsArray<T> akasha.lang.JsArray<T>::slice() @ akasha.core.JsWeakMap.Entry<K, V>",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.JsWeakMap.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "slice",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsArray<T> akasha.lang.JsArray<T>::slice() @ akasha.core.ObjectPropertyEntry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.ObjectPropertyEntry",
      "classSimpleName": "ObjectPropertyEntry",
      "elementKind": "method",
      "methodName": "slice",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsArray<T> akasha.lang.JsArray<T>::slice() @ akasha.core.RegExpGroups.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.RegExpGroups.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "slice",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsArray<T> akasha.lang.JsArray<T>::slice() @ akasha.core.RegExpResult.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.RegExpResult.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "slice",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsArray<T> akasha.lang.JsArray<T>::slice() @ akasha.lang.JsArray.Entry<T>",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.lang.JsArray.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "slice",
      "package": "akasha.lang"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsArray<T> akasha.lang.JsArray<T>::slice() @ akasha.rtc.RTCStatsReport.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.rtc.RTCStatsReport.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "slice",
      "package": "akasha.rtc"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsArray<T> akasha.lang.JsArray<T>::slice() @ akasha.xr.XRInputSourceArray.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.xr.XRInputSourceArray.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "slice",
      "package": "akasha.xr"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsArray<T> akasha.lang.JsArray<T>::slice()",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.lang.JsArray",
      "classSimpleName": "JsArray",
      "elementKind": "method",
      "methodName": "slice",
      "package": "akasha.lang"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsArray<T> akasha.lang.JsArray<T>::slice(int) @ akasha.CSSFontFeatureValuesMap.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.CSSFontFeatureValuesMap.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "slice",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsArray<T> akasha.lang.JsArray<T>::slice(int) @ akasha.CSSFontPaletteValuesRule.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.CSSFontPaletteValuesRule.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "slice",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsArray<T> akasha.lang.JsArray<T>::slice(int) @ akasha.DOMTokenList.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.DOMTokenList.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "slice",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsArray<T> akasha.lang.JsArray<T>::slice(int) @ akasha.FormData.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.FormData.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "slice",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsArray<T> akasha.lang.JsArray<T>::slice(int) @ akasha.Headers.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.Headers.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "slice",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsArray<T> akasha.lang.JsArray<T>::slice(int) @ akasha.MediaKeyStatusMap.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.MediaKeyStatusMap.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "slice",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsArray<T> akasha.lang.JsArray<T>::slice(int) @ akasha.NodeList.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.NodeList.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "slice",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsArray<T> akasha.lang.JsArray<T>::slice(int) @ akasha.URLSearchParams.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.URLSearchParams.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "slice",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsArray<T> akasha.lang.JsArray<T>::slice(int) @ akasha.audio.AudioParamMap.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.audio.AudioParamMap.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "slice",
      "package": "akasha.audio"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsArray<T> akasha.lang.JsArray<T>::slice(int) @ akasha.bluetooth.BluetoothManufacturerDataMap.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.bluetooth.BluetoothManufacturerDataMap.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "slice",
      "package": "akasha.bluetooth"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsArray<T> akasha.lang.JsArray<T>::slice(int) @ akasha.bluetooth.BluetoothServiceDataMap.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.bluetooth.BluetoothServiceDataMap.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "slice",
      "package": "akasha.bluetooth"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsArray<T> akasha.lang.JsArray<T>::slice(int) @ akasha.core.JsMap.Entry<K, V>",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.JsMap.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "slice",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsArray<T> akasha.lang.JsArray<T>::slice(int) @ akasha.core.JsWeakMap.Entry<K, V>",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.JsWeakMap.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "slice",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsArray<T> akasha.lang.JsArray<T>::slice(int) @ akasha.core.ObjectPropertyEntry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.ObjectPropertyEntry",
      "classSimpleName": "ObjectPropertyEntry",
      "elementKind": "method",
      "methodName": "slice",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsArray<T> akasha.lang.JsArray<T>::slice(int) @ akasha.core.RegExpGroups.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.RegExpGroups.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "slice",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsArray<T> akasha.lang.JsArray<T>::slice(int) @ akasha.core.RegExpResult.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.RegExpResult.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "slice",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsArray<T> akasha.lang.JsArray<T>::slice(int) @ akasha.lang.JsArray.Entry<T>",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.lang.JsArray.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "slice",
      "package": "akasha.lang"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsArray<T> akasha.lang.JsArray<T>::slice(int) @ akasha.rtc.RTCStatsReport.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.rtc.RTCStatsReport.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "slice",
      "package": "akasha.rtc"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsArray<T> akasha.lang.JsArray<T>::slice(int) @ akasha.xr.XRInputSourceArray.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.xr.XRInputSourceArray.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "slice",
      "package": "akasha.xr"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsArray<T> akasha.lang.JsArray<T>::slice(int)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.lang.JsArray",
      "classSimpleName": "JsArray",
      "elementKind": "method",
      "methodName": "slice",
      "package": "akasha.lang"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsArray<T> akasha.lang.JsArray<T>::slice(int, int) @ akasha.CSSFontFeatureValuesMap.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.CSSFontFeatureValuesMap.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "slice",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsArray<T> akasha.lang.JsArray<T>::slice(int, int) @ akasha.CSSFontPaletteValuesRule.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.CSSFontPaletteValuesRule.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "slice",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsArray<T> akasha.lang.JsArray<T>::slice(int, int) @ akasha.DOMTokenList.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.DOMTokenList.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "slice",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsArray<T> akasha.lang.JsArray<T>::slice(int, int) @ akasha.FormData.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.FormData.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "slice",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsArray<T> akasha.lang.JsArray<T>::slice(int, int) @ akasha.Headers.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.Headers.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "slice",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsArray<T> akasha.lang.JsArray<T>::slice(int, int) @ akasha.MediaKeyStatusMap.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.MediaKeyStatusMap.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "slice",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsArray<T> akasha.lang.JsArray<T>::slice(int, int) @ akasha.NodeList.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.NodeList.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "slice",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsArray<T> akasha.lang.JsArray<T>::slice(int, int) @ akasha.URLSearchParams.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.URLSearchParams.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "slice",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsArray<T> akasha.lang.JsArray<T>::slice(int, int) @ akasha.audio.AudioParamMap.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.audio.AudioParamMap.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "slice",
      "package": "akasha.audio"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsArray<T> akasha.lang.JsArray<T>::slice(int, int) @ akasha.bluetooth.BluetoothManufacturerDataMap.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.bluetooth.BluetoothManufacturerDataMap.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "slice",
      "package": "akasha.bluetooth"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsArray<T> akasha.lang.JsArray<T>::slice(int, int) @ akasha.bluetooth.BluetoothServiceDataMap.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.bluetooth.BluetoothServiceDataMap.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "slice",
      "package": "akasha.bluetooth"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsArray<T> akasha.lang.JsArray<T>::slice(int, int) @ akasha.core.JsMap.Entry<K, V>",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.JsMap.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "slice",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsArray<T> akasha.lang.JsArray<T>::slice(int, int) @ akasha.core.JsWeakMap.Entry<K, V>",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.JsWeakMap.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "slice",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsArray<T> akasha.lang.JsArray<T>::slice(int, int) @ akasha.core.ObjectPropertyEntry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.ObjectPropertyEntry",
      "classSimpleName": "ObjectPropertyEntry",
      "elementKind": "method",
      "methodName": "slice",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsArray<T> akasha.lang.JsArray<T>::slice(int, int) @ akasha.core.RegExpGroups.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.RegExpGroups.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "slice",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsArray<T> akasha.lang.JsArray<T>::slice(int, int) @ akasha.core.RegExpResult.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.RegExpResult.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "slice",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsArray<T> akasha.lang.JsArray<T>::slice(int, int) @ akasha.lang.JsArray.Entry<T>",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.lang.JsArray.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "slice",
      "package": "akasha.lang"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsArray<T> akasha.lang.JsArray<T>::slice(int, int) @ akasha.rtc.RTCStatsReport.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.rtc.RTCStatsReport.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "slice",
      "package": "akasha.rtc"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsArray<T> akasha.lang.JsArray<T>::slice(int, int) @ akasha.xr.XRInputSourceArray.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.xr.XRInputSourceArray.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "slice",
      "package": "akasha.xr"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsArray<T> akasha.lang.JsArray<T>::slice(int, int)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.lang.JsArray",
      "classSimpleName": "JsArray",
      "elementKind": "method",
      "methodName": "slice",
      "package": "akasha.lang"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsArray<akasha.Element> akasha.Document::elementsFromPoint(double, double) @ akasha.XMLDocument",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.XMLDocument",
      "classSimpleName": "XMLDocument",
      "elementKind": "method",
      "methodName": "elementsFromPoint",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsArray<akasha.Element> akasha.Document::elementsFromPoint(double, double)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.Document",
      "classSimpleName": "Document",
      "elementKind": "method",
      "methodName": "elementsFromPoint",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsArray<akasha.gl.WebGLShader> akasha.gl.WebGL2RenderingContext::getAttachedShaders(akasha.gl.WebGLProgram)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.gl.WebGL2RenderingContext",
      "classSimpleName": "WebGL2RenderingContext",
      "elementKind": "method",
      "methodName": "getAttachedShaders",
      "package": "akasha.gl"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsArray<akasha.gl.WebGLShader> akasha.gl.WebGLRenderingContext::getAttachedShaders(akasha.gl.WebGLProgram)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.gl.WebGLRenderingContext",
      "classSimpleName": "WebGLRenderingContext",
      "elementKind": "method",
      "methodName": "getAttachedShaders",
      "package": "akasha.gl"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsArray<akasha.perf.PerformanceEntry> akasha.perf.Performance::getEntries()",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.perf.Performance",
      "classSimpleName": "Performance",
      "elementKind": "method",
      "methodName": "getEntries",
      "package": "akasha.perf"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsArray<akasha.perf.PerformanceEntry> akasha.perf.Performance::getEntriesByName(java.lang.String)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.perf.Performance",
      "classSimpleName": "Performance",
      "elementKind": "method",
      "methodName": "getEntriesByName",
      "package": "akasha.perf"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsArray<akasha.perf.PerformanceEntry> akasha.perf.Performance::getEntriesByName(java.lang.String, java.lang.String)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.perf.Performance",
      "classSimpleName": "Performance",
      "elementKind": "method",
      "methodName": "getEntriesByName",
      "package": "akasha.perf"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsArray<akasha.perf.PerformanceEntry> akasha.perf.Performance::getEntriesByType(java.lang.String)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.perf.Performance",
      "classSimpleName": "Performance",
      "elementKind": "method",
      "methodName": "getEntriesByType",
      "package": "akasha.perf"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsArray<java.lang.Double> akasha.CSSFontFeatureValuesMap::get(java.lang.String)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.CSSFontFeatureValuesMap",
      "classSimpleName": "CSSFontFeatureValuesMap",
      "elementKind": "method",
      "methodName": "get",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsArray<java.lang.String> akasha.URLSearchParams::getAll(java.lang.String)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.URLSearchParams",
      "classSimpleName": "URLSearchParams",
      "elementKind": "method",
      "methodName": "getAll",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsArray<java.lang.String> akasha.core.JsString::split()",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.JsString",
      "classSimpleName": "JsString",
      "elementKind": "method",
      "methodName": "split",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsArray<java.lang.String> akasha.core.JsString::split(akasha.core.RegExp)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.JsString",
      "classSimpleName": "JsString",
      "elementKind": "method",
      "methodName": "split",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsArray<java.lang.String> akasha.core.JsString::split(akasha.core.RegExp, int)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.JsString",
      "classSimpleName": "JsString",
      "elementKind": "method",
      "methodName": "split",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsArray<java.lang.String> akasha.core.JsString::split(java.lang.String)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.JsString",
      "classSimpleName": "JsString",
      "elementKind": "method",
      "methodName": "split",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsArray<java.lang.String> akasha.core.JsString::split(java.lang.String, int)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.JsString",
      "classSimpleName": "JsString",
      "elementKind": "method",
      "methodName": "split",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsArray<java.lang.String> akasha.gl.WebGL2RenderingContext::getSupportedExtensions()",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.gl.WebGL2RenderingContext",
      "classSimpleName": "WebGL2RenderingContext",
      "elementKind": "method",
      "methodName": "getSupportedExtensions",
      "package": "akasha.gl"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsArray<java.lang.String> akasha.gl.WebGLRenderingContext::getSupportedExtensions()",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.gl.WebGLRenderingContext",
      "classSimpleName": "WebGLRenderingContext",
      "elementKind": "method",
      "methodName": "getSupportedExtensions",
      "package": "akasha.gl"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsIterator<akasha.CSSFontFeatureValuesMap.Entry> akasha.CSSFontFeatureValuesMap::entries()",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.CSSFontFeatureValuesMap",
      "classSimpleName": "CSSFontFeatureValuesMap",
      "elementKind": "method",
      "methodName": "entries",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsIterator<akasha.CSSFontPaletteValuesRule.Entry> akasha.CSSFontPaletteValuesRule::entries()",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.CSSFontPaletteValuesRule",
      "classSimpleName": "CSSFontPaletteValuesRule",
      "elementKind": "method",
      "methodName": "entries",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsIterator<akasha.DOMTokenList.Entry> akasha.DOMTokenList::entries()",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.DOMTokenList",
      "classSimpleName": "DOMTokenList",
      "elementKind": "method",
      "methodName": "entries",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsIterator<akasha.FormData.Entry> akasha.FormData::entries()",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.FormData",
      "classSimpleName": "FormData",
      "elementKind": "method",
      "methodName": "entries",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsIterator<akasha.FormDataEntryValue> akasha.FormData::values()",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.FormData",
      "classSimpleName": "FormData",
      "elementKind": "method",
      "methodName": "values",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsIterator<akasha.Headers.Entry> akasha.Headers::entries()",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.Headers",
      "classSimpleName": "Headers",
      "elementKind": "method",
      "methodName": "entries",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsIterator<akasha.MediaKeyStatusMap.Entry> akasha.MediaKeyStatusMap::entries()",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.MediaKeyStatusMap",
      "classSimpleName": "MediaKeyStatusMap",
      "elementKind": "method",
      "methodName": "entries",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsIterator<akasha.Node> akasha.NodeList::values() @ akasha.RadioNodeList",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.RadioNodeList",
      "classSimpleName": "RadioNodeList",
      "elementKind": "method",
      "methodName": "values",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsIterator<akasha.Node> akasha.NodeList::values()",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.NodeList",
      "classSimpleName": "NodeList",
      "elementKind": "method",
      "methodName": "values",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsIterator<akasha.NodeList.Entry> akasha.NodeList::entries() @ akasha.RadioNodeList",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.RadioNodeList",
      "classSimpleName": "RadioNodeList",
      "elementKind": "method",
      "methodName": "entries",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsIterator<akasha.NodeList.Entry> akasha.NodeList::entries()",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.NodeList",
      "classSimpleName": "NodeList",
      "elementKind": "method",
      "methodName": "entries",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsIterator<akasha.URLSearchParams.Entry> akasha.URLSearchParams::entries()",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.URLSearchParams",
      "classSimpleName": "URLSearchParams",
      "elementKind": "method",
      "methodName": "entries",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsIterator<akasha.audio.AudioParam> akasha.audio.AudioParamMap::values()",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.audio.AudioParamMap",
      "classSimpleName": "AudioParamMap",
      "elementKind": "method",
      "methodName": "values",
      "package": "akasha.audio"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsIterator<akasha.audio.AudioParamMap.Entry> akasha.audio.AudioParamMap::entries()",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.audio.AudioParamMap",
      "classSimpleName": "AudioParamMap",
      "elementKind": "method",
      "methodName": "entries",
      "package": "akasha.audio"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsIterator<akasha.bluetooth.BluetoothManufacturerDataMap.Entry> akasha.bluetooth.BluetoothManufacturerDataMap::entries()",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.bluetooth.BluetoothManufacturerDataMap",
      "classSimpleName": "BluetoothManufacturerDataMap",
      "elementKind": "method",
      "methodName": "entries",
      "package": "akasha.bluetooth"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsIterator<akasha.bluetooth.BluetoothServiceDataMap.Entry> akasha.bluetooth.BluetoothServiceDataMap::entries()",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.bluetooth.BluetoothServiceDataMap",
      "classSimpleName": "BluetoothServiceDataMap",
      "elementKind": "method",
      "methodName": "entries",
      "package": "akasha.bluetooth"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsIterator<akasha.core.BufferSource> akasha.MediaKeyStatusMap::keys()",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.MediaKeyStatusMap",
      "classSimpleName": "MediaKeyStatusMap",
      "elementKind": "method",
      "methodName": "keys",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsIterator<akasha.core.DataView> akasha.bluetooth.BluetoothManufacturerDataMap::values()",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.bluetooth.BluetoothManufacturerDataMap",
      "classSimpleName": "BluetoothManufacturerDataMap",
      "elementKind": "method",
      "methodName": "values",
      "package": "akasha.bluetooth"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsIterator<akasha.core.DataView> akasha.bluetooth.BluetoothServiceDataMap::values()",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.bluetooth.BluetoothServiceDataMap",
      "classSimpleName": "BluetoothServiceDataMap",
      "elementKind": "method",
      "methodName": "values",
      "package": "akasha.bluetooth"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsIterator<akasha.core.RegExpGroups.Entry> akasha.core.RegExpGroups::entries()",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.RegExpGroups",
      "classSimpleName": "RegExpGroups",
      "elementKind": "method",
      "methodName": "entries",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsIterator<akasha.core.RegExpResult.Entry> akasha.core.RegExpResult::entries()",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.RegExpResult",
      "classSimpleName": "RegExpResult",
      "elementKind": "method",
      "methodName": "entries",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.method.added",
    "description": "Method was added.",
    "newElement": "method akasha.lang.JsIterator<akasha.core.RegExpResult> akasha.core.JsString::matchAll(akasha.core.RegExp)",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.core.JsString",
      "classSimpleName": "JsString",
      "elementKind": "method",
      "methodName": "matchAll",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.method.added",
    "description": "Method was added.",
    "newElement": "method akasha.lang.JsIterator<akasha.core.RegExpResult> akasha.core.JsString::matchAll(java.lang.String)",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.core.JsString",
      "classSimpleName": "JsString",
      "elementKind": "method",
      "methodName": "matchAll",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsIterator<akasha.lang.JsArray<java.lang.Double>> akasha.CSSFontFeatureValuesMap::values()",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.CSSFontFeatureValuesMap",
      "classSimpleName": "CSSFontFeatureValuesMap",
      "elementKind": "method",
      "methodName": "values",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsIterator<akasha.rtc.RTCStatsReport.Entry> akasha.rtc.RTCStatsReport::entries()",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.rtc.RTCStatsReport",
      "classSimpleName": "RTCStatsReport",
      "elementKind": "method",
      "methodName": "entries",
      "package": "akasha.rtc"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsIterator<akasha.xr.XRInputSource> akasha.xr.XRInputSourceArray::values()",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.xr.XRInputSourceArray",
      "classSimpleName": "XRInputSourceArray",
      "elementKind": "method",
      "methodName": "values",
      "package": "akasha.xr"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsIterator<akasha.xr.XRInputSourceArray.Entry> akasha.xr.XRInputSourceArray::entries()",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.xr.XRInputSourceArray",
      "classSimpleName": "XRInputSourceArray",
      "elementKind": "method",
      "methodName": "entries",
      "package": "akasha.xr"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsIterator<java.lang.Double> akasha.CSSFontPaletteValuesRule::keys()",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.CSSFontPaletteValuesRule",
      "classSimpleName": "CSSFontPaletteValuesRule",
      "elementKind": "method",
      "methodName": "keys",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsIterator<java.lang.Double> akasha.DOMTokenList::keys()",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.DOMTokenList",
      "classSimpleName": "DOMTokenList",
      "elementKind": "method",
      "methodName": "keys",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsIterator<java.lang.Double> akasha.NodeList::keys() @ akasha.RadioNodeList",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.RadioNodeList",
      "classSimpleName": "RadioNodeList",
      "elementKind": "method",
      "methodName": "keys",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsIterator<java.lang.Double> akasha.NodeList::keys()",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.NodeList",
      "classSimpleName": "NodeList",
      "elementKind": "method",
      "methodName": "keys",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsIterator<java.lang.Double> akasha.bluetooth.BluetoothManufacturerDataMap::keys()",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.bluetooth.BluetoothManufacturerDataMap",
      "classSimpleName": "BluetoothManufacturerDataMap",
      "elementKind": "method",
      "methodName": "keys",
      "package": "akasha.bluetooth"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsIterator<java.lang.Double> akasha.core.RegExpResult::keys()",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.RegExpResult",
      "classSimpleName": "RegExpResult",
      "elementKind": "method",
      "methodName": "keys",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsIterator<java.lang.Double> akasha.xr.XRInputSourceArray::keys()",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.xr.XRInputSourceArray",
      "classSimpleName": "XRInputSourceArray",
      "elementKind": "method",
      "methodName": "keys",
      "package": "akasha.xr"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsIterator<java.lang.Object> akasha.rtc.RTCStatsReport::values()",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.rtc.RTCStatsReport",
      "classSimpleName": "RTCStatsReport",
      "elementKind": "method",
      "methodName": "values",
      "package": "akasha.rtc"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsIterator<java.lang.String> akasha.CSSFontFeatureValuesMap::keys()",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.CSSFontFeatureValuesMap",
      "classSimpleName": "CSSFontFeatureValuesMap",
      "elementKind": "method",
      "methodName": "keys",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsIterator<java.lang.String> akasha.CSSFontPaletteValuesRule::values()",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.CSSFontPaletteValuesRule",
      "classSimpleName": "CSSFontPaletteValuesRule",
      "elementKind": "method",
      "methodName": "values",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsIterator<java.lang.String> akasha.DOMTokenList::values()",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.DOMTokenList",
      "classSimpleName": "DOMTokenList",
      "elementKind": "method",
      "methodName": "values",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsIterator<java.lang.String> akasha.FormData::keys()",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.FormData",
      "classSimpleName": "FormData",
      "elementKind": "method",
      "methodName": "keys",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsIterator<java.lang.String> akasha.Headers::keys()",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.Headers",
      "classSimpleName": "Headers",
      "elementKind": "method",
      "methodName": "keys",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsIterator<java.lang.String> akasha.Headers::values()",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.Headers",
      "classSimpleName": "Headers",
      "elementKind": "method",
      "methodName": "values",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsIterator<java.lang.String> akasha.MediaKeyStatusMap::values()",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.MediaKeyStatusMap",
      "classSimpleName": "MediaKeyStatusMap",
      "elementKind": "method",
      "methodName": "values",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsIterator<java.lang.String> akasha.URLSearchParams::keys()",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.URLSearchParams",
      "classSimpleName": "URLSearchParams",
      "elementKind": "method",
      "methodName": "keys",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsIterator<java.lang.String> akasha.URLSearchParams::values()",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.URLSearchParams",
      "classSimpleName": "URLSearchParams",
      "elementKind": "method",
      "methodName": "values",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsIterator<java.lang.String> akasha.audio.AudioParamMap::keys()",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.audio.AudioParamMap",
      "classSimpleName": "AudioParamMap",
      "elementKind": "method",
      "methodName": "keys",
      "package": "akasha.audio"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsIterator<java.lang.String> akasha.bluetooth.BluetoothServiceDataMap::keys()",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.bluetooth.BluetoothServiceDataMap",
      "classSimpleName": "BluetoothServiceDataMap",
      "elementKind": "method",
      "methodName": "keys",
      "package": "akasha.bluetooth"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsIterator<java.lang.String> akasha.core.RegExpGroups::keys()",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.RegExpGroups",
      "classSimpleName": "RegExpGroups",
      "elementKind": "method",
      "methodName": "keys",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsIterator<java.lang.String> akasha.core.RegExpGroups::values()",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.RegExpGroups",
      "classSimpleName": "RegExpGroups",
      "elementKind": "method",
      "methodName": "values",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsIterator<java.lang.String> akasha.core.RegExpResult::values()",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.RegExpResult",
      "classSimpleName": "RegExpResult",
      "elementKind": "method",
      "methodName": "values",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsIterator<java.lang.String> akasha.rtc.RTCStatsReport::keys()",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.rtc.RTCStatsReport",
      "classSimpleName": "RTCStatsReport",
      "elementKind": "method",
      "methodName": "keys",
      "package": "akasha.rtc"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsIteratorIterable<K> akasha.core.JsMap<K, V>::keys()",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.JsMap",
      "classSimpleName": "JsMap",
      "elementKind": "method",
      "methodName": "keys",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsIteratorIterable<T> akasha.core.JsSet<T>::keys()",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.JsSet",
      "classSimpleName": "JsSet",
      "elementKind": "method",
      "methodName": "keys",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsIteratorIterable<T> akasha.core.JsSet<T>::values()",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.JsSet",
      "classSimpleName": "JsSet",
      "elementKind": "method",
      "methodName": "values",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsIteratorIterable<T> akasha.lang.JsArray<T>::values() @ akasha.CSSFontFeatureValuesMap.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.CSSFontFeatureValuesMap.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "values",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsIteratorIterable<T> akasha.lang.JsArray<T>::values() @ akasha.CSSFontPaletteValuesRule.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.CSSFontPaletteValuesRule.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "values",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsIteratorIterable<T> akasha.lang.JsArray<T>::values() @ akasha.DOMTokenList.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.DOMTokenList.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "values",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsIteratorIterable<T> akasha.lang.JsArray<T>::values() @ akasha.FormData.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.FormData.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "values",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsIteratorIterable<T> akasha.lang.JsArray<T>::values() @ akasha.Headers.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.Headers.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "values",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsIteratorIterable<T> akasha.lang.JsArray<T>::values() @ akasha.MediaKeyStatusMap.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.MediaKeyStatusMap.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "values",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsIteratorIterable<T> akasha.lang.JsArray<T>::values() @ akasha.NodeList.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.NodeList.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "values",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsIteratorIterable<T> akasha.lang.JsArray<T>::values() @ akasha.URLSearchParams.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.URLSearchParams.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "values",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsIteratorIterable<T> akasha.lang.JsArray<T>::values() @ akasha.audio.AudioParamMap.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.audio.AudioParamMap.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "values",
      "package": "akasha.audio"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsIteratorIterable<T> akasha.lang.JsArray<T>::values() @ akasha.bluetooth.BluetoothManufacturerDataMap.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.bluetooth.BluetoothManufacturerDataMap.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "values",
      "package": "akasha.bluetooth"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsIteratorIterable<T> akasha.lang.JsArray<T>::values() @ akasha.bluetooth.BluetoothServiceDataMap.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.bluetooth.BluetoothServiceDataMap.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "values",
      "package": "akasha.bluetooth"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsIteratorIterable<T> akasha.lang.JsArray<T>::values() @ akasha.core.JsMap.Entry<K, V>",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.JsMap.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "values",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsIteratorIterable<T> akasha.lang.JsArray<T>::values() @ akasha.core.JsWeakMap.Entry<K, V>",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.JsWeakMap.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "values",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsIteratorIterable<T> akasha.lang.JsArray<T>::values() @ akasha.core.ObjectPropertyEntry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.ObjectPropertyEntry",
      "classSimpleName": "ObjectPropertyEntry",
      "elementKind": "method",
      "methodName": "values",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsIteratorIterable<T> akasha.lang.JsArray<T>::values() @ akasha.core.RegExpGroups.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.RegExpGroups.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "values",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsIteratorIterable<T> akasha.lang.JsArray<T>::values() @ akasha.core.RegExpResult.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.RegExpResult.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "values",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsIteratorIterable<T> akasha.lang.JsArray<T>::values() @ akasha.lang.JsArray.Entry<T>",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.lang.JsArray.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "values",
      "package": "akasha.lang"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsIteratorIterable<T> akasha.lang.JsArray<T>::values() @ akasha.rtc.RTCStatsReport.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.rtc.RTCStatsReport.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "values",
      "package": "akasha.rtc"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsIteratorIterable<T> akasha.lang.JsArray<T>::values() @ akasha.xr.XRInputSourceArray.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.xr.XRInputSourceArray.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "values",
      "package": "akasha.xr"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsIteratorIterable<T> akasha.lang.JsArray<T>::values()",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.lang.JsArray",
      "classSimpleName": "JsArray",
      "elementKind": "method",
      "methodName": "values",
      "package": "akasha.lang"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsIteratorIterable<V> akasha.core.JsMap<K, V>::values()",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.JsMap",
      "classSimpleName": "JsMap",
      "elementKind": "method",
      "methodName": "values",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsIteratorIterable<akasha.core.JsMap.Entry<K, V>> akasha.core.JsMap<K, V>::entries()",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.JsMap",
      "classSimpleName": "JsMap",
      "elementKind": "method",
      "methodName": "entries",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsIteratorIterable<akasha.lang.JsArray<T>> akasha.core.JsSet<T>::entries()",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.JsSet",
      "classSimpleName": "JsSet",
      "elementKind": "method",
      "methodName": "entries",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsIteratorIterable<akasha.lang.JsArray<akasha.lang.JsArray.Entry<T>>> akasha.lang.JsArray<T>::entries() @ akasha.CSSFontFeatureValuesMap.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.CSSFontFeatureValuesMap.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "entries",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsIteratorIterable<akasha.lang.JsArray<akasha.lang.JsArray.Entry<T>>> akasha.lang.JsArray<T>::entries() @ akasha.CSSFontPaletteValuesRule.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.CSSFontPaletteValuesRule.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "entries",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsIteratorIterable<akasha.lang.JsArray<akasha.lang.JsArray.Entry<T>>> akasha.lang.JsArray<T>::entries() @ akasha.DOMTokenList.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.DOMTokenList.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "entries",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsIteratorIterable<akasha.lang.JsArray<akasha.lang.JsArray.Entry<T>>> akasha.lang.JsArray<T>::entries() @ akasha.FormData.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.FormData.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "entries",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsIteratorIterable<akasha.lang.JsArray<akasha.lang.JsArray.Entry<T>>> akasha.lang.JsArray<T>::entries() @ akasha.Headers.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.Headers.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "entries",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsIteratorIterable<akasha.lang.JsArray<akasha.lang.JsArray.Entry<T>>> akasha.lang.JsArray<T>::entries() @ akasha.MediaKeyStatusMap.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.MediaKeyStatusMap.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "entries",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsIteratorIterable<akasha.lang.JsArray<akasha.lang.JsArray.Entry<T>>> akasha.lang.JsArray<T>::entries() @ akasha.NodeList.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.NodeList.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "entries",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsIteratorIterable<akasha.lang.JsArray<akasha.lang.JsArray.Entry<T>>> akasha.lang.JsArray<T>::entries() @ akasha.URLSearchParams.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.URLSearchParams.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "entries",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsIteratorIterable<akasha.lang.JsArray<akasha.lang.JsArray.Entry<T>>> akasha.lang.JsArray<T>::entries() @ akasha.audio.AudioParamMap.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.audio.AudioParamMap.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "entries",
      "package": "akasha.audio"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsIteratorIterable<akasha.lang.JsArray<akasha.lang.JsArray.Entry<T>>> akasha.lang.JsArray<T>::entries() @ akasha.bluetooth.BluetoothManufacturerDataMap.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.bluetooth.BluetoothManufacturerDataMap.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "entries",
      "package": "akasha.bluetooth"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsIteratorIterable<akasha.lang.JsArray<akasha.lang.JsArray.Entry<T>>> akasha.lang.JsArray<T>::entries() @ akasha.bluetooth.BluetoothServiceDataMap.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.bluetooth.BluetoothServiceDataMap.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "entries",
      "package": "akasha.bluetooth"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsIteratorIterable<akasha.lang.JsArray<akasha.lang.JsArray.Entry<T>>> akasha.lang.JsArray<T>::entries() @ akasha.core.JsMap.Entry<K, V>",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.JsMap.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "entries",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsIteratorIterable<akasha.lang.JsArray<akasha.lang.JsArray.Entry<T>>> akasha.lang.JsArray<T>::entries() @ akasha.core.JsWeakMap.Entry<K, V>",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.JsWeakMap.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "entries",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsIteratorIterable<akasha.lang.JsArray<akasha.lang.JsArray.Entry<T>>> akasha.lang.JsArray<T>::entries() @ akasha.core.ObjectPropertyEntry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.ObjectPropertyEntry",
      "classSimpleName": "ObjectPropertyEntry",
      "elementKind": "method",
      "methodName": "entries",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsIteratorIterable<akasha.lang.JsArray<akasha.lang.JsArray.Entry<T>>> akasha.lang.JsArray<T>::entries() @ akasha.core.RegExpGroups.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.RegExpGroups.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "entries",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsIteratorIterable<akasha.lang.JsArray<akasha.lang.JsArray.Entry<T>>> akasha.lang.JsArray<T>::entries() @ akasha.core.RegExpResult.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.RegExpResult.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "entries",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsIteratorIterable<akasha.lang.JsArray<akasha.lang.JsArray.Entry<T>>> akasha.lang.JsArray<T>::entries() @ akasha.lang.JsArray.Entry<T>",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.lang.JsArray.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "entries",
      "package": "akasha.lang"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsIteratorIterable<akasha.lang.JsArray<akasha.lang.JsArray.Entry<T>>> akasha.lang.JsArray<T>::entries() @ akasha.rtc.RTCStatsReport.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.rtc.RTCStatsReport.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "entries",
      "package": "akasha.rtc"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsIteratorIterable<akasha.lang.JsArray<akasha.lang.JsArray.Entry<T>>> akasha.lang.JsArray<T>::entries() @ akasha.xr.XRInputSourceArray.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.xr.XRInputSourceArray.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "entries",
      "package": "akasha.xr"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsIteratorIterable<akasha.lang.JsArray<akasha.lang.JsArray.Entry<T>>> akasha.lang.JsArray<T>::entries()",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.lang.JsArray",
      "classSimpleName": "JsArray",
      "elementKind": "method",
      "methodName": "entries",
      "package": "akasha.lang"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsIteratorIterable<java.lang.Double> akasha.lang.JsArray<T>::keys() @ akasha.CSSFontFeatureValuesMap.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.CSSFontFeatureValuesMap.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "keys",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsIteratorIterable<java.lang.Double> akasha.lang.JsArray<T>::keys() @ akasha.CSSFontPaletteValuesRule.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.CSSFontPaletteValuesRule.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "keys",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsIteratorIterable<java.lang.Double> akasha.lang.JsArray<T>::keys() @ akasha.DOMTokenList.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.DOMTokenList.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "keys",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsIteratorIterable<java.lang.Double> akasha.lang.JsArray<T>::keys() @ akasha.FormData.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.FormData.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "keys",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsIteratorIterable<java.lang.Double> akasha.lang.JsArray<T>::keys() @ akasha.Headers.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.Headers.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "keys",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsIteratorIterable<java.lang.Double> akasha.lang.JsArray<T>::keys() @ akasha.MediaKeyStatusMap.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.MediaKeyStatusMap.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "keys",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsIteratorIterable<java.lang.Double> akasha.lang.JsArray<T>::keys() @ akasha.NodeList.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.NodeList.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "keys",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsIteratorIterable<java.lang.Double> akasha.lang.JsArray<T>::keys() @ akasha.URLSearchParams.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.URLSearchParams.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "keys",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsIteratorIterable<java.lang.Double> akasha.lang.JsArray<T>::keys() @ akasha.audio.AudioParamMap.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.audio.AudioParamMap.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "keys",
      "package": "akasha.audio"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsIteratorIterable<java.lang.Double> akasha.lang.JsArray<T>::keys() @ akasha.bluetooth.BluetoothManufacturerDataMap.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.bluetooth.BluetoothManufacturerDataMap.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "keys",
      "package": "akasha.bluetooth"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsIteratorIterable<java.lang.Double> akasha.lang.JsArray<T>::keys() @ akasha.bluetooth.BluetoothServiceDataMap.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.bluetooth.BluetoothServiceDataMap.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "keys",
      "package": "akasha.bluetooth"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsIteratorIterable<java.lang.Double> akasha.lang.JsArray<T>::keys() @ akasha.core.JsMap.Entry<K, V>",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.JsMap.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "keys",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsIteratorIterable<java.lang.Double> akasha.lang.JsArray<T>::keys() @ akasha.core.JsWeakMap.Entry<K, V>",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.JsWeakMap.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "keys",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsIteratorIterable<java.lang.Double> akasha.lang.JsArray<T>::keys() @ akasha.core.ObjectPropertyEntry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.ObjectPropertyEntry",
      "classSimpleName": "ObjectPropertyEntry",
      "elementKind": "method",
      "methodName": "keys",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsIteratorIterable<java.lang.Double> akasha.lang.JsArray<T>::keys() @ akasha.core.RegExpGroups.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.RegExpGroups.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "keys",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsIteratorIterable<java.lang.Double> akasha.lang.JsArray<T>::keys() @ akasha.core.RegExpResult.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.RegExpResult.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "keys",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsIteratorIterable<java.lang.Double> akasha.lang.JsArray<T>::keys() @ akasha.lang.JsArray.Entry<T>",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.lang.JsArray.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "keys",
      "package": "akasha.lang"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsIteratorIterable<java.lang.Double> akasha.lang.JsArray<T>::keys() @ akasha.rtc.RTCStatsReport.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.rtc.RTCStatsReport.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "keys",
      "package": "akasha.rtc"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsIteratorIterable<java.lang.Double> akasha.lang.JsArray<T>::keys() @ akasha.xr.XRInputSourceArray.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.xr.XRInputSourceArray.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "keys",
      "package": "akasha.xr"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsIteratorIterable<java.lang.Double> akasha.lang.JsArray<T>::keys()",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.lang.JsArray",
      "classSimpleName": "JsArray",
      "elementKind": "method",
      "methodName": "keys",
      "package": "akasha.lang"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.promise.Promise<akasha.core.ArrayBuffer> akasha.Blob::arrayBuffer() @ akasha.File",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.File",
      "classSimpleName": "File",
      "elementKind": "method",
      "methodName": "arrayBuffer",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.promise.Promise<akasha.core.ArrayBuffer> akasha.Blob::arrayBuffer()",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.Blob",
      "classSimpleName": "Blob",
      "elementKind": "method",
      "methodName": "arrayBuffer",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.promise.Promise<java.lang.String> akasha.Blob::text() @ akasha.File",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.File",
      "classSimpleName": "File",
      "elementKind": "method",
      "methodName": "text",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.promise.Promise<java.lang.String> akasha.Blob::text()",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.Blob",
      "classSimpleName": "Blob",
      "elementKind": "method",
      "methodName": "text",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.speech.SpeechGrammar akasha.speech.SpeechGrammarList::item(int)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.speech.SpeechGrammarList",
      "classSimpleName": "SpeechGrammarList",
      "elementKind": "method",
      "methodName": "item",
      "package": "akasha.speech"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.speech.SpeechRecognitionAlternative akasha.speech.SpeechRecognitionResult::item(int)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.speech.SpeechRecognitionResult",
      "classSimpleName": "SpeechRecognitionResult",
      "elementKind": "method",
      "methodName": "item",
      "package": "akasha.speech"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.speech.SpeechRecognitionResult akasha.speech.SpeechRecognitionResultList::item(int)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.speech.SpeechRecognitionResultList",
      "classSimpleName": "SpeechRecognitionResultList",
      "elementKind": "method",
      "methodName": "item",
      "package": "akasha.speech"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.svg.SVGLength akasha.svg.SVGLengthList::getItem(int)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGLengthList",
      "classSimpleName": "SVGLengthList",
      "elementKind": "method",
      "methodName": "getItem",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.svg.SVGNumber akasha.svg.SVGNumberList::getItem(int)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGNumberList",
      "classSimpleName": "SVGNumberList",
      "elementKind": "method",
      "methodName": "getItem",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.svg.SVGTransform akasha.svg.SVGTransformList::getItem(int)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGTransformList",
      "classSimpleName": "SVGTransformList",
      "elementKind": "method",
      "methodName": "getItem",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.CSSFontFeatureValuesMap::has(java.lang.String)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.CSSFontFeatureValuesMap",
      "classSimpleName": "CSSFontFeatureValuesMap",
      "elementKind": "method",
      "methodName": "has",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.CSSFontPaletteValuesRule::has(int)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.CSSFontPaletteValuesRule",
      "classSimpleName": "CSSFontPaletteValuesRule",
      "elementKind": "method",
      "methodName": "has",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.CanvasRenderingContext2D::isPointInPath(akasha.Path2D, double, double)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.CanvasRenderingContext2D",
      "classSimpleName": "CanvasRenderingContext2D",
      "elementKind": "method",
      "methodName": "isPointInPath",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.CanvasRenderingContext2D::isPointInPath(akasha.Path2D, double, double, java.lang.String)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.CanvasRenderingContext2D",
      "classSimpleName": "CanvasRenderingContext2D",
      "elementKind": "method",
      "methodName": "isPointInPath",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.CanvasRenderingContext2D::isPointInPath(double, double)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.CanvasRenderingContext2D",
      "classSimpleName": "CanvasRenderingContext2D",
      "elementKind": "method",
      "methodName": "isPointInPath",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.CanvasRenderingContext2D::isPointInPath(double, double, java.lang.String)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.CanvasRenderingContext2D",
      "classSimpleName": "CanvasRenderingContext2D",
      "elementKind": "method",
      "methodName": "isPointInPath",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.CanvasRenderingContext2D::isPointInStroke(akasha.Path2D, double, double)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.CanvasRenderingContext2D",
      "classSimpleName": "CanvasRenderingContext2D",
      "elementKind": "method",
      "methodName": "isPointInStroke",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.CanvasRenderingContext2D::isPointInStroke(double, double)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.CanvasRenderingContext2D",
      "classSimpleName": "CanvasRenderingContext2D",
      "elementKind": "method",
      "methodName": "isPointInStroke",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.DOMImplementation::hasFeature()",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.DOMImplementation",
      "classSimpleName": "DOMImplementation",
      "elementKind": "method",
      "methodName": "hasFeature",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.DOMStringList::contains(java.lang.String)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.DOMStringList",
      "classSimpleName": "DOMStringList",
      "elementKind": "method",
      "methodName": "contains",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.DOMTokenList::contains(java.lang.String)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.DOMTokenList",
      "classSimpleName": "DOMTokenList",
      "elementKind": "method",
      "methodName": "contains",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.DOMTokenList::supports(java.lang.String)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.DOMTokenList",
      "classSimpleName": "DOMTokenList",
      "elementKind": "method",
      "methodName": "supports",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttribute(java.lang.String) @ akasha.Audio",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.Audio",
      "classSimpleName": "Audio",
      "elementKind": "method",
      "methodName": "hasAttribute",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttribute(java.lang.String) @ akasha.HTMLAnchorElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLAnchorElement",
      "classSimpleName": "HTMLAnchorElement",
      "elementKind": "method",
      "methodName": "hasAttribute",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttribute(java.lang.String) @ akasha.HTMLAreaElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLAreaElement",
      "classSimpleName": "HTMLAreaElement",
      "elementKind": "method",
      "methodName": "hasAttribute",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttribute(java.lang.String) @ akasha.HTMLAudioElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLAudioElement",
      "classSimpleName": "HTMLAudioElement",
      "elementKind": "method",
      "methodName": "hasAttribute",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttribute(java.lang.String) @ akasha.HTMLBRElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLBRElement",
      "classSimpleName": "HTMLBRElement",
      "elementKind": "method",
      "methodName": "hasAttribute",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttribute(java.lang.String) @ akasha.HTMLBaseElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLBaseElement",
      "classSimpleName": "HTMLBaseElement",
      "elementKind": "method",
      "methodName": "hasAttribute",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttribute(java.lang.String) @ akasha.HTMLBodyElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLBodyElement",
      "classSimpleName": "HTMLBodyElement",
      "elementKind": "method",
      "methodName": "hasAttribute",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttribute(java.lang.String) @ akasha.HTMLButtonElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLButtonElement",
      "classSimpleName": "HTMLButtonElement",
      "elementKind": "method",
      "methodName": "hasAttribute",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttribute(java.lang.String) @ akasha.HTMLCanvasElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLCanvasElement",
      "classSimpleName": "HTMLCanvasElement",
      "elementKind": "method",
      "methodName": "hasAttribute",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttribute(java.lang.String) @ akasha.HTMLDListElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLDListElement",
      "classSimpleName": "HTMLDListElement",
      "elementKind": "method",
      "methodName": "hasAttribute",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttribute(java.lang.String) @ akasha.HTMLDataElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLDataElement",
      "classSimpleName": "HTMLDataElement",
      "elementKind": "method",
      "methodName": "hasAttribute",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttribute(java.lang.String) @ akasha.HTMLDataListElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLDataListElement",
      "classSimpleName": "HTMLDataListElement",
      "elementKind": "method",
      "methodName": "hasAttribute",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttribute(java.lang.String) @ akasha.HTMLDetailsElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLDetailsElement",
      "classSimpleName": "HTMLDetailsElement",
      "elementKind": "method",
      "methodName": "hasAttribute",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttribute(java.lang.String) @ akasha.HTMLDialogElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLDialogElement",
      "classSimpleName": "HTMLDialogElement",
      "elementKind": "method",
      "methodName": "hasAttribute",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttribute(java.lang.String) @ akasha.HTMLDirectoryElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLDirectoryElement",
      "classSimpleName": "HTMLDirectoryElement",
      "elementKind": "method",
      "methodName": "hasAttribute",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttribute(java.lang.String) @ akasha.HTMLDivElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLDivElement",
      "classSimpleName": "HTMLDivElement",
      "elementKind": "method",
      "methodName": "hasAttribute",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttribute(java.lang.String) @ akasha.HTMLElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLElement",
      "classSimpleName": "HTMLElement",
      "elementKind": "method",
      "methodName": "hasAttribute",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttribute(java.lang.String) @ akasha.HTMLEmbedElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLEmbedElement",
      "classSimpleName": "HTMLEmbedElement",
      "elementKind": "method",
      "methodName": "hasAttribute",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttribute(java.lang.String) @ akasha.HTMLFieldSetElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLFieldSetElement",
      "classSimpleName": "HTMLFieldSetElement",
      "elementKind": "method",
      "methodName": "hasAttribute",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttribute(java.lang.String) @ akasha.HTMLFontElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLFontElement",
      "classSimpleName": "HTMLFontElement",
      "elementKind": "method",
      "methodName": "hasAttribute",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttribute(java.lang.String) @ akasha.HTMLFormElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLFormElement",
      "classSimpleName": "HTMLFormElement",
      "elementKind": "method",
      "methodName": "hasAttribute",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttribute(java.lang.String) @ akasha.HTMLFrameElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLFrameElement",
      "classSimpleName": "HTMLFrameElement",
      "elementKind": "method",
      "methodName": "hasAttribute",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttribute(java.lang.String) @ akasha.HTMLFrameSetElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLFrameSetElement",
      "classSimpleName": "HTMLFrameSetElement",
      "elementKind": "method",
      "methodName": "hasAttribute",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttribute(java.lang.String) @ akasha.HTMLHRElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLHRElement",
      "classSimpleName": "HTMLHRElement",
      "elementKind": "method",
      "methodName": "hasAttribute",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttribute(java.lang.String) @ akasha.HTMLHeadElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLHeadElement",
      "classSimpleName": "HTMLHeadElement",
      "elementKind": "method",
      "methodName": "hasAttribute",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttribute(java.lang.String) @ akasha.HTMLHeadingElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLHeadingElement",
      "classSimpleName": "HTMLHeadingElement",
      "elementKind": "method",
      "methodName": "hasAttribute",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttribute(java.lang.String) @ akasha.HTMLHtmlElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLHtmlElement",
      "classSimpleName": "HTMLHtmlElement",
      "elementKind": "method",
      "methodName": "hasAttribute",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttribute(java.lang.String) @ akasha.HTMLIFrameElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLIFrameElement",
      "classSimpleName": "HTMLIFrameElement",
      "elementKind": "method",
      "methodName": "hasAttribute",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttribute(java.lang.String) @ akasha.HTMLImageElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLImageElement",
      "classSimpleName": "HTMLImageElement",
      "elementKind": "method",
      "methodName": "hasAttribute",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttribute(java.lang.String) @ akasha.HTMLInputElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLInputElement",
      "classSimpleName": "HTMLInputElement",
      "elementKind": "method",
      "methodName": "hasAttribute",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttribute(java.lang.String) @ akasha.HTMLLIElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLLIElement",
      "classSimpleName": "HTMLLIElement",
      "elementKind": "method",
      "methodName": "hasAttribute",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttribute(java.lang.String) @ akasha.HTMLLabelElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLLabelElement",
      "classSimpleName": "HTMLLabelElement",
      "elementKind": "method",
      "methodName": "hasAttribute",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttribute(java.lang.String) @ akasha.HTMLLegendElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLLegendElement",
      "classSimpleName": "HTMLLegendElement",
      "elementKind": "method",
      "methodName": "hasAttribute",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttribute(java.lang.String) @ akasha.HTMLLinkElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLLinkElement",
      "classSimpleName": "HTMLLinkElement",
      "elementKind": "method",
      "methodName": "hasAttribute",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttribute(java.lang.String) @ akasha.HTMLMapElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLMapElement",
      "classSimpleName": "HTMLMapElement",
      "elementKind": "method",
      "methodName": "hasAttribute",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttribute(java.lang.String) @ akasha.HTMLMarqueeElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLMarqueeElement",
      "classSimpleName": "HTMLMarqueeElement",
      "elementKind": "method",
      "methodName": "hasAttribute",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttribute(java.lang.String) @ akasha.HTMLMediaElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLMediaElement",
      "classSimpleName": "HTMLMediaElement",
      "elementKind": "method",
      "methodName": "hasAttribute",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttribute(java.lang.String) @ akasha.HTMLMenuElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLMenuElement",
      "classSimpleName": "HTMLMenuElement",
      "elementKind": "method",
      "methodName": "hasAttribute",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttribute(java.lang.String) @ akasha.HTMLMetaElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLMetaElement",
      "classSimpleName": "HTMLMetaElement",
      "elementKind": "method",
      "methodName": "hasAttribute",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttribute(java.lang.String) @ akasha.HTMLMeterElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLMeterElement",
      "classSimpleName": "HTMLMeterElement",
      "elementKind": "method",
      "methodName": "hasAttribute",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttribute(java.lang.String) @ akasha.HTMLModElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLModElement",
      "classSimpleName": "HTMLModElement",
      "elementKind": "method",
      "methodName": "hasAttribute",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttribute(java.lang.String) @ akasha.HTMLOListElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLOListElement",
      "classSimpleName": "HTMLOListElement",
      "elementKind": "method",
      "methodName": "hasAttribute",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttribute(java.lang.String) @ akasha.HTMLObjectElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLObjectElement",
      "classSimpleName": "HTMLObjectElement",
      "elementKind": "method",
      "methodName": "hasAttribute",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttribute(java.lang.String) @ akasha.HTMLOptGroupElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLOptGroupElement",
      "classSimpleName": "HTMLOptGroupElement",
      "elementKind": "method",
      "methodName": "hasAttribute",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttribute(java.lang.String) @ akasha.HTMLOptionElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLOptionElement",
      "classSimpleName": "HTMLOptionElement",
      "elementKind": "method",
      "methodName": "hasAttribute",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttribute(java.lang.String) @ akasha.HTMLOutputElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLOutputElement",
      "classSimpleName": "HTMLOutputElement",
      "elementKind": "method",
      "methodName": "hasAttribute",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttribute(java.lang.String) @ akasha.HTMLParagraphElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLParagraphElement",
      "classSimpleName": "HTMLParagraphElement",
      "elementKind": "method",
      "methodName": "hasAttribute",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttribute(java.lang.String) @ akasha.HTMLParamElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLParamElement",
      "classSimpleName": "HTMLParamElement",
      "elementKind": "method",
      "methodName": "hasAttribute",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttribute(java.lang.String) @ akasha.HTMLPictureElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLPictureElement",
      "classSimpleName": "HTMLPictureElement",
      "elementKind": "method",
      "methodName": "hasAttribute",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttribute(java.lang.String) @ akasha.HTMLPreElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLPreElement",
      "classSimpleName": "HTMLPreElement",
      "elementKind": "method",
      "methodName": "hasAttribute",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttribute(java.lang.String) @ akasha.HTMLProgressElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLProgressElement",
      "classSimpleName": "HTMLProgressElement",
      "elementKind": "method",
      "methodName": "hasAttribute",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttribute(java.lang.String) @ akasha.HTMLQuoteElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLQuoteElement",
      "classSimpleName": "HTMLQuoteElement",
      "elementKind": "method",
      "methodName": "hasAttribute",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttribute(java.lang.String) @ akasha.HTMLScriptElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLScriptElement",
      "classSimpleName": "HTMLScriptElement",
      "elementKind": "method",
      "methodName": "hasAttribute",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttribute(java.lang.String) @ akasha.HTMLSelectElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLSelectElement",
      "classSimpleName": "HTMLSelectElement",
      "elementKind": "method",
      "methodName": "hasAttribute",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttribute(java.lang.String) @ akasha.HTMLSlotElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLSlotElement",
      "classSimpleName": "HTMLSlotElement",
      "elementKind": "method",
      "methodName": "hasAttribute",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttribute(java.lang.String) @ akasha.HTMLSourceElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLSourceElement",
      "classSimpleName": "HTMLSourceElement",
      "elementKind": "method",
      "methodName": "hasAttribute",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttribute(java.lang.String) @ akasha.HTMLSpanElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLSpanElement",
      "classSimpleName": "HTMLSpanElement",
      "elementKind": "method",
      "methodName": "hasAttribute",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttribute(java.lang.String) @ akasha.HTMLStyleElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLStyleElement",
      "classSimpleName": "HTMLStyleElement",
      "elementKind": "method",
      "methodName": "hasAttribute",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttribute(java.lang.String) @ akasha.HTMLTableCaptionElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLTableCaptionElement",
      "classSimpleName": "HTMLTableCaptionElement",
      "elementKind": "method",
      "methodName": "hasAttribute",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttribute(java.lang.String) @ akasha.HTMLTableCellElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLTableCellElement",
      "classSimpleName": "HTMLTableCellElement",
      "elementKind": "method",
      "methodName": "hasAttribute",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttribute(java.lang.String) @ akasha.HTMLTableColElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLTableColElement",
      "classSimpleName": "HTMLTableColElement",
      "elementKind": "method",
      "methodName": "hasAttribute",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttribute(java.lang.String) @ akasha.HTMLTableElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLTableElement",
      "classSimpleName": "HTMLTableElement",
      "elementKind": "method",
      "methodName": "hasAttribute",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttribute(java.lang.String) @ akasha.HTMLTableRowElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLTableRowElement",
      "classSimpleName": "HTMLTableRowElement",
      "elementKind": "method",
      "methodName": "hasAttribute",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttribute(java.lang.String) @ akasha.HTMLTableSectionElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLTableSectionElement",
      "classSimpleName": "HTMLTableSectionElement",
      "elementKind": "method",
      "methodName": "hasAttribute",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttribute(java.lang.String) @ akasha.HTMLTemplateElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLTemplateElement",
      "classSimpleName": "HTMLTemplateElement",
      "elementKind": "method",
      "methodName": "hasAttribute",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttribute(java.lang.String) @ akasha.HTMLTextAreaElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLTextAreaElement",
      "classSimpleName": "HTMLTextAreaElement",
      "elementKind": "method",
      "methodName": "hasAttribute",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttribute(java.lang.String) @ akasha.HTMLTimeElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLTimeElement",
      "classSimpleName": "HTMLTimeElement",
      "elementKind": "method",
      "methodName": "hasAttribute",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttribute(java.lang.String) @ akasha.HTMLTitleElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLTitleElement",
      "classSimpleName": "HTMLTitleElement",
      "elementKind": "method",
      "methodName": "hasAttribute",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttribute(java.lang.String) @ akasha.HTMLTrackElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLTrackElement",
      "classSimpleName": "HTMLTrackElement",
      "elementKind": "method",
      "methodName": "hasAttribute",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttribute(java.lang.String) @ akasha.HTMLUListElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLUListElement",
      "classSimpleName": "HTMLUListElement",
      "elementKind": "method",
      "methodName": "hasAttribute",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttribute(java.lang.String) @ akasha.HTMLUnknownElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLUnknownElement",
      "classSimpleName": "HTMLUnknownElement",
      "elementKind": "method",
      "methodName": "hasAttribute",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttribute(java.lang.String) @ akasha.HTMLVideoElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLVideoElement",
      "classSimpleName": "HTMLVideoElement",
      "elementKind": "method",
      "methodName": "hasAttribute",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttribute(java.lang.String) @ akasha.Image",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.Image",
      "classSimpleName": "Image",
      "elementKind": "method",
      "methodName": "hasAttribute",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttribute(java.lang.String) @ akasha.Option",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.Option",
      "classSimpleName": "Option",
      "elementKind": "method",
      "methodName": "hasAttribute",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttribute(java.lang.String) @ akasha.svg.SVGAElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGAElement",
      "classSimpleName": "SVGAElement",
      "elementKind": "method",
      "methodName": "hasAttribute",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttribute(java.lang.String) @ akasha.svg.SVGCircleElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGCircleElement",
      "classSimpleName": "SVGCircleElement",
      "elementKind": "method",
      "methodName": "hasAttribute",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttribute(java.lang.String) @ akasha.svg.SVGClipPathElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGClipPathElement",
      "classSimpleName": "SVGClipPathElement",
      "elementKind": "method",
      "methodName": "hasAttribute",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttribute(java.lang.String) @ akasha.svg.SVGComponentTransferFunctionElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGComponentTransferFunctionElement",
      "classSimpleName": "SVGComponentTransferFunctionElement",
      "elementKind": "method",
      "methodName": "hasAttribute",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttribute(java.lang.String) @ akasha.svg.SVGDefsElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGDefsElement",
      "classSimpleName": "SVGDefsElement",
      "elementKind": "method",
      "methodName": "hasAttribute",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttribute(java.lang.String) @ akasha.svg.SVGDescElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGDescElement",
      "classSimpleName": "SVGDescElement",
      "elementKind": "method",
      "methodName": "hasAttribute",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttribute(java.lang.String) @ akasha.svg.SVGElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGElement",
      "classSimpleName": "SVGElement",
      "elementKind": "method",
      "methodName": "hasAttribute",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttribute(java.lang.String) @ akasha.svg.SVGEllipseElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGEllipseElement",
      "classSimpleName": "SVGEllipseElement",
      "elementKind": "method",
      "methodName": "hasAttribute",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttribute(java.lang.String) @ akasha.svg.SVGFEBlendElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEBlendElement",
      "classSimpleName": "SVGFEBlendElement",
      "elementKind": "method",
      "methodName": "hasAttribute",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttribute(java.lang.String) @ akasha.svg.SVGFEColorMatrixElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEColorMatrixElement",
      "classSimpleName": "SVGFEColorMatrixElement",
      "elementKind": "method",
      "methodName": "hasAttribute",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttribute(java.lang.String) @ akasha.svg.SVGFEComponentTransferElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEComponentTransferElement",
      "classSimpleName": "SVGFEComponentTransferElement",
      "elementKind": "method",
      "methodName": "hasAttribute",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttribute(java.lang.String) @ akasha.svg.SVGFECompositeElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFECompositeElement",
      "classSimpleName": "SVGFECompositeElement",
      "elementKind": "method",
      "methodName": "hasAttribute",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttribute(java.lang.String) @ akasha.svg.SVGFEConvolveMatrixElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEConvolveMatrixElement",
      "classSimpleName": "SVGFEConvolveMatrixElement",
      "elementKind": "method",
      "methodName": "hasAttribute",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttribute(java.lang.String) @ akasha.svg.SVGFEDiffuseLightingElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEDiffuseLightingElement",
      "classSimpleName": "SVGFEDiffuseLightingElement",
      "elementKind": "method",
      "methodName": "hasAttribute",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttribute(java.lang.String) @ akasha.svg.SVGFEDisplacementMapElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEDisplacementMapElement",
      "classSimpleName": "SVGFEDisplacementMapElement",
      "elementKind": "method",
      "methodName": "hasAttribute",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttribute(java.lang.String) @ akasha.svg.SVGFEDistantLightElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEDistantLightElement",
      "classSimpleName": "SVGFEDistantLightElement",
      "elementKind": "method",
      "methodName": "hasAttribute",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttribute(java.lang.String) @ akasha.svg.SVGFEDropShadowElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEDropShadowElement",
      "classSimpleName": "SVGFEDropShadowElement",
      "elementKind": "method",
      "methodName": "hasAttribute",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttribute(java.lang.String) @ akasha.svg.SVGFEFloodElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEFloodElement",
      "classSimpleName": "SVGFEFloodElement",
      "elementKind": "method",
      "methodName": "hasAttribute",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttribute(java.lang.String) @ akasha.svg.SVGFEFuncAElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEFuncAElement",
      "classSimpleName": "SVGFEFuncAElement",
      "elementKind": "method",
      "methodName": "hasAttribute",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttribute(java.lang.String) @ akasha.svg.SVGFEFuncBElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEFuncBElement",
      "classSimpleName": "SVGFEFuncBElement",
      "elementKind": "method",
      "methodName": "hasAttribute",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttribute(java.lang.String) @ akasha.svg.SVGFEFuncGElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEFuncGElement",
      "classSimpleName": "SVGFEFuncGElement",
      "elementKind": "method",
      "methodName": "hasAttribute",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttribute(java.lang.String) @ akasha.svg.SVGFEFuncRElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEFuncRElement",
      "classSimpleName": "SVGFEFuncRElement",
      "elementKind": "method",
      "methodName": "hasAttribute",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttribute(java.lang.String) @ akasha.svg.SVGFEGaussianBlurElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEGaussianBlurElement",
      "classSimpleName": "SVGFEGaussianBlurElement",
      "elementKind": "method",
      "methodName": "hasAttribute",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttribute(java.lang.String) @ akasha.svg.SVGFEImageElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEImageElement",
      "classSimpleName": "SVGFEImageElement",
      "elementKind": "method",
      "methodName": "hasAttribute",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttribute(java.lang.String) @ akasha.svg.SVGFEMergeElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEMergeElement",
      "classSimpleName": "SVGFEMergeElement",
      "elementKind": "method",
      "methodName": "hasAttribute",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttribute(java.lang.String) @ akasha.svg.SVGFEMergeNodeElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEMergeNodeElement",
      "classSimpleName": "SVGFEMergeNodeElement",
      "elementKind": "method",
      "methodName": "hasAttribute",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttribute(java.lang.String) @ akasha.svg.SVGFEMorphologyElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEMorphologyElement",
      "classSimpleName": "SVGFEMorphologyElement",
      "elementKind": "method",
      "methodName": "hasAttribute",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttribute(java.lang.String) @ akasha.svg.SVGFEOffsetElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEOffsetElement",
      "classSimpleName": "SVGFEOffsetElement",
      "elementKind": "method",
      "methodName": "hasAttribute",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttribute(java.lang.String) @ akasha.svg.SVGFEPointLightElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEPointLightElement",
      "classSimpleName": "SVGFEPointLightElement",
      "elementKind": "method",
      "methodName": "hasAttribute",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttribute(java.lang.String) @ akasha.svg.SVGFESpecularLightingElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFESpecularLightingElement",
      "classSimpleName": "SVGFESpecularLightingElement",
      "elementKind": "method",
      "methodName": "hasAttribute",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttribute(java.lang.String) @ akasha.svg.SVGFESpotLightElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFESpotLightElement",
      "classSimpleName": "SVGFESpotLightElement",
      "elementKind": "method",
      "methodName": "hasAttribute",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttribute(java.lang.String) @ akasha.svg.SVGFETileElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFETileElement",
      "classSimpleName": "SVGFETileElement",
      "elementKind": "method",
      "methodName": "hasAttribute",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttribute(java.lang.String) @ akasha.svg.SVGFETurbulenceElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFETurbulenceElement",
      "classSimpleName": "SVGFETurbulenceElement",
      "elementKind": "method",
      "methodName": "hasAttribute",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttribute(java.lang.String) @ akasha.svg.SVGFilterElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFilterElement",
      "classSimpleName": "SVGFilterElement",
      "elementKind": "method",
      "methodName": "hasAttribute",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttribute(java.lang.String) @ akasha.svg.SVGForeignObjectElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGForeignObjectElement",
      "classSimpleName": "SVGForeignObjectElement",
      "elementKind": "method",
      "methodName": "hasAttribute",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttribute(java.lang.String) @ akasha.svg.SVGGElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGGElement",
      "classSimpleName": "SVGGElement",
      "elementKind": "method",
      "methodName": "hasAttribute",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttribute(java.lang.String) @ akasha.svg.SVGGeometryElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGGeometryElement",
      "classSimpleName": "SVGGeometryElement",
      "elementKind": "method",
      "methodName": "hasAttribute",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttribute(java.lang.String) @ akasha.svg.SVGGradientElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGGradientElement",
      "classSimpleName": "SVGGradientElement",
      "elementKind": "method",
      "methodName": "hasAttribute",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttribute(java.lang.String) @ akasha.svg.SVGGraphicsElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGGraphicsElement",
      "classSimpleName": "SVGGraphicsElement",
      "elementKind": "method",
      "methodName": "hasAttribute",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttribute(java.lang.String) @ akasha.svg.SVGImageElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGImageElement",
      "classSimpleName": "SVGImageElement",
      "elementKind": "method",
      "methodName": "hasAttribute",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttribute(java.lang.String) @ akasha.svg.SVGLineElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGLineElement",
      "classSimpleName": "SVGLineElement",
      "elementKind": "method",
      "methodName": "hasAttribute",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttribute(java.lang.String) @ akasha.svg.SVGLinearGradientElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGLinearGradientElement",
      "classSimpleName": "SVGLinearGradientElement",
      "elementKind": "method",
      "methodName": "hasAttribute",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttribute(java.lang.String) @ akasha.svg.SVGMarkerElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGMarkerElement",
      "classSimpleName": "SVGMarkerElement",
      "elementKind": "method",
      "methodName": "hasAttribute",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttribute(java.lang.String) @ akasha.svg.SVGMaskElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGMaskElement",
      "classSimpleName": "SVGMaskElement",
      "elementKind": "method",
      "methodName": "hasAttribute",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttribute(java.lang.String) @ akasha.svg.SVGMetadataElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGMetadataElement",
      "classSimpleName": "SVGMetadataElement",
      "elementKind": "method",
      "methodName": "hasAttribute",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttribute(java.lang.String) @ akasha.svg.SVGPathElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGPathElement",
      "classSimpleName": "SVGPathElement",
      "elementKind": "method",
      "methodName": "hasAttribute",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttribute(java.lang.String) @ akasha.svg.SVGPatternElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGPatternElement",
      "classSimpleName": "SVGPatternElement",
      "elementKind": "method",
      "methodName": "hasAttribute",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttribute(java.lang.String) @ akasha.svg.SVGPolygonElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGPolygonElement",
      "classSimpleName": "SVGPolygonElement",
      "elementKind": "method",
      "methodName": "hasAttribute",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttribute(java.lang.String) @ akasha.svg.SVGPolylineElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGPolylineElement",
      "classSimpleName": "SVGPolylineElement",
      "elementKind": "method",
      "methodName": "hasAttribute",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttribute(java.lang.String) @ akasha.svg.SVGRadialGradientElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGRadialGradientElement",
      "classSimpleName": "SVGRadialGradientElement",
      "elementKind": "method",
      "methodName": "hasAttribute",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttribute(java.lang.String) @ akasha.svg.SVGRectElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGRectElement",
      "classSimpleName": "SVGRectElement",
      "elementKind": "method",
      "methodName": "hasAttribute",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttribute(java.lang.String) @ akasha.svg.SVGSVGElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGSVGElement",
      "classSimpleName": "SVGSVGElement",
      "elementKind": "method",
      "methodName": "hasAttribute",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttribute(java.lang.String) @ akasha.svg.SVGScriptElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGScriptElement",
      "classSimpleName": "SVGScriptElement",
      "elementKind": "method",
      "methodName": "hasAttribute",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttribute(java.lang.String) @ akasha.svg.SVGStopElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGStopElement",
      "classSimpleName": "SVGStopElement",
      "elementKind": "method",
      "methodName": "hasAttribute",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttribute(java.lang.String) @ akasha.svg.SVGStyleElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGStyleElement",
      "classSimpleName": "SVGStyleElement",
      "elementKind": "method",
      "methodName": "hasAttribute",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttribute(java.lang.String) @ akasha.svg.SVGSwitchElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGSwitchElement",
      "classSimpleName": "SVGSwitchElement",
      "elementKind": "method",
      "methodName": "hasAttribute",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttribute(java.lang.String) @ akasha.svg.SVGSymbolElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGSymbolElement",
      "classSimpleName": "SVGSymbolElement",
      "elementKind": "method",
      "methodName": "hasAttribute",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttribute(java.lang.String) @ akasha.svg.SVGTSpanElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGTSpanElement",
      "classSimpleName": "SVGTSpanElement",
      "elementKind": "method",
      "methodName": "hasAttribute",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttribute(java.lang.String) @ akasha.svg.SVGTextContentElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGTextContentElement",
      "classSimpleName": "SVGTextContentElement",
      "elementKind": "method",
      "methodName": "hasAttribute",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttribute(java.lang.String) @ akasha.svg.SVGTextElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGTextElement",
      "classSimpleName": "SVGTextElement",
      "elementKind": "method",
      "methodName": "hasAttribute",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttribute(java.lang.String) @ akasha.svg.SVGTextPathElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGTextPathElement",
      "classSimpleName": "SVGTextPathElement",
      "elementKind": "method",
      "methodName": "hasAttribute",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttribute(java.lang.String) @ akasha.svg.SVGTextPositioningElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGTextPositioningElement",
      "classSimpleName": "SVGTextPositioningElement",
      "elementKind": "method",
      "methodName": "hasAttribute",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttribute(java.lang.String) @ akasha.svg.SVGTitleElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGTitleElement",
      "classSimpleName": "SVGTitleElement",
      "elementKind": "method",
      "methodName": "hasAttribute",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttribute(java.lang.String) @ akasha.svg.SVGUnknownElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGUnknownElement",
      "classSimpleName": "SVGUnknownElement",
      "elementKind": "method",
      "methodName": "hasAttribute",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttribute(java.lang.String) @ akasha.svg.SVGUseElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGUseElement",
      "classSimpleName": "SVGUseElement",
      "elementKind": "method",
      "methodName": "hasAttribute",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttribute(java.lang.String) @ akasha.svg.SVGViewElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGViewElement",
      "classSimpleName": "SVGViewElement",
      "elementKind": "method",
      "methodName": "hasAttribute",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttribute(java.lang.String)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.Element",
      "classSimpleName": "Element",
      "elementKind": "method",
      "methodName": "hasAttribute",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttributeNS(java.lang.String, java.lang.String) @ akasha.Audio",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.Audio",
      "classSimpleName": "Audio",
      "elementKind": "method",
      "methodName": "hasAttributeNS",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttributeNS(java.lang.String, java.lang.String) @ akasha.HTMLAnchorElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLAnchorElement",
      "classSimpleName": "HTMLAnchorElement",
      "elementKind": "method",
      "methodName": "hasAttributeNS",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttributeNS(java.lang.String, java.lang.String) @ akasha.HTMLAreaElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLAreaElement",
      "classSimpleName": "HTMLAreaElement",
      "elementKind": "method",
      "methodName": "hasAttributeNS",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttributeNS(java.lang.String, java.lang.String) @ akasha.HTMLAudioElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLAudioElement",
      "classSimpleName": "HTMLAudioElement",
      "elementKind": "method",
      "methodName": "hasAttributeNS",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttributeNS(java.lang.String, java.lang.String) @ akasha.HTMLBRElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLBRElement",
      "classSimpleName": "HTMLBRElement",
      "elementKind": "method",
      "methodName": "hasAttributeNS",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttributeNS(java.lang.String, java.lang.String) @ akasha.HTMLBaseElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLBaseElement",
      "classSimpleName": "HTMLBaseElement",
      "elementKind": "method",
      "methodName": "hasAttributeNS",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttributeNS(java.lang.String, java.lang.String) @ akasha.HTMLBodyElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLBodyElement",
      "classSimpleName": "HTMLBodyElement",
      "elementKind": "method",
      "methodName": "hasAttributeNS",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttributeNS(java.lang.String, java.lang.String) @ akasha.HTMLButtonElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLButtonElement",
      "classSimpleName": "HTMLButtonElement",
      "elementKind": "method",
      "methodName": "hasAttributeNS",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttributeNS(java.lang.String, java.lang.String) @ akasha.HTMLCanvasElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLCanvasElement",
      "classSimpleName": "HTMLCanvasElement",
      "elementKind": "method",
      "methodName": "hasAttributeNS",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttributeNS(java.lang.String, java.lang.String) @ akasha.HTMLDListElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLDListElement",
      "classSimpleName": "HTMLDListElement",
      "elementKind": "method",
      "methodName": "hasAttributeNS",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttributeNS(java.lang.String, java.lang.String) @ akasha.HTMLDataElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLDataElement",
      "classSimpleName": "HTMLDataElement",
      "elementKind": "method",
      "methodName": "hasAttributeNS",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttributeNS(java.lang.String, java.lang.String) @ akasha.HTMLDataListElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLDataListElement",
      "classSimpleName": "HTMLDataListElement",
      "elementKind": "method",
      "methodName": "hasAttributeNS",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttributeNS(java.lang.String, java.lang.String) @ akasha.HTMLDetailsElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLDetailsElement",
      "classSimpleName": "HTMLDetailsElement",
      "elementKind": "method",
      "methodName": "hasAttributeNS",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttributeNS(java.lang.String, java.lang.String) @ akasha.HTMLDialogElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLDialogElement",
      "classSimpleName": "HTMLDialogElement",
      "elementKind": "method",
      "methodName": "hasAttributeNS",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttributeNS(java.lang.String, java.lang.String) @ akasha.HTMLDirectoryElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLDirectoryElement",
      "classSimpleName": "HTMLDirectoryElement",
      "elementKind": "method",
      "methodName": "hasAttributeNS",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttributeNS(java.lang.String, java.lang.String) @ akasha.HTMLDivElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLDivElement",
      "classSimpleName": "HTMLDivElement",
      "elementKind": "method",
      "methodName": "hasAttributeNS",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttributeNS(java.lang.String, java.lang.String) @ akasha.HTMLElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLElement",
      "classSimpleName": "HTMLElement",
      "elementKind": "method",
      "methodName": "hasAttributeNS",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttributeNS(java.lang.String, java.lang.String) @ akasha.HTMLEmbedElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLEmbedElement",
      "classSimpleName": "HTMLEmbedElement",
      "elementKind": "method",
      "methodName": "hasAttributeNS",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttributeNS(java.lang.String, java.lang.String) @ akasha.HTMLFieldSetElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLFieldSetElement",
      "classSimpleName": "HTMLFieldSetElement",
      "elementKind": "method",
      "methodName": "hasAttributeNS",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttributeNS(java.lang.String, java.lang.String) @ akasha.HTMLFontElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLFontElement",
      "classSimpleName": "HTMLFontElement",
      "elementKind": "method",
      "methodName": "hasAttributeNS",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttributeNS(java.lang.String, java.lang.String) @ akasha.HTMLFormElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLFormElement",
      "classSimpleName": "HTMLFormElement",
      "elementKind": "method",
      "methodName": "hasAttributeNS",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttributeNS(java.lang.String, java.lang.String) @ akasha.HTMLFrameElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLFrameElement",
      "classSimpleName": "HTMLFrameElement",
      "elementKind": "method",
      "methodName": "hasAttributeNS",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttributeNS(java.lang.String, java.lang.String) @ akasha.HTMLFrameSetElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLFrameSetElement",
      "classSimpleName": "HTMLFrameSetElement",
      "elementKind": "method",
      "methodName": "hasAttributeNS",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttributeNS(java.lang.String, java.lang.String) @ akasha.HTMLHRElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLHRElement",
      "classSimpleName": "HTMLHRElement",
      "elementKind": "method",
      "methodName": "hasAttributeNS",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttributeNS(java.lang.String, java.lang.String) @ akasha.HTMLHeadElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLHeadElement",
      "classSimpleName": "HTMLHeadElement",
      "elementKind": "method",
      "methodName": "hasAttributeNS",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttributeNS(java.lang.String, java.lang.String) @ akasha.HTMLHeadingElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLHeadingElement",
      "classSimpleName": "HTMLHeadingElement",
      "elementKind": "method",
      "methodName": "hasAttributeNS",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttributeNS(java.lang.String, java.lang.String) @ akasha.HTMLHtmlElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLHtmlElement",
      "classSimpleName": "HTMLHtmlElement",
      "elementKind": "method",
      "methodName": "hasAttributeNS",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttributeNS(java.lang.String, java.lang.String) @ akasha.HTMLIFrameElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLIFrameElement",
      "classSimpleName": "HTMLIFrameElement",
      "elementKind": "method",
      "methodName": "hasAttributeNS",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttributeNS(java.lang.String, java.lang.String) @ akasha.HTMLImageElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLImageElement",
      "classSimpleName": "HTMLImageElement",
      "elementKind": "method",
      "methodName": "hasAttributeNS",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttributeNS(java.lang.String, java.lang.String) @ akasha.HTMLInputElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLInputElement",
      "classSimpleName": "HTMLInputElement",
      "elementKind": "method",
      "methodName": "hasAttributeNS",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttributeNS(java.lang.String, java.lang.String) @ akasha.HTMLLIElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLLIElement",
      "classSimpleName": "HTMLLIElement",
      "elementKind": "method",
      "methodName": "hasAttributeNS",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttributeNS(java.lang.String, java.lang.String) @ akasha.HTMLLabelElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLLabelElement",
      "classSimpleName": "HTMLLabelElement",
      "elementKind": "method",
      "methodName": "hasAttributeNS",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttributeNS(java.lang.String, java.lang.String) @ akasha.HTMLLegendElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLLegendElement",
      "classSimpleName": "HTMLLegendElement",
      "elementKind": "method",
      "methodName": "hasAttributeNS",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttributeNS(java.lang.String, java.lang.String) @ akasha.HTMLLinkElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLLinkElement",
      "classSimpleName": "HTMLLinkElement",
      "elementKind": "method",
      "methodName": "hasAttributeNS",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttributeNS(java.lang.String, java.lang.String) @ akasha.HTMLMapElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLMapElement",
      "classSimpleName": "HTMLMapElement",
      "elementKind": "method",
      "methodName": "hasAttributeNS",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttributeNS(java.lang.String, java.lang.String) @ akasha.HTMLMarqueeElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLMarqueeElement",
      "classSimpleName": "HTMLMarqueeElement",
      "elementKind": "method",
      "methodName": "hasAttributeNS",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttributeNS(java.lang.String, java.lang.String) @ akasha.HTMLMediaElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLMediaElement",
      "classSimpleName": "HTMLMediaElement",
      "elementKind": "method",
      "methodName": "hasAttributeNS",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttributeNS(java.lang.String, java.lang.String) @ akasha.HTMLMenuElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLMenuElement",
      "classSimpleName": "HTMLMenuElement",
      "elementKind": "method",
      "methodName": "hasAttributeNS",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttributeNS(java.lang.String, java.lang.String) @ akasha.HTMLMetaElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLMetaElement",
      "classSimpleName": "HTMLMetaElement",
      "elementKind": "method",
      "methodName": "hasAttributeNS",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttributeNS(java.lang.String, java.lang.String) @ akasha.HTMLMeterElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLMeterElement",
      "classSimpleName": "HTMLMeterElement",
      "elementKind": "method",
      "methodName": "hasAttributeNS",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttributeNS(java.lang.String, java.lang.String) @ akasha.HTMLModElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLModElement",
      "classSimpleName": "HTMLModElement",
      "elementKind": "method",
      "methodName": "hasAttributeNS",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttributeNS(java.lang.String, java.lang.String) @ akasha.HTMLOListElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLOListElement",
      "classSimpleName": "HTMLOListElement",
      "elementKind": "method",
      "methodName": "hasAttributeNS",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttributeNS(java.lang.String, java.lang.String) @ akasha.HTMLObjectElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLObjectElement",
      "classSimpleName": "HTMLObjectElement",
      "elementKind": "method",
      "methodName": "hasAttributeNS",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttributeNS(java.lang.String, java.lang.String) @ akasha.HTMLOptGroupElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLOptGroupElement",
      "classSimpleName": "HTMLOptGroupElement",
      "elementKind": "method",
      "methodName": "hasAttributeNS",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttributeNS(java.lang.String, java.lang.String) @ akasha.HTMLOptionElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLOptionElement",
      "classSimpleName": "HTMLOptionElement",
      "elementKind": "method",
      "methodName": "hasAttributeNS",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttributeNS(java.lang.String, java.lang.String) @ akasha.HTMLOutputElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLOutputElement",
      "classSimpleName": "HTMLOutputElement",
      "elementKind": "method",
      "methodName": "hasAttributeNS",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttributeNS(java.lang.String, java.lang.String) @ akasha.HTMLParagraphElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLParagraphElement",
      "classSimpleName": "HTMLParagraphElement",
      "elementKind": "method",
      "methodName": "hasAttributeNS",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttributeNS(java.lang.String, java.lang.String) @ akasha.HTMLParamElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLParamElement",
      "classSimpleName": "HTMLParamElement",
      "elementKind": "method",
      "methodName": "hasAttributeNS",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttributeNS(java.lang.String, java.lang.String) @ akasha.HTMLPictureElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLPictureElement",
      "classSimpleName": "HTMLPictureElement",
      "elementKind": "method",
      "methodName": "hasAttributeNS",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttributeNS(java.lang.String, java.lang.String) @ akasha.HTMLPreElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLPreElement",
      "classSimpleName": "HTMLPreElement",
      "elementKind": "method",
      "methodName": "hasAttributeNS",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttributeNS(java.lang.String, java.lang.String) @ akasha.HTMLProgressElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLProgressElement",
      "classSimpleName": "HTMLProgressElement",
      "elementKind": "method",
      "methodName": "hasAttributeNS",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttributeNS(java.lang.String, java.lang.String) @ akasha.HTMLQuoteElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLQuoteElement",
      "classSimpleName": "HTMLQuoteElement",
      "elementKind": "method",
      "methodName": "hasAttributeNS",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttributeNS(java.lang.String, java.lang.String) @ akasha.HTMLScriptElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLScriptElement",
      "classSimpleName": "HTMLScriptElement",
      "elementKind": "method",
      "methodName": "hasAttributeNS",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttributeNS(java.lang.String, java.lang.String) @ akasha.HTMLSelectElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLSelectElement",
      "classSimpleName": "HTMLSelectElement",
      "elementKind": "method",
      "methodName": "hasAttributeNS",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttributeNS(java.lang.String, java.lang.String) @ akasha.HTMLSlotElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLSlotElement",
      "classSimpleName": "HTMLSlotElement",
      "elementKind": "method",
      "methodName": "hasAttributeNS",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttributeNS(java.lang.String, java.lang.String) @ akasha.HTMLSourceElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLSourceElement",
      "classSimpleName": "HTMLSourceElement",
      "elementKind": "method",
      "methodName": "hasAttributeNS",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttributeNS(java.lang.String, java.lang.String) @ akasha.HTMLSpanElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLSpanElement",
      "classSimpleName": "HTMLSpanElement",
      "elementKind": "method",
      "methodName": "hasAttributeNS",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttributeNS(java.lang.String, java.lang.String) @ akasha.HTMLStyleElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLStyleElement",
      "classSimpleName": "HTMLStyleElement",
      "elementKind": "method",
      "methodName": "hasAttributeNS",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttributeNS(java.lang.String, java.lang.String) @ akasha.HTMLTableCaptionElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLTableCaptionElement",
      "classSimpleName": "HTMLTableCaptionElement",
      "elementKind": "method",
      "methodName": "hasAttributeNS",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttributeNS(java.lang.String, java.lang.String) @ akasha.HTMLTableCellElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLTableCellElement",
      "classSimpleName": "HTMLTableCellElement",
      "elementKind": "method",
      "methodName": "hasAttributeNS",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttributeNS(java.lang.String, java.lang.String) @ akasha.HTMLTableColElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLTableColElement",
      "classSimpleName": "HTMLTableColElement",
      "elementKind": "method",
      "methodName": "hasAttributeNS",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttributeNS(java.lang.String, java.lang.String) @ akasha.HTMLTableElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLTableElement",
      "classSimpleName": "HTMLTableElement",
      "elementKind": "method",
      "methodName": "hasAttributeNS",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttributeNS(java.lang.String, java.lang.String) @ akasha.HTMLTableRowElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLTableRowElement",
      "classSimpleName": "HTMLTableRowElement",
      "elementKind": "method",
      "methodName": "hasAttributeNS",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttributeNS(java.lang.String, java.lang.String) @ akasha.HTMLTableSectionElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLTableSectionElement",
      "classSimpleName": "HTMLTableSectionElement",
      "elementKind": "method",
      "methodName": "hasAttributeNS",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttributeNS(java.lang.String, java.lang.String) @ akasha.HTMLTemplateElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLTemplateElement",
      "classSimpleName": "HTMLTemplateElement",
      "elementKind": "method",
      "methodName": "hasAttributeNS",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttributeNS(java.lang.String, java.lang.String) @ akasha.HTMLTextAreaElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLTextAreaElement",
      "classSimpleName": "HTMLTextAreaElement",
      "elementKind": "method",
      "methodName": "hasAttributeNS",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttributeNS(java.lang.String, java.lang.String) @ akasha.HTMLTimeElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLTimeElement",
      "classSimpleName": "HTMLTimeElement",
      "elementKind": "method",
      "methodName": "hasAttributeNS",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttributeNS(java.lang.String, java.lang.String) @ akasha.HTMLTitleElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLTitleElement",
      "classSimpleName": "HTMLTitleElement",
      "elementKind": "method",
      "methodName": "hasAttributeNS",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttributeNS(java.lang.String, java.lang.String) @ akasha.HTMLTrackElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLTrackElement",
      "classSimpleName": "HTMLTrackElement",
      "elementKind": "method",
      "methodName": "hasAttributeNS",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttributeNS(java.lang.String, java.lang.String) @ akasha.HTMLUListElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLUListElement",
      "classSimpleName": "HTMLUListElement",
      "elementKind": "method",
      "methodName": "hasAttributeNS",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttributeNS(java.lang.String, java.lang.String) @ akasha.HTMLUnknownElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLUnknownElement",
      "classSimpleName": "HTMLUnknownElement",
      "elementKind": "method",
      "methodName": "hasAttributeNS",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttributeNS(java.lang.String, java.lang.String) @ akasha.HTMLVideoElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLVideoElement",
      "classSimpleName": "HTMLVideoElement",
      "elementKind": "method",
      "methodName": "hasAttributeNS",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttributeNS(java.lang.String, java.lang.String) @ akasha.Image",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.Image",
      "classSimpleName": "Image",
      "elementKind": "method",
      "methodName": "hasAttributeNS",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttributeNS(java.lang.String, java.lang.String) @ akasha.Option",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.Option",
      "classSimpleName": "Option",
      "elementKind": "method",
      "methodName": "hasAttributeNS",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttributeNS(java.lang.String, java.lang.String) @ akasha.svg.SVGAElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGAElement",
      "classSimpleName": "SVGAElement",
      "elementKind": "method",
      "methodName": "hasAttributeNS",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttributeNS(java.lang.String, java.lang.String) @ akasha.svg.SVGCircleElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGCircleElement",
      "classSimpleName": "SVGCircleElement",
      "elementKind": "method",
      "methodName": "hasAttributeNS",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttributeNS(java.lang.String, java.lang.String) @ akasha.svg.SVGClipPathElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGClipPathElement",
      "classSimpleName": "SVGClipPathElement",
      "elementKind": "method",
      "methodName": "hasAttributeNS",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttributeNS(java.lang.String, java.lang.String) @ akasha.svg.SVGComponentTransferFunctionElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGComponentTransferFunctionElement",
      "classSimpleName": "SVGComponentTransferFunctionElement",
      "elementKind": "method",
      "methodName": "hasAttributeNS",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttributeNS(java.lang.String, java.lang.String) @ akasha.svg.SVGDefsElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGDefsElement",
      "classSimpleName": "SVGDefsElement",
      "elementKind": "method",
      "methodName": "hasAttributeNS",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttributeNS(java.lang.String, java.lang.String) @ akasha.svg.SVGDescElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGDescElement",
      "classSimpleName": "SVGDescElement",
      "elementKind": "method",
      "methodName": "hasAttributeNS",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttributeNS(java.lang.String, java.lang.String) @ akasha.svg.SVGElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGElement",
      "classSimpleName": "SVGElement",
      "elementKind": "method",
      "methodName": "hasAttributeNS",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttributeNS(java.lang.String, java.lang.String) @ akasha.svg.SVGEllipseElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGEllipseElement",
      "classSimpleName": "SVGEllipseElement",
      "elementKind": "method",
      "methodName": "hasAttributeNS",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttributeNS(java.lang.String, java.lang.String) @ akasha.svg.SVGFEBlendElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEBlendElement",
      "classSimpleName": "SVGFEBlendElement",
      "elementKind": "method",
      "methodName": "hasAttributeNS",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttributeNS(java.lang.String, java.lang.String) @ akasha.svg.SVGFEColorMatrixElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEColorMatrixElement",
      "classSimpleName": "SVGFEColorMatrixElement",
      "elementKind": "method",
      "methodName": "hasAttributeNS",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttributeNS(java.lang.String, java.lang.String) @ akasha.svg.SVGFEComponentTransferElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEComponentTransferElement",
      "classSimpleName": "SVGFEComponentTransferElement",
      "elementKind": "method",
      "methodName": "hasAttributeNS",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttributeNS(java.lang.String, java.lang.String) @ akasha.svg.SVGFECompositeElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFECompositeElement",
      "classSimpleName": "SVGFECompositeElement",
      "elementKind": "method",
      "methodName": "hasAttributeNS",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttributeNS(java.lang.String, java.lang.String) @ akasha.svg.SVGFEConvolveMatrixElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEConvolveMatrixElement",
      "classSimpleName": "SVGFEConvolveMatrixElement",
      "elementKind": "method",
      "methodName": "hasAttributeNS",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttributeNS(java.lang.String, java.lang.String) @ akasha.svg.SVGFEDiffuseLightingElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEDiffuseLightingElement",
      "classSimpleName": "SVGFEDiffuseLightingElement",
      "elementKind": "method",
      "methodName": "hasAttributeNS",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttributeNS(java.lang.String, java.lang.String) @ akasha.svg.SVGFEDisplacementMapElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEDisplacementMapElement",
      "classSimpleName": "SVGFEDisplacementMapElement",
      "elementKind": "method",
      "methodName": "hasAttributeNS",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttributeNS(java.lang.String, java.lang.String) @ akasha.svg.SVGFEDistantLightElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEDistantLightElement",
      "classSimpleName": "SVGFEDistantLightElement",
      "elementKind": "method",
      "methodName": "hasAttributeNS",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttributeNS(java.lang.String, java.lang.String) @ akasha.svg.SVGFEDropShadowElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEDropShadowElement",
      "classSimpleName": "SVGFEDropShadowElement",
      "elementKind": "method",
      "methodName": "hasAttributeNS",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttributeNS(java.lang.String, java.lang.String) @ akasha.svg.SVGFEFloodElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEFloodElement",
      "classSimpleName": "SVGFEFloodElement",
      "elementKind": "method",
      "methodName": "hasAttributeNS",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttributeNS(java.lang.String, java.lang.String) @ akasha.svg.SVGFEFuncAElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEFuncAElement",
      "classSimpleName": "SVGFEFuncAElement",
      "elementKind": "method",
      "methodName": "hasAttributeNS",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttributeNS(java.lang.String, java.lang.String) @ akasha.svg.SVGFEFuncBElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEFuncBElement",
      "classSimpleName": "SVGFEFuncBElement",
      "elementKind": "method",
      "methodName": "hasAttributeNS",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttributeNS(java.lang.String, java.lang.String) @ akasha.svg.SVGFEFuncGElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEFuncGElement",
      "classSimpleName": "SVGFEFuncGElement",
      "elementKind": "method",
      "methodName": "hasAttributeNS",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttributeNS(java.lang.String, java.lang.String) @ akasha.svg.SVGFEFuncRElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEFuncRElement",
      "classSimpleName": "SVGFEFuncRElement",
      "elementKind": "method",
      "methodName": "hasAttributeNS",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttributeNS(java.lang.String, java.lang.String) @ akasha.svg.SVGFEGaussianBlurElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEGaussianBlurElement",
      "classSimpleName": "SVGFEGaussianBlurElement",
      "elementKind": "method",
      "methodName": "hasAttributeNS",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttributeNS(java.lang.String, java.lang.String) @ akasha.svg.SVGFEImageElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEImageElement",
      "classSimpleName": "SVGFEImageElement",
      "elementKind": "method",
      "methodName": "hasAttributeNS",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttributeNS(java.lang.String, java.lang.String) @ akasha.svg.SVGFEMergeElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEMergeElement",
      "classSimpleName": "SVGFEMergeElement",
      "elementKind": "method",
      "methodName": "hasAttributeNS",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttributeNS(java.lang.String, java.lang.String) @ akasha.svg.SVGFEMergeNodeElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEMergeNodeElement",
      "classSimpleName": "SVGFEMergeNodeElement",
      "elementKind": "method",
      "methodName": "hasAttributeNS",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttributeNS(java.lang.String, java.lang.String) @ akasha.svg.SVGFEMorphologyElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEMorphologyElement",
      "classSimpleName": "SVGFEMorphologyElement",
      "elementKind": "method",
      "methodName": "hasAttributeNS",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttributeNS(java.lang.String, java.lang.String) @ akasha.svg.SVGFEOffsetElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEOffsetElement",
      "classSimpleName": "SVGFEOffsetElement",
      "elementKind": "method",
      "methodName": "hasAttributeNS",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttributeNS(java.lang.String, java.lang.String) @ akasha.svg.SVGFEPointLightElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEPointLightElement",
      "classSimpleName": "SVGFEPointLightElement",
      "elementKind": "method",
      "methodName": "hasAttributeNS",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttributeNS(java.lang.String, java.lang.String) @ akasha.svg.SVGFESpecularLightingElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFESpecularLightingElement",
      "classSimpleName": "SVGFESpecularLightingElement",
      "elementKind": "method",
      "methodName": "hasAttributeNS",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttributeNS(java.lang.String, java.lang.String) @ akasha.svg.SVGFESpotLightElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFESpotLightElement",
      "classSimpleName": "SVGFESpotLightElement",
      "elementKind": "method",
      "methodName": "hasAttributeNS",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttributeNS(java.lang.String, java.lang.String) @ akasha.svg.SVGFETileElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFETileElement",
      "classSimpleName": "SVGFETileElement",
      "elementKind": "method",
      "methodName": "hasAttributeNS",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttributeNS(java.lang.String, java.lang.String) @ akasha.svg.SVGFETurbulenceElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFETurbulenceElement",
      "classSimpleName": "SVGFETurbulenceElement",
      "elementKind": "method",
      "methodName": "hasAttributeNS",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttributeNS(java.lang.String, java.lang.String) @ akasha.svg.SVGFilterElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFilterElement",
      "classSimpleName": "SVGFilterElement",
      "elementKind": "method",
      "methodName": "hasAttributeNS",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttributeNS(java.lang.String, java.lang.String) @ akasha.svg.SVGForeignObjectElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGForeignObjectElement",
      "classSimpleName": "SVGForeignObjectElement",
      "elementKind": "method",
      "methodName": "hasAttributeNS",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttributeNS(java.lang.String, java.lang.String) @ akasha.svg.SVGGElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGGElement",
      "classSimpleName": "SVGGElement",
      "elementKind": "method",
      "methodName": "hasAttributeNS",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttributeNS(java.lang.String, java.lang.String) @ akasha.svg.SVGGeometryElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGGeometryElement",
      "classSimpleName": "SVGGeometryElement",
      "elementKind": "method",
      "methodName": "hasAttributeNS",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttributeNS(java.lang.String, java.lang.String) @ akasha.svg.SVGGradientElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGGradientElement",
      "classSimpleName": "SVGGradientElement",
      "elementKind": "method",
      "methodName": "hasAttributeNS",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttributeNS(java.lang.String, java.lang.String) @ akasha.svg.SVGGraphicsElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGGraphicsElement",
      "classSimpleName": "SVGGraphicsElement",
      "elementKind": "method",
      "methodName": "hasAttributeNS",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttributeNS(java.lang.String, java.lang.String) @ akasha.svg.SVGImageElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGImageElement",
      "classSimpleName": "SVGImageElement",
      "elementKind": "method",
      "methodName": "hasAttributeNS",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttributeNS(java.lang.String, java.lang.String) @ akasha.svg.SVGLineElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGLineElement",
      "classSimpleName": "SVGLineElement",
      "elementKind": "method",
      "methodName": "hasAttributeNS",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttributeNS(java.lang.String, java.lang.String) @ akasha.svg.SVGLinearGradientElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGLinearGradientElement",
      "classSimpleName": "SVGLinearGradientElement",
      "elementKind": "method",
      "methodName": "hasAttributeNS",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttributeNS(java.lang.String, java.lang.String) @ akasha.svg.SVGMarkerElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGMarkerElement",
      "classSimpleName": "SVGMarkerElement",
      "elementKind": "method",
      "methodName": "hasAttributeNS",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttributeNS(java.lang.String, java.lang.String) @ akasha.svg.SVGMaskElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGMaskElement",
      "classSimpleName": "SVGMaskElement",
      "elementKind": "method",
      "methodName": "hasAttributeNS",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttributeNS(java.lang.String, java.lang.String) @ akasha.svg.SVGMetadataElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGMetadataElement",
      "classSimpleName": "SVGMetadataElement",
      "elementKind": "method",
      "methodName": "hasAttributeNS",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttributeNS(java.lang.String, java.lang.String) @ akasha.svg.SVGPathElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGPathElement",
      "classSimpleName": "SVGPathElement",
      "elementKind": "method",
      "methodName": "hasAttributeNS",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttributeNS(java.lang.String, java.lang.String) @ akasha.svg.SVGPatternElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGPatternElement",
      "classSimpleName": "SVGPatternElement",
      "elementKind": "method",
      "methodName": "hasAttributeNS",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttributeNS(java.lang.String, java.lang.String) @ akasha.svg.SVGPolygonElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGPolygonElement",
      "classSimpleName": "SVGPolygonElement",
      "elementKind": "method",
      "methodName": "hasAttributeNS",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttributeNS(java.lang.String, java.lang.String) @ akasha.svg.SVGPolylineElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGPolylineElement",
      "classSimpleName": "SVGPolylineElement",
      "elementKind": "method",
      "methodName": "hasAttributeNS",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttributeNS(java.lang.String, java.lang.String) @ akasha.svg.SVGRadialGradientElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGRadialGradientElement",
      "classSimpleName": "SVGRadialGradientElement",
      "elementKind": "method",
      "methodName": "hasAttributeNS",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttributeNS(java.lang.String, java.lang.String) @ akasha.svg.SVGRectElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGRectElement",
      "classSimpleName": "SVGRectElement",
      "elementKind": "method",
      "methodName": "hasAttributeNS",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttributeNS(java.lang.String, java.lang.String) @ akasha.svg.SVGSVGElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGSVGElement",
      "classSimpleName": "SVGSVGElement",
      "elementKind": "method",
      "methodName": "hasAttributeNS",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttributeNS(java.lang.String, java.lang.String) @ akasha.svg.SVGScriptElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGScriptElement",
      "classSimpleName": "SVGScriptElement",
      "elementKind": "method",
      "methodName": "hasAttributeNS",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttributeNS(java.lang.String, java.lang.String) @ akasha.svg.SVGStopElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGStopElement",
      "classSimpleName": "SVGStopElement",
      "elementKind": "method",
      "methodName": "hasAttributeNS",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttributeNS(java.lang.String, java.lang.String) @ akasha.svg.SVGStyleElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGStyleElement",
      "classSimpleName": "SVGStyleElement",
      "elementKind": "method",
      "methodName": "hasAttributeNS",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttributeNS(java.lang.String, java.lang.String) @ akasha.svg.SVGSwitchElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGSwitchElement",
      "classSimpleName": "SVGSwitchElement",
      "elementKind": "method",
      "methodName": "hasAttributeNS",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttributeNS(java.lang.String, java.lang.String) @ akasha.svg.SVGSymbolElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGSymbolElement",
      "classSimpleName": "SVGSymbolElement",
      "elementKind": "method",
      "methodName": "hasAttributeNS",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttributeNS(java.lang.String, java.lang.String) @ akasha.svg.SVGTSpanElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGTSpanElement",
      "classSimpleName": "SVGTSpanElement",
      "elementKind": "method",
      "methodName": "hasAttributeNS",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttributeNS(java.lang.String, java.lang.String) @ akasha.svg.SVGTextContentElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGTextContentElement",
      "classSimpleName": "SVGTextContentElement",
      "elementKind": "method",
      "methodName": "hasAttributeNS",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttributeNS(java.lang.String, java.lang.String) @ akasha.svg.SVGTextElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGTextElement",
      "classSimpleName": "SVGTextElement",
      "elementKind": "method",
      "methodName": "hasAttributeNS",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttributeNS(java.lang.String, java.lang.String) @ akasha.svg.SVGTextPathElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGTextPathElement",
      "classSimpleName": "SVGTextPathElement",
      "elementKind": "method",
      "methodName": "hasAttributeNS",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttributeNS(java.lang.String, java.lang.String) @ akasha.svg.SVGTextPositioningElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGTextPositioningElement",
      "classSimpleName": "SVGTextPositioningElement",
      "elementKind": "method",
      "methodName": "hasAttributeNS",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttributeNS(java.lang.String, java.lang.String) @ akasha.svg.SVGTitleElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGTitleElement",
      "classSimpleName": "SVGTitleElement",
      "elementKind": "method",
      "methodName": "hasAttributeNS",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttributeNS(java.lang.String, java.lang.String) @ akasha.svg.SVGUnknownElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGUnknownElement",
      "classSimpleName": "SVGUnknownElement",
      "elementKind": "method",
      "methodName": "hasAttributeNS",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttributeNS(java.lang.String, java.lang.String) @ akasha.svg.SVGUseElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGUseElement",
      "classSimpleName": "SVGUseElement",
      "elementKind": "method",
      "methodName": "hasAttributeNS",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttributeNS(java.lang.String, java.lang.String) @ akasha.svg.SVGViewElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGViewElement",
      "classSimpleName": "SVGViewElement",
      "elementKind": "method",
      "methodName": "hasAttributeNS",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttributeNS(java.lang.String, java.lang.String)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.Element",
      "classSimpleName": "Element",
      "elementKind": "method",
      "methodName": "hasAttributeNS",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttributes() @ akasha.Audio",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.Audio",
      "classSimpleName": "Audio",
      "elementKind": "method",
      "methodName": "hasAttributes",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttributes() @ akasha.HTMLAnchorElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLAnchorElement",
      "classSimpleName": "HTMLAnchorElement",
      "elementKind": "method",
      "methodName": "hasAttributes",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttributes() @ akasha.HTMLAreaElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLAreaElement",
      "classSimpleName": "HTMLAreaElement",
      "elementKind": "method",
      "methodName": "hasAttributes",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttributes() @ akasha.HTMLAudioElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLAudioElement",
      "classSimpleName": "HTMLAudioElement",
      "elementKind": "method",
      "methodName": "hasAttributes",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttributes() @ akasha.HTMLBRElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLBRElement",
      "classSimpleName": "HTMLBRElement",
      "elementKind": "method",
      "methodName": "hasAttributes",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttributes() @ akasha.HTMLBaseElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLBaseElement",
      "classSimpleName": "HTMLBaseElement",
      "elementKind": "method",
      "methodName": "hasAttributes",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttributes() @ akasha.HTMLBodyElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLBodyElement",
      "classSimpleName": "HTMLBodyElement",
      "elementKind": "method",
      "methodName": "hasAttributes",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttributes() @ akasha.HTMLButtonElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLButtonElement",
      "classSimpleName": "HTMLButtonElement",
      "elementKind": "method",
      "methodName": "hasAttributes",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttributes() @ akasha.HTMLCanvasElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLCanvasElement",
      "classSimpleName": "HTMLCanvasElement",
      "elementKind": "method",
      "methodName": "hasAttributes",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttributes() @ akasha.HTMLDListElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLDListElement",
      "classSimpleName": "HTMLDListElement",
      "elementKind": "method",
      "methodName": "hasAttributes",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttributes() @ akasha.HTMLDataElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLDataElement",
      "classSimpleName": "HTMLDataElement",
      "elementKind": "method",
      "methodName": "hasAttributes",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttributes() @ akasha.HTMLDataListElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLDataListElement",
      "classSimpleName": "HTMLDataListElement",
      "elementKind": "method",
      "methodName": "hasAttributes",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttributes() @ akasha.HTMLDetailsElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLDetailsElement",
      "classSimpleName": "HTMLDetailsElement",
      "elementKind": "method",
      "methodName": "hasAttributes",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttributes() @ akasha.HTMLDialogElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLDialogElement",
      "classSimpleName": "HTMLDialogElement",
      "elementKind": "method",
      "methodName": "hasAttributes",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttributes() @ akasha.HTMLDirectoryElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLDirectoryElement",
      "classSimpleName": "HTMLDirectoryElement",
      "elementKind": "method",
      "methodName": "hasAttributes",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttributes() @ akasha.HTMLDivElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLDivElement",
      "classSimpleName": "HTMLDivElement",
      "elementKind": "method",
      "methodName": "hasAttributes",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttributes() @ akasha.HTMLElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLElement",
      "classSimpleName": "HTMLElement",
      "elementKind": "method",
      "methodName": "hasAttributes",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttributes() @ akasha.HTMLEmbedElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLEmbedElement",
      "classSimpleName": "HTMLEmbedElement",
      "elementKind": "method",
      "methodName": "hasAttributes",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttributes() @ akasha.HTMLFieldSetElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLFieldSetElement",
      "classSimpleName": "HTMLFieldSetElement",
      "elementKind": "method",
      "methodName": "hasAttributes",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttributes() @ akasha.HTMLFontElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLFontElement",
      "classSimpleName": "HTMLFontElement",
      "elementKind": "method",
      "methodName": "hasAttributes",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttributes() @ akasha.HTMLFormElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLFormElement",
      "classSimpleName": "HTMLFormElement",
      "elementKind": "method",
      "methodName": "hasAttributes",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttributes() @ akasha.HTMLFrameElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLFrameElement",
      "classSimpleName": "HTMLFrameElement",
      "elementKind": "method",
      "methodName": "hasAttributes",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttributes() @ akasha.HTMLFrameSetElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLFrameSetElement",
      "classSimpleName": "HTMLFrameSetElement",
      "elementKind": "method",
      "methodName": "hasAttributes",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttributes() @ akasha.HTMLHRElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLHRElement",
      "classSimpleName": "HTMLHRElement",
      "elementKind": "method",
      "methodName": "hasAttributes",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttributes() @ akasha.HTMLHeadElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLHeadElement",
      "classSimpleName": "HTMLHeadElement",
      "elementKind": "method",
      "methodName": "hasAttributes",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttributes() @ akasha.HTMLHeadingElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLHeadingElement",
      "classSimpleName": "HTMLHeadingElement",
      "elementKind": "method",
      "methodName": "hasAttributes",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttributes() @ akasha.HTMLHtmlElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLHtmlElement",
      "classSimpleName": "HTMLHtmlElement",
      "elementKind": "method",
      "methodName": "hasAttributes",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttributes() @ akasha.HTMLIFrameElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLIFrameElement",
      "classSimpleName": "HTMLIFrameElement",
      "elementKind": "method",
      "methodName": "hasAttributes",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttributes() @ akasha.HTMLImageElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLImageElement",
      "classSimpleName": "HTMLImageElement",
      "elementKind": "method",
      "methodName": "hasAttributes",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttributes() @ akasha.HTMLInputElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLInputElement",
      "classSimpleName": "HTMLInputElement",
      "elementKind": "method",
      "methodName": "hasAttributes",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttributes() @ akasha.HTMLLIElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLLIElement",
      "classSimpleName": "HTMLLIElement",
      "elementKind": "method",
      "methodName": "hasAttributes",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttributes() @ akasha.HTMLLabelElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLLabelElement",
      "classSimpleName": "HTMLLabelElement",
      "elementKind": "method",
      "methodName": "hasAttributes",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttributes() @ akasha.HTMLLegendElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLLegendElement",
      "classSimpleName": "HTMLLegendElement",
      "elementKind": "method",
      "methodName": "hasAttributes",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttributes() @ akasha.HTMLLinkElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLLinkElement",
      "classSimpleName": "HTMLLinkElement",
      "elementKind": "method",
      "methodName": "hasAttributes",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttributes() @ akasha.HTMLMapElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLMapElement",
      "classSimpleName": "HTMLMapElement",
      "elementKind": "method",
      "methodName": "hasAttributes",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttributes() @ akasha.HTMLMarqueeElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLMarqueeElement",
      "classSimpleName": "HTMLMarqueeElement",
      "elementKind": "method",
      "methodName": "hasAttributes",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttributes() @ akasha.HTMLMediaElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLMediaElement",
      "classSimpleName": "HTMLMediaElement",
      "elementKind": "method",
      "methodName": "hasAttributes",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttributes() @ akasha.HTMLMenuElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLMenuElement",
      "classSimpleName": "HTMLMenuElement",
      "elementKind": "method",
      "methodName": "hasAttributes",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttributes() @ akasha.HTMLMetaElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLMetaElement",
      "classSimpleName": "HTMLMetaElement",
      "elementKind": "method",
      "methodName": "hasAttributes",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttributes() @ akasha.HTMLMeterElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLMeterElement",
      "classSimpleName": "HTMLMeterElement",
      "elementKind": "method",
      "methodName": "hasAttributes",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttributes() @ akasha.HTMLModElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLModElement",
      "classSimpleName": "HTMLModElement",
      "elementKind": "method",
      "methodName": "hasAttributes",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttributes() @ akasha.HTMLOListElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLOListElement",
      "classSimpleName": "HTMLOListElement",
      "elementKind": "method",
      "methodName": "hasAttributes",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttributes() @ akasha.HTMLObjectElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLObjectElement",
      "classSimpleName": "HTMLObjectElement",
      "elementKind": "method",
      "methodName": "hasAttributes",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttributes() @ akasha.HTMLOptGroupElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLOptGroupElement",
      "classSimpleName": "HTMLOptGroupElement",
      "elementKind": "method",
      "methodName": "hasAttributes",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttributes() @ akasha.HTMLOptionElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLOptionElement",
      "classSimpleName": "HTMLOptionElement",
      "elementKind": "method",
      "methodName": "hasAttributes",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttributes() @ akasha.HTMLOutputElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLOutputElement",
      "classSimpleName": "HTMLOutputElement",
      "elementKind": "method",
      "methodName": "hasAttributes",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttributes() @ akasha.HTMLParagraphElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLParagraphElement",
      "classSimpleName": "HTMLParagraphElement",
      "elementKind": "method",
      "methodName": "hasAttributes",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttributes() @ akasha.HTMLParamElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLParamElement",
      "classSimpleName": "HTMLParamElement",
      "elementKind": "method",
      "methodName": "hasAttributes",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttributes() @ akasha.HTMLPictureElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLPictureElement",
      "classSimpleName": "HTMLPictureElement",
      "elementKind": "method",
      "methodName": "hasAttributes",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttributes() @ akasha.HTMLPreElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLPreElement",
      "classSimpleName": "HTMLPreElement",
      "elementKind": "method",
      "methodName": "hasAttributes",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttributes() @ akasha.HTMLProgressElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLProgressElement",
      "classSimpleName": "HTMLProgressElement",
      "elementKind": "method",
      "methodName": "hasAttributes",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttributes() @ akasha.HTMLQuoteElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLQuoteElement",
      "classSimpleName": "HTMLQuoteElement",
      "elementKind": "method",
      "methodName": "hasAttributes",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttributes() @ akasha.HTMLScriptElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLScriptElement",
      "classSimpleName": "HTMLScriptElement",
      "elementKind": "method",
      "methodName": "hasAttributes",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttributes() @ akasha.HTMLSelectElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLSelectElement",
      "classSimpleName": "HTMLSelectElement",
      "elementKind": "method",
      "methodName": "hasAttributes",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttributes() @ akasha.HTMLSlotElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLSlotElement",
      "classSimpleName": "HTMLSlotElement",
      "elementKind": "method",
      "methodName": "hasAttributes",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttributes() @ akasha.HTMLSourceElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLSourceElement",
      "classSimpleName": "HTMLSourceElement",
      "elementKind": "method",
      "methodName": "hasAttributes",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttributes() @ akasha.HTMLSpanElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLSpanElement",
      "classSimpleName": "HTMLSpanElement",
      "elementKind": "method",
      "methodName": "hasAttributes",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttributes() @ akasha.HTMLStyleElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLStyleElement",
      "classSimpleName": "HTMLStyleElement",
      "elementKind": "method",
      "methodName": "hasAttributes",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttributes() @ akasha.HTMLTableCaptionElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLTableCaptionElement",
      "classSimpleName": "HTMLTableCaptionElement",
      "elementKind": "method",
      "methodName": "hasAttributes",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttributes() @ akasha.HTMLTableCellElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLTableCellElement",
      "classSimpleName": "HTMLTableCellElement",
      "elementKind": "method",
      "methodName": "hasAttributes",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttributes() @ akasha.HTMLTableColElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLTableColElement",
      "classSimpleName": "HTMLTableColElement",
      "elementKind": "method",
      "methodName": "hasAttributes",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttributes() @ akasha.HTMLTableElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLTableElement",
      "classSimpleName": "HTMLTableElement",
      "elementKind": "method",
      "methodName": "hasAttributes",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttributes() @ akasha.HTMLTableRowElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLTableRowElement",
      "classSimpleName": "HTMLTableRowElement",
      "elementKind": "method",
      "methodName": "hasAttributes",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttributes() @ akasha.HTMLTableSectionElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLTableSectionElement",
      "classSimpleName": "HTMLTableSectionElement",
      "elementKind": "method",
      "methodName": "hasAttributes",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttributes() @ akasha.HTMLTemplateElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLTemplateElement",
      "classSimpleName": "HTMLTemplateElement",
      "elementKind": "method",
      "methodName": "hasAttributes",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttributes() @ akasha.HTMLTextAreaElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLTextAreaElement",
      "classSimpleName": "HTMLTextAreaElement",
      "elementKind": "method",
      "methodName": "hasAttributes",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttributes() @ akasha.HTMLTimeElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLTimeElement",
      "classSimpleName": "HTMLTimeElement",
      "elementKind": "method",
      "methodName": "hasAttributes",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttributes() @ akasha.HTMLTitleElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLTitleElement",
      "classSimpleName": "HTMLTitleElement",
      "elementKind": "method",
      "methodName": "hasAttributes",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttributes() @ akasha.HTMLTrackElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLTrackElement",
      "classSimpleName": "HTMLTrackElement",
      "elementKind": "method",
      "methodName": "hasAttributes",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttributes() @ akasha.HTMLUListElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLUListElement",
      "classSimpleName": "HTMLUListElement",
      "elementKind": "method",
      "methodName": "hasAttributes",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttributes() @ akasha.HTMLUnknownElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLUnknownElement",
      "classSimpleName": "HTMLUnknownElement",
      "elementKind": "method",
      "methodName": "hasAttributes",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttributes() @ akasha.HTMLVideoElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLVideoElement",
      "classSimpleName": "HTMLVideoElement",
      "elementKind": "method",
      "methodName": "hasAttributes",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttributes() @ akasha.Image",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.Image",
      "classSimpleName": "Image",
      "elementKind": "method",
      "methodName": "hasAttributes",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttributes() @ akasha.Option",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.Option",
      "classSimpleName": "Option",
      "elementKind": "method",
      "methodName": "hasAttributes",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttributes() @ akasha.svg.SVGAElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGAElement",
      "classSimpleName": "SVGAElement",
      "elementKind": "method",
      "methodName": "hasAttributes",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttributes() @ akasha.svg.SVGCircleElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGCircleElement",
      "classSimpleName": "SVGCircleElement",
      "elementKind": "method",
      "methodName": "hasAttributes",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttributes() @ akasha.svg.SVGClipPathElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGClipPathElement",
      "classSimpleName": "SVGClipPathElement",
      "elementKind": "method",
      "methodName": "hasAttributes",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttributes() @ akasha.svg.SVGComponentTransferFunctionElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGComponentTransferFunctionElement",
      "classSimpleName": "SVGComponentTransferFunctionElement",
      "elementKind": "method",
      "methodName": "hasAttributes",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttributes() @ akasha.svg.SVGDefsElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGDefsElement",
      "classSimpleName": "SVGDefsElement",
      "elementKind": "method",
      "methodName": "hasAttributes",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttributes() @ akasha.svg.SVGDescElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGDescElement",
      "classSimpleName": "SVGDescElement",
      "elementKind": "method",
      "methodName": "hasAttributes",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttributes() @ akasha.svg.SVGElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGElement",
      "classSimpleName": "SVGElement",
      "elementKind": "method",
      "methodName": "hasAttributes",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttributes() @ akasha.svg.SVGEllipseElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGEllipseElement",
      "classSimpleName": "SVGEllipseElement",
      "elementKind": "method",
      "methodName": "hasAttributes",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttributes() @ akasha.svg.SVGFEBlendElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEBlendElement",
      "classSimpleName": "SVGFEBlendElement",
      "elementKind": "method",
      "methodName": "hasAttributes",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttributes() @ akasha.svg.SVGFEColorMatrixElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEColorMatrixElement",
      "classSimpleName": "SVGFEColorMatrixElement",
      "elementKind": "method",
      "methodName": "hasAttributes",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttributes() @ akasha.svg.SVGFEComponentTransferElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEComponentTransferElement",
      "classSimpleName": "SVGFEComponentTransferElement",
      "elementKind": "method",
      "methodName": "hasAttributes",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttributes() @ akasha.svg.SVGFECompositeElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFECompositeElement",
      "classSimpleName": "SVGFECompositeElement",
      "elementKind": "method",
      "methodName": "hasAttributes",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttributes() @ akasha.svg.SVGFEConvolveMatrixElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEConvolveMatrixElement",
      "classSimpleName": "SVGFEConvolveMatrixElement",
      "elementKind": "method",
      "methodName": "hasAttributes",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttributes() @ akasha.svg.SVGFEDiffuseLightingElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEDiffuseLightingElement",
      "classSimpleName": "SVGFEDiffuseLightingElement",
      "elementKind": "method",
      "methodName": "hasAttributes",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttributes() @ akasha.svg.SVGFEDisplacementMapElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEDisplacementMapElement",
      "classSimpleName": "SVGFEDisplacementMapElement",
      "elementKind": "method",
      "methodName": "hasAttributes",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttributes() @ akasha.svg.SVGFEDistantLightElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEDistantLightElement",
      "classSimpleName": "SVGFEDistantLightElement",
      "elementKind": "method",
      "methodName": "hasAttributes",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttributes() @ akasha.svg.SVGFEDropShadowElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEDropShadowElement",
      "classSimpleName": "SVGFEDropShadowElement",
      "elementKind": "method",
      "methodName": "hasAttributes",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttributes() @ akasha.svg.SVGFEFloodElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEFloodElement",
      "classSimpleName": "SVGFEFloodElement",
      "elementKind": "method",
      "methodName": "hasAttributes",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttributes() @ akasha.svg.SVGFEFuncAElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEFuncAElement",
      "classSimpleName": "SVGFEFuncAElement",
      "elementKind": "method",
      "methodName": "hasAttributes",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttributes() @ akasha.svg.SVGFEFuncBElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEFuncBElement",
      "classSimpleName": "SVGFEFuncBElement",
      "elementKind": "method",
      "methodName": "hasAttributes",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttributes() @ akasha.svg.SVGFEFuncGElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEFuncGElement",
      "classSimpleName": "SVGFEFuncGElement",
      "elementKind": "method",
      "methodName": "hasAttributes",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttributes() @ akasha.svg.SVGFEFuncRElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEFuncRElement",
      "classSimpleName": "SVGFEFuncRElement",
      "elementKind": "method",
      "methodName": "hasAttributes",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttributes() @ akasha.svg.SVGFEGaussianBlurElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEGaussianBlurElement",
      "classSimpleName": "SVGFEGaussianBlurElement",
      "elementKind": "method",
      "methodName": "hasAttributes",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttributes() @ akasha.svg.SVGFEImageElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEImageElement",
      "classSimpleName": "SVGFEImageElement",
      "elementKind": "method",
      "methodName": "hasAttributes",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttributes() @ akasha.svg.SVGFEMergeElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEMergeElement",
      "classSimpleName": "SVGFEMergeElement",
      "elementKind": "method",
      "methodName": "hasAttributes",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttributes() @ akasha.svg.SVGFEMergeNodeElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEMergeNodeElement",
      "classSimpleName": "SVGFEMergeNodeElement",
      "elementKind": "method",
      "methodName": "hasAttributes",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttributes() @ akasha.svg.SVGFEMorphologyElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEMorphologyElement",
      "classSimpleName": "SVGFEMorphologyElement",
      "elementKind": "method",
      "methodName": "hasAttributes",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttributes() @ akasha.svg.SVGFEOffsetElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEOffsetElement",
      "classSimpleName": "SVGFEOffsetElement",
      "elementKind": "method",
      "methodName": "hasAttributes",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttributes() @ akasha.svg.SVGFEPointLightElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEPointLightElement",
      "classSimpleName": "SVGFEPointLightElement",
      "elementKind": "method",
      "methodName": "hasAttributes",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttributes() @ akasha.svg.SVGFESpecularLightingElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFESpecularLightingElement",
      "classSimpleName": "SVGFESpecularLightingElement",
      "elementKind": "method",
      "methodName": "hasAttributes",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttributes() @ akasha.svg.SVGFESpotLightElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFESpotLightElement",
      "classSimpleName": "SVGFESpotLightElement",
      "elementKind": "method",
      "methodName": "hasAttributes",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttributes() @ akasha.svg.SVGFETileElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFETileElement",
      "classSimpleName": "SVGFETileElement",
      "elementKind": "method",
      "methodName": "hasAttributes",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttributes() @ akasha.svg.SVGFETurbulenceElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFETurbulenceElement",
      "classSimpleName": "SVGFETurbulenceElement",
      "elementKind": "method",
      "methodName": "hasAttributes",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttributes() @ akasha.svg.SVGFilterElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFilterElement",
      "classSimpleName": "SVGFilterElement",
      "elementKind": "method",
      "methodName": "hasAttributes",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttributes() @ akasha.svg.SVGForeignObjectElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGForeignObjectElement",
      "classSimpleName": "SVGForeignObjectElement",
      "elementKind": "method",
      "methodName": "hasAttributes",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttributes() @ akasha.svg.SVGGElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGGElement",
      "classSimpleName": "SVGGElement",
      "elementKind": "method",
      "methodName": "hasAttributes",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttributes() @ akasha.svg.SVGGeometryElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGGeometryElement",
      "classSimpleName": "SVGGeometryElement",
      "elementKind": "method",
      "methodName": "hasAttributes",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttributes() @ akasha.svg.SVGGradientElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGGradientElement",
      "classSimpleName": "SVGGradientElement",
      "elementKind": "method",
      "methodName": "hasAttributes",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttributes() @ akasha.svg.SVGGraphicsElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGGraphicsElement",
      "classSimpleName": "SVGGraphicsElement",
      "elementKind": "method",
      "methodName": "hasAttributes",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttributes() @ akasha.svg.SVGImageElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGImageElement",
      "classSimpleName": "SVGImageElement",
      "elementKind": "method",
      "methodName": "hasAttributes",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttributes() @ akasha.svg.SVGLineElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGLineElement",
      "classSimpleName": "SVGLineElement",
      "elementKind": "method",
      "methodName": "hasAttributes",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttributes() @ akasha.svg.SVGLinearGradientElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGLinearGradientElement",
      "classSimpleName": "SVGLinearGradientElement",
      "elementKind": "method",
      "methodName": "hasAttributes",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttributes() @ akasha.svg.SVGMarkerElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGMarkerElement",
      "classSimpleName": "SVGMarkerElement",
      "elementKind": "method",
      "methodName": "hasAttributes",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttributes() @ akasha.svg.SVGMaskElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGMaskElement",
      "classSimpleName": "SVGMaskElement",
      "elementKind": "method",
      "methodName": "hasAttributes",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttributes() @ akasha.svg.SVGMetadataElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGMetadataElement",
      "classSimpleName": "SVGMetadataElement",
      "elementKind": "method",
      "methodName": "hasAttributes",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttributes() @ akasha.svg.SVGPathElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGPathElement",
      "classSimpleName": "SVGPathElement",
      "elementKind": "method",
      "methodName": "hasAttributes",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttributes() @ akasha.svg.SVGPatternElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGPatternElement",
      "classSimpleName": "SVGPatternElement",
      "elementKind": "method",
      "methodName": "hasAttributes",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttributes() @ akasha.svg.SVGPolygonElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGPolygonElement",
      "classSimpleName": "SVGPolygonElement",
      "elementKind": "method",
      "methodName": "hasAttributes",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttributes() @ akasha.svg.SVGPolylineElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGPolylineElement",
      "classSimpleName": "SVGPolylineElement",
      "elementKind": "method",
      "methodName": "hasAttributes",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttributes() @ akasha.svg.SVGRadialGradientElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGRadialGradientElement",
      "classSimpleName": "SVGRadialGradientElement",
      "elementKind": "method",
      "methodName": "hasAttributes",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttributes() @ akasha.svg.SVGRectElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGRectElement",
      "classSimpleName": "SVGRectElement",
      "elementKind": "method",
      "methodName": "hasAttributes",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttributes() @ akasha.svg.SVGSVGElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGSVGElement",
      "classSimpleName": "SVGSVGElement",
      "elementKind": "method",
      "methodName": "hasAttributes",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttributes() @ akasha.svg.SVGScriptElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGScriptElement",
      "classSimpleName": "SVGScriptElement",
      "elementKind": "method",
      "methodName": "hasAttributes",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttributes() @ akasha.svg.SVGStopElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGStopElement",
      "classSimpleName": "SVGStopElement",
      "elementKind": "method",
      "methodName": "hasAttributes",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttributes() @ akasha.svg.SVGStyleElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGStyleElement",
      "classSimpleName": "SVGStyleElement",
      "elementKind": "method",
      "methodName": "hasAttributes",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttributes() @ akasha.svg.SVGSwitchElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGSwitchElement",
      "classSimpleName": "SVGSwitchElement",
      "elementKind": "method",
      "methodName": "hasAttributes",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttributes() @ akasha.svg.SVGSymbolElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGSymbolElement",
      "classSimpleName": "SVGSymbolElement",
      "elementKind": "method",
      "methodName": "hasAttributes",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttributes() @ akasha.svg.SVGTSpanElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGTSpanElement",
      "classSimpleName": "SVGTSpanElement",
      "elementKind": "method",
      "methodName": "hasAttributes",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttributes() @ akasha.svg.SVGTextContentElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGTextContentElement",
      "classSimpleName": "SVGTextContentElement",
      "elementKind": "method",
      "methodName": "hasAttributes",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttributes() @ akasha.svg.SVGTextElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGTextElement",
      "classSimpleName": "SVGTextElement",
      "elementKind": "method",
      "methodName": "hasAttributes",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttributes() @ akasha.svg.SVGTextPathElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGTextPathElement",
      "classSimpleName": "SVGTextPathElement",
      "elementKind": "method",
      "methodName": "hasAttributes",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttributes() @ akasha.svg.SVGTextPositioningElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGTextPositioningElement",
      "classSimpleName": "SVGTextPositioningElement",
      "elementKind": "method",
      "methodName": "hasAttributes",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttributes() @ akasha.svg.SVGTitleElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGTitleElement",
      "classSimpleName": "SVGTitleElement",
      "elementKind": "method",
      "methodName": "hasAttributes",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttributes() @ akasha.svg.SVGUnknownElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGUnknownElement",
      "classSimpleName": "SVGUnknownElement",
      "elementKind": "method",
      "methodName": "hasAttributes",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttributes() @ akasha.svg.SVGUseElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGUseElement",
      "classSimpleName": "SVGUseElement",
      "elementKind": "method",
      "methodName": "hasAttributes",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttributes() @ akasha.svg.SVGViewElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGViewElement",
      "classSimpleName": "SVGViewElement",
      "elementKind": "method",
      "methodName": "hasAttributes",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::hasAttributes()",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.Element",
      "classSimpleName": "Element",
      "elementKind": "method",
      "methodName": "hasAttributes",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::matches(java.lang.String) @ akasha.Audio",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.Audio",
      "classSimpleName": "Audio",
      "elementKind": "method",
      "methodName": "matches",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::matches(java.lang.String) @ akasha.HTMLAnchorElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLAnchorElement",
      "classSimpleName": "HTMLAnchorElement",
      "elementKind": "method",
      "methodName": "matches",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::matches(java.lang.String) @ akasha.HTMLAreaElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLAreaElement",
      "classSimpleName": "HTMLAreaElement",
      "elementKind": "method",
      "methodName": "matches",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::matches(java.lang.String) @ akasha.HTMLAudioElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLAudioElement",
      "classSimpleName": "HTMLAudioElement",
      "elementKind": "method",
      "methodName": "matches",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::matches(java.lang.String) @ akasha.HTMLBRElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLBRElement",
      "classSimpleName": "HTMLBRElement",
      "elementKind": "method",
      "methodName": "matches",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::matches(java.lang.String) @ akasha.HTMLBaseElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLBaseElement",
      "classSimpleName": "HTMLBaseElement",
      "elementKind": "method",
      "methodName": "matches",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::matches(java.lang.String) @ akasha.HTMLBodyElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLBodyElement",
      "classSimpleName": "HTMLBodyElement",
      "elementKind": "method",
      "methodName": "matches",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::matches(java.lang.String) @ akasha.HTMLButtonElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLButtonElement",
      "classSimpleName": "HTMLButtonElement",
      "elementKind": "method",
      "methodName": "matches",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::matches(java.lang.String) @ akasha.HTMLCanvasElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLCanvasElement",
      "classSimpleName": "HTMLCanvasElement",
      "elementKind": "method",
      "methodName": "matches",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::matches(java.lang.String) @ akasha.HTMLDListElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLDListElement",
      "classSimpleName": "HTMLDListElement",
      "elementKind": "method",
      "methodName": "matches",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::matches(java.lang.String) @ akasha.HTMLDataElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLDataElement",
      "classSimpleName": "HTMLDataElement",
      "elementKind": "method",
      "methodName": "matches",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::matches(java.lang.String) @ akasha.HTMLDataListElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLDataListElement",
      "classSimpleName": "HTMLDataListElement",
      "elementKind": "method",
      "methodName": "matches",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::matches(java.lang.String) @ akasha.HTMLDetailsElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLDetailsElement",
      "classSimpleName": "HTMLDetailsElement",
      "elementKind": "method",
      "methodName": "matches",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::matches(java.lang.String) @ akasha.HTMLDialogElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLDialogElement",
      "classSimpleName": "HTMLDialogElement",
      "elementKind": "method",
      "methodName": "matches",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::matches(java.lang.String) @ akasha.HTMLDirectoryElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLDirectoryElement",
      "classSimpleName": "HTMLDirectoryElement",
      "elementKind": "method",
      "methodName": "matches",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::matches(java.lang.String) @ akasha.HTMLDivElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLDivElement",
      "classSimpleName": "HTMLDivElement",
      "elementKind": "method",
      "methodName": "matches",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::matches(java.lang.String) @ akasha.HTMLElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLElement",
      "classSimpleName": "HTMLElement",
      "elementKind": "method",
      "methodName": "matches",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::matches(java.lang.String) @ akasha.HTMLEmbedElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLEmbedElement",
      "classSimpleName": "HTMLEmbedElement",
      "elementKind": "method",
      "methodName": "matches",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::matches(java.lang.String) @ akasha.HTMLFieldSetElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLFieldSetElement",
      "classSimpleName": "HTMLFieldSetElement",
      "elementKind": "method",
      "methodName": "matches",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::matches(java.lang.String) @ akasha.HTMLFontElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLFontElement",
      "classSimpleName": "HTMLFontElement",
      "elementKind": "method",
      "methodName": "matches",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::matches(java.lang.String) @ akasha.HTMLFormElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLFormElement",
      "classSimpleName": "HTMLFormElement",
      "elementKind": "method",
      "methodName": "matches",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::matches(java.lang.String) @ akasha.HTMLFrameElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLFrameElement",
      "classSimpleName": "HTMLFrameElement",
      "elementKind": "method",
      "methodName": "matches",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::matches(java.lang.String) @ akasha.HTMLFrameSetElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLFrameSetElement",
      "classSimpleName": "HTMLFrameSetElement",
      "elementKind": "method",
      "methodName": "matches",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::matches(java.lang.String) @ akasha.HTMLHRElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLHRElement",
      "classSimpleName": "HTMLHRElement",
      "elementKind": "method",
      "methodName": "matches",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::matches(java.lang.String) @ akasha.HTMLHeadElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLHeadElement",
      "classSimpleName": "HTMLHeadElement",
      "elementKind": "method",
      "methodName": "matches",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::matches(java.lang.String) @ akasha.HTMLHeadingElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLHeadingElement",
      "classSimpleName": "HTMLHeadingElement",
      "elementKind": "method",
      "methodName": "matches",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::matches(java.lang.String) @ akasha.HTMLHtmlElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLHtmlElement",
      "classSimpleName": "HTMLHtmlElement",
      "elementKind": "method",
      "methodName": "matches",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::matches(java.lang.String) @ akasha.HTMLIFrameElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLIFrameElement",
      "classSimpleName": "HTMLIFrameElement",
      "elementKind": "method",
      "methodName": "matches",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::matches(java.lang.String) @ akasha.HTMLImageElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLImageElement",
      "classSimpleName": "HTMLImageElement",
      "elementKind": "method",
      "methodName": "matches",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::matches(java.lang.String) @ akasha.HTMLInputElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLInputElement",
      "classSimpleName": "HTMLInputElement",
      "elementKind": "method",
      "methodName": "matches",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::matches(java.lang.String) @ akasha.HTMLLIElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLLIElement",
      "classSimpleName": "HTMLLIElement",
      "elementKind": "method",
      "methodName": "matches",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::matches(java.lang.String) @ akasha.HTMLLabelElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLLabelElement",
      "classSimpleName": "HTMLLabelElement",
      "elementKind": "method",
      "methodName": "matches",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::matches(java.lang.String) @ akasha.HTMLLegendElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLLegendElement",
      "classSimpleName": "HTMLLegendElement",
      "elementKind": "method",
      "methodName": "matches",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::matches(java.lang.String) @ akasha.HTMLLinkElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLLinkElement",
      "classSimpleName": "HTMLLinkElement",
      "elementKind": "method",
      "methodName": "matches",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::matches(java.lang.String) @ akasha.HTMLMapElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLMapElement",
      "classSimpleName": "HTMLMapElement",
      "elementKind": "method",
      "methodName": "matches",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::matches(java.lang.String) @ akasha.HTMLMarqueeElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLMarqueeElement",
      "classSimpleName": "HTMLMarqueeElement",
      "elementKind": "method",
      "methodName": "matches",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::matches(java.lang.String) @ akasha.HTMLMediaElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLMediaElement",
      "classSimpleName": "HTMLMediaElement",
      "elementKind": "method",
      "methodName": "matches",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::matches(java.lang.String) @ akasha.HTMLMenuElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLMenuElement",
      "classSimpleName": "HTMLMenuElement",
      "elementKind": "method",
      "methodName": "matches",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::matches(java.lang.String) @ akasha.HTMLMetaElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLMetaElement",
      "classSimpleName": "HTMLMetaElement",
      "elementKind": "method",
      "methodName": "matches",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::matches(java.lang.String) @ akasha.HTMLMeterElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLMeterElement",
      "classSimpleName": "HTMLMeterElement",
      "elementKind": "method",
      "methodName": "matches",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::matches(java.lang.String) @ akasha.HTMLModElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLModElement",
      "classSimpleName": "HTMLModElement",
      "elementKind": "method",
      "methodName": "matches",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::matches(java.lang.String) @ akasha.HTMLOListElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLOListElement",
      "classSimpleName": "HTMLOListElement",
      "elementKind": "method",
      "methodName": "matches",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::matches(java.lang.String) @ akasha.HTMLObjectElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLObjectElement",
      "classSimpleName": "HTMLObjectElement",
      "elementKind": "method",
      "methodName": "matches",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::matches(java.lang.String) @ akasha.HTMLOptGroupElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLOptGroupElement",
      "classSimpleName": "HTMLOptGroupElement",
      "elementKind": "method",
      "methodName": "matches",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::matches(java.lang.String) @ akasha.HTMLOptionElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLOptionElement",
      "classSimpleName": "HTMLOptionElement",
      "elementKind": "method",
      "methodName": "matches",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::matches(java.lang.String) @ akasha.HTMLOutputElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLOutputElement",
      "classSimpleName": "HTMLOutputElement",
      "elementKind": "method",
      "methodName": "matches",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::matches(java.lang.String) @ akasha.HTMLParagraphElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLParagraphElement",
      "classSimpleName": "HTMLParagraphElement",
      "elementKind": "method",
      "methodName": "matches",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::matches(java.lang.String) @ akasha.HTMLParamElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLParamElement",
      "classSimpleName": "HTMLParamElement",
      "elementKind": "method",
      "methodName": "matches",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::matches(java.lang.String) @ akasha.HTMLPictureElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLPictureElement",
      "classSimpleName": "HTMLPictureElement",
      "elementKind": "method",
      "methodName": "matches",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::matches(java.lang.String) @ akasha.HTMLPreElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLPreElement",
      "classSimpleName": "HTMLPreElement",
      "elementKind": "method",
      "methodName": "matches",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::matches(java.lang.String) @ akasha.HTMLProgressElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLProgressElement",
      "classSimpleName": "HTMLProgressElement",
      "elementKind": "method",
      "methodName": "matches",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::matches(java.lang.String) @ akasha.HTMLQuoteElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLQuoteElement",
      "classSimpleName": "HTMLQuoteElement",
      "elementKind": "method",
      "methodName": "matches",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::matches(java.lang.String) @ akasha.HTMLScriptElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLScriptElement",
      "classSimpleName": "HTMLScriptElement",
      "elementKind": "method",
      "methodName": "matches",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::matches(java.lang.String) @ akasha.HTMLSelectElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLSelectElement",
      "classSimpleName": "HTMLSelectElement",
      "elementKind": "method",
      "methodName": "matches",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::matches(java.lang.String) @ akasha.HTMLSlotElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLSlotElement",
      "classSimpleName": "HTMLSlotElement",
      "elementKind": "method",
      "methodName": "matches",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::matches(java.lang.String) @ akasha.HTMLSourceElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLSourceElement",
      "classSimpleName": "HTMLSourceElement",
      "elementKind": "method",
      "methodName": "matches",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::matches(java.lang.String) @ akasha.HTMLSpanElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLSpanElement",
      "classSimpleName": "HTMLSpanElement",
      "elementKind": "method",
      "methodName": "matches",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::matches(java.lang.String) @ akasha.HTMLStyleElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLStyleElement",
      "classSimpleName": "HTMLStyleElement",
      "elementKind": "method",
      "methodName": "matches",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::matches(java.lang.String) @ akasha.HTMLTableCaptionElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLTableCaptionElement",
      "classSimpleName": "HTMLTableCaptionElement",
      "elementKind": "method",
      "methodName": "matches",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::matches(java.lang.String) @ akasha.HTMLTableCellElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLTableCellElement",
      "classSimpleName": "HTMLTableCellElement",
      "elementKind": "method",
      "methodName": "matches",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::matches(java.lang.String) @ akasha.HTMLTableColElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLTableColElement",
      "classSimpleName": "HTMLTableColElement",
      "elementKind": "method",
      "methodName": "matches",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::matches(java.lang.String) @ akasha.HTMLTableElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLTableElement",
      "classSimpleName": "HTMLTableElement",
      "elementKind": "method",
      "methodName": "matches",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::matches(java.lang.String) @ akasha.HTMLTableRowElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLTableRowElement",
      "classSimpleName": "HTMLTableRowElement",
      "elementKind": "method",
      "methodName": "matches",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::matches(java.lang.String) @ akasha.HTMLTableSectionElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLTableSectionElement",
      "classSimpleName": "HTMLTableSectionElement",
      "elementKind": "method",
      "methodName": "matches",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::matches(java.lang.String) @ akasha.HTMLTemplateElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLTemplateElement",
      "classSimpleName": "HTMLTemplateElement",
      "elementKind": "method",
      "methodName": "matches",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::matches(java.lang.String) @ akasha.HTMLTextAreaElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLTextAreaElement",
      "classSimpleName": "HTMLTextAreaElement",
      "elementKind": "method",
      "methodName": "matches",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::matches(java.lang.String) @ akasha.HTMLTimeElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLTimeElement",
      "classSimpleName": "HTMLTimeElement",
      "elementKind": "method",
      "methodName": "matches",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::matches(java.lang.String) @ akasha.HTMLTitleElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLTitleElement",
      "classSimpleName": "HTMLTitleElement",
      "elementKind": "method",
      "methodName": "matches",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::matches(java.lang.String) @ akasha.HTMLTrackElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLTrackElement",
      "classSimpleName": "HTMLTrackElement",
      "elementKind": "method",
      "methodName": "matches",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::matches(java.lang.String) @ akasha.HTMLUListElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLUListElement",
      "classSimpleName": "HTMLUListElement",
      "elementKind": "method",
      "methodName": "matches",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::matches(java.lang.String) @ akasha.HTMLUnknownElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLUnknownElement",
      "classSimpleName": "HTMLUnknownElement",
      "elementKind": "method",
      "methodName": "matches",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::matches(java.lang.String) @ akasha.HTMLVideoElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLVideoElement",
      "classSimpleName": "HTMLVideoElement",
      "elementKind": "method",
      "methodName": "matches",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::matches(java.lang.String) @ akasha.Image",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.Image",
      "classSimpleName": "Image",
      "elementKind": "method",
      "methodName": "matches",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::matches(java.lang.String) @ akasha.Option",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.Option",
      "classSimpleName": "Option",
      "elementKind": "method",
      "methodName": "matches",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::matches(java.lang.String) @ akasha.svg.SVGAElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGAElement",
      "classSimpleName": "SVGAElement",
      "elementKind": "method",
      "methodName": "matches",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::matches(java.lang.String) @ akasha.svg.SVGCircleElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGCircleElement",
      "classSimpleName": "SVGCircleElement",
      "elementKind": "method",
      "methodName": "matches",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::matches(java.lang.String) @ akasha.svg.SVGClipPathElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGClipPathElement",
      "classSimpleName": "SVGClipPathElement",
      "elementKind": "method",
      "methodName": "matches",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::matches(java.lang.String) @ akasha.svg.SVGComponentTransferFunctionElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGComponentTransferFunctionElement",
      "classSimpleName": "SVGComponentTransferFunctionElement",
      "elementKind": "method",
      "methodName": "matches",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::matches(java.lang.String) @ akasha.svg.SVGDefsElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGDefsElement",
      "classSimpleName": "SVGDefsElement",
      "elementKind": "method",
      "methodName": "matches",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::matches(java.lang.String) @ akasha.svg.SVGDescElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGDescElement",
      "classSimpleName": "SVGDescElement",
      "elementKind": "method",
      "methodName": "matches",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::matches(java.lang.String) @ akasha.svg.SVGElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGElement",
      "classSimpleName": "SVGElement",
      "elementKind": "method",
      "methodName": "matches",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::matches(java.lang.String) @ akasha.svg.SVGEllipseElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGEllipseElement",
      "classSimpleName": "SVGEllipseElement",
      "elementKind": "method",
      "methodName": "matches",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::matches(java.lang.String) @ akasha.svg.SVGFEBlendElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEBlendElement",
      "classSimpleName": "SVGFEBlendElement",
      "elementKind": "method",
      "methodName": "matches",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::matches(java.lang.String) @ akasha.svg.SVGFEColorMatrixElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEColorMatrixElement",
      "classSimpleName": "SVGFEColorMatrixElement",
      "elementKind": "method",
      "methodName": "matches",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::matches(java.lang.String) @ akasha.svg.SVGFEComponentTransferElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEComponentTransferElement",
      "classSimpleName": "SVGFEComponentTransferElement",
      "elementKind": "method",
      "methodName": "matches",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::matches(java.lang.String) @ akasha.svg.SVGFECompositeElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFECompositeElement",
      "classSimpleName": "SVGFECompositeElement",
      "elementKind": "method",
      "methodName": "matches",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::matches(java.lang.String) @ akasha.svg.SVGFEConvolveMatrixElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEConvolveMatrixElement",
      "classSimpleName": "SVGFEConvolveMatrixElement",
      "elementKind": "method",
      "methodName": "matches",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::matches(java.lang.String) @ akasha.svg.SVGFEDiffuseLightingElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEDiffuseLightingElement",
      "classSimpleName": "SVGFEDiffuseLightingElement",
      "elementKind": "method",
      "methodName": "matches",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::matches(java.lang.String) @ akasha.svg.SVGFEDisplacementMapElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEDisplacementMapElement",
      "classSimpleName": "SVGFEDisplacementMapElement",
      "elementKind": "method",
      "methodName": "matches",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::matches(java.lang.String) @ akasha.svg.SVGFEDistantLightElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEDistantLightElement",
      "classSimpleName": "SVGFEDistantLightElement",
      "elementKind": "method",
      "methodName": "matches",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::matches(java.lang.String) @ akasha.svg.SVGFEDropShadowElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEDropShadowElement",
      "classSimpleName": "SVGFEDropShadowElement",
      "elementKind": "method",
      "methodName": "matches",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::matches(java.lang.String) @ akasha.svg.SVGFEFloodElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEFloodElement",
      "classSimpleName": "SVGFEFloodElement",
      "elementKind": "method",
      "methodName": "matches",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::matches(java.lang.String) @ akasha.svg.SVGFEFuncAElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEFuncAElement",
      "classSimpleName": "SVGFEFuncAElement",
      "elementKind": "method",
      "methodName": "matches",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::matches(java.lang.String) @ akasha.svg.SVGFEFuncBElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEFuncBElement",
      "classSimpleName": "SVGFEFuncBElement",
      "elementKind": "method",
      "methodName": "matches",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::matches(java.lang.String) @ akasha.svg.SVGFEFuncGElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEFuncGElement",
      "classSimpleName": "SVGFEFuncGElement",
      "elementKind": "method",
      "methodName": "matches",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::matches(java.lang.String) @ akasha.svg.SVGFEFuncRElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEFuncRElement",
      "classSimpleName": "SVGFEFuncRElement",
      "elementKind": "method",
      "methodName": "matches",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::matches(java.lang.String) @ akasha.svg.SVGFEGaussianBlurElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEGaussianBlurElement",
      "classSimpleName": "SVGFEGaussianBlurElement",
      "elementKind": "method",
      "methodName": "matches",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::matches(java.lang.String) @ akasha.svg.SVGFEImageElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEImageElement",
      "classSimpleName": "SVGFEImageElement",
      "elementKind": "method",
      "methodName": "matches",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::matches(java.lang.String) @ akasha.svg.SVGFEMergeElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEMergeElement",
      "classSimpleName": "SVGFEMergeElement",
      "elementKind": "method",
      "methodName": "matches",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::matches(java.lang.String) @ akasha.svg.SVGFEMergeNodeElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEMergeNodeElement",
      "classSimpleName": "SVGFEMergeNodeElement",
      "elementKind": "method",
      "methodName": "matches",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::matches(java.lang.String) @ akasha.svg.SVGFEMorphologyElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEMorphologyElement",
      "classSimpleName": "SVGFEMorphologyElement",
      "elementKind": "method",
      "methodName": "matches",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::matches(java.lang.String) @ akasha.svg.SVGFEOffsetElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEOffsetElement",
      "classSimpleName": "SVGFEOffsetElement",
      "elementKind": "method",
      "methodName": "matches",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::matches(java.lang.String) @ akasha.svg.SVGFEPointLightElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEPointLightElement",
      "classSimpleName": "SVGFEPointLightElement",
      "elementKind": "method",
      "methodName": "matches",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::matches(java.lang.String) @ akasha.svg.SVGFESpecularLightingElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFESpecularLightingElement",
      "classSimpleName": "SVGFESpecularLightingElement",
      "elementKind": "method",
      "methodName": "matches",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::matches(java.lang.String) @ akasha.svg.SVGFESpotLightElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFESpotLightElement",
      "classSimpleName": "SVGFESpotLightElement",
      "elementKind": "method",
      "methodName": "matches",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::matches(java.lang.String) @ akasha.svg.SVGFETileElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFETileElement",
      "classSimpleName": "SVGFETileElement",
      "elementKind": "method",
      "methodName": "matches",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::matches(java.lang.String) @ akasha.svg.SVGFETurbulenceElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFETurbulenceElement",
      "classSimpleName": "SVGFETurbulenceElement",
      "elementKind": "method",
      "methodName": "matches",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::matches(java.lang.String) @ akasha.svg.SVGFilterElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFilterElement",
      "classSimpleName": "SVGFilterElement",
      "elementKind": "method",
      "methodName": "matches",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::matches(java.lang.String) @ akasha.svg.SVGForeignObjectElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGForeignObjectElement",
      "classSimpleName": "SVGForeignObjectElement",
      "elementKind": "method",
      "methodName": "matches",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::matches(java.lang.String) @ akasha.svg.SVGGElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGGElement",
      "classSimpleName": "SVGGElement",
      "elementKind": "method",
      "methodName": "matches",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::matches(java.lang.String) @ akasha.svg.SVGGeometryElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGGeometryElement",
      "classSimpleName": "SVGGeometryElement",
      "elementKind": "method",
      "methodName": "matches",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::matches(java.lang.String) @ akasha.svg.SVGGradientElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGGradientElement",
      "classSimpleName": "SVGGradientElement",
      "elementKind": "method",
      "methodName": "matches",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::matches(java.lang.String) @ akasha.svg.SVGGraphicsElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGGraphicsElement",
      "classSimpleName": "SVGGraphicsElement",
      "elementKind": "method",
      "methodName": "matches",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::matches(java.lang.String) @ akasha.svg.SVGImageElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGImageElement",
      "classSimpleName": "SVGImageElement",
      "elementKind": "method",
      "methodName": "matches",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::matches(java.lang.String) @ akasha.svg.SVGLineElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGLineElement",
      "classSimpleName": "SVGLineElement",
      "elementKind": "method",
      "methodName": "matches",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::matches(java.lang.String) @ akasha.svg.SVGLinearGradientElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGLinearGradientElement",
      "classSimpleName": "SVGLinearGradientElement",
      "elementKind": "method",
      "methodName": "matches",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::matches(java.lang.String) @ akasha.svg.SVGMarkerElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGMarkerElement",
      "classSimpleName": "SVGMarkerElement",
      "elementKind": "method",
      "methodName": "matches",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::matches(java.lang.String) @ akasha.svg.SVGMaskElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGMaskElement",
      "classSimpleName": "SVGMaskElement",
      "elementKind": "method",
      "methodName": "matches",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::matches(java.lang.String) @ akasha.svg.SVGMetadataElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGMetadataElement",
      "classSimpleName": "SVGMetadataElement",
      "elementKind": "method",
      "methodName": "matches",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::matches(java.lang.String) @ akasha.svg.SVGPathElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGPathElement",
      "classSimpleName": "SVGPathElement",
      "elementKind": "method",
      "methodName": "matches",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::matches(java.lang.String) @ akasha.svg.SVGPatternElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGPatternElement",
      "classSimpleName": "SVGPatternElement",
      "elementKind": "method",
      "methodName": "matches",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::matches(java.lang.String) @ akasha.svg.SVGPolygonElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGPolygonElement",
      "classSimpleName": "SVGPolygonElement",
      "elementKind": "method",
      "methodName": "matches",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::matches(java.lang.String) @ akasha.svg.SVGPolylineElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGPolylineElement",
      "classSimpleName": "SVGPolylineElement",
      "elementKind": "method",
      "methodName": "matches",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::matches(java.lang.String) @ akasha.svg.SVGRadialGradientElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGRadialGradientElement",
      "classSimpleName": "SVGRadialGradientElement",
      "elementKind": "method",
      "methodName": "matches",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::matches(java.lang.String) @ akasha.svg.SVGRectElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGRectElement",
      "classSimpleName": "SVGRectElement",
      "elementKind": "method",
      "methodName": "matches",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::matches(java.lang.String) @ akasha.svg.SVGSVGElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGSVGElement",
      "classSimpleName": "SVGSVGElement",
      "elementKind": "method",
      "methodName": "matches",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::matches(java.lang.String) @ akasha.svg.SVGScriptElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGScriptElement",
      "classSimpleName": "SVGScriptElement",
      "elementKind": "method",
      "methodName": "matches",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::matches(java.lang.String) @ akasha.svg.SVGStopElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGStopElement",
      "classSimpleName": "SVGStopElement",
      "elementKind": "method",
      "methodName": "matches",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::matches(java.lang.String) @ akasha.svg.SVGStyleElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGStyleElement",
      "classSimpleName": "SVGStyleElement",
      "elementKind": "method",
      "methodName": "matches",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::matches(java.lang.String) @ akasha.svg.SVGSwitchElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGSwitchElement",
      "classSimpleName": "SVGSwitchElement",
      "elementKind": "method",
      "methodName": "matches",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::matches(java.lang.String) @ akasha.svg.SVGSymbolElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGSymbolElement",
      "classSimpleName": "SVGSymbolElement",
      "elementKind": "method",
      "methodName": "matches",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::matches(java.lang.String) @ akasha.svg.SVGTSpanElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGTSpanElement",
      "classSimpleName": "SVGTSpanElement",
      "elementKind": "method",
      "methodName": "matches",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::matches(java.lang.String) @ akasha.svg.SVGTextContentElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGTextContentElement",
      "classSimpleName": "SVGTextContentElement",
      "elementKind": "method",
      "methodName": "matches",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::matches(java.lang.String) @ akasha.svg.SVGTextElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGTextElement",
      "classSimpleName": "SVGTextElement",
      "elementKind": "method",
      "methodName": "matches",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::matches(java.lang.String) @ akasha.svg.SVGTextPathElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGTextPathElement",
      "classSimpleName": "SVGTextPathElement",
      "elementKind": "method",
      "methodName": "matches",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::matches(java.lang.String) @ akasha.svg.SVGTextPositioningElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGTextPositioningElement",
      "classSimpleName": "SVGTextPositioningElement",
      "elementKind": "method",
      "methodName": "matches",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::matches(java.lang.String) @ akasha.svg.SVGTitleElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGTitleElement",
      "classSimpleName": "SVGTitleElement",
      "elementKind": "method",
      "methodName": "matches",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::matches(java.lang.String) @ akasha.svg.SVGUnknownElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGUnknownElement",
      "classSimpleName": "SVGUnknownElement",
      "elementKind": "method",
      "methodName": "matches",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::matches(java.lang.String) @ akasha.svg.SVGUseElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGUseElement",
      "classSimpleName": "SVGUseElement",
      "elementKind": "method",
      "methodName": "matches",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::matches(java.lang.String) @ akasha.svg.SVGViewElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGViewElement",
      "classSimpleName": "SVGViewElement",
      "elementKind": "method",
      "methodName": "matches",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::matches(java.lang.String)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.Element",
      "classSimpleName": "Element",
      "elementKind": "method",
      "methodName": "matches",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::webkitMatchesSelector(java.lang.String) @ akasha.Audio",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.Audio",
      "classSimpleName": "Audio",
      "elementKind": "method",
      "methodName": "webkitMatchesSelector",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::webkitMatchesSelector(java.lang.String) @ akasha.HTMLAnchorElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLAnchorElement",
      "classSimpleName": "HTMLAnchorElement",
      "elementKind": "method",
      "methodName": "webkitMatchesSelector",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::webkitMatchesSelector(java.lang.String) @ akasha.HTMLAreaElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLAreaElement",
      "classSimpleName": "HTMLAreaElement",
      "elementKind": "method",
      "methodName": "webkitMatchesSelector",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::webkitMatchesSelector(java.lang.String) @ akasha.HTMLAudioElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLAudioElement",
      "classSimpleName": "HTMLAudioElement",
      "elementKind": "method",
      "methodName": "webkitMatchesSelector",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::webkitMatchesSelector(java.lang.String) @ akasha.HTMLBRElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLBRElement",
      "classSimpleName": "HTMLBRElement",
      "elementKind": "method",
      "methodName": "webkitMatchesSelector",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::webkitMatchesSelector(java.lang.String) @ akasha.HTMLBaseElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLBaseElement",
      "classSimpleName": "HTMLBaseElement",
      "elementKind": "method",
      "methodName": "webkitMatchesSelector",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::webkitMatchesSelector(java.lang.String) @ akasha.HTMLBodyElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLBodyElement",
      "classSimpleName": "HTMLBodyElement",
      "elementKind": "method",
      "methodName": "webkitMatchesSelector",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::webkitMatchesSelector(java.lang.String) @ akasha.HTMLButtonElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLButtonElement",
      "classSimpleName": "HTMLButtonElement",
      "elementKind": "method",
      "methodName": "webkitMatchesSelector",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::webkitMatchesSelector(java.lang.String) @ akasha.HTMLCanvasElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLCanvasElement",
      "classSimpleName": "HTMLCanvasElement",
      "elementKind": "method",
      "methodName": "webkitMatchesSelector",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::webkitMatchesSelector(java.lang.String) @ akasha.HTMLDListElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLDListElement",
      "classSimpleName": "HTMLDListElement",
      "elementKind": "method",
      "methodName": "webkitMatchesSelector",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::webkitMatchesSelector(java.lang.String) @ akasha.HTMLDataElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLDataElement",
      "classSimpleName": "HTMLDataElement",
      "elementKind": "method",
      "methodName": "webkitMatchesSelector",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::webkitMatchesSelector(java.lang.String) @ akasha.HTMLDataListElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLDataListElement",
      "classSimpleName": "HTMLDataListElement",
      "elementKind": "method",
      "methodName": "webkitMatchesSelector",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::webkitMatchesSelector(java.lang.String) @ akasha.HTMLDetailsElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLDetailsElement",
      "classSimpleName": "HTMLDetailsElement",
      "elementKind": "method",
      "methodName": "webkitMatchesSelector",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::webkitMatchesSelector(java.lang.String) @ akasha.HTMLDialogElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLDialogElement",
      "classSimpleName": "HTMLDialogElement",
      "elementKind": "method",
      "methodName": "webkitMatchesSelector",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::webkitMatchesSelector(java.lang.String) @ akasha.HTMLDirectoryElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLDirectoryElement",
      "classSimpleName": "HTMLDirectoryElement",
      "elementKind": "method",
      "methodName": "webkitMatchesSelector",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::webkitMatchesSelector(java.lang.String) @ akasha.HTMLDivElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLDivElement",
      "classSimpleName": "HTMLDivElement",
      "elementKind": "method",
      "methodName": "webkitMatchesSelector",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::webkitMatchesSelector(java.lang.String) @ akasha.HTMLElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLElement",
      "classSimpleName": "HTMLElement",
      "elementKind": "method",
      "methodName": "webkitMatchesSelector",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::webkitMatchesSelector(java.lang.String) @ akasha.HTMLEmbedElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLEmbedElement",
      "classSimpleName": "HTMLEmbedElement",
      "elementKind": "method",
      "methodName": "webkitMatchesSelector",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::webkitMatchesSelector(java.lang.String) @ akasha.HTMLFieldSetElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLFieldSetElement",
      "classSimpleName": "HTMLFieldSetElement",
      "elementKind": "method",
      "methodName": "webkitMatchesSelector",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::webkitMatchesSelector(java.lang.String) @ akasha.HTMLFontElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLFontElement",
      "classSimpleName": "HTMLFontElement",
      "elementKind": "method",
      "methodName": "webkitMatchesSelector",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::webkitMatchesSelector(java.lang.String) @ akasha.HTMLFormElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLFormElement",
      "classSimpleName": "HTMLFormElement",
      "elementKind": "method",
      "methodName": "webkitMatchesSelector",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::webkitMatchesSelector(java.lang.String) @ akasha.HTMLFrameElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLFrameElement",
      "classSimpleName": "HTMLFrameElement",
      "elementKind": "method",
      "methodName": "webkitMatchesSelector",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::webkitMatchesSelector(java.lang.String) @ akasha.HTMLFrameSetElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLFrameSetElement",
      "classSimpleName": "HTMLFrameSetElement",
      "elementKind": "method",
      "methodName": "webkitMatchesSelector",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::webkitMatchesSelector(java.lang.String) @ akasha.HTMLHRElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLHRElement",
      "classSimpleName": "HTMLHRElement",
      "elementKind": "method",
      "methodName": "webkitMatchesSelector",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::webkitMatchesSelector(java.lang.String) @ akasha.HTMLHeadElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLHeadElement",
      "classSimpleName": "HTMLHeadElement",
      "elementKind": "method",
      "methodName": "webkitMatchesSelector",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::webkitMatchesSelector(java.lang.String) @ akasha.HTMLHeadingElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLHeadingElement",
      "classSimpleName": "HTMLHeadingElement",
      "elementKind": "method",
      "methodName": "webkitMatchesSelector",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::webkitMatchesSelector(java.lang.String) @ akasha.HTMLHtmlElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLHtmlElement",
      "classSimpleName": "HTMLHtmlElement",
      "elementKind": "method",
      "methodName": "webkitMatchesSelector",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::webkitMatchesSelector(java.lang.String) @ akasha.HTMLIFrameElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLIFrameElement",
      "classSimpleName": "HTMLIFrameElement",
      "elementKind": "method",
      "methodName": "webkitMatchesSelector",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::webkitMatchesSelector(java.lang.String) @ akasha.HTMLImageElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLImageElement",
      "classSimpleName": "HTMLImageElement",
      "elementKind": "method",
      "methodName": "webkitMatchesSelector",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::webkitMatchesSelector(java.lang.String) @ akasha.HTMLInputElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLInputElement",
      "classSimpleName": "HTMLInputElement",
      "elementKind": "method",
      "methodName": "webkitMatchesSelector",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::webkitMatchesSelector(java.lang.String) @ akasha.HTMLLIElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLLIElement",
      "classSimpleName": "HTMLLIElement",
      "elementKind": "method",
      "methodName": "webkitMatchesSelector",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::webkitMatchesSelector(java.lang.String) @ akasha.HTMLLabelElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLLabelElement",
      "classSimpleName": "HTMLLabelElement",
      "elementKind": "method",
      "methodName": "webkitMatchesSelector",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::webkitMatchesSelector(java.lang.String) @ akasha.HTMLLegendElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLLegendElement",
      "classSimpleName": "HTMLLegendElement",
      "elementKind": "method",
      "methodName": "webkitMatchesSelector",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::webkitMatchesSelector(java.lang.String) @ akasha.HTMLLinkElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLLinkElement",
      "classSimpleName": "HTMLLinkElement",
      "elementKind": "method",
      "methodName": "webkitMatchesSelector",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::webkitMatchesSelector(java.lang.String) @ akasha.HTMLMapElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLMapElement",
      "classSimpleName": "HTMLMapElement",
      "elementKind": "method",
      "methodName": "webkitMatchesSelector",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::webkitMatchesSelector(java.lang.String) @ akasha.HTMLMarqueeElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLMarqueeElement",
      "classSimpleName": "HTMLMarqueeElement",
      "elementKind": "method",
      "methodName": "webkitMatchesSelector",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::webkitMatchesSelector(java.lang.String) @ akasha.HTMLMediaElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLMediaElement",
      "classSimpleName": "HTMLMediaElement",
      "elementKind": "method",
      "methodName": "webkitMatchesSelector",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::webkitMatchesSelector(java.lang.String) @ akasha.HTMLMenuElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLMenuElement",
      "classSimpleName": "HTMLMenuElement",
      "elementKind": "method",
      "methodName": "webkitMatchesSelector",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::webkitMatchesSelector(java.lang.String) @ akasha.HTMLMetaElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLMetaElement",
      "classSimpleName": "HTMLMetaElement",
      "elementKind": "method",
      "methodName": "webkitMatchesSelector",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::webkitMatchesSelector(java.lang.String) @ akasha.HTMLMeterElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLMeterElement",
      "classSimpleName": "HTMLMeterElement",
      "elementKind": "method",
      "methodName": "webkitMatchesSelector",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::webkitMatchesSelector(java.lang.String) @ akasha.HTMLModElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLModElement",
      "classSimpleName": "HTMLModElement",
      "elementKind": "method",
      "methodName": "webkitMatchesSelector",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::webkitMatchesSelector(java.lang.String) @ akasha.HTMLOListElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLOListElement",
      "classSimpleName": "HTMLOListElement",
      "elementKind": "method",
      "methodName": "webkitMatchesSelector",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::webkitMatchesSelector(java.lang.String) @ akasha.HTMLObjectElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLObjectElement",
      "classSimpleName": "HTMLObjectElement",
      "elementKind": "method",
      "methodName": "webkitMatchesSelector",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::webkitMatchesSelector(java.lang.String) @ akasha.HTMLOptGroupElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLOptGroupElement",
      "classSimpleName": "HTMLOptGroupElement",
      "elementKind": "method",
      "methodName": "webkitMatchesSelector",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::webkitMatchesSelector(java.lang.String) @ akasha.HTMLOptionElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLOptionElement",
      "classSimpleName": "HTMLOptionElement",
      "elementKind": "method",
      "methodName": "webkitMatchesSelector",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::webkitMatchesSelector(java.lang.String) @ akasha.HTMLOutputElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLOutputElement",
      "classSimpleName": "HTMLOutputElement",
      "elementKind": "method",
      "methodName": "webkitMatchesSelector",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::webkitMatchesSelector(java.lang.String) @ akasha.HTMLParagraphElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLParagraphElement",
      "classSimpleName": "HTMLParagraphElement",
      "elementKind": "method",
      "methodName": "webkitMatchesSelector",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::webkitMatchesSelector(java.lang.String) @ akasha.HTMLParamElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLParamElement",
      "classSimpleName": "HTMLParamElement",
      "elementKind": "method",
      "methodName": "webkitMatchesSelector",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::webkitMatchesSelector(java.lang.String) @ akasha.HTMLPictureElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLPictureElement",
      "classSimpleName": "HTMLPictureElement",
      "elementKind": "method",
      "methodName": "webkitMatchesSelector",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::webkitMatchesSelector(java.lang.String) @ akasha.HTMLPreElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLPreElement",
      "classSimpleName": "HTMLPreElement",
      "elementKind": "method",
      "methodName": "webkitMatchesSelector",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::webkitMatchesSelector(java.lang.String) @ akasha.HTMLProgressElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLProgressElement",
      "classSimpleName": "HTMLProgressElement",
      "elementKind": "method",
      "methodName": "webkitMatchesSelector",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::webkitMatchesSelector(java.lang.String) @ akasha.HTMLQuoteElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLQuoteElement",
      "classSimpleName": "HTMLQuoteElement",
      "elementKind": "method",
      "methodName": "webkitMatchesSelector",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::webkitMatchesSelector(java.lang.String) @ akasha.HTMLScriptElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLScriptElement",
      "classSimpleName": "HTMLScriptElement",
      "elementKind": "method",
      "methodName": "webkitMatchesSelector",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::webkitMatchesSelector(java.lang.String) @ akasha.HTMLSelectElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLSelectElement",
      "classSimpleName": "HTMLSelectElement",
      "elementKind": "method",
      "methodName": "webkitMatchesSelector",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::webkitMatchesSelector(java.lang.String) @ akasha.HTMLSlotElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLSlotElement",
      "classSimpleName": "HTMLSlotElement",
      "elementKind": "method",
      "methodName": "webkitMatchesSelector",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::webkitMatchesSelector(java.lang.String) @ akasha.HTMLSourceElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLSourceElement",
      "classSimpleName": "HTMLSourceElement",
      "elementKind": "method",
      "methodName": "webkitMatchesSelector",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::webkitMatchesSelector(java.lang.String) @ akasha.HTMLSpanElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLSpanElement",
      "classSimpleName": "HTMLSpanElement",
      "elementKind": "method",
      "methodName": "webkitMatchesSelector",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::webkitMatchesSelector(java.lang.String) @ akasha.HTMLStyleElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLStyleElement",
      "classSimpleName": "HTMLStyleElement",
      "elementKind": "method",
      "methodName": "webkitMatchesSelector",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::webkitMatchesSelector(java.lang.String) @ akasha.HTMLTableCaptionElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLTableCaptionElement",
      "classSimpleName": "HTMLTableCaptionElement",
      "elementKind": "method",
      "methodName": "webkitMatchesSelector",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::webkitMatchesSelector(java.lang.String) @ akasha.HTMLTableCellElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLTableCellElement",
      "classSimpleName": "HTMLTableCellElement",
      "elementKind": "method",
      "methodName": "webkitMatchesSelector",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::webkitMatchesSelector(java.lang.String) @ akasha.HTMLTableColElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLTableColElement",
      "classSimpleName": "HTMLTableColElement",
      "elementKind": "method",
      "methodName": "webkitMatchesSelector",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::webkitMatchesSelector(java.lang.String) @ akasha.HTMLTableElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLTableElement",
      "classSimpleName": "HTMLTableElement",
      "elementKind": "method",
      "methodName": "webkitMatchesSelector",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::webkitMatchesSelector(java.lang.String) @ akasha.HTMLTableRowElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLTableRowElement",
      "classSimpleName": "HTMLTableRowElement",
      "elementKind": "method",
      "methodName": "webkitMatchesSelector",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::webkitMatchesSelector(java.lang.String) @ akasha.HTMLTableSectionElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLTableSectionElement",
      "classSimpleName": "HTMLTableSectionElement",
      "elementKind": "method",
      "methodName": "webkitMatchesSelector",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::webkitMatchesSelector(java.lang.String) @ akasha.HTMLTemplateElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLTemplateElement",
      "classSimpleName": "HTMLTemplateElement",
      "elementKind": "method",
      "methodName": "webkitMatchesSelector",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::webkitMatchesSelector(java.lang.String) @ akasha.HTMLTextAreaElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLTextAreaElement",
      "classSimpleName": "HTMLTextAreaElement",
      "elementKind": "method",
      "methodName": "webkitMatchesSelector",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::webkitMatchesSelector(java.lang.String) @ akasha.HTMLTimeElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLTimeElement",
      "classSimpleName": "HTMLTimeElement",
      "elementKind": "method",
      "methodName": "webkitMatchesSelector",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::webkitMatchesSelector(java.lang.String) @ akasha.HTMLTitleElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLTitleElement",
      "classSimpleName": "HTMLTitleElement",
      "elementKind": "method",
      "methodName": "webkitMatchesSelector",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::webkitMatchesSelector(java.lang.String) @ akasha.HTMLTrackElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLTrackElement",
      "classSimpleName": "HTMLTrackElement",
      "elementKind": "method",
      "methodName": "webkitMatchesSelector",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::webkitMatchesSelector(java.lang.String) @ akasha.HTMLUListElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLUListElement",
      "classSimpleName": "HTMLUListElement",
      "elementKind": "method",
      "methodName": "webkitMatchesSelector",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::webkitMatchesSelector(java.lang.String) @ akasha.HTMLUnknownElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLUnknownElement",
      "classSimpleName": "HTMLUnknownElement",
      "elementKind": "method",
      "methodName": "webkitMatchesSelector",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::webkitMatchesSelector(java.lang.String) @ akasha.HTMLVideoElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLVideoElement",
      "classSimpleName": "HTMLVideoElement",
      "elementKind": "method",
      "methodName": "webkitMatchesSelector",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::webkitMatchesSelector(java.lang.String) @ akasha.Image",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.Image",
      "classSimpleName": "Image",
      "elementKind": "method",
      "methodName": "webkitMatchesSelector",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::webkitMatchesSelector(java.lang.String) @ akasha.Option",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.Option",
      "classSimpleName": "Option",
      "elementKind": "method",
      "methodName": "webkitMatchesSelector",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::webkitMatchesSelector(java.lang.String) @ akasha.svg.SVGAElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGAElement",
      "classSimpleName": "SVGAElement",
      "elementKind": "method",
      "methodName": "webkitMatchesSelector",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::webkitMatchesSelector(java.lang.String) @ akasha.svg.SVGCircleElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGCircleElement",
      "classSimpleName": "SVGCircleElement",
      "elementKind": "method",
      "methodName": "webkitMatchesSelector",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::webkitMatchesSelector(java.lang.String) @ akasha.svg.SVGClipPathElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGClipPathElement",
      "classSimpleName": "SVGClipPathElement",
      "elementKind": "method",
      "methodName": "webkitMatchesSelector",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::webkitMatchesSelector(java.lang.String) @ akasha.svg.SVGComponentTransferFunctionElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGComponentTransferFunctionElement",
      "classSimpleName": "SVGComponentTransferFunctionElement",
      "elementKind": "method",
      "methodName": "webkitMatchesSelector",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::webkitMatchesSelector(java.lang.String) @ akasha.svg.SVGDefsElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGDefsElement",
      "classSimpleName": "SVGDefsElement",
      "elementKind": "method",
      "methodName": "webkitMatchesSelector",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::webkitMatchesSelector(java.lang.String) @ akasha.svg.SVGDescElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGDescElement",
      "classSimpleName": "SVGDescElement",
      "elementKind": "method",
      "methodName": "webkitMatchesSelector",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::webkitMatchesSelector(java.lang.String) @ akasha.svg.SVGElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGElement",
      "classSimpleName": "SVGElement",
      "elementKind": "method",
      "methodName": "webkitMatchesSelector",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::webkitMatchesSelector(java.lang.String) @ akasha.svg.SVGEllipseElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGEllipseElement",
      "classSimpleName": "SVGEllipseElement",
      "elementKind": "method",
      "methodName": "webkitMatchesSelector",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::webkitMatchesSelector(java.lang.String) @ akasha.svg.SVGFEBlendElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEBlendElement",
      "classSimpleName": "SVGFEBlendElement",
      "elementKind": "method",
      "methodName": "webkitMatchesSelector",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::webkitMatchesSelector(java.lang.String) @ akasha.svg.SVGFEColorMatrixElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEColorMatrixElement",
      "classSimpleName": "SVGFEColorMatrixElement",
      "elementKind": "method",
      "methodName": "webkitMatchesSelector",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::webkitMatchesSelector(java.lang.String) @ akasha.svg.SVGFEComponentTransferElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEComponentTransferElement",
      "classSimpleName": "SVGFEComponentTransferElement",
      "elementKind": "method",
      "methodName": "webkitMatchesSelector",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::webkitMatchesSelector(java.lang.String) @ akasha.svg.SVGFECompositeElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFECompositeElement",
      "classSimpleName": "SVGFECompositeElement",
      "elementKind": "method",
      "methodName": "webkitMatchesSelector",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::webkitMatchesSelector(java.lang.String) @ akasha.svg.SVGFEConvolveMatrixElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEConvolveMatrixElement",
      "classSimpleName": "SVGFEConvolveMatrixElement",
      "elementKind": "method",
      "methodName": "webkitMatchesSelector",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::webkitMatchesSelector(java.lang.String) @ akasha.svg.SVGFEDiffuseLightingElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEDiffuseLightingElement",
      "classSimpleName": "SVGFEDiffuseLightingElement",
      "elementKind": "method",
      "methodName": "webkitMatchesSelector",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::webkitMatchesSelector(java.lang.String) @ akasha.svg.SVGFEDisplacementMapElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEDisplacementMapElement",
      "classSimpleName": "SVGFEDisplacementMapElement",
      "elementKind": "method",
      "methodName": "webkitMatchesSelector",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::webkitMatchesSelector(java.lang.String) @ akasha.svg.SVGFEDistantLightElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEDistantLightElement",
      "classSimpleName": "SVGFEDistantLightElement",
      "elementKind": "method",
      "methodName": "webkitMatchesSelector",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::webkitMatchesSelector(java.lang.String) @ akasha.svg.SVGFEDropShadowElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEDropShadowElement",
      "classSimpleName": "SVGFEDropShadowElement",
      "elementKind": "method",
      "methodName": "webkitMatchesSelector",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::webkitMatchesSelector(java.lang.String) @ akasha.svg.SVGFEFloodElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEFloodElement",
      "classSimpleName": "SVGFEFloodElement",
      "elementKind": "method",
      "methodName": "webkitMatchesSelector",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::webkitMatchesSelector(java.lang.String) @ akasha.svg.SVGFEFuncAElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEFuncAElement",
      "classSimpleName": "SVGFEFuncAElement",
      "elementKind": "method",
      "methodName": "webkitMatchesSelector",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::webkitMatchesSelector(java.lang.String) @ akasha.svg.SVGFEFuncBElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEFuncBElement",
      "classSimpleName": "SVGFEFuncBElement",
      "elementKind": "method",
      "methodName": "webkitMatchesSelector",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::webkitMatchesSelector(java.lang.String) @ akasha.svg.SVGFEFuncGElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEFuncGElement",
      "classSimpleName": "SVGFEFuncGElement",
      "elementKind": "method",
      "methodName": "webkitMatchesSelector",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::webkitMatchesSelector(java.lang.String) @ akasha.svg.SVGFEFuncRElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEFuncRElement",
      "classSimpleName": "SVGFEFuncRElement",
      "elementKind": "method",
      "methodName": "webkitMatchesSelector",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::webkitMatchesSelector(java.lang.String) @ akasha.svg.SVGFEGaussianBlurElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEGaussianBlurElement",
      "classSimpleName": "SVGFEGaussianBlurElement",
      "elementKind": "method",
      "methodName": "webkitMatchesSelector",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::webkitMatchesSelector(java.lang.String) @ akasha.svg.SVGFEImageElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEImageElement",
      "classSimpleName": "SVGFEImageElement",
      "elementKind": "method",
      "methodName": "webkitMatchesSelector",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::webkitMatchesSelector(java.lang.String) @ akasha.svg.SVGFEMergeElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEMergeElement",
      "classSimpleName": "SVGFEMergeElement",
      "elementKind": "method",
      "methodName": "webkitMatchesSelector",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::webkitMatchesSelector(java.lang.String) @ akasha.svg.SVGFEMergeNodeElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEMergeNodeElement",
      "classSimpleName": "SVGFEMergeNodeElement",
      "elementKind": "method",
      "methodName": "webkitMatchesSelector",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::webkitMatchesSelector(java.lang.String) @ akasha.svg.SVGFEMorphologyElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEMorphologyElement",
      "classSimpleName": "SVGFEMorphologyElement",
      "elementKind": "method",
      "methodName": "webkitMatchesSelector",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::webkitMatchesSelector(java.lang.String) @ akasha.svg.SVGFEOffsetElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEOffsetElement",
      "classSimpleName": "SVGFEOffsetElement",
      "elementKind": "method",
      "methodName": "webkitMatchesSelector",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::webkitMatchesSelector(java.lang.String) @ akasha.svg.SVGFEPointLightElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEPointLightElement",
      "classSimpleName": "SVGFEPointLightElement",
      "elementKind": "method",
      "methodName": "webkitMatchesSelector",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::webkitMatchesSelector(java.lang.String) @ akasha.svg.SVGFESpecularLightingElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFESpecularLightingElement",
      "classSimpleName": "SVGFESpecularLightingElement",
      "elementKind": "method",
      "methodName": "webkitMatchesSelector",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::webkitMatchesSelector(java.lang.String) @ akasha.svg.SVGFESpotLightElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFESpotLightElement",
      "classSimpleName": "SVGFESpotLightElement",
      "elementKind": "method",
      "methodName": "webkitMatchesSelector",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::webkitMatchesSelector(java.lang.String) @ akasha.svg.SVGFETileElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFETileElement",
      "classSimpleName": "SVGFETileElement",
      "elementKind": "method",
      "methodName": "webkitMatchesSelector",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::webkitMatchesSelector(java.lang.String) @ akasha.svg.SVGFETurbulenceElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFETurbulenceElement",
      "classSimpleName": "SVGFETurbulenceElement",
      "elementKind": "method",
      "methodName": "webkitMatchesSelector",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::webkitMatchesSelector(java.lang.String) @ akasha.svg.SVGFilterElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFilterElement",
      "classSimpleName": "SVGFilterElement",
      "elementKind": "method",
      "methodName": "webkitMatchesSelector",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::webkitMatchesSelector(java.lang.String) @ akasha.svg.SVGForeignObjectElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGForeignObjectElement",
      "classSimpleName": "SVGForeignObjectElement",
      "elementKind": "method",
      "methodName": "webkitMatchesSelector",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::webkitMatchesSelector(java.lang.String) @ akasha.svg.SVGGElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGGElement",
      "classSimpleName": "SVGGElement",
      "elementKind": "method",
      "methodName": "webkitMatchesSelector",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::webkitMatchesSelector(java.lang.String) @ akasha.svg.SVGGeometryElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGGeometryElement",
      "classSimpleName": "SVGGeometryElement",
      "elementKind": "method",
      "methodName": "webkitMatchesSelector",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::webkitMatchesSelector(java.lang.String) @ akasha.svg.SVGGradientElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGGradientElement",
      "classSimpleName": "SVGGradientElement",
      "elementKind": "method",
      "methodName": "webkitMatchesSelector",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::webkitMatchesSelector(java.lang.String) @ akasha.svg.SVGGraphicsElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGGraphicsElement",
      "classSimpleName": "SVGGraphicsElement",
      "elementKind": "method",
      "methodName": "webkitMatchesSelector",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::webkitMatchesSelector(java.lang.String) @ akasha.svg.SVGImageElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGImageElement",
      "classSimpleName": "SVGImageElement",
      "elementKind": "method",
      "methodName": "webkitMatchesSelector",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::webkitMatchesSelector(java.lang.String) @ akasha.svg.SVGLineElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGLineElement",
      "classSimpleName": "SVGLineElement",
      "elementKind": "method",
      "methodName": "webkitMatchesSelector",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::webkitMatchesSelector(java.lang.String) @ akasha.svg.SVGLinearGradientElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGLinearGradientElement",
      "classSimpleName": "SVGLinearGradientElement",
      "elementKind": "method",
      "methodName": "webkitMatchesSelector",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::webkitMatchesSelector(java.lang.String) @ akasha.svg.SVGMarkerElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGMarkerElement",
      "classSimpleName": "SVGMarkerElement",
      "elementKind": "method",
      "methodName": "webkitMatchesSelector",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::webkitMatchesSelector(java.lang.String) @ akasha.svg.SVGMaskElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGMaskElement",
      "classSimpleName": "SVGMaskElement",
      "elementKind": "method",
      "methodName": "webkitMatchesSelector",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::webkitMatchesSelector(java.lang.String) @ akasha.svg.SVGMetadataElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGMetadataElement",
      "classSimpleName": "SVGMetadataElement",
      "elementKind": "method",
      "methodName": "webkitMatchesSelector",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::webkitMatchesSelector(java.lang.String) @ akasha.svg.SVGPathElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGPathElement",
      "classSimpleName": "SVGPathElement",
      "elementKind": "method",
      "methodName": "webkitMatchesSelector",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::webkitMatchesSelector(java.lang.String) @ akasha.svg.SVGPatternElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGPatternElement",
      "classSimpleName": "SVGPatternElement",
      "elementKind": "method",
      "methodName": "webkitMatchesSelector",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::webkitMatchesSelector(java.lang.String) @ akasha.svg.SVGPolygonElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGPolygonElement",
      "classSimpleName": "SVGPolygonElement",
      "elementKind": "method",
      "methodName": "webkitMatchesSelector",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::webkitMatchesSelector(java.lang.String) @ akasha.svg.SVGPolylineElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGPolylineElement",
      "classSimpleName": "SVGPolylineElement",
      "elementKind": "method",
      "methodName": "webkitMatchesSelector",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::webkitMatchesSelector(java.lang.String) @ akasha.svg.SVGRadialGradientElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGRadialGradientElement",
      "classSimpleName": "SVGRadialGradientElement",
      "elementKind": "method",
      "methodName": "webkitMatchesSelector",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::webkitMatchesSelector(java.lang.String) @ akasha.svg.SVGRectElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGRectElement",
      "classSimpleName": "SVGRectElement",
      "elementKind": "method",
      "methodName": "webkitMatchesSelector",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::webkitMatchesSelector(java.lang.String) @ akasha.svg.SVGSVGElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGSVGElement",
      "classSimpleName": "SVGSVGElement",
      "elementKind": "method",
      "methodName": "webkitMatchesSelector",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::webkitMatchesSelector(java.lang.String) @ akasha.svg.SVGScriptElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGScriptElement",
      "classSimpleName": "SVGScriptElement",
      "elementKind": "method",
      "methodName": "webkitMatchesSelector",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::webkitMatchesSelector(java.lang.String) @ akasha.svg.SVGStopElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGStopElement",
      "classSimpleName": "SVGStopElement",
      "elementKind": "method",
      "methodName": "webkitMatchesSelector",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::webkitMatchesSelector(java.lang.String) @ akasha.svg.SVGStyleElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGStyleElement",
      "classSimpleName": "SVGStyleElement",
      "elementKind": "method",
      "methodName": "webkitMatchesSelector",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::webkitMatchesSelector(java.lang.String) @ akasha.svg.SVGSwitchElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGSwitchElement",
      "classSimpleName": "SVGSwitchElement",
      "elementKind": "method",
      "methodName": "webkitMatchesSelector",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::webkitMatchesSelector(java.lang.String) @ akasha.svg.SVGSymbolElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGSymbolElement",
      "classSimpleName": "SVGSymbolElement",
      "elementKind": "method",
      "methodName": "webkitMatchesSelector",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::webkitMatchesSelector(java.lang.String) @ akasha.svg.SVGTSpanElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGTSpanElement",
      "classSimpleName": "SVGTSpanElement",
      "elementKind": "method",
      "methodName": "webkitMatchesSelector",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::webkitMatchesSelector(java.lang.String) @ akasha.svg.SVGTextContentElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGTextContentElement",
      "classSimpleName": "SVGTextContentElement",
      "elementKind": "method",
      "methodName": "webkitMatchesSelector",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::webkitMatchesSelector(java.lang.String) @ akasha.svg.SVGTextElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGTextElement",
      "classSimpleName": "SVGTextElement",
      "elementKind": "method",
      "methodName": "webkitMatchesSelector",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::webkitMatchesSelector(java.lang.String) @ akasha.svg.SVGTextPathElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGTextPathElement",
      "classSimpleName": "SVGTextPathElement",
      "elementKind": "method",
      "methodName": "webkitMatchesSelector",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::webkitMatchesSelector(java.lang.String) @ akasha.svg.SVGTextPositioningElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGTextPositioningElement",
      "classSimpleName": "SVGTextPositioningElement",
      "elementKind": "method",
      "methodName": "webkitMatchesSelector",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::webkitMatchesSelector(java.lang.String) @ akasha.svg.SVGTitleElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGTitleElement",
      "classSimpleName": "SVGTitleElement",
      "elementKind": "method",
      "methodName": "webkitMatchesSelector",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::webkitMatchesSelector(java.lang.String) @ akasha.svg.SVGUnknownElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGUnknownElement",
      "classSimpleName": "SVGUnknownElement",
      "elementKind": "method",
      "methodName": "webkitMatchesSelector",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::webkitMatchesSelector(java.lang.String) @ akasha.svg.SVGUseElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGUseElement",
      "classSimpleName": "SVGUseElement",
      "elementKind": "method",
      "methodName": "webkitMatchesSelector",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::webkitMatchesSelector(java.lang.String) @ akasha.svg.SVGViewElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGViewElement",
      "classSimpleName": "SVGViewElement",
      "elementKind": "method",
      "methodName": "webkitMatchesSelector",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Element::webkitMatchesSelector(java.lang.String)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.Element",
      "classSimpleName": "Element",
      "elementKind": "method",
      "methodName": "webkitMatchesSelector",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Global::isFinite(double)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.Global",
      "classSimpleName": "Global",
      "elementKind": "method",
      "methodName": "isFinite",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Global::isNaN(double)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.Global",
      "classSimpleName": "Global",
      "elementKind": "method",
      "methodName": "isNaN",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::contains(akasha.Node) @ akasha.Attr",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.Attr",
      "classSimpleName": "Attr",
      "elementKind": "method",
      "methodName": "contains",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::contains(akasha.Node) @ akasha.Audio",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.Audio",
      "classSimpleName": "Audio",
      "elementKind": "method",
      "methodName": "contains",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::contains(akasha.Node) @ akasha.CDATASection",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.CDATASection",
      "classSimpleName": "CDATASection",
      "elementKind": "method",
      "methodName": "contains",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::contains(akasha.Node) @ akasha.CharacterData",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.CharacterData",
      "classSimpleName": "CharacterData",
      "elementKind": "method",
      "methodName": "contains",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::contains(akasha.Node) @ akasha.Comment",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.Comment",
      "classSimpleName": "Comment",
      "elementKind": "method",
      "methodName": "contains",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::contains(akasha.Node) @ akasha.Document",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.Document",
      "classSimpleName": "Document",
      "elementKind": "method",
      "methodName": "contains",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::contains(akasha.Node) @ akasha.DocumentFragment",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.DocumentFragment",
      "classSimpleName": "DocumentFragment",
      "elementKind": "method",
      "methodName": "contains",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::contains(akasha.Node) @ akasha.DocumentType",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.DocumentType",
      "classSimpleName": "DocumentType",
      "elementKind": "method",
      "methodName": "contains",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::contains(akasha.Node) @ akasha.Element",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.Element",
      "classSimpleName": "Element",
      "elementKind": "method",
      "methodName": "contains",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::contains(akasha.Node) @ akasha.HTMLAnchorElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLAnchorElement",
      "classSimpleName": "HTMLAnchorElement",
      "elementKind": "method",
      "methodName": "contains",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::contains(akasha.Node) @ akasha.HTMLAreaElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLAreaElement",
      "classSimpleName": "HTMLAreaElement",
      "elementKind": "method",
      "methodName": "contains",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::contains(akasha.Node) @ akasha.HTMLAudioElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLAudioElement",
      "classSimpleName": "HTMLAudioElement",
      "elementKind": "method",
      "methodName": "contains",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::contains(akasha.Node) @ akasha.HTMLBRElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLBRElement",
      "classSimpleName": "HTMLBRElement",
      "elementKind": "method",
      "methodName": "contains",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::contains(akasha.Node) @ akasha.HTMLBaseElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLBaseElement",
      "classSimpleName": "HTMLBaseElement",
      "elementKind": "method",
      "methodName": "contains",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::contains(akasha.Node) @ akasha.HTMLBodyElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLBodyElement",
      "classSimpleName": "HTMLBodyElement",
      "elementKind": "method",
      "methodName": "contains",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::contains(akasha.Node) @ akasha.HTMLButtonElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLButtonElement",
      "classSimpleName": "HTMLButtonElement",
      "elementKind": "method",
      "methodName": "contains",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::contains(akasha.Node) @ akasha.HTMLCanvasElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLCanvasElement",
      "classSimpleName": "HTMLCanvasElement",
      "elementKind": "method",
      "methodName": "contains",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::contains(akasha.Node) @ akasha.HTMLDListElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLDListElement",
      "classSimpleName": "HTMLDListElement",
      "elementKind": "method",
      "methodName": "contains",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::contains(akasha.Node) @ akasha.HTMLDataElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLDataElement",
      "classSimpleName": "HTMLDataElement",
      "elementKind": "method",
      "methodName": "contains",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::contains(akasha.Node) @ akasha.HTMLDataListElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLDataListElement",
      "classSimpleName": "HTMLDataListElement",
      "elementKind": "method",
      "methodName": "contains",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::contains(akasha.Node) @ akasha.HTMLDetailsElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLDetailsElement",
      "classSimpleName": "HTMLDetailsElement",
      "elementKind": "method",
      "methodName": "contains",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::contains(akasha.Node) @ akasha.HTMLDialogElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLDialogElement",
      "classSimpleName": "HTMLDialogElement",
      "elementKind": "method",
      "methodName": "contains",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::contains(akasha.Node) @ akasha.HTMLDirectoryElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLDirectoryElement",
      "classSimpleName": "HTMLDirectoryElement",
      "elementKind": "method",
      "methodName": "contains",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::contains(akasha.Node) @ akasha.HTMLDivElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLDivElement",
      "classSimpleName": "HTMLDivElement",
      "elementKind": "method",
      "methodName": "contains",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::contains(akasha.Node) @ akasha.HTMLElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLElement",
      "classSimpleName": "HTMLElement",
      "elementKind": "method",
      "methodName": "contains",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::contains(akasha.Node) @ akasha.HTMLEmbedElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLEmbedElement",
      "classSimpleName": "HTMLEmbedElement",
      "elementKind": "method",
      "methodName": "contains",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::contains(akasha.Node) @ akasha.HTMLFieldSetElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLFieldSetElement",
      "classSimpleName": "HTMLFieldSetElement",
      "elementKind": "method",
      "methodName": "contains",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::contains(akasha.Node) @ akasha.HTMLFontElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLFontElement",
      "classSimpleName": "HTMLFontElement",
      "elementKind": "method",
      "methodName": "contains",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::contains(akasha.Node) @ akasha.HTMLFormElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLFormElement",
      "classSimpleName": "HTMLFormElement",
      "elementKind": "method",
      "methodName": "contains",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::contains(akasha.Node) @ akasha.HTMLFrameElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLFrameElement",
      "classSimpleName": "HTMLFrameElement",
      "elementKind": "method",
      "methodName": "contains",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::contains(akasha.Node) @ akasha.HTMLFrameSetElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLFrameSetElement",
      "classSimpleName": "HTMLFrameSetElement",
      "elementKind": "method",
      "methodName": "contains",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::contains(akasha.Node) @ akasha.HTMLHRElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLHRElement",
      "classSimpleName": "HTMLHRElement",
      "elementKind": "method",
      "methodName": "contains",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::contains(akasha.Node) @ akasha.HTMLHeadElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLHeadElement",
      "classSimpleName": "HTMLHeadElement",
      "elementKind": "method",
      "methodName": "contains",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::contains(akasha.Node) @ akasha.HTMLHeadingElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLHeadingElement",
      "classSimpleName": "HTMLHeadingElement",
      "elementKind": "method",
      "methodName": "contains",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::contains(akasha.Node) @ akasha.HTMLHtmlElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLHtmlElement",
      "classSimpleName": "HTMLHtmlElement",
      "elementKind": "method",
      "methodName": "contains",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::contains(akasha.Node) @ akasha.HTMLIFrameElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLIFrameElement",
      "classSimpleName": "HTMLIFrameElement",
      "elementKind": "method",
      "methodName": "contains",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::contains(akasha.Node) @ akasha.HTMLImageElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLImageElement",
      "classSimpleName": "HTMLImageElement",
      "elementKind": "method",
      "methodName": "contains",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::contains(akasha.Node) @ akasha.HTMLInputElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLInputElement",
      "classSimpleName": "HTMLInputElement",
      "elementKind": "method",
      "methodName": "contains",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::contains(akasha.Node) @ akasha.HTMLLIElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLLIElement",
      "classSimpleName": "HTMLLIElement",
      "elementKind": "method",
      "methodName": "contains",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::contains(akasha.Node) @ akasha.HTMLLabelElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLLabelElement",
      "classSimpleName": "HTMLLabelElement",
      "elementKind": "method",
      "methodName": "contains",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::contains(akasha.Node) @ akasha.HTMLLegendElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLLegendElement",
      "classSimpleName": "HTMLLegendElement",
      "elementKind": "method",
      "methodName": "contains",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::contains(akasha.Node) @ akasha.HTMLLinkElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLLinkElement",
      "classSimpleName": "HTMLLinkElement",
      "elementKind": "method",
      "methodName": "contains",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::contains(akasha.Node) @ akasha.HTMLMapElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLMapElement",
      "classSimpleName": "HTMLMapElement",
      "elementKind": "method",
      "methodName": "contains",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::contains(akasha.Node) @ akasha.HTMLMarqueeElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLMarqueeElement",
      "classSimpleName": "HTMLMarqueeElement",
      "elementKind": "method",
      "methodName": "contains",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::contains(akasha.Node) @ akasha.HTMLMediaElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLMediaElement",
      "classSimpleName": "HTMLMediaElement",
      "elementKind": "method",
      "methodName": "contains",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::contains(akasha.Node) @ akasha.HTMLMenuElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLMenuElement",
      "classSimpleName": "HTMLMenuElement",
      "elementKind": "method",
      "methodName": "contains",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::contains(akasha.Node) @ akasha.HTMLMetaElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLMetaElement",
      "classSimpleName": "HTMLMetaElement",
      "elementKind": "method",
      "methodName": "contains",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::contains(akasha.Node) @ akasha.HTMLMeterElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLMeterElement",
      "classSimpleName": "HTMLMeterElement",
      "elementKind": "method",
      "methodName": "contains",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::contains(akasha.Node) @ akasha.HTMLModElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLModElement",
      "classSimpleName": "HTMLModElement",
      "elementKind": "method",
      "methodName": "contains",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::contains(akasha.Node) @ akasha.HTMLOListElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLOListElement",
      "classSimpleName": "HTMLOListElement",
      "elementKind": "method",
      "methodName": "contains",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::contains(akasha.Node) @ akasha.HTMLObjectElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLObjectElement",
      "classSimpleName": "HTMLObjectElement",
      "elementKind": "method",
      "methodName": "contains",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::contains(akasha.Node) @ akasha.HTMLOptGroupElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLOptGroupElement",
      "classSimpleName": "HTMLOptGroupElement",
      "elementKind": "method",
      "methodName": "contains",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::contains(akasha.Node) @ akasha.HTMLOptionElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLOptionElement",
      "classSimpleName": "HTMLOptionElement",
      "elementKind": "method",
      "methodName": "contains",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::contains(akasha.Node) @ akasha.HTMLOutputElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLOutputElement",
      "classSimpleName": "HTMLOutputElement",
      "elementKind": "method",
      "methodName": "contains",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::contains(akasha.Node) @ akasha.HTMLParagraphElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLParagraphElement",
      "classSimpleName": "HTMLParagraphElement",
      "elementKind": "method",
      "methodName": "contains",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::contains(akasha.Node) @ akasha.HTMLParamElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLParamElement",
      "classSimpleName": "HTMLParamElement",
      "elementKind": "method",
      "methodName": "contains",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::contains(akasha.Node) @ akasha.HTMLPictureElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLPictureElement",
      "classSimpleName": "HTMLPictureElement",
      "elementKind": "method",
      "methodName": "contains",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::contains(akasha.Node) @ akasha.HTMLPreElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLPreElement",
      "classSimpleName": "HTMLPreElement",
      "elementKind": "method",
      "methodName": "contains",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::contains(akasha.Node) @ akasha.HTMLProgressElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLProgressElement",
      "classSimpleName": "HTMLProgressElement",
      "elementKind": "method",
      "methodName": "contains",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::contains(akasha.Node) @ akasha.HTMLQuoteElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLQuoteElement",
      "classSimpleName": "HTMLQuoteElement",
      "elementKind": "method",
      "methodName": "contains",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::contains(akasha.Node) @ akasha.HTMLScriptElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLScriptElement",
      "classSimpleName": "HTMLScriptElement",
      "elementKind": "method",
      "methodName": "contains",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::contains(akasha.Node) @ akasha.HTMLSelectElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLSelectElement",
      "classSimpleName": "HTMLSelectElement",
      "elementKind": "method",
      "methodName": "contains",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::contains(akasha.Node) @ akasha.HTMLSlotElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLSlotElement",
      "classSimpleName": "HTMLSlotElement",
      "elementKind": "method",
      "methodName": "contains",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::contains(akasha.Node) @ akasha.HTMLSourceElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLSourceElement",
      "classSimpleName": "HTMLSourceElement",
      "elementKind": "method",
      "methodName": "contains",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::contains(akasha.Node) @ akasha.HTMLSpanElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLSpanElement",
      "classSimpleName": "HTMLSpanElement",
      "elementKind": "method",
      "methodName": "contains",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::contains(akasha.Node) @ akasha.HTMLStyleElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLStyleElement",
      "classSimpleName": "HTMLStyleElement",
      "elementKind": "method",
      "methodName": "contains",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::contains(akasha.Node) @ akasha.HTMLTableCaptionElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLTableCaptionElement",
      "classSimpleName": "HTMLTableCaptionElement",
      "elementKind": "method",
      "methodName": "contains",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::contains(akasha.Node) @ akasha.HTMLTableCellElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLTableCellElement",
      "classSimpleName": "HTMLTableCellElement",
      "elementKind": "method",
      "methodName": "contains",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::contains(akasha.Node) @ akasha.HTMLTableColElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLTableColElement",
      "classSimpleName": "HTMLTableColElement",
      "elementKind": "method",
      "methodName": "contains",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::contains(akasha.Node) @ akasha.HTMLTableElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLTableElement",
      "classSimpleName": "HTMLTableElement",
      "elementKind": "method",
      "methodName": "contains",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::contains(akasha.Node) @ akasha.HTMLTableRowElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLTableRowElement",
      "classSimpleName": "HTMLTableRowElement",
      "elementKind": "method",
      "methodName": "contains",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::contains(akasha.Node) @ akasha.HTMLTableSectionElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLTableSectionElement",
      "classSimpleName": "HTMLTableSectionElement",
      "elementKind": "method",
      "methodName": "contains",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::contains(akasha.Node) @ akasha.HTMLTemplateElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLTemplateElement",
      "classSimpleName": "HTMLTemplateElement",
      "elementKind": "method",
      "methodName": "contains",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::contains(akasha.Node) @ akasha.HTMLTextAreaElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLTextAreaElement",
      "classSimpleName": "HTMLTextAreaElement",
      "elementKind": "method",
      "methodName": "contains",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::contains(akasha.Node) @ akasha.HTMLTimeElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLTimeElement",
      "classSimpleName": "HTMLTimeElement",
      "elementKind": "method",
      "methodName": "contains",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::contains(akasha.Node) @ akasha.HTMLTitleElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLTitleElement",
      "classSimpleName": "HTMLTitleElement",
      "elementKind": "method",
      "methodName": "contains",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::contains(akasha.Node) @ akasha.HTMLTrackElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLTrackElement",
      "classSimpleName": "HTMLTrackElement",
      "elementKind": "method",
      "methodName": "contains",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::contains(akasha.Node) @ akasha.HTMLUListElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLUListElement",
      "classSimpleName": "HTMLUListElement",
      "elementKind": "method",
      "methodName": "contains",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::contains(akasha.Node) @ akasha.HTMLUnknownElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLUnknownElement",
      "classSimpleName": "HTMLUnknownElement",
      "elementKind": "method",
      "methodName": "contains",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::contains(akasha.Node) @ akasha.HTMLVideoElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLVideoElement",
      "classSimpleName": "HTMLVideoElement",
      "elementKind": "method",
      "methodName": "contains",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::contains(akasha.Node) @ akasha.Image",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.Image",
      "classSimpleName": "Image",
      "elementKind": "method",
      "methodName": "contains",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::contains(akasha.Node) @ akasha.Option",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.Option",
      "classSimpleName": "Option",
      "elementKind": "method",
      "methodName": "contains",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::contains(akasha.Node) @ akasha.ProcessingInstruction",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.ProcessingInstruction",
      "classSimpleName": "ProcessingInstruction",
      "elementKind": "method",
      "methodName": "contains",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::contains(akasha.Node) @ akasha.ShadowRoot",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.ShadowRoot",
      "classSimpleName": "ShadowRoot",
      "elementKind": "method",
      "methodName": "contains",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::contains(akasha.Node) @ akasha.Text",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.Text",
      "classSimpleName": "Text",
      "elementKind": "method",
      "methodName": "contains",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::contains(akasha.Node) @ akasha.XMLDocument",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.XMLDocument",
      "classSimpleName": "XMLDocument",
      "elementKind": "method",
      "methodName": "contains",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::contains(akasha.Node) @ akasha.svg.SVGAElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGAElement",
      "classSimpleName": "SVGAElement",
      "elementKind": "method",
      "methodName": "contains",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::contains(akasha.Node) @ akasha.svg.SVGCircleElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGCircleElement",
      "classSimpleName": "SVGCircleElement",
      "elementKind": "method",
      "methodName": "contains",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::contains(akasha.Node) @ akasha.svg.SVGClipPathElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGClipPathElement",
      "classSimpleName": "SVGClipPathElement",
      "elementKind": "method",
      "methodName": "contains",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::contains(akasha.Node) @ akasha.svg.SVGComponentTransferFunctionElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGComponentTransferFunctionElement",
      "classSimpleName": "SVGComponentTransferFunctionElement",
      "elementKind": "method",
      "methodName": "contains",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::contains(akasha.Node) @ akasha.svg.SVGDefsElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGDefsElement",
      "classSimpleName": "SVGDefsElement",
      "elementKind": "method",
      "methodName": "contains",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::contains(akasha.Node) @ akasha.svg.SVGDescElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGDescElement",
      "classSimpleName": "SVGDescElement",
      "elementKind": "method",
      "methodName": "contains",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::contains(akasha.Node) @ akasha.svg.SVGElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGElement",
      "classSimpleName": "SVGElement",
      "elementKind": "method",
      "methodName": "contains",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::contains(akasha.Node) @ akasha.svg.SVGEllipseElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGEllipseElement",
      "classSimpleName": "SVGEllipseElement",
      "elementKind": "method",
      "methodName": "contains",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::contains(akasha.Node) @ akasha.svg.SVGFEBlendElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEBlendElement",
      "classSimpleName": "SVGFEBlendElement",
      "elementKind": "method",
      "methodName": "contains",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::contains(akasha.Node) @ akasha.svg.SVGFEColorMatrixElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEColorMatrixElement",
      "classSimpleName": "SVGFEColorMatrixElement",
      "elementKind": "method",
      "methodName": "contains",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::contains(akasha.Node) @ akasha.svg.SVGFEComponentTransferElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEComponentTransferElement",
      "classSimpleName": "SVGFEComponentTransferElement",
      "elementKind": "method",
      "methodName": "contains",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::contains(akasha.Node) @ akasha.svg.SVGFECompositeElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFECompositeElement",
      "classSimpleName": "SVGFECompositeElement",
      "elementKind": "method",
      "methodName": "contains",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::contains(akasha.Node) @ akasha.svg.SVGFEConvolveMatrixElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEConvolveMatrixElement",
      "classSimpleName": "SVGFEConvolveMatrixElement",
      "elementKind": "method",
      "methodName": "contains",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::contains(akasha.Node) @ akasha.svg.SVGFEDiffuseLightingElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEDiffuseLightingElement",
      "classSimpleName": "SVGFEDiffuseLightingElement",
      "elementKind": "method",
      "methodName": "contains",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::contains(akasha.Node) @ akasha.svg.SVGFEDisplacementMapElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEDisplacementMapElement",
      "classSimpleName": "SVGFEDisplacementMapElement",
      "elementKind": "method",
      "methodName": "contains",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::contains(akasha.Node) @ akasha.svg.SVGFEDistantLightElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEDistantLightElement",
      "classSimpleName": "SVGFEDistantLightElement",
      "elementKind": "method",
      "methodName": "contains",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::contains(akasha.Node) @ akasha.svg.SVGFEDropShadowElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEDropShadowElement",
      "classSimpleName": "SVGFEDropShadowElement",
      "elementKind": "method",
      "methodName": "contains",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::contains(akasha.Node) @ akasha.svg.SVGFEFloodElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEFloodElement",
      "classSimpleName": "SVGFEFloodElement",
      "elementKind": "method",
      "methodName": "contains",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::contains(akasha.Node) @ akasha.svg.SVGFEFuncAElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEFuncAElement",
      "classSimpleName": "SVGFEFuncAElement",
      "elementKind": "method",
      "methodName": "contains",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::contains(akasha.Node) @ akasha.svg.SVGFEFuncBElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEFuncBElement",
      "classSimpleName": "SVGFEFuncBElement",
      "elementKind": "method",
      "methodName": "contains",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::contains(akasha.Node) @ akasha.svg.SVGFEFuncGElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEFuncGElement",
      "classSimpleName": "SVGFEFuncGElement",
      "elementKind": "method",
      "methodName": "contains",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::contains(akasha.Node) @ akasha.svg.SVGFEFuncRElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEFuncRElement",
      "classSimpleName": "SVGFEFuncRElement",
      "elementKind": "method",
      "methodName": "contains",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::contains(akasha.Node) @ akasha.svg.SVGFEGaussianBlurElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEGaussianBlurElement",
      "classSimpleName": "SVGFEGaussianBlurElement",
      "elementKind": "method",
      "methodName": "contains",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::contains(akasha.Node) @ akasha.svg.SVGFEImageElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEImageElement",
      "classSimpleName": "SVGFEImageElement",
      "elementKind": "method",
      "methodName": "contains",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::contains(akasha.Node) @ akasha.svg.SVGFEMergeElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEMergeElement",
      "classSimpleName": "SVGFEMergeElement",
      "elementKind": "method",
      "methodName": "contains",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::contains(akasha.Node) @ akasha.svg.SVGFEMergeNodeElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEMergeNodeElement",
      "classSimpleName": "SVGFEMergeNodeElement",
      "elementKind": "method",
      "methodName": "contains",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::contains(akasha.Node) @ akasha.svg.SVGFEMorphologyElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEMorphologyElement",
      "classSimpleName": "SVGFEMorphologyElement",
      "elementKind": "method",
      "methodName": "contains",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::contains(akasha.Node) @ akasha.svg.SVGFEOffsetElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEOffsetElement",
      "classSimpleName": "SVGFEOffsetElement",
      "elementKind": "method",
      "methodName": "contains",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::contains(akasha.Node) @ akasha.svg.SVGFEPointLightElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEPointLightElement",
      "classSimpleName": "SVGFEPointLightElement",
      "elementKind": "method",
      "methodName": "contains",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::contains(akasha.Node) @ akasha.svg.SVGFESpecularLightingElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFESpecularLightingElement",
      "classSimpleName": "SVGFESpecularLightingElement",
      "elementKind": "method",
      "methodName": "contains",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::contains(akasha.Node) @ akasha.svg.SVGFESpotLightElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFESpotLightElement",
      "classSimpleName": "SVGFESpotLightElement",
      "elementKind": "method",
      "methodName": "contains",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::contains(akasha.Node) @ akasha.svg.SVGFETileElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFETileElement",
      "classSimpleName": "SVGFETileElement",
      "elementKind": "method",
      "methodName": "contains",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::contains(akasha.Node) @ akasha.svg.SVGFETurbulenceElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFETurbulenceElement",
      "classSimpleName": "SVGFETurbulenceElement",
      "elementKind": "method",
      "methodName": "contains",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::contains(akasha.Node) @ akasha.svg.SVGFilterElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFilterElement",
      "classSimpleName": "SVGFilterElement",
      "elementKind": "method",
      "methodName": "contains",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::contains(akasha.Node) @ akasha.svg.SVGForeignObjectElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGForeignObjectElement",
      "classSimpleName": "SVGForeignObjectElement",
      "elementKind": "method",
      "methodName": "contains",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::contains(akasha.Node) @ akasha.svg.SVGGElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGGElement",
      "classSimpleName": "SVGGElement",
      "elementKind": "method",
      "methodName": "contains",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::contains(akasha.Node) @ akasha.svg.SVGGeometryElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGGeometryElement",
      "classSimpleName": "SVGGeometryElement",
      "elementKind": "method",
      "methodName": "contains",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::contains(akasha.Node) @ akasha.svg.SVGGradientElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGGradientElement",
      "classSimpleName": "SVGGradientElement",
      "elementKind": "method",
      "methodName": "contains",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::contains(akasha.Node) @ akasha.svg.SVGGraphicsElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGGraphicsElement",
      "classSimpleName": "SVGGraphicsElement",
      "elementKind": "method",
      "methodName": "contains",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::contains(akasha.Node) @ akasha.svg.SVGImageElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGImageElement",
      "classSimpleName": "SVGImageElement",
      "elementKind": "method",
      "methodName": "contains",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::contains(akasha.Node) @ akasha.svg.SVGLineElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGLineElement",
      "classSimpleName": "SVGLineElement",
      "elementKind": "method",
      "methodName": "contains",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::contains(akasha.Node) @ akasha.svg.SVGLinearGradientElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGLinearGradientElement",
      "classSimpleName": "SVGLinearGradientElement",
      "elementKind": "method",
      "methodName": "contains",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::contains(akasha.Node) @ akasha.svg.SVGMarkerElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGMarkerElement",
      "classSimpleName": "SVGMarkerElement",
      "elementKind": "method",
      "methodName": "contains",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::contains(akasha.Node) @ akasha.svg.SVGMaskElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGMaskElement",
      "classSimpleName": "SVGMaskElement",
      "elementKind": "method",
      "methodName": "contains",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::contains(akasha.Node) @ akasha.svg.SVGMetadataElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGMetadataElement",
      "classSimpleName": "SVGMetadataElement",
      "elementKind": "method",
      "methodName": "contains",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::contains(akasha.Node) @ akasha.svg.SVGPathElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGPathElement",
      "classSimpleName": "SVGPathElement",
      "elementKind": "method",
      "methodName": "contains",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::contains(akasha.Node) @ akasha.svg.SVGPatternElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGPatternElement",
      "classSimpleName": "SVGPatternElement",
      "elementKind": "method",
      "methodName": "contains",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::contains(akasha.Node) @ akasha.svg.SVGPolygonElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGPolygonElement",
      "classSimpleName": "SVGPolygonElement",
      "elementKind": "method",
      "methodName": "contains",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::contains(akasha.Node) @ akasha.svg.SVGPolylineElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGPolylineElement",
      "classSimpleName": "SVGPolylineElement",
      "elementKind": "method",
      "methodName": "contains",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::contains(akasha.Node) @ akasha.svg.SVGRadialGradientElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGRadialGradientElement",
      "classSimpleName": "SVGRadialGradientElement",
      "elementKind": "method",
      "methodName": "contains",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::contains(akasha.Node) @ akasha.svg.SVGRectElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGRectElement",
      "classSimpleName": "SVGRectElement",
      "elementKind": "method",
      "methodName": "contains",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::contains(akasha.Node) @ akasha.svg.SVGSVGElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGSVGElement",
      "classSimpleName": "SVGSVGElement",
      "elementKind": "method",
      "methodName": "contains",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::contains(akasha.Node) @ akasha.svg.SVGScriptElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGScriptElement",
      "classSimpleName": "SVGScriptElement",
      "elementKind": "method",
      "methodName": "contains",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::contains(akasha.Node) @ akasha.svg.SVGStopElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGStopElement",
      "classSimpleName": "SVGStopElement",
      "elementKind": "method",
      "methodName": "contains",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::contains(akasha.Node) @ akasha.svg.SVGStyleElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGStyleElement",
      "classSimpleName": "SVGStyleElement",
      "elementKind": "method",
      "methodName": "contains",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::contains(akasha.Node) @ akasha.svg.SVGSwitchElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGSwitchElement",
      "classSimpleName": "SVGSwitchElement",
      "elementKind": "method",
      "methodName": "contains",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::contains(akasha.Node) @ akasha.svg.SVGSymbolElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGSymbolElement",
      "classSimpleName": "SVGSymbolElement",
      "elementKind": "method",
      "methodName": "contains",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::contains(akasha.Node) @ akasha.svg.SVGTSpanElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGTSpanElement",
      "classSimpleName": "SVGTSpanElement",
      "elementKind": "method",
      "methodName": "contains",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::contains(akasha.Node) @ akasha.svg.SVGTextContentElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGTextContentElement",
      "classSimpleName": "SVGTextContentElement",
      "elementKind": "method",
      "methodName": "contains",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::contains(akasha.Node) @ akasha.svg.SVGTextElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGTextElement",
      "classSimpleName": "SVGTextElement",
      "elementKind": "method",
      "methodName": "contains",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::contains(akasha.Node) @ akasha.svg.SVGTextPathElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGTextPathElement",
      "classSimpleName": "SVGTextPathElement",
      "elementKind": "method",
      "methodName": "contains",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::contains(akasha.Node) @ akasha.svg.SVGTextPositioningElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGTextPositioningElement",
      "classSimpleName": "SVGTextPositioningElement",
      "elementKind": "method",
      "methodName": "contains",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::contains(akasha.Node) @ akasha.svg.SVGTitleElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGTitleElement",
      "classSimpleName": "SVGTitleElement",
      "elementKind": "method",
      "methodName": "contains",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::contains(akasha.Node) @ akasha.svg.SVGUnknownElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGUnknownElement",
      "classSimpleName": "SVGUnknownElement",
      "elementKind": "method",
      "methodName": "contains",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::contains(akasha.Node) @ akasha.svg.SVGUseElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGUseElement",
      "classSimpleName": "SVGUseElement",
      "elementKind": "method",
      "methodName": "contains",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::contains(akasha.Node) @ akasha.svg.SVGUseElementShadowRoot",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGUseElementShadowRoot",
      "classSimpleName": "SVGUseElementShadowRoot",
      "elementKind": "method",
      "methodName": "contains",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::contains(akasha.Node) @ akasha.svg.SVGViewElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGViewElement",
      "classSimpleName": "SVGViewElement",
      "elementKind": "method",
      "methodName": "contains",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::contains(akasha.Node)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.Node",
      "classSimpleName": "Node",
      "elementKind": "method",
      "methodName": "contains",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::hasChildNodes() @ akasha.Attr",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.Attr",
      "classSimpleName": "Attr",
      "elementKind": "method",
      "methodName": "hasChildNodes",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::hasChildNodes() @ akasha.Audio",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.Audio",
      "classSimpleName": "Audio",
      "elementKind": "method",
      "methodName": "hasChildNodes",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::hasChildNodes() @ akasha.CDATASection",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.CDATASection",
      "classSimpleName": "CDATASection",
      "elementKind": "method",
      "methodName": "hasChildNodes",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::hasChildNodes() @ akasha.CharacterData",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.CharacterData",
      "classSimpleName": "CharacterData",
      "elementKind": "method",
      "methodName": "hasChildNodes",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::hasChildNodes() @ akasha.Comment",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.Comment",
      "classSimpleName": "Comment",
      "elementKind": "method",
      "methodName": "hasChildNodes",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::hasChildNodes() @ akasha.Document",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.Document",
      "classSimpleName": "Document",
      "elementKind": "method",
      "methodName": "hasChildNodes",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::hasChildNodes() @ akasha.DocumentFragment",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.DocumentFragment",
      "classSimpleName": "DocumentFragment",
      "elementKind": "method",
      "methodName": "hasChildNodes",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::hasChildNodes() @ akasha.DocumentType",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.DocumentType",
      "classSimpleName": "DocumentType",
      "elementKind": "method",
      "methodName": "hasChildNodes",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::hasChildNodes() @ akasha.Element",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.Element",
      "classSimpleName": "Element",
      "elementKind": "method",
      "methodName": "hasChildNodes",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::hasChildNodes() @ akasha.HTMLAnchorElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLAnchorElement",
      "classSimpleName": "HTMLAnchorElement",
      "elementKind": "method",
      "methodName": "hasChildNodes",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::hasChildNodes() @ akasha.HTMLAreaElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLAreaElement",
      "classSimpleName": "HTMLAreaElement",
      "elementKind": "method",
      "methodName": "hasChildNodes",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::hasChildNodes() @ akasha.HTMLAudioElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLAudioElement",
      "classSimpleName": "HTMLAudioElement",
      "elementKind": "method",
      "methodName": "hasChildNodes",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::hasChildNodes() @ akasha.HTMLBRElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLBRElement",
      "classSimpleName": "HTMLBRElement",
      "elementKind": "method",
      "methodName": "hasChildNodes",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::hasChildNodes() @ akasha.HTMLBaseElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLBaseElement",
      "classSimpleName": "HTMLBaseElement",
      "elementKind": "method",
      "methodName": "hasChildNodes",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::hasChildNodes() @ akasha.HTMLBodyElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLBodyElement",
      "classSimpleName": "HTMLBodyElement",
      "elementKind": "method",
      "methodName": "hasChildNodes",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::hasChildNodes() @ akasha.HTMLButtonElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLButtonElement",
      "classSimpleName": "HTMLButtonElement",
      "elementKind": "method",
      "methodName": "hasChildNodes",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::hasChildNodes() @ akasha.HTMLCanvasElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLCanvasElement",
      "classSimpleName": "HTMLCanvasElement",
      "elementKind": "method",
      "methodName": "hasChildNodes",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::hasChildNodes() @ akasha.HTMLDListElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLDListElement",
      "classSimpleName": "HTMLDListElement",
      "elementKind": "method",
      "methodName": "hasChildNodes",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::hasChildNodes() @ akasha.HTMLDataElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLDataElement",
      "classSimpleName": "HTMLDataElement",
      "elementKind": "method",
      "methodName": "hasChildNodes",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::hasChildNodes() @ akasha.HTMLDataListElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLDataListElement",
      "classSimpleName": "HTMLDataListElement",
      "elementKind": "method",
      "methodName": "hasChildNodes",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::hasChildNodes() @ akasha.HTMLDetailsElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLDetailsElement",
      "classSimpleName": "HTMLDetailsElement",
      "elementKind": "method",
      "methodName": "hasChildNodes",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::hasChildNodes() @ akasha.HTMLDialogElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLDialogElement",
      "classSimpleName": "HTMLDialogElement",
      "elementKind": "method",
      "methodName": "hasChildNodes",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::hasChildNodes() @ akasha.HTMLDirectoryElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLDirectoryElement",
      "classSimpleName": "HTMLDirectoryElement",
      "elementKind": "method",
      "methodName": "hasChildNodes",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::hasChildNodes() @ akasha.HTMLDivElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLDivElement",
      "classSimpleName": "HTMLDivElement",
      "elementKind": "method",
      "methodName": "hasChildNodes",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::hasChildNodes() @ akasha.HTMLElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLElement",
      "classSimpleName": "HTMLElement",
      "elementKind": "method",
      "methodName": "hasChildNodes",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::hasChildNodes() @ akasha.HTMLEmbedElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLEmbedElement",
      "classSimpleName": "HTMLEmbedElement",
      "elementKind": "method",
      "methodName": "hasChildNodes",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::hasChildNodes() @ akasha.HTMLFieldSetElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLFieldSetElement",
      "classSimpleName": "HTMLFieldSetElement",
      "elementKind": "method",
      "methodName": "hasChildNodes",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::hasChildNodes() @ akasha.HTMLFontElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLFontElement",
      "classSimpleName": "HTMLFontElement",
      "elementKind": "method",
      "methodName": "hasChildNodes",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::hasChildNodes() @ akasha.HTMLFormElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLFormElement",
      "classSimpleName": "HTMLFormElement",
      "elementKind": "method",
      "methodName": "hasChildNodes",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::hasChildNodes() @ akasha.HTMLFrameElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLFrameElement",
      "classSimpleName": "HTMLFrameElement",
      "elementKind": "method",
      "methodName": "hasChildNodes",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::hasChildNodes() @ akasha.HTMLFrameSetElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLFrameSetElement",
      "classSimpleName": "HTMLFrameSetElement",
      "elementKind": "method",
      "methodName": "hasChildNodes",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::hasChildNodes() @ akasha.HTMLHRElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLHRElement",
      "classSimpleName": "HTMLHRElement",
      "elementKind": "method",
      "methodName": "hasChildNodes",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::hasChildNodes() @ akasha.HTMLHeadElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLHeadElement",
      "classSimpleName": "HTMLHeadElement",
      "elementKind": "method",
      "methodName": "hasChildNodes",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::hasChildNodes() @ akasha.HTMLHeadingElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLHeadingElement",
      "classSimpleName": "HTMLHeadingElement",
      "elementKind": "method",
      "methodName": "hasChildNodes",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::hasChildNodes() @ akasha.HTMLHtmlElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLHtmlElement",
      "classSimpleName": "HTMLHtmlElement",
      "elementKind": "method",
      "methodName": "hasChildNodes",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::hasChildNodes() @ akasha.HTMLIFrameElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLIFrameElement",
      "classSimpleName": "HTMLIFrameElement",
      "elementKind": "method",
      "methodName": "hasChildNodes",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::hasChildNodes() @ akasha.HTMLImageElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLImageElement",
      "classSimpleName": "HTMLImageElement",
      "elementKind": "method",
      "methodName": "hasChildNodes",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::hasChildNodes() @ akasha.HTMLInputElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLInputElement",
      "classSimpleName": "HTMLInputElement",
      "elementKind": "method",
      "methodName": "hasChildNodes",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::hasChildNodes() @ akasha.HTMLLIElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLLIElement",
      "classSimpleName": "HTMLLIElement",
      "elementKind": "method",
      "methodName": "hasChildNodes",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::hasChildNodes() @ akasha.HTMLLabelElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLLabelElement",
      "classSimpleName": "HTMLLabelElement",
      "elementKind": "method",
      "methodName": "hasChildNodes",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::hasChildNodes() @ akasha.HTMLLegendElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLLegendElement",
      "classSimpleName": "HTMLLegendElement",
      "elementKind": "method",
      "methodName": "hasChildNodes",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::hasChildNodes() @ akasha.HTMLLinkElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLLinkElement",
      "classSimpleName": "HTMLLinkElement",
      "elementKind": "method",
      "methodName": "hasChildNodes",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::hasChildNodes() @ akasha.HTMLMapElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLMapElement",
      "classSimpleName": "HTMLMapElement",
      "elementKind": "method",
      "methodName": "hasChildNodes",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::hasChildNodes() @ akasha.HTMLMarqueeElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLMarqueeElement",
      "classSimpleName": "HTMLMarqueeElement",
      "elementKind": "method",
      "methodName": "hasChildNodes",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::hasChildNodes() @ akasha.HTMLMediaElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLMediaElement",
      "classSimpleName": "HTMLMediaElement",
      "elementKind": "method",
      "methodName": "hasChildNodes",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::hasChildNodes() @ akasha.HTMLMenuElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLMenuElement",
      "classSimpleName": "HTMLMenuElement",
      "elementKind": "method",
      "methodName": "hasChildNodes",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::hasChildNodes() @ akasha.HTMLMetaElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLMetaElement",
      "classSimpleName": "HTMLMetaElement",
      "elementKind": "method",
      "methodName": "hasChildNodes",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::hasChildNodes() @ akasha.HTMLMeterElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLMeterElement",
      "classSimpleName": "HTMLMeterElement",
      "elementKind": "method",
      "methodName": "hasChildNodes",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::hasChildNodes() @ akasha.HTMLModElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLModElement",
      "classSimpleName": "HTMLModElement",
      "elementKind": "method",
      "methodName": "hasChildNodes",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::hasChildNodes() @ akasha.HTMLOListElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLOListElement",
      "classSimpleName": "HTMLOListElement",
      "elementKind": "method",
      "methodName": "hasChildNodes",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::hasChildNodes() @ akasha.HTMLObjectElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLObjectElement",
      "classSimpleName": "HTMLObjectElement",
      "elementKind": "method",
      "methodName": "hasChildNodes",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::hasChildNodes() @ akasha.HTMLOptGroupElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLOptGroupElement",
      "classSimpleName": "HTMLOptGroupElement",
      "elementKind": "method",
      "methodName": "hasChildNodes",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::hasChildNodes() @ akasha.HTMLOptionElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLOptionElement",
      "classSimpleName": "HTMLOptionElement",
      "elementKind": "method",
      "methodName": "hasChildNodes",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::hasChildNodes() @ akasha.HTMLOutputElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLOutputElement",
      "classSimpleName": "HTMLOutputElement",
      "elementKind": "method",
      "methodName": "hasChildNodes",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::hasChildNodes() @ akasha.HTMLParagraphElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLParagraphElement",
      "classSimpleName": "HTMLParagraphElement",
      "elementKind": "method",
      "methodName": "hasChildNodes",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::hasChildNodes() @ akasha.HTMLParamElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLParamElement",
      "classSimpleName": "HTMLParamElement",
      "elementKind": "method",
      "methodName": "hasChildNodes",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::hasChildNodes() @ akasha.HTMLPictureElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLPictureElement",
      "classSimpleName": "HTMLPictureElement",
      "elementKind": "method",
      "methodName": "hasChildNodes",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::hasChildNodes() @ akasha.HTMLPreElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLPreElement",
      "classSimpleName": "HTMLPreElement",
      "elementKind": "method",
      "methodName": "hasChildNodes",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::hasChildNodes() @ akasha.HTMLProgressElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLProgressElement",
      "classSimpleName": "HTMLProgressElement",
      "elementKind": "method",
      "methodName": "hasChildNodes",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::hasChildNodes() @ akasha.HTMLQuoteElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLQuoteElement",
      "classSimpleName": "HTMLQuoteElement",
      "elementKind": "method",
      "methodName": "hasChildNodes",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::hasChildNodes() @ akasha.HTMLScriptElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLScriptElement",
      "classSimpleName": "HTMLScriptElement",
      "elementKind": "method",
      "methodName": "hasChildNodes",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::hasChildNodes() @ akasha.HTMLSelectElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLSelectElement",
      "classSimpleName": "HTMLSelectElement",
      "elementKind": "method",
      "methodName": "hasChildNodes",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::hasChildNodes() @ akasha.HTMLSlotElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLSlotElement",
      "classSimpleName": "HTMLSlotElement",
      "elementKind": "method",
      "methodName": "hasChildNodes",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::hasChildNodes() @ akasha.HTMLSourceElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLSourceElement",
      "classSimpleName": "HTMLSourceElement",
      "elementKind": "method",
      "methodName": "hasChildNodes",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::hasChildNodes() @ akasha.HTMLSpanElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLSpanElement",
      "classSimpleName": "HTMLSpanElement",
      "elementKind": "method",
      "methodName": "hasChildNodes",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::hasChildNodes() @ akasha.HTMLStyleElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLStyleElement",
      "classSimpleName": "HTMLStyleElement",
      "elementKind": "method",
      "methodName": "hasChildNodes",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::hasChildNodes() @ akasha.HTMLTableCaptionElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLTableCaptionElement",
      "classSimpleName": "HTMLTableCaptionElement",
      "elementKind": "method",
      "methodName": "hasChildNodes",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::hasChildNodes() @ akasha.HTMLTableCellElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLTableCellElement",
      "classSimpleName": "HTMLTableCellElement",
      "elementKind": "method",
      "methodName": "hasChildNodes",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::hasChildNodes() @ akasha.HTMLTableColElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLTableColElement",
      "classSimpleName": "HTMLTableColElement",
      "elementKind": "method",
      "methodName": "hasChildNodes",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::hasChildNodes() @ akasha.HTMLTableElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLTableElement",
      "classSimpleName": "HTMLTableElement",
      "elementKind": "method",
      "methodName": "hasChildNodes",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::hasChildNodes() @ akasha.HTMLTableRowElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLTableRowElement",
      "classSimpleName": "HTMLTableRowElement",
      "elementKind": "method",
      "methodName": "hasChildNodes",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::hasChildNodes() @ akasha.HTMLTableSectionElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLTableSectionElement",
      "classSimpleName": "HTMLTableSectionElement",
      "elementKind": "method",
      "methodName": "hasChildNodes",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::hasChildNodes() @ akasha.HTMLTemplateElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLTemplateElement",
      "classSimpleName": "HTMLTemplateElement",
      "elementKind": "method",
      "methodName": "hasChildNodes",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::hasChildNodes() @ akasha.HTMLTextAreaElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLTextAreaElement",
      "classSimpleName": "HTMLTextAreaElement",
      "elementKind": "method",
      "methodName": "hasChildNodes",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::hasChildNodes() @ akasha.HTMLTimeElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLTimeElement",
      "classSimpleName": "HTMLTimeElement",
      "elementKind": "method",
      "methodName": "hasChildNodes",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::hasChildNodes() @ akasha.HTMLTitleElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLTitleElement",
      "classSimpleName": "HTMLTitleElement",
      "elementKind": "method",
      "methodName": "hasChildNodes",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::hasChildNodes() @ akasha.HTMLTrackElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLTrackElement",
      "classSimpleName": "HTMLTrackElement",
      "elementKind": "method",
      "methodName": "hasChildNodes",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::hasChildNodes() @ akasha.HTMLUListElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLUListElement",
      "classSimpleName": "HTMLUListElement",
      "elementKind": "method",
      "methodName": "hasChildNodes",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::hasChildNodes() @ akasha.HTMLUnknownElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLUnknownElement",
      "classSimpleName": "HTMLUnknownElement",
      "elementKind": "method",
      "methodName": "hasChildNodes",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::hasChildNodes() @ akasha.HTMLVideoElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLVideoElement",
      "classSimpleName": "HTMLVideoElement",
      "elementKind": "method",
      "methodName": "hasChildNodes",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::hasChildNodes() @ akasha.Image",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.Image",
      "classSimpleName": "Image",
      "elementKind": "method",
      "methodName": "hasChildNodes",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::hasChildNodes() @ akasha.Option",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.Option",
      "classSimpleName": "Option",
      "elementKind": "method",
      "methodName": "hasChildNodes",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::hasChildNodes() @ akasha.ProcessingInstruction",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.ProcessingInstruction",
      "classSimpleName": "ProcessingInstruction",
      "elementKind": "method",
      "methodName": "hasChildNodes",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::hasChildNodes() @ akasha.ShadowRoot",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.ShadowRoot",
      "classSimpleName": "ShadowRoot",
      "elementKind": "method",
      "methodName": "hasChildNodes",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::hasChildNodes() @ akasha.Text",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.Text",
      "classSimpleName": "Text",
      "elementKind": "method",
      "methodName": "hasChildNodes",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::hasChildNodes() @ akasha.XMLDocument",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.XMLDocument",
      "classSimpleName": "XMLDocument",
      "elementKind": "method",
      "methodName": "hasChildNodes",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::hasChildNodes() @ akasha.svg.SVGAElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGAElement",
      "classSimpleName": "SVGAElement",
      "elementKind": "method",
      "methodName": "hasChildNodes",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::hasChildNodes() @ akasha.svg.SVGCircleElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGCircleElement",
      "classSimpleName": "SVGCircleElement",
      "elementKind": "method",
      "methodName": "hasChildNodes",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::hasChildNodes() @ akasha.svg.SVGClipPathElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGClipPathElement",
      "classSimpleName": "SVGClipPathElement",
      "elementKind": "method",
      "methodName": "hasChildNodes",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::hasChildNodes() @ akasha.svg.SVGComponentTransferFunctionElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGComponentTransferFunctionElement",
      "classSimpleName": "SVGComponentTransferFunctionElement",
      "elementKind": "method",
      "methodName": "hasChildNodes",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::hasChildNodes() @ akasha.svg.SVGDefsElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGDefsElement",
      "classSimpleName": "SVGDefsElement",
      "elementKind": "method",
      "methodName": "hasChildNodes",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::hasChildNodes() @ akasha.svg.SVGDescElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGDescElement",
      "classSimpleName": "SVGDescElement",
      "elementKind": "method",
      "methodName": "hasChildNodes",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::hasChildNodes() @ akasha.svg.SVGElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGElement",
      "classSimpleName": "SVGElement",
      "elementKind": "method",
      "methodName": "hasChildNodes",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::hasChildNodes() @ akasha.svg.SVGEllipseElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGEllipseElement",
      "classSimpleName": "SVGEllipseElement",
      "elementKind": "method",
      "methodName": "hasChildNodes",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::hasChildNodes() @ akasha.svg.SVGFEBlendElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEBlendElement",
      "classSimpleName": "SVGFEBlendElement",
      "elementKind": "method",
      "methodName": "hasChildNodes",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::hasChildNodes() @ akasha.svg.SVGFEColorMatrixElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEColorMatrixElement",
      "classSimpleName": "SVGFEColorMatrixElement",
      "elementKind": "method",
      "methodName": "hasChildNodes",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::hasChildNodes() @ akasha.svg.SVGFEComponentTransferElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEComponentTransferElement",
      "classSimpleName": "SVGFEComponentTransferElement",
      "elementKind": "method",
      "methodName": "hasChildNodes",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::hasChildNodes() @ akasha.svg.SVGFECompositeElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFECompositeElement",
      "classSimpleName": "SVGFECompositeElement",
      "elementKind": "method",
      "methodName": "hasChildNodes",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::hasChildNodes() @ akasha.svg.SVGFEConvolveMatrixElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEConvolveMatrixElement",
      "classSimpleName": "SVGFEConvolveMatrixElement",
      "elementKind": "method",
      "methodName": "hasChildNodes",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::hasChildNodes() @ akasha.svg.SVGFEDiffuseLightingElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEDiffuseLightingElement",
      "classSimpleName": "SVGFEDiffuseLightingElement",
      "elementKind": "method",
      "methodName": "hasChildNodes",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::hasChildNodes() @ akasha.svg.SVGFEDisplacementMapElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEDisplacementMapElement",
      "classSimpleName": "SVGFEDisplacementMapElement",
      "elementKind": "method",
      "methodName": "hasChildNodes",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::hasChildNodes() @ akasha.svg.SVGFEDistantLightElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEDistantLightElement",
      "classSimpleName": "SVGFEDistantLightElement",
      "elementKind": "method",
      "methodName": "hasChildNodes",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::hasChildNodes() @ akasha.svg.SVGFEDropShadowElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEDropShadowElement",
      "classSimpleName": "SVGFEDropShadowElement",
      "elementKind": "method",
      "methodName": "hasChildNodes",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::hasChildNodes() @ akasha.svg.SVGFEFloodElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEFloodElement",
      "classSimpleName": "SVGFEFloodElement",
      "elementKind": "method",
      "methodName": "hasChildNodes",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::hasChildNodes() @ akasha.svg.SVGFEFuncAElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEFuncAElement",
      "classSimpleName": "SVGFEFuncAElement",
      "elementKind": "method",
      "methodName": "hasChildNodes",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::hasChildNodes() @ akasha.svg.SVGFEFuncBElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEFuncBElement",
      "classSimpleName": "SVGFEFuncBElement",
      "elementKind": "method",
      "methodName": "hasChildNodes",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::hasChildNodes() @ akasha.svg.SVGFEFuncGElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEFuncGElement",
      "classSimpleName": "SVGFEFuncGElement",
      "elementKind": "method",
      "methodName": "hasChildNodes",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::hasChildNodes() @ akasha.svg.SVGFEFuncRElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEFuncRElement",
      "classSimpleName": "SVGFEFuncRElement",
      "elementKind": "method",
      "methodName": "hasChildNodes",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::hasChildNodes() @ akasha.svg.SVGFEGaussianBlurElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEGaussianBlurElement",
      "classSimpleName": "SVGFEGaussianBlurElement",
      "elementKind": "method",
      "methodName": "hasChildNodes",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::hasChildNodes() @ akasha.svg.SVGFEImageElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEImageElement",
      "classSimpleName": "SVGFEImageElement",
      "elementKind": "method",
      "methodName": "hasChildNodes",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::hasChildNodes() @ akasha.svg.SVGFEMergeElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEMergeElement",
      "classSimpleName": "SVGFEMergeElement",
      "elementKind": "method",
      "methodName": "hasChildNodes",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::hasChildNodes() @ akasha.svg.SVGFEMergeNodeElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEMergeNodeElement",
      "classSimpleName": "SVGFEMergeNodeElement",
      "elementKind": "method",
      "methodName": "hasChildNodes",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::hasChildNodes() @ akasha.svg.SVGFEMorphologyElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEMorphologyElement",
      "classSimpleName": "SVGFEMorphologyElement",
      "elementKind": "method",
      "methodName": "hasChildNodes",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::hasChildNodes() @ akasha.svg.SVGFEOffsetElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEOffsetElement",
      "classSimpleName": "SVGFEOffsetElement",
      "elementKind": "method",
      "methodName": "hasChildNodes",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::hasChildNodes() @ akasha.svg.SVGFEPointLightElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEPointLightElement",
      "classSimpleName": "SVGFEPointLightElement",
      "elementKind": "method",
      "methodName": "hasChildNodes",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::hasChildNodes() @ akasha.svg.SVGFESpecularLightingElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFESpecularLightingElement",
      "classSimpleName": "SVGFESpecularLightingElement",
      "elementKind": "method",
      "methodName": "hasChildNodes",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::hasChildNodes() @ akasha.svg.SVGFESpotLightElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFESpotLightElement",
      "classSimpleName": "SVGFESpotLightElement",
      "elementKind": "method",
      "methodName": "hasChildNodes",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::hasChildNodes() @ akasha.svg.SVGFETileElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFETileElement",
      "classSimpleName": "SVGFETileElement",
      "elementKind": "method",
      "methodName": "hasChildNodes",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::hasChildNodes() @ akasha.svg.SVGFETurbulenceElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFETurbulenceElement",
      "classSimpleName": "SVGFETurbulenceElement",
      "elementKind": "method",
      "methodName": "hasChildNodes",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::hasChildNodes() @ akasha.svg.SVGFilterElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFilterElement",
      "classSimpleName": "SVGFilterElement",
      "elementKind": "method",
      "methodName": "hasChildNodes",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::hasChildNodes() @ akasha.svg.SVGForeignObjectElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGForeignObjectElement",
      "classSimpleName": "SVGForeignObjectElement",
      "elementKind": "method",
      "methodName": "hasChildNodes",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::hasChildNodes() @ akasha.svg.SVGGElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGGElement",
      "classSimpleName": "SVGGElement",
      "elementKind": "method",
      "methodName": "hasChildNodes",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::hasChildNodes() @ akasha.svg.SVGGeometryElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGGeometryElement",
      "classSimpleName": "SVGGeometryElement",
      "elementKind": "method",
      "methodName": "hasChildNodes",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::hasChildNodes() @ akasha.svg.SVGGradientElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGGradientElement",
      "classSimpleName": "SVGGradientElement",
      "elementKind": "method",
      "methodName": "hasChildNodes",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::hasChildNodes() @ akasha.svg.SVGGraphicsElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGGraphicsElement",
      "classSimpleName": "SVGGraphicsElement",
      "elementKind": "method",
      "methodName": "hasChildNodes",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::hasChildNodes() @ akasha.svg.SVGImageElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGImageElement",
      "classSimpleName": "SVGImageElement",
      "elementKind": "method",
      "methodName": "hasChildNodes",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::hasChildNodes() @ akasha.svg.SVGLineElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGLineElement",
      "classSimpleName": "SVGLineElement",
      "elementKind": "method",
      "methodName": "hasChildNodes",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::hasChildNodes() @ akasha.svg.SVGLinearGradientElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGLinearGradientElement",
      "classSimpleName": "SVGLinearGradientElement",
      "elementKind": "method",
      "methodName": "hasChildNodes",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::hasChildNodes() @ akasha.svg.SVGMarkerElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGMarkerElement",
      "classSimpleName": "SVGMarkerElement",
      "elementKind": "method",
      "methodName": "hasChildNodes",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::hasChildNodes() @ akasha.svg.SVGMaskElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGMaskElement",
      "classSimpleName": "SVGMaskElement",
      "elementKind": "method",
      "methodName": "hasChildNodes",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::hasChildNodes() @ akasha.svg.SVGMetadataElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGMetadataElement",
      "classSimpleName": "SVGMetadataElement",
      "elementKind": "method",
      "methodName": "hasChildNodes",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::hasChildNodes() @ akasha.svg.SVGPathElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGPathElement",
      "classSimpleName": "SVGPathElement",
      "elementKind": "method",
      "methodName": "hasChildNodes",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::hasChildNodes() @ akasha.svg.SVGPatternElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGPatternElement",
      "classSimpleName": "SVGPatternElement",
      "elementKind": "method",
      "methodName": "hasChildNodes",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::hasChildNodes() @ akasha.svg.SVGPolygonElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGPolygonElement",
      "classSimpleName": "SVGPolygonElement",
      "elementKind": "method",
      "methodName": "hasChildNodes",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::hasChildNodes() @ akasha.svg.SVGPolylineElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGPolylineElement",
      "classSimpleName": "SVGPolylineElement",
      "elementKind": "method",
      "methodName": "hasChildNodes",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::hasChildNodes() @ akasha.svg.SVGRadialGradientElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGRadialGradientElement",
      "classSimpleName": "SVGRadialGradientElement",
      "elementKind": "method",
      "methodName": "hasChildNodes",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::hasChildNodes() @ akasha.svg.SVGRectElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGRectElement",
      "classSimpleName": "SVGRectElement",
      "elementKind": "method",
      "methodName": "hasChildNodes",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::hasChildNodes() @ akasha.svg.SVGSVGElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGSVGElement",
      "classSimpleName": "SVGSVGElement",
      "elementKind": "method",
      "methodName": "hasChildNodes",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::hasChildNodes() @ akasha.svg.SVGScriptElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGScriptElement",
      "classSimpleName": "SVGScriptElement",
      "elementKind": "method",
      "methodName": "hasChildNodes",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::hasChildNodes() @ akasha.svg.SVGStopElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGStopElement",
      "classSimpleName": "SVGStopElement",
      "elementKind": "method",
      "methodName": "hasChildNodes",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::hasChildNodes() @ akasha.svg.SVGStyleElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGStyleElement",
      "classSimpleName": "SVGStyleElement",
      "elementKind": "method",
      "methodName": "hasChildNodes",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::hasChildNodes() @ akasha.svg.SVGSwitchElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGSwitchElement",
      "classSimpleName": "SVGSwitchElement",
      "elementKind": "method",
      "methodName": "hasChildNodes",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::hasChildNodes() @ akasha.svg.SVGSymbolElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGSymbolElement",
      "classSimpleName": "SVGSymbolElement",
      "elementKind": "method",
      "methodName": "hasChildNodes",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::hasChildNodes() @ akasha.svg.SVGTSpanElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGTSpanElement",
      "classSimpleName": "SVGTSpanElement",
      "elementKind": "method",
      "methodName": "hasChildNodes",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::hasChildNodes() @ akasha.svg.SVGTextContentElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGTextContentElement",
      "classSimpleName": "SVGTextContentElement",
      "elementKind": "method",
      "methodName": "hasChildNodes",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::hasChildNodes() @ akasha.svg.SVGTextElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGTextElement",
      "classSimpleName": "SVGTextElement",
      "elementKind": "method",
      "methodName": "hasChildNodes",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::hasChildNodes() @ akasha.svg.SVGTextPathElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGTextPathElement",
      "classSimpleName": "SVGTextPathElement",
      "elementKind": "method",
      "methodName": "hasChildNodes",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::hasChildNodes() @ akasha.svg.SVGTextPositioningElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGTextPositioningElement",
      "classSimpleName": "SVGTextPositioningElement",
      "elementKind": "method",
      "methodName": "hasChildNodes",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::hasChildNodes() @ akasha.svg.SVGTitleElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGTitleElement",
      "classSimpleName": "SVGTitleElement",
      "elementKind": "method",
      "methodName": "hasChildNodes",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::hasChildNodes() @ akasha.svg.SVGUnknownElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGUnknownElement",
      "classSimpleName": "SVGUnknownElement",
      "elementKind": "method",
      "methodName": "hasChildNodes",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::hasChildNodes() @ akasha.svg.SVGUseElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGUseElement",
      "classSimpleName": "SVGUseElement",
      "elementKind": "method",
      "methodName": "hasChildNodes",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::hasChildNodes() @ akasha.svg.SVGUseElementShadowRoot",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGUseElementShadowRoot",
      "classSimpleName": "SVGUseElementShadowRoot",
      "elementKind": "method",
      "methodName": "hasChildNodes",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::hasChildNodes() @ akasha.svg.SVGViewElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGViewElement",
      "classSimpleName": "SVGViewElement",
      "elementKind": "method",
      "methodName": "hasChildNodes",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::hasChildNodes()",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.Node",
      "classSimpleName": "Node",
      "elementKind": "method",
      "methodName": "hasChildNodes",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isDefaultNamespace(java.lang.String) @ akasha.Attr",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.Attr",
      "classSimpleName": "Attr",
      "elementKind": "method",
      "methodName": "isDefaultNamespace",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isDefaultNamespace(java.lang.String) @ akasha.Audio",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.Audio",
      "classSimpleName": "Audio",
      "elementKind": "method",
      "methodName": "isDefaultNamespace",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isDefaultNamespace(java.lang.String) @ akasha.CDATASection",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.CDATASection",
      "classSimpleName": "CDATASection",
      "elementKind": "method",
      "methodName": "isDefaultNamespace",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isDefaultNamespace(java.lang.String) @ akasha.CharacterData",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.CharacterData",
      "classSimpleName": "CharacterData",
      "elementKind": "method",
      "methodName": "isDefaultNamespace",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isDefaultNamespace(java.lang.String) @ akasha.Comment",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.Comment",
      "classSimpleName": "Comment",
      "elementKind": "method",
      "methodName": "isDefaultNamespace",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isDefaultNamespace(java.lang.String) @ akasha.Document",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.Document",
      "classSimpleName": "Document",
      "elementKind": "method",
      "methodName": "isDefaultNamespace",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isDefaultNamespace(java.lang.String) @ akasha.DocumentFragment",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.DocumentFragment",
      "classSimpleName": "DocumentFragment",
      "elementKind": "method",
      "methodName": "isDefaultNamespace",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isDefaultNamespace(java.lang.String) @ akasha.DocumentType",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.DocumentType",
      "classSimpleName": "DocumentType",
      "elementKind": "method",
      "methodName": "isDefaultNamespace",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isDefaultNamespace(java.lang.String) @ akasha.Element",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.Element",
      "classSimpleName": "Element",
      "elementKind": "method",
      "methodName": "isDefaultNamespace",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isDefaultNamespace(java.lang.String) @ akasha.HTMLAnchorElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLAnchorElement",
      "classSimpleName": "HTMLAnchorElement",
      "elementKind": "method",
      "methodName": "isDefaultNamespace",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isDefaultNamespace(java.lang.String) @ akasha.HTMLAreaElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLAreaElement",
      "classSimpleName": "HTMLAreaElement",
      "elementKind": "method",
      "methodName": "isDefaultNamespace",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isDefaultNamespace(java.lang.String) @ akasha.HTMLAudioElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLAudioElement",
      "classSimpleName": "HTMLAudioElement",
      "elementKind": "method",
      "methodName": "isDefaultNamespace",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isDefaultNamespace(java.lang.String) @ akasha.HTMLBRElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLBRElement",
      "classSimpleName": "HTMLBRElement",
      "elementKind": "method",
      "methodName": "isDefaultNamespace",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isDefaultNamespace(java.lang.String) @ akasha.HTMLBaseElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLBaseElement",
      "classSimpleName": "HTMLBaseElement",
      "elementKind": "method",
      "methodName": "isDefaultNamespace",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isDefaultNamespace(java.lang.String) @ akasha.HTMLBodyElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLBodyElement",
      "classSimpleName": "HTMLBodyElement",
      "elementKind": "method",
      "methodName": "isDefaultNamespace",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isDefaultNamespace(java.lang.String) @ akasha.HTMLButtonElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLButtonElement",
      "classSimpleName": "HTMLButtonElement",
      "elementKind": "method",
      "methodName": "isDefaultNamespace",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isDefaultNamespace(java.lang.String) @ akasha.HTMLCanvasElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLCanvasElement",
      "classSimpleName": "HTMLCanvasElement",
      "elementKind": "method",
      "methodName": "isDefaultNamespace",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isDefaultNamespace(java.lang.String) @ akasha.HTMLDListElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLDListElement",
      "classSimpleName": "HTMLDListElement",
      "elementKind": "method",
      "methodName": "isDefaultNamespace",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isDefaultNamespace(java.lang.String) @ akasha.HTMLDataElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLDataElement",
      "classSimpleName": "HTMLDataElement",
      "elementKind": "method",
      "methodName": "isDefaultNamespace",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isDefaultNamespace(java.lang.String) @ akasha.HTMLDataListElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLDataListElement",
      "classSimpleName": "HTMLDataListElement",
      "elementKind": "method",
      "methodName": "isDefaultNamespace",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isDefaultNamespace(java.lang.String) @ akasha.HTMLDetailsElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLDetailsElement",
      "classSimpleName": "HTMLDetailsElement",
      "elementKind": "method",
      "methodName": "isDefaultNamespace",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isDefaultNamespace(java.lang.String) @ akasha.HTMLDialogElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLDialogElement",
      "classSimpleName": "HTMLDialogElement",
      "elementKind": "method",
      "methodName": "isDefaultNamespace",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isDefaultNamespace(java.lang.String) @ akasha.HTMLDirectoryElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLDirectoryElement",
      "classSimpleName": "HTMLDirectoryElement",
      "elementKind": "method",
      "methodName": "isDefaultNamespace",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isDefaultNamespace(java.lang.String) @ akasha.HTMLDivElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLDivElement",
      "classSimpleName": "HTMLDivElement",
      "elementKind": "method",
      "methodName": "isDefaultNamespace",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isDefaultNamespace(java.lang.String) @ akasha.HTMLElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLElement",
      "classSimpleName": "HTMLElement",
      "elementKind": "method",
      "methodName": "isDefaultNamespace",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isDefaultNamespace(java.lang.String) @ akasha.HTMLEmbedElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLEmbedElement",
      "classSimpleName": "HTMLEmbedElement",
      "elementKind": "method",
      "methodName": "isDefaultNamespace",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isDefaultNamespace(java.lang.String) @ akasha.HTMLFieldSetElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLFieldSetElement",
      "classSimpleName": "HTMLFieldSetElement",
      "elementKind": "method",
      "methodName": "isDefaultNamespace",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isDefaultNamespace(java.lang.String) @ akasha.HTMLFontElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLFontElement",
      "classSimpleName": "HTMLFontElement",
      "elementKind": "method",
      "methodName": "isDefaultNamespace",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isDefaultNamespace(java.lang.String) @ akasha.HTMLFormElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLFormElement",
      "classSimpleName": "HTMLFormElement",
      "elementKind": "method",
      "methodName": "isDefaultNamespace",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isDefaultNamespace(java.lang.String) @ akasha.HTMLFrameElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLFrameElement",
      "classSimpleName": "HTMLFrameElement",
      "elementKind": "method",
      "methodName": "isDefaultNamespace",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isDefaultNamespace(java.lang.String) @ akasha.HTMLFrameSetElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLFrameSetElement",
      "classSimpleName": "HTMLFrameSetElement",
      "elementKind": "method",
      "methodName": "isDefaultNamespace",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isDefaultNamespace(java.lang.String) @ akasha.HTMLHRElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLHRElement",
      "classSimpleName": "HTMLHRElement",
      "elementKind": "method",
      "methodName": "isDefaultNamespace",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isDefaultNamespace(java.lang.String) @ akasha.HTMLHeadElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLHeadElement",
      "classSimpleName": "HTMLHeadElement",
      "elementKind": "method",
      "methodName": "isDefaultNamespace",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isDefaultNamespace(java.lang.String) @ akasha.HTMLHeadingElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLHeadingElement",
      "classSimpleName": "HTMLHeadingElement",
      "elementKind": "method",
      "methodName": "isDefaultNamespace",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isDefaultNamespace(java.lang.String) @ akasha.HTMLHtmlElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLHtmlElement",
      "classSimpleName": "HTMLHtmlElement",
      "elementKind": "method",
      "methodName": "isDefaultNamespace",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isDefaultNamespace(java.lang.String) @ akasha.HTMLIFrameElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLIFrameElement",
      "classSimpleName": "HTMLIFrameElement",
      "elementKind": "method",
      "methodName": "isDefaultNamespace",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isDefaultNamespace(java.lang.String) @ akasha.HTMLImageElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLImageElement",
      "classSimpleName": "HTMLImageElement",
      "elementKind": "method",
      "methodName": "isDefaultNamespace",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isDefaultNamespace(java.lang.String) @ akasha.HTMLInputElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLInputElement",
      "classSimpleName": "HTMLInputElement",
      "elementKind": "method",
      "methodName": "isDefaultNamespace",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isDefaultNamespace(java.lang.String) @ akasha.HTMLLIElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLLIElement",
      "classSimpleName": "HTMLLIElement",
      "elementKind": "method",
      "methodName": "isDefaultNamespace",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isDefaultNamespace(java.lang.String) @ akasha.HTMLLabelElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLLabelElement",
      "classSimpleName": "HTMLLabelElement",
      "elementKind": "method",
      "methodName": "isDefaultNamespace",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isDefaultNamespace(java.lang.String) @ akasha.HTMLLegendElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLLegendElement",
      "classSimpleName": "HTMLLegendElement",
      "elementKind": "method",
      "methodName": "isDefaultNamespace",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isDefaultNamespace(java.lang.String) @ akasha.HTMLLinkElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLLinkElement",
      "classSimpleName": "HTMLLinkElement",
      "elementKind": "method",
      "methodName": "isDefaultNamespace",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isDefaultNamespace(java.lang.String) @ akasha.HTMLMapElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLMapElement",
      "classSimpleName": "HTMLMapElement",
      "elementKind": "method",
      "methodName": "isDefaultNamespace",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isDefaultNamespace(java.lang.String) @ akasha.HTMLMarqueeElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLMarqueeElement",
      "classSimpleName": "HTMLMarqueeElement",
      "elementKind": "method",
      "methodName": "isDefaultNamespace",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isDefaultNamespace(java.lang.String) @ akasha.HTMLMediaElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLMediaElement",
      "classSimpleName": "HTMLMediaElement",
      "elementKind": "method",
      "methodName": "isDefaultNamespace",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isDefaultNamespace(java.lang.String) @ akasha.HTMLMenuElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLMenuElement",
      "classSimpleName": "HTMLMenuElement",
      "elementKind": "method",
      "methodName": "isDefaultNamespace",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isDefaultNamespace(java.lang.String) @ akasha.HTMLMetaElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLMetaElement",
      "classSimpleName": "HTMLMetaElement",
      "elementKind": "method",
      "methodName": "isDefaultNamespace",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isDefaultNamespace(java.lang.String) @ akasha.HTMLMeterElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLMeterElement",
      "classSimpleName": "HTMLMeterElement",
      "elementKind": "method",
      "methodName": "isDefaultNamespace",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isDefaultNamespace(java.lang.String) @ akasha.HTMLModElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLModElement",
      "classSimpleName": "HTMLModElement",
      "elementKind": "method",
      "methodName": "isDefaultNamespace",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isDefaultNamespace(java.lang.String) @ akasha.HTMLOListElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLOListElement",
      "classSimpleName": "HTMLOListElement",
      "elementKind": "method",
      "methodName": "isDefaultNamespace",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isDefaultNamespace(java.lang.String) @ akasha.HTMLObjectElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLObjectElement",
      "classSimpleName": "HTMLObjectElement",
      "elementKind": "method",
      "methodName": "isDefaultNamespace",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isDefaultNamespace(java.lang.String) @ akasha.HTMLOptGroupElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLOptGroupElement",
      "classSimpleName": "HTMLOptGroupElement",
      "elementKind": "method",
      "methodName": "isDefaultNamespace",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isDefaultNamespace(java.lang.String) @ akasha.HTMLOptionElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLOptionElement",
      "classSimpleName": "HTMLOptionElement",
      "elementKind": "method",
      "methodName": "isDefaultNamespace",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isDefaultNamespace(java.lang.String) @ akasha.HTMLOutputElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLOutputElement",
      "classSimpleName": "HTMLOutputElement",
      "elementKind": "method",
      "methodName": "isDefaultNamespace",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isDefaultNamespace(java.lang.String) @ akasha.HTMLParagraphElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLParagraphElement",
      "classSimpleName": "HTMLParagraphElement",
      "elementKind": "method",
      "methodName": "isDefaultNamespace",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isDefaultNamespace(java.lang.String) @ akasha.HTMLParamElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLParamElement",
      "classSimpleName": "HTMLParamElement",
      "elementKind": "method",
      "methodName": "isDefaultNamespace",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isDefaultNamespace(java.lang.String) @ akasha.HTMLPictureElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLPictureElement",
      "classSimpleName": "HTMLPictureElement",
      "elementKind": "method",
      "methodName": "isDefaultNamespace",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isDefaultNamespace(java.lang.String) @ akasha.HTMLPreElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLPreElement",
      "classSimpleName": "HTMLPreElement",
      "elementKind": "method",
      "methodName": "isDefaultNamespace",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isDefaultNamespace(java.lang.String) @ akasha.HTMLProgressElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLProgressElement",
      "classSimpleName": "HTMLProgressElement",
      "elementKind": "method",
      "methodName": "isDefaultNamespace",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isDefaultNamespace(java.lang.String) @ akasha.HTMLQuoteElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLQuoteElement",
      "classSimpleName": "HTMLQuoteElement",
      "elementKind": "method",
      "methodName": "isDefaultNamespace",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isDefaultNamespace(java.lang.String) @ akasha.HTMLScriptElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLScriptElement",
      "classSimpleName": "HTMLScriptElement",
      "elementKind": "method",
      "methodName": "isDefaultNamespace",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isDefaultNamespace(java.lang.String) @ akasha.HTMLSelectElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLSelectElement",
      "classSimpleName": "HTMLSelectElement",
      "elementKind": "method",
      "methodName": "isDefaultNamespace",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isDefaultNamespace(java.lang.String) @ akasha.HTMLSlotElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLSlotElement",
      "classSimpleName": "HTMLSlotElement",
      "elementKind": "method",
      "methodName": "isDefaultNamespace",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isDefaultNamespace(java.lang.String) @ akasha.HTMLSourceElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLSourceElement",
      "classSimpleName": "HTMLSourceElement",
      "elementKind": "method",
      "methodName": "isDefaultNamespace",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isDefaultNamespace(java.lang.String) @ akasha.HTMLSpanElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLSpanElement",
      "classSimpleName": "HTMLSpanElement",
      "elementKind": "method",
      "methodName": "isDefaultNamespace",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isDefaultNamespace(java.lang.String) @ akasha.HTMLStyleElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLStyleElement",
      "classSimpleName": "HTMLStyleElement",
      "elementKind": "method",
      "methodName": "isDefaultNamespace",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isDefaultNamespace(java.lang.String) @ akasha.HTMLTableCaptionElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLTableCaptionElement",
      "classSimpleName": "HTMLTableCaptionElement",
      "elementKind": "method",
      "methodName": "isDefaultNamespace",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isDefaultNamespace(java.lang.String) @ akasha.HTMLTableCellElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLTableCellElement",
      "classSimpleName": "HTMLTableCellElement",
      "elementKind": "method",
      "methodName": "isDefaultNamespace",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isDefaultNamespace(java.lang.String) @ akasha.HTMLTableColElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLTableColElement",
      "classSimpleName": "HTMLTableColElement",
      "elementKind": "method",
      "methodName": "isDefaultNamespace",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isDefaultNamespace(java.lang.String) @ akasha.HTMLTableElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLTableElement",
      "classSimpleName": "HTMLTableElement",
      "elementKind": "method",
      "methodName": "isDefaultNamespace",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isDefaultNamespace(java.lang.String) @ akasha.HTMLTableRowElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLTableRowElement",
      "classSimpleName": "HTMLTableRowElement",
      "elementKind": "method",
      "methodName": "isDefaultNamespace",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isDefaultNamespace(java.lang.String) @ akasha.HTMLTableSectionElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLTableSectionElement",
      "classSimpleName": "HTMLTableSectionElement",
      "elementKind": "method",
      "methodName": "isDefaultNamespace",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isDefaultNamespace(java.lang.String) @ akasha.HTMLTemplateElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLTemplateElement",
      "classSimpleName": "HTMLTemplateElement",
      "elementKind": "method",
      "methodName": "isDefaultNamespace",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isDefaultNamespace(java.lang.String) @ akasha.HTMLTextAreaElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLTextAreaElement",
      "classSimpleName": "HTMLTextAreaElement",
      "elementKind": "method",
      "methodName": "isDefaultNamespace",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isDefaultNamespace(java.lang.String) @ akasha.HTMLTimeElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLTimeElement",
      "classSimpleName": "HTMLTimeElement",
      "elementKind": "method",
      "methodName": "isDefaultNamespace",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isDefaultNamespace(java.lang.String) @ akasha.HTMLTitleElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLTitleElement",
      "classSimpleName": "HTMLTitleElement",
      "elementKind": "method",
      "methodName": "isDefaultNamespace",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isDefaultNamespace(java.lang.String) @ akasha.HTMLTrackElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLTrackElement",
      "classSimpleName": "HTMLTrackElement",
      "elementKind": "method",
      "methodName": "isDefaultNamespace",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isDefaultNamespace(java.lang.String) @ akasha.HTMLUListElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLUListElement",
      "classSimpleName": "HTMLUListElement",
      "elementKind": "method",
      "methodName": "isDefaultNamespace",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isDefaultNamespace(java.lang.String) @ akasha.HTMLUnknownElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLUnknownElement",
      "classSimpleName": "HTMLUnknownElement",
      "elementKind": "method",
      "methodName": "isDefaultNamespace",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isDefaultNamespace(java.lang.String) @ akasha.HTMLVideoElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLVideoElement",
      "classSimpleName": "HTMLVideoElement",
      "elementKind": "method",
      "methodName": "isDefaultNamespace",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isDefaultNamespace(java.lang.String) @ akasha.Image",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.Image",
      "classSimpleName": "Image",
      "elementKind": "method",
      "methodName": "isDefaultNamespace",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isDefaultNamespace(java.lang.String) @ akasha.Option",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.Option",
      "classSimpleName": "Option",
      "elementKind": "method",
      "methodName": "isDefaultNamespace",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isDefaultNamespace(java.lang.String) @ akasha.ProcessingInstruction",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.ProcessingInstruction",
      "classSimpleName": "ProcessingInstruction",
      "elementKind": "method",
      "methodName": "isDefaultNamespace",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isDefaultNamespace(java.lang.String) @ akasha.ShadowRoot",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.ShadowRoot",
      "classSimpleName": "ShadowRoot",
      "elementKind": "method",
      "methodName": "isDefaultNamespace",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isDefaultNamespace(java.lang.String) @ akasha.Text",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.Text",
      "classSimpleName": "Text",
      "elementKind": "method",
      "methodName": "isDefaultNamespace",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isDefaultNamespace(java.lang.String) @ akasha.XMLDocument",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.XMLDocument",
      "classSimpleName": "XMLDocument",
      "elementKind": "method",
      "methodName": "isDefaultNamespace",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isDefaultNamespace(java.lang.String) @ akasha.svg.SVGAElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGAElement",
      "classSimpleName": "SVGAElement",
      "elementKind": "method",
      "methodName": "isDefaultNamespace",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isDefaultNamespace(java.lang.String) @ akasha.svg.SVGCircleElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGCircleElement",
      "classSimpleName": "SVGCircleElement",
      "elementKind": "method",
      "methodName": "isDefaultNamespace",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isDefaultNamespace(java.lang.String) @ akasha.svg.SVGClipPathElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGClipPathElement",
      "classSimpleName": "SVGClipPathElement",
      "elementKind": "method",
      "methodName": "isDefaultNamespace",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isDefaultNamespace(java.lang.String) @ akasha.svg.SVGComponentTransferFunctionElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGComponentTransferFunctionElement",
      "classSimpleName": "SVGComponentTransferFunctionElement",
      "elementKind": "method",
      "methodName": "isDefaultNamespace",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isDefaultNamespace(java.lang.String) @ akasha.svg.SVGDefsElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGDefsElement",
      "classSimpleName": "SVGDefsElement",
      "elementKind": "method",
      "methodName": "isDefaultNamespace",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isDefaultNamespace(java.lang.String) @ akasha.svg.SVGDescElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGDescElement",
      "classSimpleName": "SVGDescElement",
      "elementKind": "method",
      "methodName": "isDefaultNamespace",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isDefaultNamespace(java.lang.String) @ akasha.svg.SVGElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGElement",
      "classSimpleName": "SVGElement",
      "elementKind": "method",
      "methodName": "isDefaultNamespace",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isDefaultNamespace(java.lang.String) @ akasha.svg.SVGEllipseElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGEllipseElement",
      "classSimpleName": "SVGEllipseElement",
      "elementKind": "method",
      "methodName": "isDefaultNamespace",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isDefaultNamespace(java.lang.String) @ akasha.svg.SVGFEBlendElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEBlendElement",
      "classSimpleName": "SVGFEBlendElement",
      "elementKind": "method",
      "methodName": "isDefaultNamespace",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isDefaultNamespace(java.lang.String) @ akasha.svg.SVGFEColorMatrixElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEColorMatrixElement",
      "classSimpleName": "SVGFEColorMatrixElement",
      "elementKind": "method",
      "methodName": "isDefaultNamespace",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isDefaultNamespace(java.lang.String) @ akasha.svg.SVGFEComponentTransferElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEComponentTransferElement",
      "classSimpleName": "SVGFEComponentTransferElement",
      "elementKind": "method",
      "methodName": "isDefaultNamespace",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isDefaultNamespace(java.lang.String) @ akasha.svg.SVGFECompositeElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFECompositeElement",
      "classSimpleName": "SVGFECompositeElement",
      "elementKind": "method",
      "methodName": "isDefaultNamespace",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isDefaultNamespace(java.lang.String) @ akasha.svg.SVGFEConvolveMatrixElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEConvolveMatrixElement",
      "classSimpleName": "SVGFEConvolveMatrixElement",
      "elementKind": "method",
      "methodName": "isDefaultNamespace",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isDefaultNamespace(java.lang.String) @ akasha.svg.SVGFEDiffuseLightingElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEDiffuseLightingElement",
      "classSimpleName": "SVGFEDiffuseLightingElement",
      "elementKind": "method",
      "methodName": "isDefaultNamespace",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isDefaultNamespace(java.lang.String) @ akasha.svg.SVGFEDisplacementMapElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEDisplacementMapElement",
      "classSimpleName": "SVGFEDisplacementMapElement",
      "elementKind": "method",
      "methodName": "isDefaultNamespace",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isDefaultNamespace(java.lang.String) @ akasha.svg.SVGFEDistantLightElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEDistantLightElement",
      "classSimpleName": "SVGFEDistantLightElement",
      "elementKind": "method",
      "methodName": "isDefaultNamespace",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isDefaultNamespace(java.lang.String) @ akasha.svg.SVGFEDropShadowElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEDropShadowElement",
      "classSimpleName": "SVGFEDropShadowElement",
      "elementKind": "method",
      "methodName": "isDefaultNamespace",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isDefaultNamespace(java.lang.String) @ akasha.svg.SVGFEFloodElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEFloodElement",
      "classSimpleName": "SVGFEFloodElement",
      "elementKind": "method",
      "methodName": "isDefaultNamespace",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isDefaultNamespace(java.lang.String) @ akasha.svg.SVGFEFuncAElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEFuncAElement",
      "classSimpleName": "SVGFEFuncAElement",
      "elementKind": "method",
      "methodName": "isDefaultNamespace",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isDefaultNamespace(java.lang.String) @ akasha.svg.SVGFEFuncBElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEFuncBElement",
      "classSimpleName": "SVGFEFuncBElement",
      "elementKind": "method",
      "methodName": "isDefaultNamespace",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isDefaultNamespace(java.lang.String) @ akasha.svg.SVGFEFuncGElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEFuncGElement",
      "classSimpleName": "SVGFEFuncGElement",
      "elementKind": "method",
      "methodName": "isDefaultNamespace",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isDefaultNamespace(java.lang.String) @ akasha.svg.SVGFEFuncRElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEFuncRElement",
      "classSimpleName": "SVGFEFuncRElement",
      "elementKind": "method",
      "methodName": "isDefaultNamespace",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isDefaultNamespace(java.lang.String) @ akasha.svg.SVGFEGaussianBlurElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEGaussianBlurElement",
      "classSimpleName": "SVGFEGaussianBlurElement",
      "elementKind": "method",
      "methodName": "isDefaultNamespace",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isDefaultNamespace(java.lang.String) @ akasha.svg.SVGFEImageElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEImageElement",
      "classSimpleName": "SVGFEImageElement",
      "elementKind": "method",
      "methodName": "isDefaultNamespace",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isDefaultNamespace(java.lang.String) @ akasha.svg.SVGFEMergeElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEMergeElement",
      "classSimpleName": "SVGFEMergeElement",
      "elementKind": "method",
      "methodName": "isDefaultNamespace",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isDefaultNamespace(java.lang.String) @ akasha.svg.SVGFEMergeNodeElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEMergeNodeElement",
      "classSimpleName": "SVGFEMergeNodeElement",
      "elementKind": "method",
      "methodName": "isDefaultNamespace",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isDefaultNamespace(java.lang.String) @ akasha.svg.SVGFEMorphologyElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEMorphologyElement",
      "classSimpleName": "SVGFEMorphologyElement",
      "elementKind": "method",
      "methodName": "isDefaultNamespace",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isDefaultNamespace(java.lang.String) @ akasha.svg.SVGFEOffsetElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEOffsetElement",
      "classSimpleName": "SVGFEOffsetElement",
      "elementKind": "method",
      "methodName": "isDefaultNamespace",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isDefaultNamespace(java.lang.String) @ akasha.svg.SVGFEPointLightElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEPointLightElement",
      "classSimpleName": "SVGFEPointLightElement",
      "elementKind": "method",
      "methodName": "isDefaultNamespace",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isDefaultNamespace(java.lang.String) @ akasha.svg.SVGFESpecularLightingElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFESpecularLightingElement",
      "classSimpleName": "SVGFESpecularLightingElement",
      "elementKind": "method",
      "methodName": "isDefaultNamespace",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isDefaultNamespace(java.lang.String) @ akasha.svg.SVGFESpotLightElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFESpotLightElement",
      "classSimpleName": "SVGFESpotLightElement",
      "elementKind": "method",
      "methodName": "isDefaultNamespace",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isDefaultNamespace(java.lang.String) @ akasha.svg.SVGFETileElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFETileElement",
      "classSimpleName": "SVGFETileElement",
      "elementKind": "method",
      "methodName": "isDefaultNamespace",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isDefaultNamespace(java.lang.String) @ akasha.svg.SVGFETurbulenceElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFETurbulenceElement",
      "classSimpleName": "SVGFETurbulenceElement",
      "elementKind": "method",
      "methodName": "isDefaultNamespace",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isDefaultNamespace(java.lang.String) @ akasha.svg.SVGFilterElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFilterElement",
      "classSimpleName": "SVGFilterElement",
      "elementKind": "method",
      "methodName": "isDefaultNamespace",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isDefaultNamespace(java.lang.String) @ akasha.svg.SVGForeignObjectElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGForeignObjectElement",
      "classSimpleName": "SVGForeignObjectElement",
      "elementKind": "method",
      "methodName": "isDefaultNamespace",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isDefaultNamespace(java.lang.String) @ akasha.svg.SVGGElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGGElement",
      "classSimpleName": "SVGGElement",
      "elementKind": "method",
      "methodName": "isDefaultNamespace",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isDefaultNamespace(java.lang.String) @ akasha.svg.SVGGeometryElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGGeometryElement",
      "classSimpleName": "SVGGeometryElement",
      "elementKind": "method",
      "methodName": "isDefaultNamespace",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isDefaultNamespace(java.lang.String) @ akasha.svg.SVGGradientElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGGradientElement",
      "classSimpleName": "SVGGradientElement",
      "elementKind": "method",
      "methodName": "isDefaultNamespace",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isDefaultNamespace(java.lang.String) @ akasha.svg.SVGGraphicsElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGGraphicsElement",
      "classSimpleName": "SVGGraphicsElement",
      "elementKind": "method",
      "methodName": "isDefaultNamespace",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isDefaultNamespace(java.lang.String) @ akasha.svg.SVGImageElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGImageElement",
      "classSimpleName": "SVGImageElement",
      "elementKind": "method",
      "methodName": "isDefaultNamespace",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isDefaultNamespace(java.lang.String) @ akasha.svg.SVGLineElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGLineElement",
      "classSimpleName": "SVGLineElement",
      "elementKind": "method",
      "methodName": "isDefaultNamespace",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isDefaultNamespace(java.lang.String) @ akasha.svg.SVGLinearGradientElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGLinearGradientElement",
      "classSimpleName": "SVGLinearGradientElement",
      "elementKind": "method",
      "methodName": "isDefaultNamespace",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isDefaultNamespace(java.lang.String) @ akasha.svg.SVGMarkerElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGMarkerElement",
      "classSimpleName": "SVGMarkerElement",
      "elementKind": "method",
      "methodName": "isDefaultNamespace",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isDefaultNamespace(java.lang.String) @ akasha.svg.SVGMaskElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGMaskElement",
      "classSimpleName": "SVGMaskElement",
      "elementKind": "method",
      "methodName": "isDefaultNamespace",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isDefaultNamespace(java.lang.String) @ akasha.svg.SVGMetadataElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGMetadataElement",
      "classSimpleName": "SVGMetadataElement",
      "elementKind": "method",
      "methodName": "isDefaultNamespace",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isDefaultNamespace(java.lang.String) @ akasha.svg.SVGPathElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGPathElement",
      "classSimpleName": "SVGPathElement",
      "elementKind": "method",
      "methodName": "isDefaultNamespace",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isDefaultNamespace(java.lang.String) @ akasha.svg.SVGPatternElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGPatternElement",
      "classSimpleName": "SVGPatternElement",
      "elementKind": "method",
      "methodName": "isDefaultNamespace",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isDefaultNamespace(java.lang.String) @ akasha.svg.SVGPolygonElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGPolygonElement",
      "classSimpleName": "SVGPolygonElement",
      "elementKind": "method",
      "methodName": "isDefaultNamespace",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isDefaultNamespace(java.lang.String) @ akasha.svg.SVGPolylineElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGPolylineElement",
      "classSimpleName": "SVGPolylineElement",
      "elementKind": "method",
      "methodName": "isDefaultNamespace",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isDefaultNamespace(java.lang.String) @ akasha.svg.SVGRadialGradientElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGRadialGradientElement",
      "classSimpleName": "SVGRadialGradientElement",
      "elementKind": "method",
      "methodName": "isDefaultNamespace",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isDefaultNamespace(java.lang.String) @ akasha.svg.SVGRectElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGRectElement",
      "classSimpleName": "SVGRectElement",
      "elementKind": "method",
      "methodName": "isDefaultNamespace",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isDefaultNamespace(java.lang.String) @ akasha.svg.SVGSVGElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGSVGElement",
      "classSimpleName": "SVGSVGElement",
      "elementKind": "method",
      "methodName": "isDefaultNamespace",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isDefaultNamespace(java.lang.String) @ akasha.svg.SVGScriptElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGScriptElement",
      "classSimpleName": "SVGScriptElement",
      "elementKind": "method",
      "methodName": "isDefaultNamespace",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isDefaultNamespace(java.lang.String) @ akasha.svg.SVGStopElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGStopElement",
      "classSimpleName": "SVGStopElement",
      "elementKind": "method",
      "methodName": "isDefaultNamespace",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isDefaultNamespace(java.lang.String) @ akasha.svg.SVGStyleElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGStyleElement",
      "classSimpleName": "SVGStyleElement",
      "elementKind": "method",
      "methodName": "isDefaultNamespace",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isDefaultNamespace(java.lang.String) @ akasha.svg.SVGSwitchElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGSwitchElement",
      "classSimpleName": "SVGSwitchElement",
      "elementKind": "method",
      "methodName": "isDefaultNamespace",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isDefaultNamespace(java.lang.String) @ akasha.svg.SVGSymbolElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGSymbolElement",
      "classSimpleName": "SVGSymbolElement",
      "elementKind": "method",
      "methodName": "isDefaultNamespace",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isDefaultNamespace(java.lang.String) @ akasha.svg.SVGTSpanElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGTSpanElement",
      "classSimpleName": "SVGTSpanElement",
      "elementKind": "method",
      "methodName": "isDefaultNamespace",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isDefaultNamespace(java.lang.String) @ akasha.svg.SVGTextContentElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGTextContentElement",
      "classSimpleName": "SVGTextContentElement",
      "elementKind": "method",
      "methodName": "isDefaultNamespace",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isDefaultNamespace(java.lang.String) @ akasha.svg.SVGTextElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGTextElement",
      "classSimpleName": "SVGTextElement",
      "elementKind": "method",
      "methodName": "isDefaultNamespace",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isDefaultNamespace(java.lang.String) @ akasha.svg.SVGTextPathElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGTextPathElement",
      "classSimpleName": "SVGTextPathElement",
      "elementKind": "method",
      "methodName": "isDefaultNamespace",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isDefaultNamespace(java.lang.String) @ akasha.svg.SVGTextPositioningElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGTextPositioningElement",
      "classSimpleName": "SVGTextPositioningElement",
      "elementKind": "method",
      "methodName": "isDefaultNamespace",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isDefaultNamespace(java.lang.String) @ akasha.svg.SVGTitleElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGTitleElement",
      "classSimpleName": "SVGTitleElement",
      "elementKind": "method",
      "methodName": "isDefaultNamespace",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isDefaultNamespace(java.lang.String) @ akasha.svg.SVGUnknownElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGUnknownElement",
      "classSimpleName": "SVGUnknownElement",
      "elementKind": "method",
      "methodName": "isDefaultNamespace",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isDefaultNamespace(java.lang.String) @ akasha.svg.SVGUseElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGUseElement",
      "classSimpleName": "SVGUseElement",
      "elementKind": "method",
      "methodName": "isDefaultNamespace",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isDefaultNamespace(java.lang.String) @ akasha.svg.SVGUseElementShadowRoot",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGUseElementShadowRoot",
      "classSimpleName": "SVGUseElementShadowRoot",
      "elementKind": "method",
      "methodName": "isDefaultNamespace",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isDefaultNamespace(java.lang.String) @ akasha.svg.SVGViewElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGViewElement",
      "classSimpleName": "SVGViewElement",
      "elementKind": "method",
      "methodName": "isDefaultNamespace",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isDefaultNamespace(java.lang.String)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.Node",
      "classSimpleName": "Node",
      "elementKind": "method",
      "methodName": "isDefaultNamespace",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isEqualNode(akasha.Node) @ akasha.Attr",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.Attr",
      "classSimpleName": "Attr",
      "elementKind": "method",
      "methodName": "isEqualNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isEqualNode(akasha.Node) @ akasha.Audio",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.Audio",
      "classSimpleName": "Audio",
      "elementKind": "method",
      "methodName": "isEqualNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isEqualNode(akasha.Node) @ akasha.CDATASection",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.CDATASection",
      "classSimpleName": "CDATASection",
      "elementKind": "method",
      "methodName": "isEqualNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isEqualNode(akasha.Node) @ akasha.CharacterData",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.CharacterData",
      "classSimpleName": "CharacterData",
      "elementKind": "method",
      "methodName": "isEqualNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isEqualNode(akasha.Node) @ akasha.Comment",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.Comment",
      "classSimpleName": "Comment",
      "elementKind": "method",
      "methodName": "isEqualNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isEqualNode(akasha.Node) @ akasha.Document",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.Document",
      "classSimpleName": "Document",
      "elementKind": "method",
      "methodName": "isEqualNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isEqualNode(akasha.Node) @ akasha.DocumentFragment",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.DocumentFragment",
      "classSimpleName": "DocumentFragment",
      "elementKind": "method",
      "methodName": "isEqualNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isEqualNode(akasha.Node) @ akasha.DocumentType",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.DocumentType",
      "classSimpleName": "DocumentType",
      "elementKind": "method",
      "methodName": "isEqualNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isEqualNode(akasha.Node) @ akasha.Element",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.Element",
      "classSimpleName": "Element",
      "elementKind": "method",
      "methodName": "isEqualNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isEqualNode(akasha.Node) @ akasha.HTMLAnchorElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLAnchorElement",
      "classSimpleName": "HTMLAnchorElement",
      "elementKind": "method",
      "methodName": "isEqualNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isEqualNode(akasha.Node) @ akasha.HTMLAreaElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLAreaElement",
      "classSimpleName": "HTMLAreaElement",
      "elementKind": "method",
      "methodName": "isEqualNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isEqualNode(akasha.Node) @ akasha.HTMLAudioElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLAudioElement",
      "classSimpleName": "HTMLAudioElement",
      "elementKind": "method",
      "methodName": "isEqualNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isEqualNode(akasha.Node) @ akasha.HTMLBRElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLBRElement",
      "classSimpleName": "HTMLBRElement",
      "elementKind": "method",
      "methodName": "isEqualNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isEqualNode(akasha.Node) @ akasha.HTMLBaseElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLBaseElement",
      "classSimpleName": "HTMLBaseElement",
      "elementKind": "method",
      "methodName": "isEqualNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isEqualNode(akasha.Node) @ akasha.HTMLBodyElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLBodyElement",
      "classSimpleName": "HTMLBodyElement",
      "elementKind": "method",
      "methodName": "isEqualNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isEqualNode(akasha.Node) @ akasha.HTMLButtonElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLButtonElement",
      "classSimpleName": "HTMLButtonElement",
      "elementKind": "method",
      "methodName": "isEqualNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isEqualNode(akasha.Node) @ akasha.HTMLCanvasElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLCanvasElement",
      "classSimpleName": "HTMLCanvasElement",
      "elementKind": "method",
      "methodName": "isEqualNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isEqualNode(akasha.Node) @ akasha.HTMLDListElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLDListElement",
      "classSimpleName": "HTMLDListElement",
      "elementKind": "method",
      "methodName": "isEqualNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isEqualNode(akasha.Node) @ akasha.HTMLDataElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLDataElement",
      "classSimpleName": "HTMLDataElement",
      "elementKind": "method",
      "methodName": "isEqualNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isEqualNode(akasha.Node) @ akasha.HTMLDataListElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLDataListElement",
      "classSimpleName": "HTMLDataListElement",
      "elementKind": "method",
      "methodName": "isEqualNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isEqualNode(akasha.Node) @ akasha.HTMLDetailsElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLDetailsElement",
      "classSimpleName": "HTMLDetailsElement",
      "elementKind": "method",
      "methodName": "isEqualNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isEqualNode(akasha.Node) @ akasha.HTMLDialogElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLDialogElement",
      "classSimpleName": "HTMLDialogElement",
      "elementKind": "method",
      "methodName": "isEqualNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isEqualNode(akasha.Node) @ akasha.HTMLDirectoryElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLDirectoryElement",
      "classSimpleName": "HTMLDirectoryElement",
      "elementKind": "method",
      "methodName": "isEqualNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isEqualNode(akasha.Node) @ akasha.HTMLDivElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLDivElement",
      "classSimpleName": "HTMLDivElement",
      "elementKind": "method",
      "methodName": "isEqualNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isEqualNode(akasha.Node) @ akasha.HTMLElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLElement",
      "classSimpleName": "HTMLElement",
      "elementKind": "method",
      "methodName": "isEqualNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isEqualNode(akasha.Node) @ akasha.HTMLEmbedElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLEmbedElement",
      "classSimpleName": "HTMLEmbedElement",
      "elementKind": "method",
      "methodName": "isEqualNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isEqualNode(akasha.Node) @ akasha.HTMLFieldSetElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLFieldSetElement",
      "classSimpleName": "HTMLFieldSetElement",
      "elementKind": "method",
      "methodName": "isEqualNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isEqualNode(akasha.Node) @ akasha.HTMLFontElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLFontElement",
      "classSimpleName": "HTMLFontElement",
      "elementKind": "method",
      "methodName": "isEqualNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isEqualNode(akasha.Node) @ akasha.HTMLFormElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLFormElement",
      "classSimpleName": "HTMLFormElement",
      "elementKind": "method",
      "methodName": "isEqualNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isEqualNode(akasha.Node) @ akasha.HTMLFrameElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLFrameElement",
      "classSimpleName": "HTMLFrameElement",
      "elementKind": "method",
      "methodName": "isEqualNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isEqualNode(akasha.Node) @ akasha.HTMLFrameSetElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLFrameSetElement",
      "classSimpleName": "HTMLFrameSetElement",
      "elementKind": "method",
      "methodName": "isEqualNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isEqualNode(akasha.Node) @ akasha.HTMLHRElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLHRElement",
      "classSimpleName": "HTMLHRElement",
      "elementKind": "method",
      "methodName": "isEqualNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isEqualNode(akasha.Node) @ akasha.HTMLHeadElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLHeadElement",
      "classSimpleName": "HTMLHeadElement",
      "elementKind": "method",
      "methodName": "isEqualNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isEqualNode(akasha.Node) @ akasha.HTMLHeadingElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLHeadingElement",
      "classSimpleName": "HTMLHeadingElement",
      "elementKind": "method",
      "methodName": "isEqualNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isEqualNode(akasha.Node) @ akasha.HTMLHtmlElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLHtmlElement",
      "classSimpleName": "HTMLHtmlElement",
      "elementKind": "method",
      "methodName": "isEqualNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isEqualNode(akasha.Node) @ akasha.HTMLIFrameElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLIFrameElement",
      "classSimpleName": "HTMLIFrameElement",
      "elementKind": "method",
      "methodName": "isEqualNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isEqualNode(akasha.Node) @ akasha.HTMLImageElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLImageElement",
      "classSimpleName": "HTMLImageElement",
      "elementKind": "method",
      "methodName": "isEqualNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isEqualNode(akasha.Node) @ akasha.HTMLInputElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLInputElement",
      "classSimpleName": "HTMLInputElement",
      "elementKind": "method",
      "methodName": "isEqualNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isEqualNode(akasha.Node) @ akasha.HTMLLIElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLLIElement",
      "classSimpleName": "HTMLLIElement",
      "elementKind": "method",
      "methodName": "isEqualNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isEqualNode(akasha.Node) @ akasha.HTMLLabelElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLLabelElement",
      "classSimpleName": "HTMLLabelElement",
      "elementKind": "method",
      "methodName": "isEqualNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isEqualNode(akasha.Node) @ akasha.HTMLLegendElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLLegendElement",
      "classSimpleName": "HTMLLegendElement",
      "elementKind": "method",
      "methodName": "isEqualNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isEqualNode(akasha.Node) @ akasha.HTMLLinkElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLLinkElement",
      "classSimpleName": "HTMLLinkElement",
      "elementKind": "method",
      "methodName": "isEqualNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isEqualNode(akasha.Node) @ akasha.HTMLMapElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLMapElement",
      "classSimpleName": "HTMLMapElement",
      "elementKind": "method",
      "methodName": "isEqualNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isEqualNode(akasha.Node) @ akasha.HTMLMarqueeElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLMarqueeElement",
      "classSimpleName": "HTMLMarqueeElement",
      "elementKind": "method",
      "methodName": "isEqualNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isEqualNode(akasha.Node) @ akasha.HTMLMediaElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLMediaElement",
      "classSimpleName": "HTMLMediaElement",
      "elementKind": "method",
      "methodName": "isEqualNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isEqualNode(akasha.Node) @ akasha.HTMLMenuElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLMenuElement",
      "classSimpleName": "HTMLMenuElement",
      "elementKind": "method",
      "methodName": "isEqualNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isEqualNode(akasha.Node) @ akasha.HTMLMetaElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLMetaElement",
      "classSimpleName": "HTMLMetaElement",
      "elementKind": "method",
      "methodName": "isEqualNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isEqualNode(akasha.Node) @ akasha.HTMLMeterElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLMeterElement",
      "classSimpleName": "HTMLMeterElement",
      "elementKind": "method",
      "methodName": "isEqualNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isEqualNode(akasha.Node) @ akasha.HTMLModElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLModElement",
      "classSimpleName": "HTMLModElement",
      "elementKind": "method",
      "methodName": "isEqualNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isEqualNode(akasha.Node) @ akasha.HTMLOListElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLOListElement",
      "classSimpleName": "HTMLOListElement",
      "elementKind": "method",
      "methodName": "isEqualNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isEqualNode(akasha.Node) @ akasha.HTMLObjectElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLObjectElement",
      "classSimpleName": "HTMLObjectElement",
      "elementKind": "method",
      "methodName": "isEqualNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isEqualNode(akasha.Node) @ akasha.HTMLOptGroupElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLOptGroupElement",
      "classSimpleName": "HTMLOptGroupElement",
      "elementKind": "method",
      "methodName": "isEqualNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isEqualNode(akasha.Node) @ akasha.HTMLOptionElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLOptionElement",
      "classSimpleName": "HTMLOptionElement",
      "elementKind": "method",
      "methodName": "isEqualNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isEqualNode(akasha.Node) @ akasha.HTMLOutputElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLOutputElement",
      "classSimpleName": "HTMLOutputElement",
      "elementKind": "method",
      "methodName": "isEqualNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isEqualNode(akasha.Node) @ akasha.HTMLParagraphElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLParagraphElement",
      "classSimpleName": "HTMLParagraphElement",
      "elementKind": "method",
      "methodName": "isEqualNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isEqualNode(akasha.Node) @ akasha.HTMLParamElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLParamElement",
      "classSimpleName": "HTMLParamElement",
      "elementKind": "method",
      "methodName": "isEqualNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isEqualNode(akasha.Node) @ akasha.HTMLPictureElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLPictureElement",
      "classSimpleName": "HTMLPictureElement",
      "elementKind": "method",
      "methodName": "isEqualNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isEqualNode(akasha.Node) @ akasha.HTMLPreElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLPreElement",
      "classSimpleName": "HTMLPreElement",
      "elementKind": "method",
      "methodName": "isEqualNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isEqualNode(akasha.Node) @ akasha.HTMLProgressElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLProgressElement",
      "classSimpleName": "HTMLProgressElement",
      "elementKind": "method",
      "methodName": "isEqualNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isEqualNode(akasha.Node) @ akasha.HTMLQuoteElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLQuoteElement",
      "classSimpleName": "HTMLQuoteElement",
      "elementKind": "method",
      "methodName": "isEqualNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isEqualNode(akasha.Node) @ akasha.HTMLScriptElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLScriptElement",
      "classSimpleName": "HTMLScriptElement",
      "elementKind": "method",
      "methodName": "isEqualNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isEqualNode(akasha.Node) @ akasha.HTMLSelectElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLSelectElement",
      "classSimpleName": "HTMLSelectElement",
      "elementKind": "method",
      "methodName": "isEqualNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isEqualNode(akasha.Node) @ akasha.HTMLSlotElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLSlotElement",
      "classSimpleName": "HTMLSlotElement",
      "elementKind": "method",
      "methodName": "isEqualNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isEqualNode(akasha.Node) @ akasha.HTMLSourceElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLSourceElement",
      "classSimpleName": "HTMLSourceElement",
      "elementKind": "method",
      "methodName": "isEqualNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isEqualNode(akasha.Node) @ akasha.HTMLSpanElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLSpanElement",
      "classSimpleName": "HTMLSpanElement",
      "elementKind": "method",
      "methodName": "isEqualNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isEqualNode(akasha.Node) @ akasha.HTMLStyleElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLStyleElement",
      "classSimpleName": "HTMLStyleElement",
      "elementKind": "method",
      "methodName": "isEqualNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isEqualNode(akasha.Node) @ akasha.HTMLTableCaptionElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLTableCaptionElement",
      "classSimpleName": "HTMLTableCaptionElement",
      "elementKind": "method",
      "methodName": "isEqualNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isEqualNode(akasha.Node) @ akasha.HTMLTableCellElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLTableCellElement",
      "classSimpleName": "HTMLTableCellElement",
      "elementKind": "method",
      "methodName": "isEqualNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isEqualNode(akasha.Node) @ akasha.HTMLTableColElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLTableColElement",
      "classSimpleName": "HTMLTableColElement",
      "elementKind": "method",
      "methodName": "isEqualNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isEqualNode(akasha.Node) @ akasha.HTMLTableElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLTableElement",
      "classSimpleName": "HTMLTableElement",
      "elementKind": "method",
      "methodName": "isEqualNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isEqualNode(akasha.Node) @ akasha.HTMLTableRowElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLTableRowElement",
      "classSimpleName": "HTMLTableRowElement",
      "elementKind": "method",
      "methodName": "isEqualNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isEqualNode(akasha.Node) @ akasha.HTMLTableSectionElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLTableSectionElement",
      "classSimpleName": "HTMLTableSectionElement",
      "elementKind": "method",
      "methodName": "isEqualNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isEqualNode(akasha.Node) @ akasha.HTMLTemplateElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLTemplateElement",
      "classSimpleName": "HTMLTemplateElement",
      "elementKind": "method",
      "methodName": "isEqualNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isEqualNode(akasha.Node) @ akasha.HTMLTextAreaElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLTextAreaElement",
      "classSimpleName": "HTMLTextAreaElement",
      "elementKind": "method",
      "methodName": "isEqualNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isEqualNode(akasha.Node) @ akasha.HTMLTimeElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLTimeElement",
      "classSimpleName": "HTMLTimeElement",
      "elementKind": "method",
      "methodName": "isEqualNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isEqualNode(akasha.Node) @ akasha.HTMLTitleElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLTitleElement",
      "classSimpleName": "HTMLTitleElement",
      "elementKind": "method",
      "methodName": "isEqualNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isEqualNode(akasha.Node) @ akasha.HTMLTrackElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLTrackElement",
      "classSimpleName": "HTMLTrackElement",
      "elementKind": "method",
      "methodName": "isEqualNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isEqualNode(akasha.Node) @ akasha.HTMLUListElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLUListElement",
      "classSimpleName": "HTMLUListElement",
      "elementKind": "method",
      "methodName": "isEqualNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isEqualNode(akasha.Node) @ akasha.HTMLUnknownElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLUnknownElement",
      "classSimpleName": "HTMLUnknownElement",
      "elementKind": "method",
      "methodName": "isEqualNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isEqualNode(akasha.Node) @ akasha.HTMLVideoElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLVideoElement",
      "classSimpleName": "HTMLVideoElement",
      "elementKind": "method",
      "methodName": "isEqualNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isEqualNode(akasha.Node) @ akasha.Image",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.Image",
      "classSimpleName": "Image",
      "elementKind": "method",
      "methodName": "isEqualNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isEqualNode(akasha.Node) @ akasha.Option",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.Option",
      "classSimpleName": "Option",
      "elementKind": "method",
      "methodName": "isEqualNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isEqualNode(akasha.Node) @ akasha.ProcessingInstruction",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.ProcessingInstruction",
      "classSimpleName": "ProcessingInstruction",
      "elementKind": "method",
      "methodName": "isEqualNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isEqualNode(akasha.Node) @ akasha.ShadowRoot",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.ShadowRoot",
      "classSimpleName": "ShadowRoot",
      "elementKind": "method",
      "methodName": "isEqualNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isEqualNode(akasha.Node) @ akasha.Text",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.Text",
      "classSimpleName": "Text",
      "elementKind": "method",
      "methodName": "isEqualNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isEqualNode(akasha.Node) @ akasha.XMLDocument",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.XMLDocument",
      "classSimpleName": "XMLDocument",
      "elementKind": "method",
      "methodName": "isEqualNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isEqualNode(akasha.Node) @ akasha.svg.SVGAElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGAElement",
      "classSimpleName": "SVGAElement",
      "elementKind": "method",
      "methodName": "isEqualNode",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isEqualNode(akasha.Node) @ akasha.svg.SVGCircleElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGCircleElement",
      "classSimpleName": "SVGCircleElement",
      "elementKind": "method",
      "methodName": "isEqualNode",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isEqualNode(akasha.Node) @ akasha.svg.SVGClipPathElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGClipPathElement",
      "classSimpleName": "SVGClipPathElement",
      "elementKind": "method",
      "methodName": "isEqualNode",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isEqualNode(akasha.Node) @ akasha.svg.SVGComponentTransferFunctionElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGComponentTransferFunctionElement",
      "classSimpleName": "SVGComponentTransferFunctionElement",
      "elementKind": "method",
      "methodName": "isEqualNode",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isEqualNode(akasha.Node) @ akasha.svg.SVGDefsElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGDefsElement",
      "classSimpleName": "SVGDefsElement",
      "elementKind": "method",
      "methodName": "isEqualNode",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isEqualNode(akasha.Node) @ akasha.svg.SVGDescElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGDescElement",
      "classSimpleName": "SVGDescElement",
      "elementKind": "method",
      "methodName": "isEqualNode",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isEqualNode(akasha.Node) @ akasha.svg.SVGElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGElement",
      "classSimpleName": "SVGElement",
      "elementKind": "method",
      "methodName": "isEqualNode",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isEqualNode(akasha.Node) @ akasha.svg.SVGEllipseElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGEllipseElement",
      "classSimpleName": "SVGEllipseElement",
      "elementKind": "method",
      "methodName": "isEqualNode",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isEqualNode(akasha.Node) @ akasha.svg.SVGFEBlendElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEBlendElement",
      "classSimpleName": "SVGFEBlendElement",
      "elementKind": "method",
      "methodName": "isEqualNode",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isEqualNode(akasha.Node) @ akasha.svg.SVGFEColorMatrixElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEColorMatrixElement",
      "classSimpleName": "SVGFEColorMatrixElement",
      "elementKind": "method",
      "methodName": "isEqualNode",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isEqualNode(akasha.Node) @ akasha.svg.SVGFEComponentTransferElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEComponentTransferElement",
      "classSimpleName": "SVGFEComponentTransferElement",
      "elementKind": "method",
      "methodName": "isEqualNode",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isEqualNode(akasha.Node) @ akasha.svg.SVGFECompositeElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFECompositeElement",
      "classSimpleName": "SVGFECompositeElement",
      "elementKind": "method",
      "methodName": "isEqualNode",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isEqualNode(akasha.Node) @ akasha.svg.SVGFEConvolveMatrixElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEConvolveMatrixElement",
      "classSimpleName": "SVGFEConvolveMatrixElement",
      "elementKind": "method",
      "methodName": "isEqualNode",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isEqualNode(akasha.Node) @ akasha.svg.SVGFEDiffuseLightingElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEDiffuseLightingElement",
      "classSimpleName": "SVGFEDiffuseLightingElement",
      "elementKind": "method",
      "methodName": "isEqualNode",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isEqualNode(akasha.Node) @ akasha.svg.SVGFEDisplacementMapElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEDisplacementMapElement",
      "classSimpleName": "SVGFEDisplacementMapElement",
      "elementKind": "method",
      "methodName": "isEqualNode",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isEqualNode(akasha.Node) @ akasha.svg.SVGFEDistantLightElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEDistantLightElement",
      "classSimpleName": "SVGFEDistantLightElement",
      "elementKind": "method",
      "methodName": "isEqualNode",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isEqualNode(akasha.Node) @ akasha.svg.SVGFEDropShadowElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEDropShadowElement",
      "classSimpleName": "SVGFEDropShadowElement",
      "elementKind": "method",
      "methodName": "isEqualNode",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isEqualNode(akasha.Node) @ akasha.svg.SVGFEFloodElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEFloodElement",
      "classSimpleName": "SVGFEFloodElement",
      "elementKind": "method",
      "methodName": "isEqualNode",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isEqualNode(akasha.Node) @ akasha.svg.SVGFEFuncAElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEFuncAElement",
      "classSimpleName": "SVGFEFuncAElement",
      "elementKind": "method",
      "methodName": "isEqualNode",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isEqualNode(akasha.Node) @ akasha.svg.SVGFEFuncBElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEFuncBElement",
      "classSimpleName": "SVGFEFuncBElement",
      "elementKind": "method",
      "methodName": "isEqualNode",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isEqualNode(akasha.Node) @ akasha.svg.SVGFEFuncGElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEFuncGElement",
      "classSimpleName": "SVGFEFuncGElement",
      "elementKind": "method",
      "methodName": "isEqualNode",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isEqualNode(akasha.Node) @ akasha.svg.SVGFEFuncRElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEFuncRElement",
      "classSimpleName": "SVGFEFuncRElement",
      "elementKind": "method",
      "methodName": "isEqualNode",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isEqualNode(akasha.Node) @ akasha.svg.SVGFEGaussianBlurElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEGaussianBlurElement",
      "classSimpleName": "SVGFEGaussianBlurElement",
      "elementKind": "method",
      "methodName": "isEqualNode",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isEqualNode(akasha.Node) @ akasha.svg.SVGFEImageElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEImageElement",
      "classSimpleName": "SVGFEImageElement",
      "elementKind": "method",
      "methodName": "isEqualNode",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isEqualNode(akasha.Node) @ akasha.svg.SVGFEMergeElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEMergeElement",
      "classSimpleName": "SVGFEMergeElement",
      "elementKind": "method",
      "methodName": "isEqualNode",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isEqualNode(akasha.Node) @ akasha.svg.SVGFEMergeNodeElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEMergeNodeElement",
      "classSimpleName": "SVGFEMergeNodeElement",
      "elementKind": "method",
      "methodName": "isEqualNode",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isEqualNode(akasha.Node) @ akasha.svg.SVGFEMorphologyElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEMorphologyElement",
      "classSimpleName": "SVGFEMorphologyElement",
      "elementKind": "method",
      "methodName": "isEqualNode",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isEqualNode(akasha.Node) @ akasha.svg.SVGFEOffsetElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEOffsetElement",
      "classSimpleName": "SVGFEOffsetElement",
      "elementKind": "method",
      "methodName": "isEqualNode",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isEqualNode(akasha.Node) @ akasha.svg.SVGFEPointLightElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEPointLightElement",
      "classSimpleName": "SVGFEPointLightElement",
      "elementKind": "method",
      "methodName": "isEqualNode",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isEqualNode(akasha.Node) @ akasha.svg.SVGFESpecularLightingElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFESpecularLightingElement",
      "classSimpleName": "SVGFESpecularLightingElement",
      "elementKind": "method",
      "methodName": "isEqualNode",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isEqualNode(akasha.Node) @ akasha.svg.SVGFESpotLightElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFESpotLightElement",
      "classSimpleName": "SVGFESpotLightElement",
      "elementKind": "method",
      "methodName": "isEqualNode",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isEqualNode(akasha.Node) @ akasha.svg.SVGFETileElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFETileElement",
      "classSimpleName": "SVGFETileElement",
      "elementKind": "method",
      "methodName": "isEqualNode",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isEqualNode(akasha.Node) @ akasha.svg.SVGFETurbulenceElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFETurbulenceElement",
      "classSimpleName": "SVGFETurbulenceElement",
      "elementKind": "method",
      "methodName": "isEqualNode",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isEqualNode(akasha.Node) @ akasha.svg.SVGFilterElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFilterElement",
      "classSimpleName": "SVGFilterElement",
      "elementKind": "method",
      "methodName": "isEqualNode",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isEqualNode(akasha.Node) @ akasha.svg.SVGForeignObjectElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGForeignObjectElement",
      "classSimpleName": "SVGForeignObjectElement",
      "elementKind": "method",
      "methodName": "isEqualNode",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isEqualNode(akasha.Node) @ akasha.svg.SVGGElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGGElement",
      "classSimpleName": "SVGGElement",
      "elementKind": "method",
      "methodName": "isEqualNode",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isEqualNode(akasha.Node) @ akasha.svg.SVGGeometryElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGGeometryElement",
      "classSimpleName": "SVGGeometryElement",
      "elementKind": "method",
      "methodName": "isEqualNode",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isEqualNode(akasha.Node) @ akasha.svg.SVGGradientElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGGradientElement",
      "classSimpleName": "SVGGradientElement",
      "elementKind": "method",
      "methodName": "isEqualNode",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isEqualNode(akasha.Node) @ akasha.svg.SVGGraphicsElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGGraphicsElement",
      "classSimpleName": "SVGGraphicsElement",
      "elementKind": "method",
      "methodName": "isEqualNode",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isEqualNode(akasha.Node) @ akasha.svg.SVGImageElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGImageElement",
      "classSimpleName": "SVGImageElement",
      "elementKind": "method",
      "methodName": "isEqualNode",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isEqualNode(akasha.Node) @ akasha.svg.SVGLineElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGLineElement",
      "classSimpleName": "SVGLineElement",
      "elementKind": "method",
      "methodName": "isEqualNode",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isEqualNode(akasha.Node) @ akasha.svg.SVGLinearGradientElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGLinearGradientElement",
      "classSimpleName": "SVGLinearGradientElement",
      "elementKind": "method",
      "methodName": "isEqualNode",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isEqualNode(akasha.Node) @ akasha.svg.SVGMarkerElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGMarkerElement",
      "classSimpleName": "SVGMarkerElement",
      "elementKind": "method",
      "methodName": "isEqualNode",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isEqualNode(akasha.Node) @ akasha.svg.SVGMaskElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGMaskElement",
      "classSimpleName": "SVGMaskElement",
      "elementKind": "method",
      "methodName": "isEqualNode",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isEqualNode(akasha.Node) @ akasha.svg.SVGMetadataElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGMetadataElement",
      "classSimpleName": "SVGMetadataElement",
      "elementKind": "method",
      "methodName": "isEqualNode",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isEqualNode(akasha.Node) @ akasha.svg.SVGPathElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGPathElement",
      "classSimpleName": "SVGPathElement",
      "elementKind": "method",
      "methodName": "isEqualNode",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isEqualNode(akasha.Node) @ akasha.svg.SVGPatternElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGPatternElement",
      "classSimpleName": "SVGPatternElement",
      "elementKind": "method",
      "methodName": "isEqualNode",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isEqualNode(akasha.Node) @ akasha.svg.SVGPolygonElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGPolygonElement",
      "classSimpleName": "SVGPolygonElement",
      "elementKind": "method",
      "methodName": "isEqualNode",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isEqualNode(akasha.Node) @ akasha.svg.SVGPolylineElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGPolylineElement",
      "classSimpleName": "SVGPolylineElement",
      "elementKind": "method",
      "methodName": "isEqualNode",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isEqualNode(akasha.Node) @ akasha.svg.SVGRadialGradientElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGRadialGradientElement",
      "classSimpleName": "SVGRadialGradientElement",
      "elementKind": "method",
      "methodName": "isEqualNode",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isEqualNode(akasha.Node) @ akasha.svg.SVGRectElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGRectElement",
      "classSimpleName": "SVGRectElement",
      "elementKind": "method",
      "methodName": "isEqualNode",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isEqualNode(akasha.Node) @ akasha.svg.SVGSVGElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGSVGElement",
      "classSimpleName": "SVGSVGElement",
      "elementKind": "method",
      "methodName": "isEqualNode",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isEqualNode(akasha.Node) @ akasha.svg.SVGScriptElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGScriptElement",
      "classSimpleName": "SVGScriptElement",
      "elementKind": "method",
      "methodName": "isEqualNode",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isEqualNode(akasha.Node) @ akasha.svg.SVGStopElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGStopElement",
      "classSimpleName": "SVGStopElement",
      "elementKind": "method",
      "methodName": "isEqualNode",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isEqualNode(akasha.Node) @ akasha.svg.SVGStyleElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGStyleElement",
      "classSimpleName": "SVGStyleElement",
      "elementKind": "method",
      "methodName": "isEqualNode",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isEqualNode(akasha.Node) @ akasha.svg.SVGSwitchElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGSwitchElement",
      "classSimpleName": "SVGSwitchElement",
      "elementKind": "method",
      "methodName": "isEqualNode",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isEqualNode(akasha.Node) @ akasha.svg.SVGSymbolElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGSymbolElement",
      "classSimpleName": "SVGSymbolElement",
      "elementKind": "method",
      "methodName": "isEqualNode",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isEqualNode(akasha.Node) @ akasha.svg.SVGTSpanElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGTSpanElement",
      "classSimpleName": "SVGTSpanElement",
      "elementKind": "method",
      "methodName": "isEqualNode",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isEqualNode(akasha.Node) @ akasha.svg.SVGTextContentElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGTextContentElement",
      "classSimpleName": "SVGTextContentElement",
      "elementKind": "method",
      "methodName": "isEqualNode",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isEqualNode(akasha.Node) @ akasha.svg.SVGTextElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGTextElement",
      "classSimpleName": "SVGTextElement",
      "elementKind": "method",
      "methodName": "isEqualNode",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isEqualNode(akasha.Node) @ akasha.svg.SVGTextPathElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGTextPathElement",
      "classSimpleName": "SVGTextPathElement",
      "elementKind": "method",
      "methodName": "isEqualNode",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isEqualNode(akasha.Node) @ akasha.svg.SVGTextPositioningElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGTextPositioningElement",
      "classSimpleName": "SVGTextPositioningElement",
      "elementKind": "method",
      "methodName": "isEqualNode",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isEqualNode(akasha.Node) @ akasha.svg.SVGTitleElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGTitleElement",
      "classSimpleName": "SVGTitleElement",
      "elementKind": "method",
      "methodName": "isEqualNode",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isEqualNode(akasha.Node) @ akasha.svg.SVGUnknownElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGUnknownElement",
      "classSimpleName": "SVGUnknownElement",
      "elementKind": "method",
      "methodName": "isEqualNode",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isEqualNode(akasha.Node) @ akasha.svg.SVGUseElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGUseElement",
      "classSimpleName": "SVGUseElement",
      "elementKind": "method",
      "methodName": "isEqualNode",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isEqualNode(akasha.Node) @ akasha.svg.SVGUseElementShadowRoot",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGUseElementShadowRoot",
      "classSimpleName": "SVGUseElementShadowRoot",
      "elementKind": "method",
      "methodName": "isEqualNode",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isEqualNode(akasha.Node) @ akasha.svg.SVGViewElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGViewElement",
      "classSimpleName": "SVGViewElement",
      "elementKind": "method",
      "methodName": "isEqualNode",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isEqualNode(akasha.Node)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.Node",
      "classSimpleName": "Node",
      "elementKind": "method",
      "methodName": "isEqualNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isSameNode(akasha.Node) @ akasha.Attr",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.Attr",
      "classSimpleName": "Attr",
      "elementKind": "method",
      "methodName": "isSameNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isSameNode(akasha.Node) @ akasha.Audio",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.Audio",
      "classSimpleName": "Audio",
      "elementKind": "method",
      "methodName": "isSameNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isSameNode(akasha.Node) @ akasha.CDATASection",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.CDATASection",
      "classSimpleName": "CDATASection",
      "elementKind": "method",
      "methodName": "isSameNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isSameNode(akasha.Node) @ akasha.CharacterData",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.CharacterData",
      "classSimpleName": "CharacterData",
      "elementKind": "method",
      "methodName": "isSameNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isSameNode(akasha.Node) @ akasha.Comment",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.Comment",
      "classSimpleName": "Comment",
      "elementKind": "method",
      "methodName": "isSameNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isSameNode(akasha.Node) @ akasha.Document",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.Document",
      "classSimpleName": "Document",
      "elementKind": "method",
      "methodName": "isSameNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isSameNode(akasha.Node) @ akasha.DocumentFragment",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.DocumentFragment",
      "classSimpleName": "DocumentFragment",
      "elementKind": "method",
      "methodName": "isSameNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isSameNode(akasha.Node) @ akasha.DocumentType",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.DocumentType",
      "classSimpleName": "DocumentType",
      "elementKind": "method",
      "methodName": "isSameNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isSameNode(akasha.Node) @ akasha.Element",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.Element",
      "classSimpleName": "Element",
      "elementKind": "method",
      "methodName": "isSameNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isSameNode(akasha.Node) @ akasha.HTMLAnchorElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLAnchorElement",
      "classSimpleName": "HTMLAnchorElement",
      "elementKind": "method",
      "methodName": "isSameNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isSameNode(akasha.Node) @ akasha.HTMLAreaElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLAreaElement",
      "classSimpleName": "HTMLAreaElement",
      "elementKind": "method",
      "methodName": "isSameNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isSameNode(akasha.Node) @ akasha.HTMLAudioElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLAudioElement",
      "classSimpleName": "HTMLAudioElement",
      "elementKind": "method",
      "methodName": "isSameNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isSameNode(akasha.Node) @ akasha.HTMLBRElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLBRElement",
      "classSimpleName": "HTMLBRElement",
      "elementKind": "method",
      "methodName": "isSameNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isSameNode(akasha.Node) @ akasha.HTMLBaseElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLBaseElement",
      "classSimpleName": "HTMLBaseElement",
      "elementKind": "method",
      "methodName": "isSameNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isSameNode(akasha.Node) @ akasha.HTMLBodyElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLBodyElement",
      "classSimpleName": "HTMLBodyElement",
      "elementKind": "method",
      "methodName": "isSameNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isSameNode(akasha.Node) @ akasha.HTMLButtonElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLButtonElement",
      "classSimpleName": "HTMLButtonElement",
      "elementKind": "method",
      "methodName": "isSameNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isSameNode(akasha.Node) @ akasha.HTMLCanvasElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLCanvasElement",
      "classSimpleName": "HTMLCanvasElement",
      "elementKind": "method",
      "methodName": "isSameNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isSameNode(akasha.Node) @ akasha.HTMLDListElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLDListElement",
      "classSimpleName": "HTMLDListElement",
      "elementKind": "method",
      "methodName": "isSameNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isSameNode(akasha.Node) @ akasha.HTMLDataElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLDataElement",
      "classSimpleName": "HTMLDataElement",
      "elementKind": "method",
      "methodName": "isSameNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isSameNode(akasha.Node) @ akasha.HTMLDataListElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLDataListElement",
      "classSimpleName": "HTMLDataListElement",
      "elementKind": "method",
      "methodName": "isSameNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isSameNode(akasha.Node) @ akasha.HTMLDetailsElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLDetailsElement",
      "classSimpleName": "HTMLDetailsElement",
      "elementKind": "method",
      "methodName": "isSameNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isSameNode(akasha.Node) @ akasha.HTMLDialogElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLDialogElement",
      "classSimpleName": "HTMLDialogElement",
      "elementKind": "method",
      "methodName": "isSameNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isSameNode(akasha.Node) @ akasha.HTMLDirectoryElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLDirectoryElement",
      "classSimpleName": "HTMLDirectoryElement",
      "elementKind": "method",
      "methodName": "isSameNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isSameNode(akasha.Node) @ akasha.HTMLDivElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLDivElement",
      "classSimpleName": "HTMLDivElement",
      "elementKind": "method",
      "methodName": "isSameNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isSameNode(akasha.Node) @ akasha.HTMLElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLElement",
      "classSimpleName": "HTMLElement",
      "elementKind": "method",
      "methodName": "isSameNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isSameNode(akasha.Node) @ akasha.HTMLEmbedElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLEmbedElement",
      "classSimpleName": "HTMLEmbedElement",
      "elementKind": "method",
      "methodName": "isSameNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isSameNode(akasha.Node) @ akasha.HTMLFieldSetElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLFieldSetElement",
      "classSimpleName": "HTMLFieldSetElement",
      "elementKind": "method",
      "methodName": "isSameNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isSameNode(akasha.Node) @ akasha.HTMLFontElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLFontElement",
      "classSimpleName": "HTMLFontElement",
      "elementKind": "method",
      "methodName": "isSameNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isSameNode(akasha.Node) @ akasha.HTMLFormElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLFormElement",
      "classSimpleName": "HTMLFormElement",
      "elementKind": "method",
      "methodName": "isSameNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isSameNode(akasha.Node) @ akasha.HTMLFrameElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLFrameElement",
      "classSimpleName": "HTMLFrameElement",
      "elementKind": "method",
      "methodName": "isSameNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isSameNode(akasha.Node) @ akasha.HTMLFrameSetElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLFrameSetElement",
      "classSimpleName": "HTMLFrameSetElement",
      "elementKind": "method",
      "methodName": "isSameNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isSameNode(akasha.Node) @ akasha.HTMLHRElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLHRElement",
      "classSimpleName": "HTMLHRElement",
      "elementKind": "method",
      "methodName": "isSameNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isSameNode(akasha.Node) @ akasha.HTMLHeadElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLHeadElement",
      "classSimpleName": "HTMLHeadElement",
      "elementKind": "method",
      "methodName": "isSameNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isSameNode(akasha.Node) @ akasha.HTMLHeadingElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLHeadingElement",
      "classSimpleName": "HTMLHeadingElement",
      "elementKind": "method",
      "methodName": "isSameNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isSameNode(akasha.Node) @ akasha.HTMLHtmlElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLHtmlElement",
      "classSimpleName": "HTMLHtmlElement",
      "elementKind": "method",
      "methodName": "isSameNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isSameNode(akasha.Node) @ akasha.HTMLIFrameElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLIFrameElement",
      "classSimpleName": "HTMLIFrameElement",
      "elementKind": "method",
      "methodName": "isSameNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isSameNode(akasha.Node) @ akasha.HTMLImageElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLImageElement",
      "classSimpleName": "HTMLImageElement",
      "elementKind": "method",
      "methodName": "isSameNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isSameNode(akasha.Node) @ akasha.HTMLInputElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLInputElement",
      "classSimpleName": "HTMLInputElement",
      "elementKind": "method",
      "methodName": "isSameNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isSameNode(akasha.Node) @ akasha.HTMLLIElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLLIElement",
      "classSimpleName": "HTMLLIElement",
      "elementKind": "method",
      "methodName": "isSameNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isSameNode(akasha.Node) @ akasha.HTMLLabelElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLLabelElement",
      "classSimpleName": "HTMLLabelElement",
      "elementKind": "method",
      "methodName": "isSameNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isSameNode(akasha.Node) @ akasha.HTMLLegendElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLLegendElement",
      "classSimpleName": "HTMLLegendElement",
      "elementKind": "method",
      "methodName": "isSameNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isSameNode(akasha.Node) @ akasha.HTMLLinkElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLLinkElement",
      "classSimpleName": "HTMLLinkElement",
      "elementKind": "method",
      "methodName": "isSameNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isSameNode(akasha.Node) @ akasha.HTMLMapElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLMapElement",
      "classSimpleName": "HTMLMapElement",
      "elementKind": "method",
      "methodName": "isSameNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isSameNode(akasha.Node) @ akasha.HTMLMarqueeElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLMarqueeElement",
      "classSimpleName": "HTMLMarqueeElement",
      "elementKind": "method",
      "methodName": "isSameNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isSameNode(akasha.Node) @ akasha.HTMLMediaElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLMediaElement",
      "classSimpleName": "HTMLMediaElement",
      "elementKind": "method",
      "methodName": "isSameNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isSameNode(akasha.Node) @ akasha.HTMLMenuElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLMenuElement",
      "classSimpleName": "HTMLMenuElement",
      "elementKind": "method",
      "methodName": "isSameNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isSameNode(akasha.Node) @ akasha.HTMLMetaElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLMetaElement",
      "classSimpleName": "HTMLMetaElement",
      "elementKind": "method",
      "methodName": "isSameNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isSameNode(akasha.Node) @ akasha.HTMLMeterElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLMeterElement",
      "classSimpleName": "HTMLMeterElement",
      "elementKind": "method",
      "methodName": "isSameNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isSameNode(akasha.Node) @ akasha.HTMLModElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLModElement",
      "classSimpleName": "HTMLModElement",
      "elementKind": "method",
      "methodName": "isSameNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isSameNode(akasha.Node) @ akasha.HTMLOListElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLOListElement",
      "classSimpleName": "HTMLOListElement",
      "elementKind": "method",
      "methodName": "isSameNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isSameNode(akasha.Node) @ akasha.HTMLObjectElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLObjectElement",
      "classSimpleName": "HTMLObjectElement",
      "elementKind": "method",
      "methodName": "isSameNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isSameNode(akasha.Node) @ akasha.HTMLOptGroupElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLOptGroupElement",
      "classSimpleName": "HTMLOptGroupElement",
      "elementKind": "method",
      "methodName": "isSameNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isSameNode(akasha.Node) @ akasha.HTMLOptionElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLOptionElement",
      "classSimpleName": "HTMLOptionElement",
      "elementKind": "method",
      "methodName": "isSameNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isSameNode(akasha.Node) @ akasha.HTMLOutputElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLOutputElement",
      "classSimpleName": "HTMLOutputElement",
      "elementKind": "method",
      "methodName": "isSameNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isSameNode(akasha.Node) @ akasha.HTMLParagraphElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLParagraphElement",
      "classSimpleName": "HTMLParagraphElement",
      "elementKind": "method",
      "methodName": "isSameNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isSameNode(akasha.Node) @ akasha.HTMLParamElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLParamElement",
      "classSimpleName": "HTMLParamElement",
      "elementKind": "method",
      "methodName": "isSameNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isSameNode(akasha.Node) @ akasha.HTMLPictureElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLPictureElement",
      "classSimpleName": "HTMLPictureElement",
      "elementKind": "method",
      "methodName": "isSameNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isSameNode(akasha.Node) @ akasha.HTMLPreElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLPreElement",
      "classSimpleName": "HTMLPreElement",
      "elementKind": "method",
      "methodName": "isSameNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isSameNode(akasha.Node) @ akasha.HTMLProgressElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLProgressElement",
      "classSimpleName": "HTMLProgressElement",
      "elementKind": "method",
      "methodName": "isSameNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isSameNode(akasha.Node) @ akasha.HTMLQuoteElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLQuoteElement",
      "classSimpleName": "HTMLQuoteElement",
      "elementKind": "method",
      "methodName": "isSameNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isSameNode(akasha.Node) @ akasha.HTMLScriptElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLScriptElement",
      "classSimpleName": "HTMLScriptElement",
      "elementKind": "method",
      "methodName": "isSameNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isSameNode(akasha.Node) @ akasha.HTMLSelectElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLSelectElement",
      "classSimpleName": "HTMLSelectElement",
      "elementKind": "method",
      "methodName": "isSameNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isSameNode(akasha.Node) @ akasha.HTMLSlotElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLSlotElement",
      "classSimpleName": "HTMLSlotElement",
      "elementKind": "method",
      "methodName": "isSameNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isSameNode(akasha.Node) @ akasha.HTMLSourceElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLSourceElement",
      "classSimpleName": "HTMLSourceElement",
      "elementKind": "method",
      "methodName": "isSameNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isSameNode(akasha.Node) @ akasha.HTMLSpanElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLSpanElement",
      "classSimpleName": "HTMLSpanElement",
      "elementKind": "method",
      "methodName": "isSameNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isSameNode(akasha.Node) @ akasha.HTMLStyleElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLStyleElement",
      "classSimpleName": "HTMLStyleElement",
      "elementKind": "method",
      "methodName": "isSameNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isSameNode(akasha.Node) @ akasha.HTMLTableCaptionElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLTableCaptionElement",
      "classSimpleName": "HTMLTableCaptionElement",
      "elementKind": "method",
      "methodName": "isSameNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isSameNode(akasha.Node) @ akasha.HTMLTableCellElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLTableCellElement",
      "classSimpleName": "HTMLTableCellElement",
      "elementKind": "method",
      "methodName": "isSameNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isSameNode(akasha.Node) @ akasha.HTMLTableColElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLTableColElement",
      "classSimpleName": "HTMLTableColElement",
      "elementKind": "method",
      "methodName": "isSameNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isSameNode(akasha.Node) @ akasha.HTMLTableElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLTableElement",
      "classSimpleName": "HTMLTableElement",
      "elementKind": "method",
      "methodName": "isSameNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isSameNode(akasha.Node) @ akasha.HTMLTableRowElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLTableRowElement",
      "classSimpleName": "HTMLTableRowElement",
      "elementKind": "method",
      "methodName": "isSameNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isSameNode(akasha.Node) @ akasha.HTMLTableSectionElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLTableSectionElement",
      "classSimpleName": "HTMLTableSectionElement",
      "elementKind": "method",
      "methodName": "isSameNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isSameNode(akasha.Node) @ akasha.HTMLTemplateElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLTemplateElement",
      "classSimpleName": "HTMLTemplateElement",
      "elementKind": "method",
      "methodName": "isSameNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isSameNode(akasha.Node) @ akasha.HTMLTextAreaElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLTextAreaElement",
      "classSimpleName": "HTMLTextAreaElement",
      "elementKind": "method",
      "methodName": "isSameNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isSameNode(akasha.Node) @ akasha.HTMLTimeElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLTimeElement",
      "classSimpleName": "HTMLTimeElement",
      "elementKind": "method",
      "methodName": "isSameNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isSameNode(akasha.Node) @ akasha.HTMLTitleElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLTitleElement",
      "classSimpleName": "HTMLTitleElement",
      "elementKind": "method",
      "methodName": "isSameNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isSameNode(akasha.Node) @ akasha.HTMLTrackElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLTrackElement",
      "classSimpleName": "HTMLTrackElement",
      "elementKind": "method",
      "methodName": "isSameNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isSameNode(akasha.Node) @ akasha.HTMLUListElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLUListElement",
      "classSimpleName": "HTMLUListElement",
      "elementKind": "method",
      "methodName": "isSameNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isSameNode(akasha.Node) @ akasha.HTMLUnknownElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLUnknownElement",
      "classSimpleName": "HTMLUnknownElement",
      "elementKind": "method",
      "methodName": "isSameNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isSameNode(akasha.Node) @ akasha.HTMLVideoElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLVideoElement",
      "classSimpleName": "HTMLVideoElement",
      "elementKind": "method",
      "methodName": "isSameNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isSameNode(akasha.Node) @ akasha.Image",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.Image",
      "classSimpleName": "Image",
      "elementKind": "method",
      "methodName": "isSameNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isSameNode(akasha.Node) @ akasha.Option",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.Option",
      "classSimpleName": "Option",
      "elementKind": "method",
      "methodName": "isSameNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isSameNode(akasha.Node) @ akasha.ProcessingInstruction",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.ProcessingInstruction",
      "classSimpleName": "ProcessingInstruction",
      "elementKind": "method",
      "methodName": "isSameNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isSameNode(akasha.Node) @ akasha.ShadowRoot",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.ShadowRoot",
      "classSimpleName": "ShadowRoot",
      "elementKind": "method",
      "methodName": "isSameNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isSameNode(akasha.Node) @ akasha.Text",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.Text",
      "classSimpleName": "Text",
      "elementKind": "method",
      "methodName": "isSameNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isSameNode(akasha.Node) @ akasha.XMLDocument",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.XMLDocument",
      "classSimpleName": "XMLDocument",
      "elementKind": "method",
      "methodName": "isSameNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isSameNode(akasha.Node) @ akasha.svg.SVGAElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGAElement",
      "classSimpleName": "SVGAElement",
      "elementKind": "method",
      "methodName": "isSameNode",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isSameNode(akasha.Node) @ akasha.svg.SVGCircleElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGCircleElement",
      "classSimpleName": "SVGCircleElement",
      "elementKind": "method",
      "methodName": "isSameNode",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isSameNode(akasha.Node) @ akasha.svg.SVGClipPathElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGClipPathElement",
      "classSimpleName": "SVGClipPathElement",
      "elementKind": "method",
      "methodName": "isSameNode",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isSameNode(akasha.Node) @ akasha.svg.SVGComponentTransferFunctionElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGComponentTransferFunctionElement",
      "classSimpleName": "SVGComponentTransferFunctionElement",
      "elementKind": "method",
      "methodName": "isSameNode",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isSameNode(akasha.Node) @ akasha.svg.SVGDefsElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGDefsElement",
      "classSimpleName": "SVGDefsElement",
      "elementKind": "method",
      "methodName": "isSameNode",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isSameNode(akasha.Node) @ akasha.svg.SVGDescElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGDescElement",
      "classSimpleName": "SVGDescElement",
      "elementKind": "method",
      "methodName": "isSameNode",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isSameNode(akasha.Node) @ akasha.svg.SVGElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGElement",
      "classSimpleName": "SVGElement",
      "elementKind": "method",
      "methodName": "isSameNode",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isSameNode(akasha.Node) @ akasha.svg.SVGEllipseElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGEllipseElement",
      "classSimpleName": "SVGEllipseElement",
      "elementKind": "method",
      "methodName": "isSameNode",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isSameNode(akasha.Node) @ akasha.svg.SVGFEBlendElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEBlendElement",
      "classSimpleName": "SVGFEBlendElement",
      "elementKind": "method",
      "methodName": "isSameNode",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isSameNode(akasha.Node) @ akasha.svg.SVGFEColorMatrixElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEColorMatrixElement",
      "classSimpleName": "SVGFEColorMatrixElement",
      "elementKind": "method",
      "methodName": "isSameNode",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isSameNode(akasha.Node) @ akasha.svg.SVGFEComponentTransferElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEComponentTransferElement",
      "classSimpleName": "SVGFEComponentTransferElement",
      "elementKind": "method",
      "methodName": "isSameNode",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isSameNode(akasha.Node) @ akasha.svg.SVGFECompositeElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFECompositeElement",
      "classSimpleName": "SVGFECompositeElement",
      "elementKind": "method",
      "methodName": "isSameNode",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isSameNode(akasha.Node) @ akasha.svg.SVGFEConvolveMatrixElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEConvolveMatrixElement",
      "classSimpleName": "SVGFEConvolveMatrixElement",
      "elementKind": "method",
      "methodName": "isSameNode",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isSameNode(akasha.Node) @ akasha.svg.SVGFEDiffuseLightingElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEDiffuseLightingElement",
      "classSimpleName": "SVGFEDiffuseLightingElement",
      "elementKind": "method",
      "methodName": "isSameNode",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isSameNode(akasha.Node) @ akasha.svg.SVGFEDisplacementMapElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEDisplacementMapElement",
      "classSimpleName": "SVGFEDisplacementMapElement",
      "elementKind": "method",
      "methodName": "isSameNode",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isSameNode(akasha.Node) @ akasha.svg.SVGFEDistantLightElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEDistantLightElement",
      "classSimpleName": "SVGFEDistantLightElement",
      "elementKind": "method",
      "methodName": "isSameNode",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isSameNode(akasha.Node) @ akasha.svg.SVGFEDropShadowElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEDropShadowElement",
      "classSimpleName": "SVGFEDropShadowElement",
      "elementKind": "method",
      "methodName": "isSameNode",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isSameNode(akasha.Node) @ akasha.svg.SVGFEFloodElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEFloodElement",
      "classSimpleName": "SVGFEFloodElement",
      "elementKind": "method",
      "methodName": "isSameNode",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isSameNode(akasha.Node) @ akasha.svg.SVGFEFuncAElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEFuncAElement",
      "classSimpleName": "SVGFEFuncAElement",
      "elementKind": "method",
      "methodName": "isSameNode",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isSameNode(akasha.Node) @ akasha.svg.SVGFEFuncBElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEFuncBElement",
      "classSimpleName": "SVGFEFuncBElement",
      "elementKind": "method",
      "methodName": "isSameNode",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isSameNode(akasha.Node) @ akasha.svg.SVGFEFuncGElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEFuncGElement",
      "classSimpleName": "SVGFEFuncGElement",
      "elementKind": "method",
      "methodName": "isSameNode",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isSameNode(akasha.Node) @ akasha.svg.SVGFEFuncRElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEFuncRElement",
      "classSimpleName": "SVGFEFuncRElement",
      "elementKind": "method",
      "methodName": "isSameNode",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isSameNode(akasha.Node) @ akasha.svg.SVGFEGaussianBlurElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEGaussianBlurElement",
      "classSimpleName": "SVGFEGaussianBlurElement",
      "elementKind": "method",
      "methodName": "isSameNode",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isSameNode(akasha.Node) @ akasha.svg.SVGFEImageElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEImageElement",
      "classSimpleName": "SVGFEImageElement",
      "elementKind": "method",
      "methodName": "isSameNode",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isSameNode(akasha.Node) @ akasha.svg.SVGFEMergeElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEMergeElement",
      "classSimpleName": "SVGFEMergeElement",
      "elementKind": "method",
      "methodName": "isSameNode",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isSameNode(akasha.Node) @ akasha.svg.SVGFEMergeNodeElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEMergeNodeElement",
      "classSimpleName": "SVGFEMergeNodeElement",
      "elementKind": "method",
      "methodName": "isSameNode",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isSameNode(akasha.Node) @ akasha.svg.SVGFEMorphologyElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEMorphologyElement",
      "classSimpleName": "SVGFEMorphologyElement",
      "elementKind": "method",
      "methodName": "isSameNode",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isSameNode(akasha.Node) @ akasha.svg.SVGFEOffsetElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEOffsetElement",
      "classSimpleName": "SVGFEOffsetElement",
      "elementKind": "method",
      "methodName": "isSameNode",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isSameNode(akasha.Node) @ akasha.svg.SVGFEPointLightElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEPointLightElement",
      "classSimpleName": "SVGFEPointLightElement",
      "elementKind": "method",
      "methodName": "isSameNode",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isSameNode(akasha.Node) @ akasha.svg.SVGFESpecularLightingElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFESpecularLightingElement",
      "classSimpleName": "SVGFESpecularLightingElement",
      "elementKind": "method",
      "methodName": "isSameNode",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isSameNode(akasha.Node) @ akasha.svg.SVGFESpotLightElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFESpotLightElement",
      "classSimpleName": "SVGFESpotLightElement",
      "elementKind": "method",
      "methodName": "isSameNode",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isSameNode(akasha.Node) @ akasha.svg.SVGFETileElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFETileElement",
      "classSimpleName": "SVGFETileElement",
      "elementKind": "method",
      "methodName": "isSameNode",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isSameNode(akasha.Node) @ akasha.svg.SVGFETurbulenceElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFETurbulenceElement",
      "classSimpleName": "SVGFETurbulenceElement",
      "elementKind": "method",
      "methodName": "isSameNode",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isSameNode(akasha.Node) @ akasha.svg.SVGFilterElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFilterElement",
      "classSimpleName": "SVGFilterElement",
      "elementKind": "method",
      "methodName": "isSameNode",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isSameNode(akasha.Node) @ akasha.svg.SVGForeignObjectElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGForeignObjectElement",
      "classSimpleName": "SVGForeignObjectElement",
      "elementKind": "method",
      "methodName": "isSameNode",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isSameNode(akasha.Node) @ akasha.svg.SVGGElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGGElement",
      "classSimpleName": "SVGGElement",
      "elementKind": "method",
      "methodName": "isSameNode",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isSameNode(akasha.Node) @ akasha.svg.SVGGeometryElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGGeometryElement",
      "classSimpleName": "SVGGeometryElement",
      "elementKind": "method",
      "methodName": "isSameNode",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isSameNode(akasha.Node) @ akasha.svg.SVGGradientElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGGradientElement",
      "classSimpleName": "SVGGradientElement",
      "elementKind": "method",
      "methodName": "isSameNode",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isSameNode(akasha.Node) @ akasha.svg.SVGGraphicsElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGGraphicsElement",
      "classSimpleName": "SVGGraphicsElement",
      "elementKind": "method",
      "methodName": "isSameNode",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isSameNode(akasha.Node) @ akasha.svg.SVGImageElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGImageElement",
      "classSimpleName": "SVGImageElement",
      "elementKind": "method",
      "methodName": "isSameNode",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isSameNode(akasha.Node) @ akasha.svg.SVGLineElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGLineElement",
      "classSimpleName": "SVGLineElement",
      "elementKind": "method",
      "methodName": "isSameNode",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isSameNode(akasha.Node) @ akasha.svg.SVGLinearGradientElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGLinearGradientElement",
      "classSimpleName": "SVGLinearGradientElement",
      "elementKind": "method",
      "methodName": "isSameNode",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isSameNode(akasha.Node) @ akasha.svg.SVGMarkerElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGMarkerElement",
      "classSimpleName": "SVGMarkerElement",
      "elementKind": "method",
      "methodName": "isSameNode",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isSameNode(akasha.Node) @ akasha.svg.SVGMaskElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGMaskElement",
      "classSimpleName": "SVGMaskElement",
      "elementKind": "method",
      "methodName": "isSameNode",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isSameNode(akasha.Node) @ akasha.svg.SVGMetadataElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGMetadataElement",
      "classSimpleName": "SVGMetadataElement",
      "elementKind": "method",
      "methodName": "isSameNode",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isSameNode(akasha.Node) @ akasha.svg.SVGPathElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGPathElement",
      "classSimpleName": "SVGPathElement",
      "elementKind": "method",
      "methodName": "isSameNode",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isSameNode(akasha.Node) @ akasha.svg.SVGPatternElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGPatternElement",
      "classSimpleName": "SVGPatternElement",
      "elementKind": "method",
      "methodName": "isSameNode",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isSameNode(akasha.Node) @ akasha.svg.SVGPolygonElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGPolygonElement",
      "classSimpleName": "SVGPolygonElement",
      "elementKind": "method",
      "methodName": "isSameNode",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isSameNode(akasha.Node) @ akasha.svg.SVGPolylineElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGPolylineElement",
      "classSimpleName": "SVGPolylineElement",
      "elementKind": "method",
      "methodName": "isSameNode",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isSameNode(akasha.Node) @ akasha.svg.SVGRadialGradientElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGRadialGradientElement",
      "classSimpleName": "SVGRadialGradientElement",
      "elementKind": "method",
      "methodName": "isSameNode",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isSameNode(akasha.Node) @ akasha.svg.SVGRectElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGRectElement",
      "classSimpleName": "SVGRectElement",
      "elementKind": "method",
      "methodName": "isSameNode",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isSameNode(akasha.Node) @ akasha.svg.SVGSVGElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGSVGElement",
      "classSimpleName": "SVGSVGElement",
      "elementKind": "method",
      "methodName": "isSameNode",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isSameNode(akasha.Node) @ akasha.svg.SVGScriptElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGScriptElement",
      "classSimpleName": "SVGScriptElement",
      "elementKind": "method",
      "methodName": "isSameNode",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isSameNode(akasha.Node) @ akasha.svg.SVGStopElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGStopElement",
      "classSimpleName": "SVGStopElement",
      "elementKind": "method",
      "methodName": "isSameNode",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isSameNode(akasha.Node) @ akasha.svg.SVGStyleElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGStyleElement",
      "classSimpleName": "SVGStyleElement",
      "elementKind": "method",
      "methodName": "isSameNode",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isSameNode(akasha.Node) @ akasha.svg.SVGSwitchElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGSwitchElement",
      "classSimpleName": "SVGSwitchElement",
      "elementKind": "method",
      "methodName": "isSameNode",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isSameNode(akasha.Node) @ akasha.svg.SVGSymbolElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGSymbolElement",
      "classSimpleName": "SVGSymbolElement",
      "elementKind": "method",
      "methodName": "isSameNode",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isSameNode(akasha.Node) @ akasha.svg.SVGTSpanElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGTSpanElement",
      "classSimpleName": "SVGTSpanElement",
      "elementKind": "method",
      "methodName": "isSameNode",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isSameNode(akasha.Node) @ akasha.svg.SVGTextContentElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGTextContentElement",
      "classSimpleName": "SVGTextContentElement",
      "elementKind": "method",
      "methodName": "isSameNode",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isSameNode(akasha.Node) @ akasha.svg.SVGTextElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGTextElement",
      "classSimpleName": "SVGTextElement",
      "elementKind": "method",
      "methodName": "isSameNode",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isSameNode(akasha.Node) @ akasha.svg.SVGTextPathElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGTextPathElement",
      "classSimpleName": "SVGTextPathElement",
      "elementKind": "method",
      "methodName": "isSameNode",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isSameNode(akasha.Node) @ akasha.svg.SVGTextPositioningElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGTextPositioningElement",
      "classSimpleName": "SVGTextPositioningElement",
      "elementKind": "method",
      "methodName": "isSameNode",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isSameNode(akasha.Node) @ akasha.svg.SVGTitleElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGTitleElement",
      "classSimpleName": "SVGTitleElement",
      "elementKind": "method",
      "methodName": "isSameNode",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isSameNode(akasha.Node) @ akasha.svg.SVGUnknownElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGUnknownElement",
      "classSimpleName": "SVGUnknownElement",
      "elementKind": "method",
      "methodName": "isSameNode",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isSameNode(akasha.Node) @ akasha.svg.SVGUseElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGUseElement",
      "classSimpleName": "SVGUseElement",
      "elementKind": "method",
      "methodName": "isSameNode",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isSameNode(akasha.Node) @ akasha.svg.SVGUseElementShadowRoot",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGUseElementShadowRoot",
      "classSimpleName": "SVGUseElementShadowRoot",
      "elementKind": "method",
      "methodName": "isSameNode",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isSameNode(akasha.Node) @ akasha.svg.SVGViewElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGViewElement",
      "classSimpleName": "SVGViewElement",
      "elementKind": "method",
      "methodName": "isSameNode",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Node::isSameNode(akasha.Node)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.Node",
      "classSimpleName": "Node",
      "elementKind": "method",
      "methodName": "isSameNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.OffscreenCanvasRenderingContext2D::isPointInPath(akasha.Path2D, double, double)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.OffscreenCanvasRenderingContext2D",
      "classSimpleName": "OffscreenCanvasRenderingContext2D",
      "elementKind": "method",
      "methodName": "isPointInPath",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.OffscreenCanvasRenderingContext2D::isPointInPath(akasha.Path2D, double, double, java.lang.String)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.OffscreenCanvasRenderingContext2D",
      "classSimpleName": "OffscreenCanvasRenderingContext2D",
      "elementKind": "method",
      "methodName": "isPointInPath",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.OffscreenCanvasRenderingContext2D::isPointInPath(double, double)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.OffscreenCanvasRenderingContext2D",
      "classSimpleName": "OffscreenCanvasRenderingContext2D",
      "elementKind": "method",
      "methodName": "isPointInPath",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.OffscreenCanvasRenderingContext2D::isPointInPath(double, double, java.lang.String)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.OffscreenCanvasRenderingContext2D",
      "classSimpleName": "OffscreenCanvasRenderingContext2D",
      "elementKind": "method",
      "methodName": "isPointInPath",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.OffscreenCanvasRenderingContext2D::isPointInStroke(akasha.Path2D, double, double)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.OffscreenCanvasRenderingContext2D",
      "classSimpleName": "OffscreenCanvasRenderingContext2D",
      "elementKind": "method",
      "methodName": "isPointInStroke",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.OffscreenCanvasRenderingContext2D::isPointInStroke(double, double)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.OffscreenCanvasRenderingContext2D",
      "classSimpleName": "OffscreenCanvasRenderingContext2D",
      "elementKind": "method",
      "methodName": "isPointInStroke",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Range::intersectsNode(akasha.Node)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.Range",
      "classSimpleName": "Range",
      "elementKind": "method",
      "methodName": "intersectsNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Range::isPointInRange(akasha.Node, int)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.Range",
      "classSimpleName": "Range",
      "elementKind": "method",
      "methodName": "isPointInRange",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Selection::containsNode(akasha.Node)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.Selection",
      "classSimpleName": "Selection",
      "elementKind": "method",
      "methodName": "containsNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.Selection::containsNode(akasha.Node, boolean)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.Selection",
      "classSimpleName": "Selection",
      "elementKind": "method",
      "methodName": "containsNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.URLSearchParams::has(java.lang.String)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.URLSearchParams",
      "classSimpleName": "URLSearchParams",
      "elementKind": "method",
      "methodName": "has",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.audio.AudioParamMap::has(java.lang.String)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.audio.AudioParamMap",
      "classSimpleName": "AudioParamMap",
      "elementKind": "method",
      "methodName": "has",
      "package": "akasha.audio"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.bluetooth.BluetoothManufacturerDataMap::has(int)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.bluetooth.BluetoothManufacturerDataMap",
      "classSimpleName": "BluetoothManufacturerDataMap",
      "elementKind": "method",
      "methodName": "has",
      "package": "akasha.bluetooth"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.bluetooth.BluetoothServiceDataMap::has(java.lang.String)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.bluetooth.BluetoothServiceDataMap",
      "classSimpleName": "BluetoothServiceDataMap",
      "elementKind": "method",
      "methodName": "has",
      "package": "akasha.bluetooth"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.core.JsMap<K, V>::has(K)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.JsMap",
      "classSimpleName": "JsMap",
      "elementKind": "method",
      "methodName": "has",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.core.JsSet<T>::has(T)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.JsSet",
      "classSimpleName": "JsSet",
      "elementKind": "method",
      "methodName": "has",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.core.JsString::endsWith(java.lang.String)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.JsString",
      "classSimpleName": "JsString",
      "elementKind": "method",
      "methodName": "endsWith",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.core.JsString::endsWith(java.lang.String, int)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.JsString",
      "classSimpleName": "JsString",
      "elementKind": "method",
      "methodName": "endsWith",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.core.JsString::includes(java.lang.String)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.JsString",
      "classSimpleName": "JsString",
      "elementKind": "method",
      "methodName": "includes",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.core.JsString::includes(java.lang.String, int)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.JsString",
      "classSimpleName": "JsString",
      "elementKind": "method",
      "methodName": "includes",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.core.JsString::startsWith(java.lang.String)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.JsString",
      "classSimpleName": "JsString",
      "elementKind": "method",
      "methodName": "startsWith",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.core.JsString::startsWith(java.lang.String, int)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.JsString",
      "classSimpleName": "JsString",
      "elementKind": "method",
      "methodName": "startsWith",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.core.JsWeakMap<K, V>::has(K)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.JsWeakMap",
      "classSimpleName": "JsWeakMap",
      "elementKind": "method",
      "methodName": "has",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.core.JsWeakSet<T>::has(T)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.JsWeakSet",
      "classSimpleName": "JsWeakSet",
      "elementKind": "method",
      "methodName": "has",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.core.RegExpGroups::has(java.lang.String)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.RegExpGroups",
      "classSimpleName": "RegExpGroups",
      "elementKind": "method",
      "methodName": "has",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.gl.OES_vertex_array_object::isVertexArrayOES(akasha.gl.WebGLVertexArrayObjectOES)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.gl.OES_vertex_array_object",
      "classSimpleName": "OES_vertex_array_object",
      "elementKind": "method",
      "methodName": "isVertexArrayOES",
      "package": "akasha.gl"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.gl.WebGL2RenderingContext::isBuffer(akasha.gl.WebGLBuffer)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.gl.WebGL2RenderingContext",
      "classSimpleName": "WebGL2RenderingContext",
      "elementKind": "method",
      "methodName": "isBuffer",
      "package": "akasha.gl"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.gl.WebGL2RenderingContext::isContextLost()",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.gl.WebGL2RenderingContext",
      "classSimpleName": "WebGL2RenderingContext",
      "elementKind": "method",
      "methodName": "isContextLost",
      "package": "akasha.gl"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.gl.WebGL2RenderingContext::isEnabled(int)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.gl.WebGL2RenderingContext",
      "classSimpleName": "WebGL2RenderingContext",
      "elementKind": "method",
      "methodName": "isEnabled",
      "package": "akasha.gl"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.gl.WebGL2RenderingContext::isFramebuffer(akasha.gl.WebGLFramebuffer)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.gl.WebGL2RenderingContext",
      "classSimpleName": "WebGL2RenderingContext",
      "elementKind": "method",
      "methodName": "isFramebuffer",
      "package": "akasha.gl"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.gl.WebGL2RenderingContext::isProgram(akasha.gl.WebGLProgram)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.gl.WebGL2RenderingContext",
      "classSimpleName": "WebGL2RenderingContext",
      "elementKind": "method",
      "methodName": "isProgram",
      "package": "akasha.gl"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.gl.WebGL2RenderingContext::isRenderbuffer(akasha.gl.WebGLRenderbuffer)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.gl.WebGL2RenderingContext",
      "classSimpleName": "WebGL2RenderingContext",
      "elementKind": "method",
      "methodName": "isRenderbuffer",
      "package": "akasha.gl"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.gl.WebGL2RenderingContext::isShader(akasha.gl.WebGLShader)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.gl.WebGL2RenderingContext",
      "classSimpleName": "WebGL2RenderingContext",
      "elementKind": "method",
      "methodName": "isShader",
      "package": "akasha.gl"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.gl.WebGL2RenderingContext::isTexture(akasha.gl.WebGLTexture)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.gl.WebGL2RenderingContext",
      "classSimpleName": "WebGL2RenderingContext",
      "elementKind": "method",
      "methodName": "isTexture",
      "package": "akasha.gl"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.gl.WebGLRenderingContext::isBuffer(akasha.gl.WebGLBuffer)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.gl.WebGLRenderingContext",
      "classSimpleName": "WebGLRenderingContext",
      "elementKind": "method",
      "methodName": "isBuffer",
      "package": "akasha.gl"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.gl.WebGLRenderingContext::isContextLost()",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.gl.WebGLRenderingContext",
      "classSimpleName": "WebGLRenderingContext",
      "elementKind": "method",
      "methodName": "isContextLost",
      "package": "akasha.gl"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.gl.WebGLRenderingContext::isEnabled(int)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.gl.WebGLRenderingContext",
      "classSimpleName": "WebGLRenderingContext",
      "elementKind": "method",
      "methodName": "isEnabled",
      "package": "akasha.gl"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.gl.WebGLRenderingContext::isFramebuffer(akasha.gl.WebGLFramebuffer)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.gl.WebGLRenderingContext",
      "classSimpleName": "WebGLRenderingContext",
      "elementKind": "method",
      "methodName": "isFramebuffer",
      "package": "akasha.gl"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.gl.WebGLRenderingContext::isProgram(akasha.gl.WebGLProgram)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.gl.WebGLRenderingContext",
      "classSimpleName": "WebGLRenderingContext",
      "elementKind": "method",
      "methodName": "isProgram",
      "package": "akasha.gl"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.gl.WebGLRenderingContext::isRenderbuffer(akasha.gl.WebGLRenderbuffer)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.gl.WebGLRenderingContext",
      "classSimpleName": "WebGLRenderingContext",
      "elementKind": "method",
      "methodName": "isRenderbuffer",
      "package": "akasha.gl"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.gl.WebGLRenderingContext::isShader(akasha.gl.WebGLShader)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.gl.WebGLRenderingContext",
      "classSimpleName": "WebGLRenderingContext",
      "elementKind": "method",
      "methodName": "isShader",
      "package": "akasha.gl"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.gl.WebGLRenderingContext::isTexture(akasha.gl.WebGLTexture)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.gl.WebGLRenderingContext",
      "classSimpleName": "WebGLRenderingContext",
      "elementKind": "method",
      "methodName": "isTexture",
      "package": "akasha.gl"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.lang.JsArray<T>::includes(T) @ akasha.CSSFontFeatureValuesMap.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.CSSFontFeatureValuesMap.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "includes",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.lang.JsArray<T>::includes(T) @ akasha.CSSFontPaletteValuesRule.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.CSSFontPaletteValuesRule.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "includes",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.lang.JsArray<T>::includes(T) @ akasha.DOMTokenList.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.DOMTokenList.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "includes",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.lang.JsArray<T>::includes(T) @ akasha.FormData.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.FormData.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "includes",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.lang.JsArray<T>::includes(T) @ akasha.Headers.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.Headers.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "includes",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.lang.JsArray<T>::includes(T) @ akasha.MediaKeyStatusMap.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.MediaKeyStatusMap.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "includes",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.lang.JsArray<T>::includes(T) @ akasha.NodeList.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.NodeList.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "includes",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.lang.JsArray<T>::includes(T) @ akasha.URLSearchParams.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.URLSearchParams.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "includes",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.lang.JsArray<T>::includes(T) @ akasha.audio.AudioParamMap.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.audio.AudioParamMap.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "includes",
      "package": "akasha.audio"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.lang.JsArray<T>::includes(T) @ akasha.bluetooth.BluetoothManufacturerDataMap.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.bluetooth.BluetoothManufacturerDataMap.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "includes",
      "package": "akasha.bluetooth"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.lang.JsArray<T>::includes(T) @ akasha.bluetooth.BluetoothServiceDataMap.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.bluetooth.BluetoothServiceDataMap.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "includes",
      "package": "akasha.bluetooth"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.lang.JsArray<T>::includes(T) @ akasha.core.JsMap.Entry<K, V>",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.JsMap.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "includes",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.lang.JsArray<T>::includes(T) @ akasha.core.JsWeakMap.Entry<K, V>",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.JsWeakMap.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "includes",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.lang.JsArray<T>::includes(T) @ akasha.core.ObjectPropertyEntry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.ObjectPropertyEntry",
      "classSimpleName": "ObjectPropertyEntry",
      "elementKind": "method",
      "methodName": "includes",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.lang.JsArray<T>::includes(T) @ akasha.core.RegExpGroups.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.RegExpGroups.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "includes",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.lang.JsArray<T>::includes(T) @ akasha.core.RegExpResult.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.RegExpResult.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "includes",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.lang.JsArray<T>::includes(T) @ akasha.lang.JsArray.Entry<T>",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.lang.JsArray.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "includes",
      "package": "akasha.lang"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.lang.JsArray<T>::includes(T) @ akasha.rtc.RTCStatsReport.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.rtc.RTCStatsReport.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "includes",
      "package": "akasha.rtc"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.lang.JsArray<T>::includes(T) @ akasha.xr.XRInputSourceArray.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.xr.XRInputSourceArray.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "includes",
      "package": "akasha.xr"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.lang.JsArray<T>::includes(T)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.lang.JsArray",
      "classSimpleName": "JsArray",
      "elementKind": "method",
      "methodName": "includes",
      "package": "akasha.lang"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.lang.JsArray<T>::includes(T, int) @ akasha.CSSFontFeatureValuesMap.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.CSSFontFeatureValuesMap.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "includes",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.lang.JsArray<T>::includes(T, int) @ akasha.CSSFontPaletteValuesRule.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.CSSFontPaletteValuesRule.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "includes",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.lang.JsArray<T>::includes(T, int) @ akasha.DOMTokenList.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.DOMTokenList.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "includes",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.lang.JsArray<T>::includes(T, int) @ akasha.FormData.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.FormData.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "includes",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.lang.JsArray<T>::includes(T, int) @ akasha.Headers.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.Headers.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "includes",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.lang.JsArray<T>::includes(T, int) @ akasha.MediaKeyStatusMap.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.MediaKeyStatusMap.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "includes",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.lang.JsArray<T>::includes(T, int) @ akasha.NodeList.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.NodeList.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "includes",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.lang.JsArray<T>::includes(T, int) @ akasha.URLSearchParams.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.URLSearchParams.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "includes",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.lang.JsArray<T>::includes(T, int) @ akasha.audio.AudioParamMap.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.audio.AudioParamMap.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "includes",
      "package": "akasha.audio"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.lang.JsArray<T>::includes(T, int) @ akasha.bluetooth.BluetoothManufacturerDataMap.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.bluetooth.BluetoothManufacturerDataMap.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "includes",
      "package": "akasha.bluetooth"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.lang.JsArray<T>::includes(T, int) @ akasha.bluetooth.BluetoothServiceDataMap.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.bluetooth.BluetoothServiceDataMap.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "includes",
      "package": "akasha.bluetooth"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.lang.JsArray<T>::includes(T, int) @ akasha.core.JsMap.Entry<K, V>",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.JsMap.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "includes",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.lang.JsArray<T>::includes(T, int) @ akasha.core.JsWeakMap.Entry<K, V>",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.JsWeakMap.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "includes",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.lang.JsArray<T>::includes(T, int) @ akasha.core.ObjectPropertyEntry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.ObjectPropertyEntry",
      "classSimpleName": "ObjectPropertyEntry",
      "elementKind": "method",
      "methodName": "includes",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.lang.JsArray<T>::includes(T, int) @ akasha.core.RegExpGroups.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.RegExpGroups.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "includes",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.lang.JsArray<T>::includes(T, int) @ akasha.core.RegExpResult.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.RegExpResult.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "includes",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.lang.JsArray<T>::includes(T, int) @ akasha.lang.JsArray.Entry<T>",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.lang.JsArray.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "includes",
      "package": "akasha.lang"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.lang.JsArray<T>::includes(T, int) @ akasha.rtc.RTCStatsReport.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.rtc.RTCStatsReport.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "includes",
      "package": "akasha.rtc"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.lang.JsArray<T>::includes(T, int) @ akasha.xr.XRInputSourceArray.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.xr.XRInputSourceArray.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "includes",
      "package": "akasha.xr"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.lang.JsArray<T>::includes(T, int)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.lang.JsArray",
      "classSimpleName": "JsArray",
      "elementKind": "method",
      "methodName": "includes",
      "package": "akasha.lang"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.rtc.RTCStatsReport::has(java.lang.String)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.rtc.RTCStatsReport",
      "classSimpleName": "RTCStatsReport",
      "elementKind": "method",
      "methodName": "has",
      "package": "akasha.rtc"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.wasm.WebAssembly::validate(akasha.core.BufferSource)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.wasm.WebAssembly",
      "classSimpleName": "WebAssembly",
      "elementKind": "method",
      "methodName": "validate",
      "package": "akasha.wasm"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method byte akasha.core.Int8Array::get(int)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.Int8Array",
      "classSimpleName": "Int8Array",
      "elementKind": "method",
      "methodName": "get",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method double akasha.Global::parseFloat(java.lang.String)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.Global",
      "classSimpleName": "Global",
      "elementKind": "method",
      "methodName": "parseFloat",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method double akasha.core.Float64Array::get(int)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.Float64Array",
      "classSimpleName": "Float64Array",
      "elementKind": "method",
      "methodName": "get",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method double akasha.core.JsDate::getTime()",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.JsDate",
      "classSimpleName": "JsDate",
      "elementKind": "method",
      "methodName": "getTime",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method double akasha.core.JsMath::abs(double)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.JsMath",
      "classSimpleName": "JsMath",
      "elementKind": "method",
      "methodName": "abs",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method double akasha.core.JsMath::acos(double)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.JsMath",
      "classSimpleName": "JsMath",
      "elementKind": "method",
      "methodName": "acos",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method double akasha.core.JsMath::acosh(double)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.JsMath",
      "classSimpleName": "JsMath",
      "elementKind": "method",
      "methodName": "acosh",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method double akasha.core.JsMath::asin(double)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.JsMath",
      "classSimpleName": "JsMath",
      "elementKind": "method",
      "methodName": "asin",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method double akasha.core.JsMath::asinh(double)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.JsMath",
      "classSimpleName": "JsMath",
      "elementKind": "method",
      "methodName": "asinh",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method double akasha.core.JsMath::atan(double)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.JsMath",
      "classSimpleName": "JsMath",
      "elementKind": "method",
      "methodName": "atan",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method double akasha.core.JsMath::atan2(double, double)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.JsMath",
      "classSimpleName": "JsMath",
      "elementKind": "method",
      "methodName": "atan2",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method double akasha.core.JsMath::atanh(double)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.JsMath",
      "classSimpleName": "JsMath",
      "elementKind": "method",
      "methodName": "atanh",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method double akasha.core.JsMath::cbrt(double)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.JsMath",
      "classSimpleName": "JsMath",
      "elementKind": "method",
      "methodName": "cbrt",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method double akasha.core.JsMath::cos(double)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.JsMath",
      "classSimpleName": "JsMath",
      "elementKind": "method",
      "methodName": "cos",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method double akasha.core.JsMath::cosh(double)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.JsMath",
      "classSimpleName": "JsMath",
      "elementKind": "method",
      "methodName": "cosh",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method double akasha.core.JsMath::exp(double)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.JsMath",
      "classSimpleName": "JsMath",
      "elementKind": "method",
      "methodName": "exp",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method double akasha.core.JsMath::expm1(double)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.JsMath",
      "classSimpleName": "JsMath",
      "elementKind": "method",
      "methodName": "expm1",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method double akasha.core.JsMath::hypot(double[])",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.JsMath",
      "classSimpleName": "JsMath",
      "elementKind": "method",
      "methodName": "hypot",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method double akasha.core.JsMath::imul(double[])",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.JsMath",
      "classSimpleName": "JsMath",
      "elementKind": "method",
      "methodName": "imul",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method double akasha.core.JsMath::log(double)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.JsMath",
      "classSimpleName": "JsMath",
      "elementKind": "method",
      "methodName": "log",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method double akasha.core.JsMath::log10(double)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.JsMath",
      "classSimpleName": "JsMath",
      "elementKind": "method",
      "methodName": "log10",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method double akasha.core.JsMath::log1p(double)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.JsMath",
      "classSimpleName": "JsMath",
      "elementKind": "method",
      "methodName": "log1p",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method double akasha.core.JsMath::log2(double)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.JsMath",
      "classSimpleName": "JsMath",
      "elementKind": "method",
      "methodName": "log2",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method double akasha.core.JsMath::max(double[])",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.JsMath",
      "classSimpleName": "JsMath",
      "elementKind": "method",
      "methodName": "max",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method double akasha.core.JsMath::min(double[])",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.JsMath",
      "classSimpleName": "JsMath",
      "elementKind": "method",
      "methodName": "min",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method double akasha.core.JsMath::pow(double, double)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.JsMath",
      "classSimpleName": "JsMath",
      "elementKind": "method",
      "methodName": "pow",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method double akasha.core.JsMath::random()",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.JsMath",
      "classSimpleName": "JsMath",
      "elementKind": "method",
      "methodName": "random",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method double akasha.core.JsMath::sign(double)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.JsMath",
      "classSimpleName": "JsMath",
      "elementKind": "method",
      "methodName": "sign",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method double akasha.core.JsMath::sin(double)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.JsMath",
      "classSimpleName": "JsMath",
      "elementKind": "method",
      "methodName": "sin",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method double akasha.core.JsMath::sinh(double)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.JsMath",
      "classSimpleName": "JsMath",
      "elementKind": "method",
      "methodName": "sinh",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method double akasha.core.JsMath::sqrt(double)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.JsMath",
      "classSimpleName": "JsMath",
      "elementKind": "method",
      "methodName": "sqrt",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method double akasha.core.JsMath::tan(double)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.JsMath",
      "classSimpleName": "JsMath",
      "elementKind": "method",
      "methodName": "tan",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method double akasha.core.JsMath::tanh(double)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.JsMath",
      "classSimpleName": "JsMath",
      "elementKind": "method",
      "methodName": "tanh",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method double akasha.perf.Performance::now()",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.perf.Performance",
      "classSimpleName": "Performance",
      "elementKind": "method",
      "methodName": "now",
      "package": "akasha.perf"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method float akasha.core.Float32Array::get(int)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.Float32Array",
      "classSimpleName": "Float32Array",
      "elementKind": "method",
      "methodName": "get",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method float akasha.core.JsMath::fround(double)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.JsMath",
      "classSimpleName": "JsMath",
      "elementKind": "method",
      "methodName": "fround",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.Global::parseInt(java.lang.String, int)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.Global",
      "classSimpleName": "Global",
      "elementKind": "method",
      "methodName": "parseInt",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.Node::compareDocumentPosition(akasha.Node) @ akasha.Attr",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.Attr",
      "classSimpleName": "Attr",
      "elementKind": "method",
      "methodName": "compareDocumentPosition",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.Node::compareDocumentPosition(akasha.Node) @ akasha.Audio",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.Audio",
      "classSimpleName": "Audio",
      "elementKind": "method",
      "methodName": "compareDocumentPosition",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.Node::compareDocumentPosition(akasha.Node) @ akasha.CDATASection",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.CDATASection",
      "classSimpleName": "CDATASection",
      "elementKind": "method",
      "methodName": "compareDocumentPosition",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.Node::compareDocumentPosition(akasha.Node) @ akasha.CharacterData",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.CharacterData",
      "classSimpleName": "CharacterData",
      "elementKind": "method",
      "methodName": "compareDocumentPosition",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.Node::compareDocumentPosition(akasha.Node) @ akasha.Comment",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.Comment",
      "classSimpleName": "Comment",
      "elementKind": "method",
      "methodName": "compareDocumentPosition",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.Node::compareDocumentPosition(akasha.Node) @ akasha.Document",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.Document",
      "classSimpleName": "Document",
      "elementKind": "method",
      "methodName": "compareDocumentPosition",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.Node::compareDocumentPosition(akasha.Node) @ akasha.DocumentFragment",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.DocumentFragment",
      "classSimpleName": "DocumentFragment",
      "elementKind": "method",
      "methodName": "compareDocumentPosition",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.Node::compareDocumentPosition(akasha.Node) @ akasha.DocumentType",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.DocumentType",
      "classSimpleName": "DocumentType",
      "elementKind": "method",
      "methodName": "compareDocumentPosition",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.Node::compareDocumentPosition(akasha.Node) @ akasha.Element",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.Element",
      "classSimpleName": "Element",
      "elementKind": "method",
      "methodName": "compareDocumentPosition",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.Node::compareDocumentPosition(akasha.Node) @ akasha.HTMLAnchorElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLAnchorElement",
      "classSimpleName": "HTMLAnchorElement",
      "elementKind": "method",
      "methodName": "compareDocumentPosition",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.Node::compareDocumentPosition(akasha.Node) @ akasha.HTMLAreaElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLAreaElement",
      "classSimpleName": "HTMLAreaElement",
      "elementKind": "method",
      "methodName": "compareDocumentPosition",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.Node::compareDocumentPosition(akasha.Node) @ akasha.HTMLAudioElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLAudioElement",
      "classSimpleName": "HTMLAudioElement",
      "elementKind": "method",
      "methodName": "compareDocumentPosition",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.Node::compareDocumentPosition(akasha.Node) @ akasha.HTMLBRElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLBRElement",
      "classSimpleName": "HTMLBRElement",
      "elementKind": "method",
      "methodName": "compareDocumentPosition",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.Node::compareDocumentPosition(akasha.Node) @ akasha.HTMLBaseElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLBaseElement",
      "classSimpleName": "HTMLBaseElement",
      "elementKind": "method",
      "methodName": "compareDocumentPosition",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.Node::compareDocumentPosition(akasha.Node) @ akasha.HTMLBodyElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLBodyElement",
      "classSimpleName": "HTMLBodyElement",
      "elementKind": "method",
      "methodName": "compareDocumentPosition",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.Node::compareDocumentPosition(akasha.Node) @ akasha.HTMLButtonElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLButtonElement",
      "classSimpleName": "HTMLButtonElement",
      "elementKind": "method",
      "methodName": "compareDocumentPosition",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.Node::compareDocumentPosition(akasha.Node) @ akasha.HTMLCanvasElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLCanvasElement",
      "classSimpleName": "HTMLCanvasElement",
      "elementKind": "method",
      "methodName": "compareDocumentPosition",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.Node::compareDocumentPosition(akasha.Node) @ akasha.HTMLDListElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLDListElement",
      "classSimpleName": "HTMLDListElement",
      "elementKind": "method",
      "methodName": "compareDocumentPosition",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.Node::compareDocumentPosition(akasha.Node) @ akasha.HTMLDataElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLDataElement",
      "classSimpleName": "HTMLDataElement",
      "elementKind": "method",
      "methodName": "compareDocumentPosition",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.Node::compareDocumentPosition(akasha.Node) @ akasha.HTMLDataListElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLDataListElement",
      "classSimpleName": "HTMLDataListElement",
      "elementKind": "method",
      "methodName": "compareDocumentPosition",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.Node::compareDocumentPosition(akasha.Node) @ akasha.HTMLDetailsElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLDetailsElement",
      "classSimpleName": "HTMLDetailsElement",
      "elementKind": "method",
      "methodName": "compareDocumentPosition",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.Node::compareDocumentPosition(akasha.Node) @ akasha.HTMLDialogElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLDialogElement",
      "classSimpleName": "HTMLDialogElement",
      "elementKind": "method",
      "methodName": "compareDocumentPosition",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.Node::compareDocumentPosition(akasha.Node) @ akasha.HTMLDirectoryElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLDirectoryElement",
      "classSimpleName": "HTMLDirectoryElement",
      "elementKind": "method",
      "methodName": "compareDocumentPosition",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.Node::compareDocumentPosition(akasha.Node) @ akasha.HTMLDivElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLDivElement",
      "classSimpleName": "HTMLDivElement",
      "elementKind": "method",
      "methodName": "compareDocumentPosition",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.Node::compareDocumentPosition(akasha.Node) @ akasha.HTMLElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLElement",
      "classSimpleName": "HTMLElement",
      "elementKind": "method",
      "methodName": "compareDocumentPosition",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.Node::compareDocumentPosition(akasha.Node) @ akasha.HTMLEmbedElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLEmbedElement",
      "classSimpleName": "HTMLEmbedElement",
      "elementKind": "method",
      "methodName": "compareDocumentPosition",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.Node::compareDocumentPosition(akasha.Node) @ akasha.HTMLFieldSetElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLFieldSetElement",
      "classSimpleName": "HTMLFieldSetElement",
      "elementKind": "method",
      "methodName": "compareDocumentPosition",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.Node::compareDocumentPosition(akasha.Node) @ akasha.HTMLFontElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLFontElement",
      "classSimpleName": "HTMLFontElement",
      "elementKind": "method",
      "methodName": "compareDocumentPosition",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.Node::compareDocumentPosition(akasha.Node) @ akasha.HTMLFormElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLFormElement",
      "classSimpleName": "HTMLFormElement",
      "elementKind": "method",
      "methodName": "compareDocumentPosition",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.Node::compareDocumentPosition(akasha.Node) @ akasha.HTMLFrameElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLFrameElement",
      "classSimpleName": "HTMLFrameElement",
      "elementKind": "method",
      "methodName": "compareDocumentPosition",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.Node::compareDocumentPosition(akasha.Node) @ akasha.HTMLFrameSetElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLFrameSetElement",
      "classSimpleName": "HTMLFrameSetElement",
      "elementKind": "method",
      "methodName": "compareDocumentPosition",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.Node::compareDocumentPosition(akasha.Node) @ akasha.HTMLHRElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLHRElement",
      "classSimpleName": "HTMLHRElement",
      "elementKind": "method",
      "methodName": "compareDocumentPosition",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.Node::compareDocumentPosition(akasha.Node) @ akasha.HTMLHeadElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLHeadElement",
      "classSimpleName": "HTMLHeadElement",
      "elementKind": "method",
      "methodName": "compareDocumentPosition",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.Node::compareDocumentPosition(akasha.Node) @ akasha.HTMLHeadingElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLHeadingElement",
      "classSimpleName": "HTMLHeadingElement",
      "elementKind": "method",
      "methodName": "compareDocumentPosition",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.Node::compareDocumentPosition(akasha.Node) @ akasha.HTMLHtmlElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLHtmlElement",
      "classSimpleName": "HTMLHtmlElement",
      "elementKind": "method",
      "methodName": "compareDocumentPosition",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.Node::compareDocumentPosition(akasha.Node) @ akasha.HTMLIFrameElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLIFrameElement",
      "classSimpleName": "HTMLIFrameElement",
      "elementKind": "method",
      "methodName": "compareDocumentPosition",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.Node::compareDocumentPosition(akasha.Node) @ akasha.HTMLImageElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLImageElement",
      "classSimpleName": "HTMLImageElement",
      "elementKind": "method",
      "methodName": "compareDocumentPosition",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.Node::compareDocumentPosition(akasha.Node) @ akasha.HTMLInputElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLInputElement",
      "classSimpleName": "HTMLInputElement",
      "elementKind": "method",
      "methodName": "compareDocumentPosition",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.Node::compareDocumentPosition(akasha.Node) @ akasha.HTMLLIElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLLIElement",
      "classSimpleName": "HTMLLIElement",
      "elementKind": "method",
      "methodName": "compareDocumentPosition",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.Node::compareDocumentPosition(akasha.Node) @ akasha.HTMLLabelElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLLabelElement",
      "classSimpleName": "HTMLLabelElement",
      "elementKind": "method",
      "methodName": "compareDocumentPosition",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.Node::compareDocumentPosition(akasha.Node) @ akasha.HTMLLegendElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLLegendElement",
      "classSimpleName": "HTMLLegendElement",
      "elementKind": "method",
      "methodName": "compareDocumentPosition",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.Node::compareDocumentPosition(akasha.Node) @ akasha.HTMLLinkElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLLinkElement",
      "classSimpleName": "HTMLLinkElement",
      "elementKind": "method",
      "methodName": "compareDocumentPosition",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.Node::compareDocumentPosition(akasha.Node) @ akasha.HTMLMapElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLMapElement",
      "classSimpleName": "HTMLMapElement",
      "elementKind": "method",
      "methodName": "compareDocumentPosition",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.Node::compareDocumentPosition(akasha.Node) @ akasha.HTMLMarqueeElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLMarqueeElement",
      "classSimpleName": "HTMLMarqueeElement",
      "elementKind": "method",
      "methodName": "compareDocumentPosition",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.Node::compareDocumentPosition(akasha.Node) @ akasha.HTMLMediaElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLMediaElement",
      "classSimpleName": "HTMLMediaElement",
      "elementKind": "method",
      "methodName": "compareDocumentPosition",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.Node::compareDocumentPosition(akasha.Node) @ akasha.HTMLMenuElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLMenuElement",
      "classSimpleName": "HTMLMenuElement",
      "elementKind": "method",
      "methodName": "compareDocumentPosition",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.Node::compareDocumentPosition(akasha.Node) @ akasha.HTMLMetaElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLMetaElement",
      "classSimpleName": "HTMLMetaElement",
      "elementKind": "method",
      "methodName": "compareDocumentPosition",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.Node::compareDocumentPosition(akasha.Node) @ akasha.HTMLMeterElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLMeterElement",
      "classSimpleName": "HTMLMeterElement",
      "elementKind": "method",
      "methodName": "compareDocumentPosition",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.Node::compareDocumentPosition(akasha.Node) @ akasha.HTMLModElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLModElement",
      "classSimpleName": "HTMLModElement",
      "elementKind": "method",
      "methodName": "compareDocumentPosition",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.Node::compareDocumentPosition(akasha.Node) @ akasha.HTMLOListElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLOListElement",
      "classSimpleName": "HTMLOListElement",
      "elementKind": "method",
      "methodName": "compareDocumentPosition",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.Node::compareDocumentPosition(akasha.Node) @ akasha.HTMLObjectElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLObjectElement",
      "classSimpleName": "HTMLObjectElement",
      "elementKind": "method",
      "methodName": "compareDocumentPosition",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.Node::compareDocumentPosition(akasha.Node) @ akasha.HTMLOptGroupElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLOptGroupElement",
      "classSimpleName": "HTMLOptGroupElement",
      "elementKind": "method",
      "methodName": "compareDocumentPosition",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.Node::compareDocumentPosition(akasha.Node) @ akasha.HTMLOptionElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLOptionElement",
      "classSimpleName": "HTMLOptionElement",
      "elementKind": "method",
      "methodName": "compareDocumentPosition",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.Node::compareDocumentPosition(akasha.Node) @ akasha.HTMLOutputElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLOutputElement",
      "classSimpleName": "HTMLOutputElement",
      "elementKind": "method",
      "methodName": "compareDocumentPosition",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.Node::compareDocumentPosition(akasha.Node) @ akasha.HTMLParagraphElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLParagraphElement",
      "classSimpleName": "HTMLParagraphElement",
      "elementKind": "method",
      "methodName": "compareDocumentPosition",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.Node::compareDocumentPosition(akasha.Node) @ akasha.HTMLParamElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLParamElement",
      "classSimpleName": "HTMLParamElement",
      "elementKind": "method",
      "methodName": "compareDocumentPosition",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.Node::compareDocumentPosition(akasha.Node) @ akasha.HTMLPictureElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLPictureElement",
      "classSimpleName": "HTMLPictureElement",
      "elementKind": "method",
      "methodName": "compareDocumentPosition",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.Node::compareDocumentPosition(akasha.Node) @ akasha.HTMLPreElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLPreElement",
      "classSimpleName": "HTMLPreElement",
      "elementKind": "method",
      "methodName": "compareDocumentPosition",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.Node::compareDocumentPosition(akasha.Node) @ akasha.HTMLProgressElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLProgressElement",
      "classSimpleName": "HTMLProgressElement",
      "elementKind": "method",
      "methodName": "compareDocumentPosition",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.Node::compareDocumentPosition(akasha.Node) @ akasha.HTMLQuoteElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLQuoteElement",
      "classSimpleName": "HTMLQuoteElement",
      "elementKind": "method",
      "methodName": "compareDocumentPosition",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.Node::compareDocumentPosition(akasha.Node) @ akasha.HTMLScriptElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLScriptElement",
      "classSimpleName": "HTMLScriptElement",
      "elementKind": "method",
      "methodName": "compareDocumentPosition",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.Node::compareDocumentPosition(akasha.Node) @ akasha.HTMLSelectElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLSelectElement",
      "classSimpleName": "HTMLSelectElement",
      "elementKind": "method",
      "methodName": "compareDocumentPosition",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.Node::compareDocumentPosition(akasha.Node) @ akasha.HTMLSlotElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLSlotElement",
      "classSimpleName": "HTMLSlotElement",
      "elementKind": "method",
      "methodName": "compareDocumentPosition",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.Node::compareDocumentPosition(akasha.Node) @ akasha.HTMLSourceElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLSourceElement",
      "classSimpleName": "HTMLSourceElement",
      "elementKind": "method",
      "methodName": "compareDocumentPosition",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.Node::compareDocumentPosition(akasha.Node) @ akasha.HTMLSpanElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLSpanElement",
      "classSimpleName": "HTMLSpanElement",
      "elementKind": "method",
      "methodName": "compareDocumentPosition",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.Node::compareDocumentPosition(akasha.Node) @ akasha.HTMLStyleElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLStyleElement",
      "classSimpleName": "HTMLStyleElement",
      "elementKind": "method",
      "methodName": "compareDocumentPosition",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.Node::compareDocumentPosition(akasha.Node) @ akasha.HTMLTableCaptionElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLTableCaptionElement",
      "classSimpleName": "HTMLTableCaptionElement",
      "elementKind": "method",
      "methodName": "compareDocumentPosition",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.Node::compareDocumentPosition(akasha.Node) @ akasha.HTMLTableCellElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLTableCellElement",
      "classSimpleName": "HTMLTableCellElement",
      "elementKind": "method",
      "methodName": "compareDocumentPosition",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.Node::compareDocumentPosition(akasha.Node) @ akasha.HTMLTableColElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLTableColElement",
      "classSimpleName": "HTMLTableColElement",
      "elementKind": "method",
      "methodName": "compareDocumentPosition",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.Node::compareDocumentPosition(akasha.Node) @ akasha.HTMLTableElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLTableElement",
      "classSimpleName": "HTMLTableElement",
      "elementKind": "method",
      "methodName": "compareDocumentPosition",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.Node::compareDocumentPosition(akasha.Node) @ akasha.HTMLTableRowElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLTableRowElement",
      "classSimpleName": "HTMLTableRowElement",
      "elementKind": "method",
      "methodName": "compareDocumentPosition",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.Node::compareDocumentPosition(akasha.Node) @ akasha.HTMLTableSectionElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLTableSectionElement",
      "classSimpleName": "HTMLTableSectionElement",
      "elementKind": "method",
      "methodName": "compareDocumentPosition",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.Node::compareDocumentPosition(akasha.Node) @ akasha.HTMLTemplateElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLTemplateElement",
      "classSimpleName": "HTMLTemplateElement",
      "elementKind": "method",
      "methodName": "compareDocumentPosition",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.Node::compareDocumentPosition(akasha.Node) @ akasha.HTMLTextAreaElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLTextAreaElement",
      "classSimpleName": "HTMLTextAreaElement",
      "elementKind": "method",
      "methodName": "compareDocumentPosition",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.Node::compareDocumentPosition(akasha.Node) @ akasha.HTMLTimeElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLTimeElement",
      "classSimpleName": "HTMLTimeElement",
      "elementKind": "method",
      "methodName": "compareDocumentPosition",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.Node::compareDocumentPosition(akasha.Node) @ akasha.HTMLTitleElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLTitleElement",
      "classSimpleName": "HTMLTitleElement",
      "elementKind": "method",
      "methodName": "compareDocumentPosition",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.Node::compareDocumentPosition(akasha.Node) @ akasha.HTMLTrackElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLTrackElement",
      "classSimpleName": "HTMLTrackElement",
      "elementKind": "method",
      "methodName": "compareDocumentPosition",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.Node::compareDocumentPosition(akasha.Node) @ akasha.HTMLUListElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLUListElement",
      "classSimpleName": "HTMLUListElement",
      "elementKind": "method",
      "methodName": "compareDocumentPosition",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.Node::compareDocumentPosition(akasha.Node) @ akasha.HTMLUnknownElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLUnknownElement",
      "classSimpleName": "HTMLUnknownElement",
      "elementKind": "method",
      "methodName": "compareDocumentPosition",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.Node::compareDocumentPosition(akasha.Node) @ akasha.HTMLVideoElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLVideoElement",
      "classSimpleName": "HTMLVideoElement",
      "elementKind": "method",
      "methodName": "compareDocumentPosition",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.Node::compareDocumentPosition(akasha.Node) @ akasha.Image",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.Image",
      "classSimpleName": "Image",
      "elementKind": "method",
      "methodName": "compareDocumentPosition",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.Node::compareDocumentPosition(akasha.Node) @ akasha.Option",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.Option",
      "classSimpleName": "Option",
      "elementKind": "method",
      "methodName": "compareDocumentPosition",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.Node::compareDocumentPosition(akasha.Node) @ akasha.ProcessingInstruction",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.ProcessingInstruction",
      "classSimpleName": "ProcessingInstruction",
      "elementKind": "method",
      "methodName": "compareDocumentPosition",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.Node::compareDocumentPosition(akasha.Node) @ akasha.ShadowRoot",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.ShadowRoot",
      "classSimpleName": "ShadowRoot",
      "elementKind": "method",
      "methodName": "compareDocumentPosition",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.Node::compareDocumentPosition(akasha.Node) @ akasha.Text",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.Text",
      "classSimpleName": "Text",
      "elementKind": "method",
      "methodName": "compareDocumentPosition",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.Node::compareDocumentPosition(akasha.Node) @ akasha.XMLDocument",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.XMLDocument",
      "classSimpleName": "XMLDocument",
      "elementKind": "method",
      "methodName": "compareDocumentPosition",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.Node::compareDocumentPosition(akasha.Node) @ akasha.svg.SVGAElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGAElement",
      "classSimpleName": "SVGAElement",
      "elementKind": "method",
      "methodName": "compareDocumentPosition",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.Node::compareDocumentPosition(akasha.Node) @ akasha.svg.SVGCircleElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGCircleElement",
      "classSimpleName": "SVGCircleElement",
      "elementKind": "method",
      "methodName": "compareDocumentPosition",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.Node::compareDocumentPosition(akasha.Node) @ akasha.svg.SVGClipPathElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGClipPathElement",
      "classSimpleName": "SVGClipPathElement",
      "elementKind": "method",
      "methodName": "compareDocumentPosition",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.Node::compareDocumentPosition(akasha.Node) @ akasha.svg.SVGComponentTransferFunctionElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGComponentTransferFunctionElement",
      "classSimpleName": "SVGComponentTransferFunctionElement",
      "elementKind": "method",
      "methodName": "compareDocumentPosition",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.Node::compareDocumentPosition(akasha.Node) @ akasha.svg.SVGDefsElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGDefsElement",
      "classSimpleName": "SVGDefsElement",
      "elementKind": "method",
      "methodName": "compareDocumentPosition",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.Node::compareDocumentPosition(akasha.Node) @ akasha.svg.SVGDescElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGDescElement",
      "classSimpleName": "SVGDescElement",
      "elementKind": "method",
      "methodName": "compareDocumentPosition",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.Node::compareDocumentPosition(akasha.Node) @ akasha.svg.SVGElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGElement",
      "classSimpleName": "SVGElement",
      "elementKind": "method",
      "methodName": "compareDocumentPosition",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.Node::compareDocumentPosition(akasha.Node) @ akasha.svg.SVGEllipseElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGEllipseElement",
      "classSimpleName": "SVGEllipseElement",
      "elementKind": "method",
      "methodName": "compareDocumentPosition",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.Node::compareDocumentPosition(akasha.Node) @ akasha.svg.SVGFEBlendElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEBlendElement",
      "classSimpleName": "SVGFEBlendElement",
      "elementKind": "method",
      "methodName": "compareDocumentPosition",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.Node::compareDocumentPosition(akasha.Node) @ akasha.svg.SVGFEColorMatrixElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEColorMatrixElement",
      "classSimpleName": "SVGFEColorMatrixElement",
      "elementKind": "method",
      "methodName": "compareDocumentPosition",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.Node::compareDocumentPosition(akasha.Node) @ akasha.svg.SVGFEComponentTransferElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEComponentTransferElement",
      "classSimpleName": "SVGFEComponentTransferElement",
      "elementKind": "method",
      "methodName": "compareDocumentPosition",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.Node::compareDocumentPosition(akasha.Node) @ akasha.svg.SVGFECompositeElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFECompositeElement",
      "classSimpleName": "SVGFECompositeElement",
      "elementKind": "method",
      "methodName": "compareDocumentPosition",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.Node::compareDocumentPosition(akasha.Node) @ akasha.svg.SVGFEConvolveMatrixElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEConvolveMatrixElement",
      "classSimpleName": "SVGFEConvolveMatrixElement",
      "elementKind": "method",
      "methodName": "compareDocumentPosition",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.Node::compareDocumentPosition(akasha.Node) @ akasha.svg.SVGFEDiffuseLightingElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEDiffuseLightingElement",
      "classSimpleName": "SVGFEDiffuseLightingElement",
      "elementKind": "method",
      "methodName": "compareDocumentPosition",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.Node::compareDocumentPosition(akasha.Node) @ akasha.svg.SVGFEDisplacementMapElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEDisplacementMapElement",
      "classSimpleName": "SVGFEDisplacementMapElement",
      "elementKind": "method",
      "methodName": "compareDocumentPosition",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.Node::compareDocumentPosition(akasha.Node) @ akasha.svg.SVGFEDistantLightElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEDistantLightElement",
      "classSimpleName": "SVGFEDistantLightElement",
      "elementKind": "method",
      "methodName": "compareDocumentPosition",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.Node::compareDocumentPosition(akasha.Node) @ akasha.svg.SVGFEDropShadowElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEDropShadowElement",
      "classSimpleName": "SVGFEDropShadowElement",
      "elementKind": "method",
      "methodName": "compareDocumentPosition",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.Node::compareDocumentPosition(akasha.Node) @ akasha.svg.SVGFEFloodElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEFloodElement",
      "classSimpleName": "SVGFEFloodElement",
      "elementKind": "method",
      "methodName": "compareDocumentPosition",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.Node::compareDocumentPosition(akasha.Node) @ akasha.svg.SVGFEFuncAElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEFuncAElement",
      "classSimpleName": "SVGFEFuncAElement",
      "elementKind": "method",
      "methodName": "compareDocumentPosition",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.Node::compareDocumentPosition(akasha.Node) @ akasha.svg.SVGFEFuncBElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEFuncBElement",
      "classSimpleName": "SVGFEFuncBElement",
      "elementKind": "method",
      "methodName": "compareDocumentPosition",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.Node::compareDocumentPosition(akasha.Node) @ akasha.svg.SVGFEFuncGElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEFuncGElement",
      "classSimpleName": "SVGFEFuncGElement",
      "elementKind": "method",
      "methodName": "compareDocumentPosition",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.Node::compareDocumentPosition(akasha.Node) @ akasha.svg.SVGFEFuncRElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEFuncRElement",
      "classSimpleName": "SVGFEFuncRElement",
      "elementKind": "method",
      "methodName": "compareDocumentPosition",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.Node::compareDocumentPosition(akasha.Node) @ akasha.svg.SVGFEGaussianBlurElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEGaussianBlurElement",
      "classSimpleName": "SVGFEGaussianBlurElement",
      "elementKind": "method",
      "methodName": "compareDocumentPosition",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.Node::compareDocumentPosition(akasha.Node) @ akasha.svg.SVGFEImageElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEImageElement",
      "classSimpleName": "SVGFEImageElement",
      "elementKind": "method",
      "methodName": "compareDocumentPosition",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.Node::compareDocumentPosition(akasha.Node) @ akasha.svg.SVGFEMergeElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEMergeElement",
      "classSimpleName": "SVGFEMergeElement",
      "elementKind": "method",
      "methodName": "compareDocumentPosition",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.Node::compareDocumentPosition(akasha.Node) @ akasha.svg.SVGFEMergeNodeElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEMergeNodeElement",
      "classSimpleName": "SVGFEMergeNodeElement",
      "elementKind": "method",
      "methodName": "compareDocumentPosition",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.Node::compareDocumentPosition(akasha.Node) @ akasha.svg.SVGFEMorphologyElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEMorphologyElement",
      "classSimpleName": "SVGFEMorphologyElement",
      "elementKind": "method",
      "methodName": "compareDocumentPosition",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.Node::compareDocumentPosition(akasha.Node) @ akasha.svg.SVGFEOffsetElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEOffsetElement",
      "classSimpleName": "SVGFEOffsetElement",
      "elementKind": "method",
      "methodName": "compareDocumentPosition",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.Node::compareDocumentPosition(akasha.Node) @ akasha.svg.SVGFEPointLightElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEPointLightElement",
      "classSimpleName": "SVGFEPointLightElement",
      "elementKind": "method",
      "methodName": "compareDocumentPosition",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.Node::compareDocumentPosition(akasha.Node) @ akasha.svg.SVGFESpecularLightingElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFESpecularLightingElement",
      "classSimpleName": "SVGFESpecularLightingElement",
      "elementKind": "method",
      "methodName": "compareDocumentPosition",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.Node::compareDocumentPosition(akasha.Node) @ akasha.svg.SVGFESpotLightElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFESpotLightElement",
      "classSimpleName": "SVGFESpotLightElement",
      "elementKind": "method",
      "methodName": "compareDocumentPosition",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.Node::compareDocumentPosition(akasha.Node) @ akasha.svg.SVGFETileElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFETileElement",
      "classSimpleName": "SVGFETileElement",
      "elementKind": "method",
      "methodName": "compareDocumentPosition",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.Node::compareDocumentPosition(akasha.Node) @ akasha.svg.SVGFETurbulenceElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFETurbulenceElement",
      "classSimpleName": "SVGFETurbulenceElement",
      "elementKind": "method",
      "methodName": "compareDocumentPosition",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.Node::compareDocumentPosition(akasha.Node) @ akasha.svg.SVGFilterElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFilterElement",
      "classSimpleName": "SVGFilterElement",
      "elementKind": "method",
      "methodName": "compareDocumentPosition",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.Node::compareDocumentPosition(akasha.Node) @ akasha.svg.SVGForeignObjectElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGForeignObjectElement",
      "classSimpleName": "SVGForeignObjectElement",
      "elementKind": "method",
      "methodName": "compareDocumentPosition",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.Node::compareDocumentPosition(akasha.Node) @ akasha.svg.SVGGElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGGElement",
      "classSimpleName": "SVGGElement",
      "elementKind": "method",
      "methodName": "compareDocumentPosition",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.Node::compareDocumentPosition(akasha.Node) @ akasha.svg.SVGGeometryElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGGeometryElement",
      "classSimpleName": "SVGGeometryElement",
      "elementKind": "method",
      "methodName": "compareDocumentPosition",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.Node::compareDocumentPosition(akasha.Node) @ akasha.svg.SVGGradientElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGGradientElement",
      "classSimpleName": "SVGGradientElement",
      "elementKind": "method",
      "methodName": "compareDocumentPosition",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.Node::compareDocumentPosition(akasha.Node) @ akasha.svg.SVGGraphicsElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGGraphicsElement",
      "classSimpleName": "SVGGraphicsElement",
      "elementKind": "method",
      "methodName": "compareDocumentPosition",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.Node::compareDocumentPosition(akasha.Node) @ akasha.svg.SVGImageElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGImageElement",
      "classSimpleName": "SVGImageElement",
      "elementKind": "method",
      "methodName": "compareDocumentPosition",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.Node::compareDocumentPosition(akasha.Node) @ akasha.svg.SVGLineElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGLineElement",
      "classSimpleName": "SVGLineElement",
      "elementKind": "method",
      "methodName": "compareDocumentPosition",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.Node::compareDocumentPosition(akasha.Node) @ akasha.svg.SVGLinearGradientElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGLinearGradientElement",
      "classSimpleName": "SVGLinearGradientElement",
      "elementKind": "method",
      "methodName": "compareDocumentPosition",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.Node::compareDocumentPosition(akasha.Node) @ akasha.svg.SVGMarkerElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGMarkerElement",
      "classSimpleName": "SVGMarkerElement",
      "elementKind": "method",
      "methodName": "compareDocumentPosition",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.Node::compareDocumentPosition(akasha.Node) @ akasha.svg.SVGMaskElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGMaskElement",
      "classSimpleName": "SVGMaskElement",
      "elementKind": "method",
      "methodName": "compareDocumentPosition",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.Node::compareDocumentPosition(akasha.Node) @ akasha.svg.SVGMetadataElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGMetadataElement",
      "classSimpleName": "SVGMetadataElement",
      "elementKind": "method",
      "methodName": "compareDocumentPosition",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.Node::compareDocumentPosition(akasha.Node) @ akasha.svg.SVGPathElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGPathElement",
      "classSimpleName": "SVGPathElement",
      "elementKind": "method",
      "methodName": "compareDocumentPosition",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.Node::compareDocumentPosition(akasha.Node) @ akasha.svg.SVGPatternElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGPatternElement",
      "classSimpleName": "SVGPatternElement",
      "elementKind": "method",
      "methodName": "compareDocumentPosition",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.Node::compareDocumentPosition(akasha.Node) @ akasha.svg.SVGPolygonElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGPolygonElement",
      "classSimpleName": "SVGPolygonElement",
      "elementKind": "method",
      "methodName": "compareDocumentPosition",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.Node::compareDocumentPosition(akasha.Node) @ akasha.svg.SVGPolylineElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGPolylineElement",
      "classSimpleName": "SVGPolylineElement",
      "elementKind": "method",
      "methodName": "compareDocumentPosition",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.Node::compareDocumentPosition(akasha.Node) @ akasha.svg.SVGRadialGradientElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGRadialGradientElement",
      "classSimpleName": "SVGRadialGradientElement",
      "elementKind": "method",
      "methodName": "compareDocumentPosition",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.Node::compareDocumentPosition(akasha.Node) @ akasha.svg.SVGRectElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGRectElement",
      "classSimpleName": "SVGRectElement",
      "elementKind": "method",
      "methodName": "compareDocumentPosition",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.Node::compareDocumentPosition(akasha.Node) @ akasha.svg.SVGSVGElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGSVGElement",
      "classSimpleName": "SVGSVGElement",
      "elementKind": "method",
      "methodName": "compareDocumentPosition",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.Node::compareDocumentPosition(akasha.Node) @ akasha.svg.SVGScriptElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGScriptElement",
      "classSimpleName": "SVGScriptElement",
      "elementKind": "method",
      "methodName": "compareDocumentPosition",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.Node::compareDocumentPosition(akasha.Node) @ akasha.svg.SVGStopElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGStopElement",
      "classSimpleName": "SVGStopElement",
      "elementKind": "method",
      "methodName": "compareDocumentPosition",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.Node::compareDocumentPosition(akasha.Node) @ akasha.svg.SVGStyleElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGStyleElement",
      "classSimpleName": "SVGStyleElement",
      "elementKind": "method",
      "methodName": "compareDocumentPosition",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.Node::compareDocumentPosition(akasha.Node) @ akasha.svg.SVGSwitchElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGSwitchElement",
      "classSimpleName": "SVGSwitchElement",
      "elementKind": "method",
      "methodName": "compareDocumentPosition",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.Node::compareDocumentPosition(akasha.Node) @ akasha.svg.SVGSymbolElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGSymbolElement",
      "classSimpleName": "SVGSymbolElement",
      "elementKind": "method",
      "methodName": "compareDocumentPosition",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.Node::compareDocumentPosition(akasha.Node) @ akasha.svg.SVGTSpanElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGTSpanElement",
      "classSimpleName": "SVGTSpanElement",
      "elementKind": "method",
      "methodName": "compareDocumentPosition",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.Node::compareDocumentPosition(akasha.Node) @ akasha.svg.SVGTextContentElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGTextContentElement",
      "classSimpleName": "SVGTextContentElement",
      "elementKind": "method",
      "methodName": "compareDocumentPosition",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.Node::compareDocumentPosition(akasha.Node) @ akasha.svg.SVGTextElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGTextElement",
      "classSimpleName": "SVGTextElement",
      "elementKind": "method",
      "methodName": "compareDocumentPosition",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.Node::compareDocumentPosition(akasha.Node) @ akasha.svg.SVGTextPathElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGTextPathElement",
      "classSimpleName": "SVGTextPathElement",
      "elementKind": "method",
      "methodName": "compareDocumentPosition",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.Node::compareDocumentPosition(akasha.Node) @ akasha.svg.SVGTextPositioningElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGTextPositioningElement",
      "classSimpleName": "SVGTextPositioningElement",
      "elementKind": "method",
      "methodName": "compareDocumentPosition",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.Node::compareDocumentPosition(akasha.Node) @ akasha.svg.SVGTitleElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGTitleElement",
      "classSimpleName": "SVGTitleElement",
      "elementKind": "method",
      "methodName": "compareDocumentPosition",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.Node::compareDocumentPosition(akasha.Node) @ akasha.svg.SVGUnknownElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGUnknownElement",
      "classSimpleName": "SVGUnknownElement",
      "elementKind": "method",
      "methodName": "compareDocumentPosition",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.Node::compareDocumentPosition(akasha.Node) @ akasha.svg.SVGUseElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGUseElement",
      "classSimpleName": "SVGUseElement",
      "elementKind": "method",
      "methodName": "compareDocumentPosition",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.Node::compareDocumentPosition(akasha.Node) @ akasha.svg.SVGUseElementShadowRoot",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGUseElementShadowRoot",
      "classSimpleName": "SVGUseElementShadowRoot",
      "elementKind": "method",
      "methodName": "compareDocumentPosition",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.Node::compareDocumentPosition(akasha.Node) @ akasha.svg.SVGViewElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGViewElement",
      "classSimpleName": "SVGViewElement",
      "elementKind": "method",
      "methodName": "compareDocumentPosition",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.Node::compareDocumentPosition(akasha.Node)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.Node",
      "classSimpleName": "Node",
      "elementKind": "method",
      "methodName": "compareDocumentPosition",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.core.Int32Array::get(int)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.Int32Array",
      "classSimpleName": "Int32Array",
      "elementKind": "method",
      "methodName": "get",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.core.JsDate::getDate()",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.JsDate",
      "classSimpleName": "JsDate",
      "elementKind": "method",
      "methodName": "getDate",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.core.JsDate::getDay()",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.JsDate",
      "classSimpleName": "JsDate",
      "elementKind": "method",
      "methodName": "getDay",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.core.JsDate::getFullYear()",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.JsDate",
      "classSimpleName": "JsDate",
      "elementKind": "method",
      "methodName": "getFullYear",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.core.JsDate::getHours()",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.JsDate",
      "classSimpleName": "JsDate",
      "elementKind": "method",
      "methodName": "getHours",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.core.JsDate::getMilliseconds()",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.JsDate",
      "classSimpleName": "JsDate",
      "elementKind": "method",
      "methodName": "getMilliseconds",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.core.JsDate::getMinutes()",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.JsDate",
      "classSimpleName": "JsDate",
      "elementKind": "method",
      "methodName": "getMinutes",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.core.JsDate::getMonth()",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.JsDate",
      "classSimpleName": "JsDate",
      "elementKind": "method",
      "methodName": "getMonth",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.core.JsDate::getSeconds()",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.JsDate",
      "classSimpleName": "JsDate",
      "elementKind": "method",
      "methodName": "getSeconds",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.core.JsDate::getTimezoneOffset()",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.JsDate",
      "classSimpleName": "JsDate",
      "elementKind": "method",
      "methodName": "getTimezoneOffset",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.core.JsDate::getUTCDate()",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.JsDate",
      "classSimpleName": "JsDate",
      "elementKind": "method",
      "methodName": "getUTCDate",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.core.JsDate::getUTCDay()",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.JsDate",
      "classSimpleName": "JsDate",
      "elementKind": "method",
      "methodName": "getUTCDay",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.core.JsDate::getUTCFullYear()",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.JsDate",
      "classSimpleName": "JsDate",
      "elementKind": "method",
      "methodName": "getUTCFullYear",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.core.JsDate::getUTCHours()",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.JsDate",
      "classSimpleName": "JsDate",
      "elementKind": "method",
      "methodName": "getUTCHours",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.core.JsDate::getUTCMilliseconds()",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.JsDate",
      "classSimpleName": "JsDate",
      "elementKind": "method",
      "methodName": "getUTCMilliseconds",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.core.JsDate::getUTCMinutes()",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.JsDate",
      "classSimpleName": "JsDate",
      "elementKind": "method",
      "methodName": "getUTCMinutes",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.core.JsDate::getUTCMonth()",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.JsDate",
      "classSimpleName": "JsDate",
      "elementKind": "method",
      "methodName": "getUTCMonth",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.core.JsDate::getUTCSeconds()",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.JsDate",
      "classSimpleName": "JsDate",
      "elementKind": "method",
      "methodName": "getUTCSeconds",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.core.JsMath::ceil(double)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.JsMath",
      "classSimpleName": "JsMath",
      "elementKind": "method",
      "methodName": "ceil",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.core.JsMath::clz32(int)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.JsMath",
      "classSimpleName": "JsMath",
      "elementKind": "method",
      "methodName": "clz32",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.core.JsMath::floor(double)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.JsMath",
      "classSimpleName": "JsMath",
      "elementKind": "method",
      "methodName": "floor",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.core.JsMath::imul(int, int)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.JsMath",
      "classSimpleName": "JsMath",
      "elementKind": "method",
      "methodName": "imul",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.core.JsMath::round(double)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.JsMath",
      "classSimpleName": "JsMath",
      "elementKind": "method",
      "methodName": "round",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.core.JsMath::trunc(double)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.JsMath",
      "classSimpleName": "JsMath",
      "elementKind": "method",
      "methodName": "trunc",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.core.JsString::charCodeAt()",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.JsString",
      "classSimpleName": "JsString",
      "elementKind": "method",
      "methodName": "charCodeAt",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.core.JsString::charCodeAt(int)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.JsString",
      "classSimpleName": "JsString",
      "elementKind": "method",
      "methodName": "charCodeAt",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.core.JsString::codePointAt(int)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.JsString",
      "classSimpleName": "JsString",
      "elementKind": "method",
      "methodName": "codePointAt",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.core.JsString::indexOf(java.lang.String)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.JsString",
      "classSimpleName": "JsString",
      "elementKind": "method",
      "methodName": "indexOf",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.core.JsString::indexOf(java.lang.String, int)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.JsString",
      "classSimpleName": "JsString",
      "elementKind": "method",
      "methodName": "indexOf",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.core.JsString::lastIndexOf(java.lang.String)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.JsString",
      "classSimpleName": "JsString",
      "elementKind": "method",
      "methodName": "lastIndexOf",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.core.JsString::lastIndexOf(java.lang.String, int)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.JsString",
      "classSimpleName": "JsString",
      "elementKind": "method",
      "methodName": "lastIndexOf",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.core.JsString::localeCompare(java.lang.String)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.JsString",
      "classSimpleName": "JsString",
      "elementKind": "method",
      "methodName": "localeCompare",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.core.JsString::localeCompare(java.lang.String, akasha.lang.JsArray<java.lang.String>)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.JsString",
      "classSimpleName": "JsString",
      "elementKind": "method",
      "methodName": "localeCompare",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.core.JsString::localeCompare(java.lang.String, akasha.lang.JsArray<java.lang.String>, java.lang.Object)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.JsString",
      "classSimpleName": "JsString",
      "elementKind": "method",
      "methodName": "localeCompare",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.core.JsString::localeCompare(java.lang.String, java.lang.String)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.JsString",
      "classSimpleName": "JsString",
      "elementKind": "method",
      "methodName": "localeCompare",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.core.JsString::localeCompare(java.lang.String, java.lang.String, java.lang.Object)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.JsString",
      "classSimpleName": "JsString",
      "elementKind": "method",
      "methodName": "localeCompare",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.core.JsString::localeCompare(java.lang.String, java.lang.String[])",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.JsString",
      "classSimpleName": "JsString",
      "elementKind": "method",
      "methodName": "localeCompare",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.core.JsString::localeCompare(java.lang.String, java.lang.String[], java.lang.Object)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.JsString",
      "classSimpleName": "JsString",
      "elementKind": "method",
      "methodName": "localeCompare",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.core.Uint16Array::get(int)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.Uint16Array",
      "classSimpleName": "Uint16Array",
      "elementKind": "method",
      "methodName": "get",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.core.Uint32Array::get(int)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.Uint32Array",
      "classSimpleName": "Uint32Array",
      "elementKind": "method",
      "methodName": "get",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.gl.WebGL2RenderingContext::getAttribLocation(akasha.gl.WebGLProgram, java.lang.String)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.gl.WebGL2RenderingContext",
      "classSimpleName": "WebGL2RenderingContext",
      "elementKind": "method",
      "methodName": "getAttribLocation",
      "package": "akasha.gl"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.gl.WebGL2RenderingContext::getError()",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.gl.WebGL2RenderingContext",
      "classSimpleName": "WebGL2RenderingContext",
      "elementKind": "method",
      "methodName": "getError",
      "package": "akasha.gl"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.gl.WebGL2RenderingContext::getFragDataLocation(akasha.gl.WebGLProgram, java.lang.String)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.gl.WebGL2RenderingContext",
      "classSimpleName": "WebGL2RenderingContext",
      "elementKind": "method",
      "methodName": "getFragDataLocation",
      "package": "akasha.gl"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.gl.WebGL2RenderingContext::getUniformBlockIndex(akasha.gl.WebGLProgram, java.lang.String)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.gl.WebGL2RenderingContext",
      "classSimpleName": "WebGL2RenderingContext",
      "elementKind": "method",
      "methodName": "getUniformBlockIndex",
      "package": "akasha.gl"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.gl.WebGL2RenderingContext::getVertexAttribOffset(int, int)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.gl.WebGL2RenderingContext",
      "classSimpleName": "WebGL2RenderingContext",
      "elementKind": "method",
      "methodName": "getVertexAttribOffset",
      "package": "akasha.gl"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.gl.WebGLRenderingContext::getAttribLocation(akasha.gl.WebGLProgram, java.lang.String)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.gl.WebGLRenderingContext",
      "classSimpleName": "WebGLRenderingContext",
      "elementKind": "method",
      "methodName": "getAttribLocation",
      "package": "akasha.gl"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.gl.WebGLRenderingContext::getError()",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.gl.WebGLRenderingContext",
      "classSimpleName": "WebGLRenderingContext",
      "elementKind": "method",
      "methodName": "getError",
      "package": "akasha.gl"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.gl.WebGLRenderingContext::getVertexAttribOffset(int, int)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.gl.WebGLRenderingContext",
      "classSimpleName": "WebGLRenderingContext",
      "elementKind": "method",
      "methodName": "getVertexAttribOffset",
      "package": "akasha.gl"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.lang.JsArray<T>::indexOf(T) @ akasha.CSSFontFeatureValuesMap.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.CSSFontFeatureValuesMap.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "indexOf",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.lang.JsArray<T>::indexOf(T) @ akasha.CSSFontPaletteValuesRule.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.CSSFontPaletteValuesRule.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "indexOf",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.lang.JsArray<T>::indexOf(T) @ akasha.DOMTokenList.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.DOMTokenList.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "indexOf",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.lang.JsArray<T>::indexOf(T) @ akasha.FormData.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.FormData.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "indexOf",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.lang.JsArray<T>::indexOf(T) @ akasha.Headers.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.Headers.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "indexOf",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.lang.JsArray<T>::indexOf(T) @ akasha.MediaKeyStatusMap.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.MediaKeyStatusMap.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "indexOf",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.lang.JsArray<T>::indexOf(T) @ akasha.NodeList.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.NodeList.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "indexOf",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.lang.JsArray<T>::indexOf(T) @ akasha.URLSearchParams.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.URLSearchParams.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "indexOf",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.lang.JsArray<T>::indexOf(T) @ akasha.audio.AudioParamMap.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.audio.AudioParamMap.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "indexOf",
      "package": "akasha.audio"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.lang.JsArray<T>::indexOf(T) @ akasha.bluetooth.BluetoothManufacturerDataMap.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.bluetooth.BluetoothManufacturerDataMap.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "indexOf",
      "package": "akasha.bluetooth"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.lang.JsArray<T>::indexOf(T) @ akasha.bluetooth.BluetoothServiceDataMap.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.bluetooth.BluetoothServiceDataMap.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "indexOf",
      "package": "akasha.bluetooth"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.lang.JsArray<T>::indexOf(T) @ akasha.core.JsMap.Entry<K, V>",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.JsMap.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "indexOf",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.lang.JsArray<T>::indexOf(T) @ akasha.core.JsWeakMap.Entry<K, V>",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.JsWeakMap.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "indexOf",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.lang.JsArray<T>::indexOf(T) @ akasha.core.ObjectPropertyEntry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.ObjectPropertyEntry",
      "classSimpleName": "ObjectPropertyEntry",
      "elementKind": "method",
      "methodName": "indexOf",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.lang.JsArray<T>::indexOf(T) @ akasha.core.RegExpGroups.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.RegExpGroups.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "indexOf",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.lang.JsArray<T>::indexOf(T) @ akasha.core.RegExpResult.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.RegExpResult.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "indexOf",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.lang.JsArray<T>::indexOf(T) @ akasha.lang.JsArray.Entry<T>",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.lang.JsArray.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "indexOf",
      "package": "akasha.lang"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.lang.JsArray<T>::indexOf(T) @ akasha.rtc.RTCStatsReport.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.rtc.RTCStatsReport.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "indexOf",
      "package": "akasha.rtc"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.lang.JsArray<T>::indexOf(T) @ akasha.xr.XRInputSourceArray.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.xr.XRInputSourceArray.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "indexOf",
      "package": "akasha.xr"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.lang.JsArray<T>::indexOf(T)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.lang.JsArray",
      "classSimpleName": "JsArray",
      "elementKind": "method",
      "methodName": "indexOf",
      "package": "akasha.lang"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.lang.JsArray<T>::indexOf(T, int) @ akasha.CSSFontFeatureValuesMap.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.CSSFontFeatureValuesMap.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "indexOf",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.lang.JsArray<T>::indexOf(T, int) @ akasha.CSSFontPaletteValuesRule.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.CSSFontPaletteValuesRule.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "indexOf",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.lang.JsArray<T>::indexOf(T, int) @ akasha.DOMTokenList.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.DOMTokenList.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "indexOf",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.lang.JsArray<T>::indexOf(T, int) @ akasha.FormData.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.FormData.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "indexOf",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.lang.JsArray<T>::indexOf(T, int) @ akasha.Headers.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.Headers.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "indexOf",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.lang.JsArray<T>::indexOf(T, int) @ akasha.MediaKeyStatusMap.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.MediaKeyStatusMap.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "indexOf",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.lang.JsArray<T>::indexOf(T, int) @ akasha.NodeList.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.NodeList.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "indexOf",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.lang.JsArray<T>::indexOf(T, int) @ akasha.URLSearchParams.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.URLSearchParams.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "indexOf",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.lang.JsArray<T>::indexOf(T, int) @ akasha.audio.AudioParamMap.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.audio.AudioParamMap.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "indexOf",
      "package": "akasha.audio"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.lang.JsArray<T>::indexOf(T, int) @ akasha.bluetooth.BluetoothManufacturerDataMap.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.bluetooth.BluetoothManufacturerDataMap.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "indexOf",
      "package": "akasha.bluetooth"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.lang.JsArray<T>::indexOf(T, int) @ akasha.bluetooth.BluetoothServiceDataMap.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.bluetooth.BluetoothServiceDataMap.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "indexOf",
      "package": "akasha.bluetooth"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.lang.JsArray<T>::indexOf(T, int) @ akasha.core.JsMap.Entry<K, V>",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.JsMap.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "indexOf",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.lang.JsArray<T>::indexOf(T, int) @ akasha.core.JsWeakMap.Entry<K, V>",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.JsWeakMap.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "indexOf",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.lang.JsArray<T>::indexOf(T, int) @ akasha.core.ObjectPropertyEntry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.ObjectPropertyEntry",
      "classSimpleName": "ObjectPropertyEntry",
      "elementKind": "method",
      "methodName": "indexOf",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.lang.JsArray<T>::indexOf(T, int) @ akasha.core.RegExpGroups.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.RegExpGroups.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "indexOf",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.lang.JsArray<T>::indexOf(T, int) @ akasha.core.RegExpResult.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.RegExpResult.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "indexOf",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.lang.JsArray<T>::indexOf(T, int) @ akasha.lang.JsArray.Entry<T>",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.lang.JsArray.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "indexOf",
      "package": "akasha.lang"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.lang.JsArray<T>::indexOf(T, int) @ akasha.rtc.RTCStatsReport.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.rtc.RTCStatsReport.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "indexOf",
      "package": "akasha.rtc"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.lang.JsArray<T>::indexOf(T, int) @ akasha.xr.XRInputSourceArray.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.xr.XRInputSourceArray.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "indexOf",
      "package": "akasha.xr"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.lang.JsArray<T>::indexOf(T, int)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.lang.JsArray",
      "classSimpleName": "JsArray",
      "elementKind": "method",
      "methodName": "indexOf",
      "package": "akasha.lang"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.lang.JsArray<T>::lastIndexOf(T) @ akasha.CSSFontFeatureValuesMap.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.CSSFontFeatureValuesMap.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "lastIndexOf",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.lang.JsArray<T>::lastIndexOf(T) @ akasha.CSSFontPaletteValuesRule.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.CSSFontPaletteValuesRule.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "lastIndexOf",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.lang.JsArray<T>::lastIndexOf(T) @ akasha.DOMTokenList.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.DOMTokenList.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "lastIndexOf",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.lang.JsArray<T>::lastIndexOf(T) @ akasha.FormData.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.FormData.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "lastIndexOf",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.lang.JsArray<T>::lastIndexOf(T) @ akasha.Headers.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.Headers.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "lastIndexOf",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.lang.JsArray<T>::lastIndexOf(T) @ akasha.MediaKeyStatusMap.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.MediaKeyStatusMap.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "lastIndexOf",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.lang.JsArray<T>::lastIndexOf(T) @ akasha.NodeList.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.NodeList.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "lastIndexOf",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.lang.JsArray<T>::lastIndexOf(T) @ akasha.URLSearchParams.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.URLSearchParams.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "lastIndexOf",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.lang.JsArray<T>::lastIndexOf(T) @ akasha.audio.AudioParamMap.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.audio.AudioParamMap.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "lastIndexOf",
      "package": "akasha.audio"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.lang.JsArray<T>::lastIndexOf(T) @ akasha.bluetooth.BluetoothManufacturerDataMap.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.bluetooth.BluetoothManufacturerDataMap.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "lastIndexOf",
      "package": "akasha.bluetooth"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.lang.JsArray<T>::lastIndexOf(T) @ akasha.bluetooth.BluetoothServiceDataMap.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.bluetooth.BluetoothServiceDataMap.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "lastIndexOf",
      "package": "akasha.bluetooth"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.lang.JsArray<T>::lastIndexOf(T) @ akasha.core.JsMap.Entry<K, V>",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.JsMap.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "lastIndexOf",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.lang.JsArray<T>::lastIndexOf(T) @ akasha.core.JsWeakMap.Entry<K, V>",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.JsWeakMap.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "lastIndexOf",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.lang.JsArray<T>::lastIndexOf(T) @ akasha.core.ObjectPropertyEntry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.ObjectPropertyEntry",
      "classSimpleName": "ObjectPropertyEntry",
      "elementKind": "method",
      "methodName": "lastIndexOf",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.lang.JsArray<T>::lastIndexOf(T) @ akasha.core.RegExpGroups.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.RegExpGroups.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "lastIndexOf",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.lang.JsArray<T>::lastIndexOf(T) @ akasha.core.RegExpResult.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.RegExpResult.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "lastIndexOf",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.lang.JsArray<T>::lastIndexOf(T) @ akasha.lang.JsArray.Entry<T>",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.lang.JsArray.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "lastIndexOf",
      "package": "akasha.lang"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.lang.JsArray<T>::lastIndexOf(T) @ akasha.rtc.RTCStatsReport.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.rtc.RTCStatsReport.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "lastIndexOf",
      "package": "akasha.rtc"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.lang.JsArray<T>::lastIndexOf(T) @ akasha.xr.XRInputSourceArray.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.xr.XRInputSourceArray.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "lastIndexOf",
      "package": "akasha.xr"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.lang.JsArray<T>::lastIndexOf(T)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.lang.JsArray",
      "classSimpleName": "JsArray",
      "elementKind": "method",
      "methodName": "lastIndexOf",
      "package": "akasha.lang"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.lang.JsArray<T>::lastIndexOf(T, int) @ akasha.CSSFontFeatureValuesMap.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.CSSFontFeatureValuesMap.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "lastIndexOf",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.lang.JsArray<T>::lastIndexOf(T, int) @ akasha.CSSFontPaletteValuesRule.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.CSSFontPaletteValuesRule.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "lastIndexOf",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.lang.JsArray<T>::lastIndexOf(T, int) @ akasha.DOMTokenList.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.DOMTokenList.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "lastIndexOf",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.lang.JsArray<T>::lastIndexOf(T, int) @ akasha.FormData.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.FormData.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "lastIndexOf",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.lang.JsArray<T>::lastIndexOf(T, int) @ akasha.Headers.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.Headers.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "lastIndexOf",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.lang.JsArray<T>::lastIndexOf(T, int) @ akasha.MediaKeyStatusMap.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.MediaKeyStatusMap.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "lastIndexOf",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.lang.JsArray<T>::lastIndexOf(T, int) @ akasha.NodeList.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.NodeList.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "lastIndexOf",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.lang.JsArray<T>::lastIndexOf(T, int) @ akasha.URLSearchParams.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.URLSearchParams.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "lastIndexOf",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.lang.JsArray<T>::lastIndexOf(T, int) @ akasha.audio.AudioParamMap.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.audio.AudioParamMap.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "lastIndexOf",
      "package": "akasha.audio"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.lang.JsArray<T>::lastIndexOf(T, int) @ akasha.bluetooth.BluetoothManufacturerDataMap.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.bluetooth.BluetoothManufacturerDataMap.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "lastIndexOf",
      "package": "akasha.bluetooth"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.lang.JsArray<T>::lastIndexOf(T, int) @ akasha.bluetooth.BluetoothServiceDataMap.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.bluetooth.BluetoothServiceDataMap.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "lastIndexOf",
      "package": "akasha.bluetooth"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.lang.JsArray<T>::lastIndexOf(T, int) @ akasha.core.JsMap.Entry<K, V>",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.JsMap.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "lastIndexOf",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.lang.JsArray<T>::lastIndexOf(T, int) @ akasha.core.JsWeakMap.Entry<K, V>",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.JsWeakMap.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "lastIndexOf",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.lang.JsArray<T>::lastIndexOf(T, int) @ akasha.core.ObjectPropertyEntry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.ObjectPropertyEntry",
      "classSimpleName": "ObjectPropertyEntry",
      "elementKind": "method",
      "methodName": "lastIndexOf",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.lang.JsArray<T>::lastIndexOf(T, int) @ akasha.core.RegExpGroups.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.RegExpGroups.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "lastIndexOf",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.lang.JsArray<T>::lastIndexOf(T, int) @ akasha.core.RegExpResult.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.RegExpResult.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "lastIndexOf",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.lang.JsArray<T>::lastIndexOf(T, int) @ akasha.lang.JsArray.Entry<T>",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.lang.JsArray.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "lastIndexOf",
      "package": "akasha.lang"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.lang.JsArray<T>::lastIndexOf(T, int) @ akasha.rtc.RTCStatsReport.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.rtc.RTCStatsReport.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "lastIndexOf",
      "package": "akasha.rtc"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.lang.JsArray<T>::lastIndexOf(T, int) @ akasha.xr.XRInputSourceArray.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.xr.XRInputSourceArray.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "lastIndexOf",
      "package": "akasha.xr"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.lang.JsArray<T>::lastIndexOf(T, int)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.lang.JsArray",
      "classSimpleName": "JsArray",
      "elementKind": "method",
      "methodName": "lastIndexOf",
      "package": "akasha.lang"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.Object akasha.MimeTypeArray::item(int)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.MimeTypeArray",
      "classSimpleName": "MimeTypeArray",
      "elementKind": "method",
      "methodName": "item",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.Object akasha.PluginArray::item(int)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.PluginArray",
      "classSimpleName": "PluginArray",
      "elementKind": "method",
      "methodName": "item",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.Object akasha.rtc.RTCStatsReport::get(java.lang.String)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.rtc.RTCStatsReport",
      "classSimpleName": "RTCStatsReport",
      "elementKind": "method",
      "methodName": "get",
      "package": "akasha.rtc"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.CSSFontPaletteValuesRule::get(int)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.CSSFontPaletteValuesRule",
      "classSimpleName": "CSSFontPaletteValuesRule",
      "elementKind": "method",
      "methodName": "get",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.CSSStyleDeclaration::item(int)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.CSSStyleDeclaration",
      "classSimpleName": "CSSStyleDeclaration",
      "elementKind": "method",
      "methodName": "item",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.CharacterData::substringData(int, int) @ akasha.CDATASection",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.CDATASection",
      "classSimpleName": "CDATASection",
      "elementKind": "method",
      "methodName": "substringData",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.CharacterData::substringData(int, int) @ akasha.Comment",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.Comment",
      "classSimpleName": "Comment",
      "elementKind": "method",
      "methodName": "substringData",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.CharacterData::substringData(int, int) @ akasha.ProcessingInstruction",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.ProcessingInstruction",
      "classSimpleName": "ProcessingInstruction",
      "elementKind": "method",
      "methodName": "substringData",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.CharacterData::substringData(int, int) @ akasha.Text",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.Text",
      "classSimpleName": "Text",
      "elementKind": "method",
      "methodName": "substringData",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.CharacterData::substringData(int, int)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.CharacterData",
      "classSimpleName": "CharacterData",
      "elementKind": "method",
      "methodName": "substringData",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.DOMStringList::item(int)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.DOMStringList",
      "classSimpleName": "DOMStringList",
      "elementKind": "method",
      "methodName": "item",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.DOMTokenList::item(int)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.DOMTokenList",
      "classSimpleName": "DOMTokenList",
      "elementKind": "method",
      "methodName": "item",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Element::getAttribute(java.lang.String) @ akasha.Audio",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.Audio",
      "classSimpleName": "Audio",
      "elementKind": "method",
      "methodName": "getAttribute",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Element::getAttribute(java.lang.String) @ akasha.HTMLAnchorElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLAnchorElement",
      "classSimpleName": "HTMLAnchorElement",
      "elementKind": "method",
      "methodName": "getAttribute",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Element::getAttribute(java.lang.String) @ akasha.HTMLAreaElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLAreaElement",
      "classSimpleName": "HTMLAreaElement",
      "elementKind": "method",
      "methodName": "getAttribute",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Element::getAttribute(java.lang.String) @ akasha.HTMLAudioElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLAudioElement",
      "classSimpleName": "HTMLAudioElement",
      "elementKind": "method",
      "methodName": "getAttribute",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Element::getAttribute(java.lang.String) @ akasha.HTMLBRElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLBRElement",
      "classSimpleName": "HTMLBRElement",
      "elementKind": "method",
      "methodName": "getAttribute",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Element::getAttribute(java.lang.String) @ akasha.HTMLBaseElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLBaseElement",
      "classSimpleName": "HTMLBaseElement",
      "elementKind": "method",
      "methodName": "getAttribute",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Element::getAttribute(java.lang.String) @ akasha.HTMLBodyElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLBodyElement",
      "classSimpleName": "HTMLBodyElement",
      "elementKind": "method",
      "methodName": "getAttribute",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Element::getAttribute(java.lang.String) @ akasha.HTMLButtonElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLButtonElement",
      "classSimpleName": "HTMLButtonElement",
      "elementKind": "method",
      "methodName": "getAttribute",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Element::getAttribute(java.lang.String) @ akasha.HTMLCanvasElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLCanvasElement",
      "classSimpleName": "HTMLCanvasElement",
      "elementKind": "method",
      "methodName": "getAttribute",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Element::getAttribute(java.lang.String) @ akasha.HTMLDListElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLDListElement",
      "classSimpleName": "HTMLDListElement",
      "elementKind": "method",
      "methodName": "getAttribute",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Element::getAttribute(java.lang.String) @ akasha.HTMLDataElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLDataElement",
      "classSimpleName": "HTMLDataElement",
      "elementKind": "method",
      "methodName": "getAttribute",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Element::getAttribute(java.lang.String) @ akasha.HTMLDataListElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLDataListElement",
      "classSimpleName": "HTMLDataListElement",
      "elementKind": "method",
      "methodName": "getAttribute",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Element::getAttribute(java.lang.String) @ akasha.HTMLDetailsElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLDetailsElement",
      "classSimpleName": "HTMLDetailsElement",
      "elementKind": "method",
      "methodName": "getAttribute",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Element::getAttribute(java.lang.String) @ akasha.HTMLDialogElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLDialogElement",
      "classSimpleName": "HTMLDialogElement",
      "elementKind": "method",
      "methodName": "getAttribute",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Element::getAttribute(java.lang.String) @ akasha.HTMLDirectoryElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLDirectoryElement",
      "classSimpleName": "HTMLDirectoryElement",
      "elementKind": "method",
      "methodName": "getAttribute",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Element::getAttribute(java.lang.String) @ akasha.HTMLDivElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLDivElement",
      "classSimpleName": "HTMLDivElement",
      "elementKind": "method",
      "methodName": "getAttribute",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Element::getAttribute(java.lang.String) @ akasha.HTMLElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLElement",
      "classSimpleName": "HTMLElement",
      "elementKind": "method",
      "methodName": "getAttribute",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Element::getAttribute(java.lang.String) @ akasha.HTMLEmbedElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLEmbedElement",
      "classSimpleName": "HTMLEmbedElement",
      "elementKind": "method",
      "methodName": "getAttribute",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Element::getAttribute(java.lang.String) @ akasha.HTMLFieldSetElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLFieldSetElement",
      "classSimpleName": "HTMLFieldSetElement",
      "elementKind": "method",
      "methodName": "getAttribute",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Element::getAttribute(java.lang.String) @ akasha.HTMLFontElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLFontElement",
      "classSimpleName": "HTMLFontElement",
      "elementKind": "method",
      "methodName": "getAttribute",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Element::getAttribute(java.lang.String) @ akasha.HTMLFormElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLFormElement",
      "classSimpleName": "HTMLFormElement",
      "elementKind": "method",
      "methodName": "getAttribute",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Element::getAttribute(java.lang.String) @ akasha.HTMLFrameElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLFrameElement",
      "classSimpleName": "HTMLFrameElement",
      "elementKind": "method",
      "methodName": "getAttribute",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Element::getAttribute(java.lang.String) @ akasha.HTMLFrameSetElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLFrameSetElement",
      "classSimpleName": "HTMLFrameSetElement",
      "elementKind": "method",
      "methodName": "getAttribute",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Element::getAttribute(java.lang.String) @ akasha.HTMLHRElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLHRElement",
      "classSimpleName": "HTMLHRElement",
      "elementKind": "method",
      "methodName": "getAttribute",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Element::getAttribute(java.lang.String) @ akasha.HTMLHeadElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLHeadElement",
      "classSimpleName": "HTMLHeadElement",
      "elementKind": "method",
      "methodName": "getAttribute",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Element::getAttribute(java.lang.String) @ akasha.HTMLHeadingElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLHeadingElement",
      "classSimpleName": "HTMLHeadingElement",
      "elementKind": "method",
      "methodName": "getAttribute",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Element::getAttribute(java.lang.String) @ akasha.HTMLHtmlElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLHtmlElement",
      "classSimpleName": "HTMLHtmlElement",
      "elementKind": "method",
      "methodName": "getAttribute",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Element::getAttribute(java.lang.String) @ akasha.HTMLIFrameElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLIFrameElement",
      "classSimpleName": "HTMLIFrameElement",
      "elementKind": "method",
      "methodName": "getAttribute",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Element::getAttribute(java.lang.String) @ akasha.HTMLImageElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLImageElement",
      "classSimpleName": "HTMLImageElement",
      "elementKind": "method",
      "methodName": "getAttribute",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Element::getAttribute(java.lang.String) @ akasha.HTMLInputElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLInputElement",
      "classSimpleName": "HTMLInputElement",
      "elementKind": "method",
      "methodName": "getAttribute",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Element::getAttribute(java.lang.String) @ akasha.HTMLLIElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLLIElement",
      "classSimpleName": "HTMLLIElement",
      "elementKind": "method",
      "methodName": "getAttribute",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Element::getAttribute(java.lang.String) @ akasha.HTMLLabelElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLLabelElement",
      "classSimpleName": "HTMLLabelElement",
      "elementKind": "method",
      "methodName": "getAttribute",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Element::getAttribute(java.lang.String) @ akasha.HTMLLegendElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLLegendElement",
      "classSimpleName": "HTMLLegendElement",
      "elementKind": "method",
      "methodName": "getAttribute",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Element::getAttribute(java.lang.String) @ akasha.HTMLLinkElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLLinkElement",
      "classSimpleName": "HTMLLinkElement",
      "elementKind": "method",
      "methodName": "getAttribute",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Element::getAttribute(java.lang.String) @ akasha.HTMLMapElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLMapElement",
      "classSimpleName": "HTMLMapElement",
      "elementKind": "method",
      "methodName": "getAttribute",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Element::getAttribute(java.lang.String) @ akasha.HTMLMarqueeElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLMarqueeElement",
      "classSimpleName": "HTMLMarqueeElement",
      "elementKind": "method",
      "methodName": "getAttribute",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Element::getAttribute(java.lang.String) @ akasha.HTMLMediaElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLMediaElement",
      "classSimpleName": "HTMLMediaElement",
      "elementKind": "method",
      "methodName": "getAttribute",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Element::getAttribute(java.lang.String) @ akasha.HTMLMenuElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLMenuElement",
      "classSimpleName": "HTMLMenuElement",
      "elementKind": "method",
      "methodName": "getAttribute",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Element::getAttribute(java.lang.String) @ akasha.HTMLMetaElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLMetaElement",
      "classSimpleName": "HTMLMetaElement",
      "elementKind": "method",
      "methodName": "getAttribute",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Element::getAttribute(java.lang.String) @ akasha.HTMLMeterElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLMeterElement",
      "classSimpleName": "HTMLMeterElement",
      "elementKind": "method",
      "methodName": "getAttribute",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Element::getAttribute(java.lang.String) @ akasha.HTMLModElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLModElement",
      "classSimpleName": "HTMLModElement",
      "elementKind": "method",
      "methodName": "getAttribute",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Element::getAttribute(java.lang.String) @ akasha.HTMLOListElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLOListElement",
      "classSimpleName": "HTMLOListElement",
      "elementKind": "method",
      "methodName": "getAttribute",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Element::getAttribute(java.lang.String) @ akasha.HTMLObjectElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLObjectElement",
      "classSimpleName": "HTMLObjectElement",
      "elementKind": "method",
      "methodName": "getAttribute",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Element::getAttribute(java.lang.String) @ akasha.HTMLOptGroupElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLOptGroupElement",
      "classSimpleName": "HTMLOptGroupElement",
      "elementKind": "method",
      "methodName": "getAttribute",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Element::getAttribute(java.lang.String) @ akasha.HTMLOptionElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLOptionElement",
      "classSimpleName": "HTMLOptionElement",
      "elementKind": "method",
      "methodName": "getAttribute",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Element::getAttribute(java.lang.String) @ akasha.HTMLOutputElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLOutputElement",
      "classSimpleName": "HTMLOutputElement",
      "elementKind": "method",
      "methodName": "getAttribute",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Element::getAttribute(java.lang.String) @ akasha.HTMLParagraphElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLParagraphElement",
      "classSimpleName": "HTMLParagraphElement",
      "elementKind": "method",
      "methodName": "getAttribute",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Element::getAttribute(java.lang.String) @ akasha.HTMLParamElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLParamElement",
      "classSimpleName": "HTMLParamElement",
      "elementKind": "method",
      "methodName": "getAttribute",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Element::getAttribute(java.lang.String) @ akasha.HTMLPictureElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLPictureElement",
      "classSimpleName": "HTMLPictureElement",
      "elementKind": "method",
      "methodName": "getAttribute",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Element::getAttribute(java.lang.String) @ akasha.HTMLPreElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLPreElement",
      "classSimpleName": "HTMLPreElement",
      "elementKind": "method",
      "methodName": "getAttribute",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Element::getAttribute(java.lang.String) @ akasha.HTMLProgressElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLProgressElement",
      "classSimpleName": "HTMLProgressElement",
      "elementKind": "method",
      "methodName": "getAttribute",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Element::getAttribute(java.lang.String) @ akasha.HTMLQuoteElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLQuoteElement",
      "classSimpleName": "HTMLQuoteElement",
      "elementKind": "method",
      "methodName": "getAttribute",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Element::getAttribute(java.lang.String) @ akasha.HTMLScriptElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLScriptElement",
      "classSimpleName": "HTMLScriptElement",
      "elementKind": "method",
      "methodName": "getAttribute",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Element::getAttribute(java.lang.String) @ akasha.HTMLSelectElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLSelectElement",
      "classSimpleName": "HTMLSelectElement",
      "elementKind": "method",
      "methodName": "getAttribute",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Element::getAttribute(java.lang.String) @ akasha.HTMLSlotElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLSlotElement",
      "classSimpleName": "HTMLSlotElement",
      "elementKind": "method",
      "methodName": "getAttribute",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Element::getAttribute(java.lang.String) @ akasha.HTMLSourceElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLSourceElement",
      "classSimpleName": "HTMLSourceElement",
      "elementKind": "method",
      "methodName": "getAttribute",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Element::getAttribute(java.lang.String) @ akasha.HTMLSpanElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLSpanElement",
      "classSimpleName": "HTMLSpanElement",
      "elementKind": "method",
      "methodName": "getAttribute",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Element::getAttribute(java.lang.String) @ akasha.HTMLStyleElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLStyleElement",
      "classSimpleName": "HTMLStyleElement",
      "elementKind": "method",
      "methodName": "getAttribute",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Element::getAttribute(java.lang.String) @ akasha.HTMLTableCaptionElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLTableCaptionElement",
      "classSimpleName": "HTMLTableCaptionElement",
      "elementKind": "method",
      "methodName": "getAttribute",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Element::getAttribute(java.lang.String) @ akasha.HTMLTableCellElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLTableCellElement",
      "classSimpleName": "HTMLTableCellElement",
      "elementKind": "method",
      "methodName": "getAttribute",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Element::getAttribute(java.lang.String) @ akasha.HTMLTableColElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLTableColElement",
      "classSimpleName": "HTMLTableColElement",
      "elementKind": "method",
      "methodName": "getAttribute",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Element::getAttribute(java.lang.String) @ akasha.HTMLTableElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLTableElement",
      "classSimpleName": "HTMLTableElement",
      "elementKind": "method",
      "methodName": "getAttribute",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Element::getAttribute(java.lang.String) @ akasha.HTMLTableRowElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLTableRowElement",
      "classSimpleName": "HTMLTableRowElement",
      "elementKind": "method",
      "methodName": "getAttribute",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Element::getAttribute(java.lang.String) @ akasha.HTMLTableSectionElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLTableSectionElement",
      "classSimpleName": "HTMLTableSectionElement",
      "elementKind": "method",
      "methodName": "getAttribute",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Element::getAttribute(java.lang.String) @ akasha.HTMLTemplateElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLTemplateElement",
      "classSimpleName": "HTMLTemplateElement",
      "elementKind": "method",
      "methodName": "getAttribute",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Element::getAttribute(java.lang.String) @ akasha.HTMLTextAreaElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLTextAreaElement",
      "classSimpleName": "HTMLTextAreaElement",
      "elementKind": "method",
      "methodName": "getAttribute",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Element::getAttribute(java.lang.String) @ akasha.HTMLTimeElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLTimeElement",
      "classSimpleName": "HTMLTimeElement",
      "elementKind": "method",
      "methodName": "getAttribute",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Element::getAttribute(java.lang.String) @ akasha.HTMLTitleElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLTitleElement",
      "classSimpleName": "HTMLTitleElement",
      "elementKind": "method",
      "methodName": "getAttribute",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Element::getAttribute(java.lang.String) @ akasha.HTMLTrackElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLTrackElement",
      "classSimpleName": "HTMLTrackElement",
      "elementKind": "method",
      "methodName": "getAttribute",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Element::getAttribute(java.lang.String) @ akasha.HTMLUListElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLUListElement",
      "classSimpleName": "HTMLUListElement",
      "elementKind": "method",
      "methodName": "getAttribute",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Element::getAttribute(java.lang.String) @ akasha.HTMLUnknownElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLUnknownElement",
      "classSimpleName": "HTMLUnknownElement",
      "elementKind": "method",
      "methodName": "getAttribute",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Element::getAttribute(java.lang.String) @ akasha.HTMLVideoElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLVideoElement",
      "classSimpleName": "HTMLVideoElement",
      "elementKind": "method",
      "methodName": "getAttribute",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Element::getAttribute(java.lang.String) @ akasha.Image",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.Image",
      "classSimpleName": "Image",
      "elementKind": "method",
      "methodName": "getAttribute",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Element::getAttribute(java.lang.String) @ akasha.Option",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.Option",
      "classSimpleName": "Option",
      "elementKind": "method",
      "methodName": "getAttribute",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Element::getAttribute(java.lang.String) @ akasha.svg.SVGAElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGAElement",
      "classSimpleName": "SVGAElement",
      "elementKind": "method",
      "methodName": "getAttribute",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Element::getAttribute(java.lang.String) @ akasha.svg.SVGCircleElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGCircleElement",
      "classSimpleName": "SVGCircleElement",
      "elementKind": "method",
      "methodName": "getAttribute",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Element::getAttribute(java.lang.String) @ akasha.svg.SVGClipPathElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGClipPathElement",
      "classSimpleName": "SVGClipPathElement",
      "elementKind": "method",
      "methodName": "getAttribute",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Element::getAttribute(java.lang.String) @ akasha.svg.SVGComponentTransferFunctionElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGComponentTransferFunctionElement",
      "classSimpleName": "SVGComponentTransferFunctionElement",
      "elementKind": "method",
      "methodName": "getAttribute",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Element::getAttribute(java.lang.String) @ akasha.svg.SVGDefsElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGDefsElement",
      "classSimpleName": "SVGDefsElement",
      "elementKind": "method",
      "methodName": "getAttribute",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Element::getAttribute(java.lang.String) @ akasha.svg.SVGDescElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGDescElement",
      "classSimpleName": "SVGDescElement",
      "elementKind": "method",
      "methodName": "getAttribute",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Element::getAttribute(java.lang.String) @ akasha.svg.SVGElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGElement",
      "classSimpleName": "SVGElement",
      "elementKind": "method",
      "methodName": "getAttribute",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Element::getAttribute(java.lang.String) @ akasha.svg.SVGEllipseElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGEllipseElement",
      "classSimpleName": "SVGEllipseElement",
      "elementKind": "method",
      "methodName": "getAttribute",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Element::getAttribute(java.lang.String) @ akasha.svg.SVGFEBlendElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEBlendElement",
      "classSimpleName": "SVGFEBlendElement",
      "elementKind": "method",
      "methodName": "getAttribute",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Element::getAttribute(java.lang.String) @ akasha.svg.SVGFEColorMatrixElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEColorMatrixElement",
      "classSimpleName": "SVGFEColorMatrixElement",
      "elementKind": "method",
      "methodName": "getAttribute",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Element::getAttribute(java.lang.String) @ akasha.svg.SVGFEComponentTransferElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEComponentTransferElement",
      "classSimpleName": "SVGFEComponentTransferElement",
      "elementKind": "method",
      "methodName": "getAttribute",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Element::getAttribute(java.lang.String) @ akasha.svg.SVGFECompositeElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFECompositeElement",
      "classSimpleName": "SVGFECompositeElement",
      "elementKind": "method",
      "methodName": "getAttribute",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Element::getAttribute(java.lang.String) @ akasha.svg.SVGFEConvolveMatrixElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEConvolveMatrixElement",
      "classSimpleName": "SVGFEConvolveMatrixElement",
      "elementKind": "method",
      "methodName": "getAttribute",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Element::getAttribute(java.lang.String) @ akasha.svg.SVGFEDiffuseLightingElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEDiffuseLightingElement",
      "classSimpleName": "SVGFEDiffuseLightingElement",
      "elementKind": "method",
      "methodName": "getAttribute",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Element::getAttribute(java.lang.String) @ akasha.svg.SVGFEDisplacementMapElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEDisplacementMapElement",
      "classSimpleName": "SVGFEDisplacementMapElement",
      "elementKind": "method",
      "methodName": "getAttribute",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Element::getAttribute(java.lang.String) @ akasha.svg.SVGFEDistantLightElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEDistantLightElement",
      "classSimpleName": "SVGFEDistantLightElement",
      "elementKind": "method",
      "methodName": "getAttribute",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Element::getAttribute(java.lang.String) @ akasha.svg.SVGFEDropShadowElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEDropShadowElement",
      "classSimpleName": "SVGFEDropShadowElement",
      "elementKind": "method",
      "methodName": "getAttribute",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Element::getAttribute(java.lang.String) @ akasha.svg.SVGFEFloodElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEFloodElement",
      "classSimpleName": "SVGFEFloodElement",
      "elementKind": "method",
      "methodName": "getAttribute",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Element::getAttribute(java.lang.String) @ akasha.svg.SVGFEFuncAElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEFuncAElement",
      "classSimpleName": "SVGFEFuncAElement",
      "elementKind": "method",
      "methodName": "getAttribute",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Element::getAttribute(java.lang.String) @ akasha.svg.SVGFEFuncBElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEFuncBElement",
      "classSimpleName": "SVGFEFuncBElement",
      "elementKind": "method",
      "methodName": "getAttribute",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Element::getAttribute(java.lang.String) @ akasha.svg.SVGFEFuncGElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEFuncGElement",
      "classSimpleName": "SVGFEFuncGElement",
      "elementKind": "method",
      "methodName": "getAttribute",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Element::getAttribute(java.lang.String) @ akasha.svg.SVGFEFuncRElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEFuncRElement",
      "classSimpleName": "SVGFEFuncRElement",
      "elementKind": "method",
      "methodName": "getAttribute",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Element::getAttribute(java.lang.String) @ akasha.svg.SVGFEGaussianBlurElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEGaussianBlurElement",
      "classSimpleName": "SVGFEGaussianBlurElement",
      "elementKind": "method",
      "methodName": "getAttribute",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Element::getAttribute(java.lang.String) @ akasha.svg.SVGFEImageElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEImageElement",
      "classSimpleName": "SVGFEImageElement",
      "elementKind": "method",
      "methodName": "getAttribute",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Element::getAttribute(java.lang.String) @ akasha.svg.SVGFEMergeElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEMergeElement",
      "classSimpleName": "SVGFEMergeElement",
      "elementKind": "method",
      "methodName": "getAttribute",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Element::getAttribute(java.lang.String) @ akasha.svg.SVGFEMergeNodeElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEMergeNodeElement",
      "classSimpleName": "SVGFEMergeNodeElement",
      "elementKind": "method",
      "methodName": "getAttribute",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Element::getAttribute(java.lang.String) @ akasha.svg.SVGFEMorphologyElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEMorphologyElement",
      "classSimpleName": "SVGFEMorphologyElement",
      "elementKind": "method",
      "methodName": "getAttribute",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Element::getAttribute(java.lang.String) @ akasha.svg.SVGFEOffsetElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEOffsetElement",
      "classSimpleName": "SVGFEOffsetElement",
      "elementKind": "method",
      "methodName": "getAttribute",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Element::getAttribute(java.lang.String) @ akasha.svg.SVGFEPointLightElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEPointLightElement",
      "classSimpleName": "SVGFEPointLightElement",
      "elementKind": "method",
      "methodName": "getAttribute",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Element::getAttribute(java.lang.String) @ akasha.svg.SVGFESpecularLightingElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFESpecularLightingElement",
      "classSimpleName": "SVGFESpecularLightingElement",
      "elementKind": "method",
      "methodName": "getAttribute",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Element::getAttribute(java.lang.String) @ akasha.svg.SVGFESpotLightElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFESpotLightElement",
      "classSimpleName": "SVGFESpotLightElement",
      "elementKind": "method",
      "methodName": "getAttribute",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Element::getAttribute(java.lang.String) @ akasha.svg.SVGFETileElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFETileElement",
      "classSimpleName": "SVGFETileElement",
      "elementKind": "method",
      "methodName": "getAttribute",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Element::getAttribute(java.lang.String) @ akasha.svg.SVGFETurbulenceElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFETurbulenceElement",
      "classSimpleName": "SVGFETurbulenceElement",
      "elementKind": "method",
      "methodName": "getAttribute",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Element::getAttribute(java.lang.String) @ akasha.svg.SVGFilterElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFilterElement",
      "classSimpleName": "SVGFilterElement",
      "elementKind": "method",
      "methodName": "getAttribute",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Element::getAttribute(java.lang.String) @ akasha.svg.SVGForeignObjectElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGForeignObjectElement",
      "classSimpleName": "SVGForeignObjectElement",
      "elementKind": "method",
      "methodName": "getAttribute",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Element::getAttribute(java.lang.String) @ akasha.svg.SVGGElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGGElement",
      "classSimpleName": "SVGGElement",
      "elementKind": "method",
      "methodName": "getAttribute",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Element::getAttribute(java.lang.String) @ akasha.svg.SVGGeometryElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGGeometryElement",
      "classSimpleName": "SVGGeometryElement",
      "elementKind": "method",
      "methodName": "getAttribute",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Element::getAttribute(java.lang.String) @ akasha.svg.SVGGradientElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGGradientElement",
      "classSimpleName": "SVGGradientElement",
      "elementKind": "method",
      "methodName": "getAttribute",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Element::getAttribute(java.lang.String) @ akasha.svg.SVGGraphicsElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGGraphicsElement",
      "classSimpleName": "SVGGraphicsElement",
      "elementKind": "method",
      "methodName": "getAttribute",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Element::getAttribute(java.lang.String) @ akasha.svg.SVGImageElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGImageElement",
      "classSimpleName": "SVGImageElement",
      "elementKind": "method",
      "methodName": "getAttribute",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Element::getAttribute(java.lang.String) @ akasha.svg.SVGLineElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGLineElement",
      "classSimpleName": "SVGLineElement",
      "elementKind": "method",
      "methodName": "getAttribute",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Element::getAttribute(java.lang.String) @ akasha.svg.SVGLinearGradientElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGLinearGradientElement",
      "classSimpleName": "SVGLinearGradientElement",
      "elementKind": "method",
      "methodName": "getAttribute",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Element::getAttribute(java.lang.String) @ akasha.svg.SVGMarkerElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGMarkerElement",
      "classSimpleName": "SVGMarkerElement",
      "elementKind": "method",
      "methodName": "getAttribute",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Element::getAttribute(java.lang.String) @ akasha.svg.SVGMaskElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGMaskElement",
      "classSimpleName": "SVGMaskElement",
      "elementKind": "method",
      "methodName": "getAttribute",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Element::getAttribute(java.lang.String) @ akasha.svg.SVGMetadataElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGMetadataElement",
      "classSimpleName": "SVGMetadataElement",
      "elementKind": "method",
      "methodName": "getAttribute",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Element::getAttribute(java.lang.String) @ akasha.svg.SVGPathElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGPathElement",
      "classSimpleName": "SVGPathElement",
      "elementKind": "method",
      "methodName": "getAttribute",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Element::getAttribute(java.lang.String) @ akasha.svg.SVGPatternElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGPatternElement",
      "classSimpleName": "SVGPatternElement",
      "elementKind": "method",
      "methodName": "getAttribute",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Element::getAttribute(java.lang.String) @ akasha.svg.SVGPolygonElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGPolygonElement",
      "classSimpleName": "SVGPolygonElement",
      "elementKind": "method",
      "methodName": "getAttribute",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Element::getAttribute(java.lang.String) @ akasha.svg.SVGPolylineElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGPolylineElement",
      "classSimpleName": "SVGPolylineElement",
      "elementKind": "method",
      "methodName": "getAttribute",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Element::getAttribute(java.lang.String) @ akasha.svg.SVGRadialGradientElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGRadialGradientElement",
      "classSimpleName": "SVGRadialGradientElement",
      "elementKind": "method",
      "methodName": "getAttribute",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Element::getAttribute(java.lang.String) @ akasha.svg.SVGRectElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGRectElement",
      "classSimpleName": "SVGRectElement",
      "elementKind": "method",
      "methodName": "getAttribute",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Element::getAttribute(java.lang.String) @ akasha.svg.SVGSVGElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGSVGElement",
      "classSimpleName": "SVGSVGElement",
      "elementKind": "method",
      "methodName": "getAttribute",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Element::getAttribute(java.lang.String) @ akasha.svg.SVGScriptElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGScriptElement",
      "classSimpleName": "SVGScriptElement",
      "elementKind": "method",
      "methodName": "getAttribute",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Element::getAttribute(java.lang.String) @ akasha.svg.SVGStopElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGStopElement",
      "classSimpleName": "SVGStopElement",
      "elementKind": "method",
      "methodName": "getAttribute",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Element::getAttribute(java.lang.String) @ akasha.svg.SVGStyleElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGStyleElement",
      "classSimpleName": "SVGStyleElement",
      "elementKind": "method",
      "methodName": "getAttribute",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Element::getAttribute(java.lang.String) @ akasha.svg.SVGSwitchElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGSwitchElement",
      "classSimpleName": "SVGSwitchElement",
      "elementKind": "method",
      "methodName": "getAttribute",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Element::getAttribute(java.lang.String) @ akasha.svg.SVGSymbolElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGSymbolElement",
      "classSimpleName": "SVGSymbolElement",
      "elementKind": "method",
      "methodName": "getAttribute",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Element::getAttribute(java.lang.String) @ akasha.svg.SVGTSpanElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGTSpanElement",
      "classSimpleName": "SVGTSpanElement",
      "elementKind": "method",
      "methodName": "getAttribute",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Element::getAttribute(java.lang.String) @ akasha.svg.SVGTextContentElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGTextContentElement",
      "classSimpleName": "SVGTextContentElement",
      "elementKind": "method",
      "methodName": "getAttribute",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Element::getAttribute(java.lang.String) @ akasha.svg.SVGTextElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGTextElement",
      "classSimpleName": "SVGTextElement",
      "elementKind": "method",
      "methodName": "getAttribute",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Element::getAttribute(java.lang.String) @ akasha.svg.SVGTextPathElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGTextPathElement",
      "classSimpleName": "SVGTextPathElement",
      "elementKind": "method",
      "methodName": "getAttribute",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Element::getAttribute(java.lang.String) @ akasha.svg.SVGTextPositioningElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGTextPositioningElement",
      "classSimpleName": "SVGTextPositioningElement",
      "elementKind": "method",
      "methodName": "getAttribute",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Element::getAttribute(java.lang.String) @ akasha.svg.SVGTitleElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGTitleElement",
      "classSimpleName": "SVGTitleElement",
      "elementKind": "method",
      "methodName": "getAttribute",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Element::getAttribute(java.lang.String) @ akasha.svg.SVGUnknownElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGUnknownElement",
      "classSimpleName": "SVGUnknownElement",
      "elementKind": "method",
      "methodName": "getAttribute",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Element::getAttribute(java.lang.String) @ akasha.svg.SVGUseElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGUseElement",
      "classSimpleName": "SVGUseElement",
      "elementKind": "method",
      "methodName": "getAttribute",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Element::getAttribute(java.lang.String) @ akasha.svg.SVGViewElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGViewElement",
      "classSimpleName": "SVGViewElement",
      "elementKind": "method",
      "methodName": "getAttribute",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Element::getAttribute(java.lang.String)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.Element",
      "classSimpleName": "Element",
      "elementKind": "method",
      "methodName": "getAttribute",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Element::getAttributeNS(java.lang.String, java.lang.String) @ akasha.Audio",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.Audio",
      "classSimpleName": "Audio",
      "elementKind": "method",
      "methodName": "getAttributeNS",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Element::getAttributeNS(java.lang.String, java.lang.String) @ akasha.HTMLAnchorElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLAnchorElement",
      "classSimpleName": "HTMLAnchorElement",
      "elementKind": "method",
      "methodName": "getAttributeNS",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Element::getAttributeNS(java.lang.String, java.lang.String) @ akasha.HTMLAreaElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLAreaElement",
      "classSimpleName": "HTMLAreaElement",
      "elementKind": "method",
      "methodName": "getAttributeNS",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Element::getAttributeNS(java.lang.String, java.lang.String) @ akasha.HTMLAudioElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLAudioElement",
      "classSimpleName": "HTMLAudioElement",
      "elementKind": "method",
      "methodName": "getAttributeNS",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Element::getAttributeNS(java.lang.String, java.lang.String) @ akasha.HTMLBRElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLBRElement",
      "classSimpleName": "HTMLBRElement",
      "elementKind": "method",
      "methodName": "getAttributeNS",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Element::getAttributeNS(java.lang.String, java.lang.String) @ akasha.HTMLBaseElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLBaseElement",
      "classSimpleName": "HTMLBaseElement",
      "elementKind": "method",
      "methodName": "getAttributeNS",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Element::getAttributeNS(java.lang.String, java.lang.String) @ akasha.HTMLBodyElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLBodyElement",
      "classSimpleName": "HTMLBodyElement",
      "elementKind": "method",
      "methodName": "getAttributeNS",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Element::getAttributeNS(java.lang.String, java.lang.String) @ akasha.HTMLButtonElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLButtonElement",
      "classSimpleName": "HTMLButtonElement",
      "elementKind": "method",
      "methodName": "getAttributeNS",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Element::getAttributeNS(java.lang.String, java.lang.String) @ akasha.HTMLCanvasElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLCanvasElement",
      "classSimpleName": "HTMLCanvasElement",
      "elementKind": "method",
      "methodName": "getAttributeNS",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Element::getAttributeNS(java.lang.String, java.lang.String) @ akasha.HTMLDListElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLDListElement",
      "classSimpleName": "HTMLDListElement",
      "elementKind": "method",
      "methodName": "getAttributeNS",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Element::getAttributeNS(java.lang.String, java.lang.String) @ akasha.HTMLDataElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLDataElement",
      "classSimpleName": "HTMLDataElement",
      "elementKind": "method",
      "methodName": "getAttributeNS",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Element::getAttributeNS(java.lang.String, java.lang.String) @ akasha.HTMLDataListElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLDataListElement",
      "classSimpleName": "HTMLDataListElement",
      "elementKind": "method",
      "methodName": "getAttributeNS",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Element::getAttributeNS(java.lang.String, java.lang.String) @ akasha.HTMLDetailsElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLDetailsElement",
      "classSimpleName": "HTMLDetailsElement",
      "elementKind": "method",
      "methodName": "getAttributeNS",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Element::getAttributeNS(java.lang.String, java.lang.String) @ akasha.HTMLDialogElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLDialogElement",
      "classSimpleName": "HTMLDialogElement",
      "elementKind": "method",
      "methodName": "getAttributeNS",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Element::getAttributeNS(java.lang.String, java.lang.String) @ akasha.HTMLDirectoryElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLDirectoryElement",
      "classSimpleName": "HTMLDirectoryElement",
      "elementKind": "method",
      "methodName": "getAttributeNS",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Element::getAttributeNS(java.lang.String, java.lang.String) @ akasha.HTMLDivElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLDivElement",
      "classSimpleName": "HTMLDivElement",
      "elementKind": "method",
      "methodName": "getAttributeNS",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Element::getAttributeNS(java.lang.String, java.lang.String) @ akasha.HTMLElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLElement",
      "classSimpleName": "HTMLElement",
      "elementKind": "method",
      "methodName": "getAttributeNS",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Element::getAttributeNS(java.lang.String, java.lang.String) @ akasha.HTMLEmbedElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLEmbedElement",
      "classSimpleName": "HTMLEmbedElement",
      "elementKind": "method",
      "methodName": "getAttributeNS",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Element::getAttributeNS(java.lang.String, java.lang.String) @ akasha.HTMLFieldSetElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLFieldSetElement",
      "classSimpleName": "HTMLFieldSetElement",
      "elementKind": "method",
      "methodName": "getAttributeNS",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Element::getAttributeNS(java.lang.String, java.lang.String) @ akasha.HTMLFontElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLFontElement",
      "classSimpleName": "HTMLFontElement",
      "elementKind": "method",
      "methodName": "getAttributeNS",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Element::getAttributeNS(java.lang.String, java.lang.String) @ akasha.HTMLFormElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLFormElement",
      "classSimpleName": "HTMLFormElement",
      "elementKind": "method",
      "methodName": "getAttributeNS",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Element::getAttributeNS(java.lang.String, java.lang.String) @ akasha.HTMLFrameElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLFrameElement",
      "classSimpleName": "HTMLFrameElement",
      "elementKind": "method",
      "methodName": "getAttributeNS",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Element::getAttributeNS(java.lang.String, java.lang.String) @ akasha.HTMLFrameSetElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLFrameSetElement",
      "classSimpleName": "HTMLFrameSetElement",
      "elementKind": "method",
      "methodName": "getAttributeNS",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Element::getAttributeNS(java.lang.String, java.lang.String) @ akasha.HTMLHRElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLHRElement",
      "classSimpleName": "HTMLHRElement",
      "elementKind": "method",
      "methodName": "getAttributeNS",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Element::getAttributeNS(java.lang.String, java.lang.String) @ akasha.HTMLHeadElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLHeadElement",
      "classSimpleName": "HTMLHeadElement",
      "elementKind": "method",
      "methodName": "getAttributeNS",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Element::getAttributeNS(java.lang.String, java.lang.String) @ akasha.HTMLHeadingElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLHeadingElement",
      "classSimpleName": "HTMLHeadingElement",
      "elementKind": "method",
      "methodName": "getAttributeNS",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Element::getAttributeNS(java.lang.String, java.lang.String) @ akasha.HTMLHtmlElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLHtmlElement",
      "classSimpleName": "HTMLHtmlElement",
      "elementKind": "method",
      "methodName": "getAttributeNS",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Element::getAttributeNS(java.lang.String, java.lang.String) @ akasha.HTMLIFrameElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLIFrameElement",
      "classSimpleName": "HTMLIFrameElement",
      "elementKind": "method",
      "methodName": "getAttributeNS",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Element::getAttributeNS(java.lang.String, java.lang.String) @ akasha.HTMLImageElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLImageElement",
      "classSimpleName": "HTMLImageElement",
      "elementKind": "method",
      "methodName": "getAttributeNS",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Element::getAttributeNS(java.lang.String, java.lang.String) @ akasha.HTMLInputElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLInputElement",
      "classSimpleName": "HTMLInputElement",
      "elementKind": "method",
      "methodName": "getAttributeNS",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Element::getAttributeNS(java.lang.String, java.lang.String) @ akasha.HTMLLIElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLLIElement",
      "classSimpleName": "HTMLLIElement",
      "elementKind": "method",
      "methodName": "getAttributeNS",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Element::getAttributeNS(java.lang.String, java.lang.String) @ akasha.HTMLLabelElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLLabelElement",
      "classSimpleName": "HTMLLabelElement",
      "elementKind": "method",
      "methodName": "getAttributeNS",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Element::getAttributeNS(java.lang.String, java.lang.String) @ akasha.HTMLLegendElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLLegendElement",
      "classSimpleName": "HTMLLegendElement",
      "elementKind": "method",
      "methodName": "getAttributeNS",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Element::getAttributeNS(java.lang.String, java.lang.String) @ akasha.HTMLLinkElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLLinkElement",
      "classSimpleName": "HTMLLinkElement",
      "elementKind": "method",
      "methodName": "getAttributeNS",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Element::getAttributeNS(java.lang.String, java.lang.String) @ akasha.HTMLMapElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLMapElement",
      "classSimpleName": "HTMLMapElement",
      "elementKind": "method",
      "methodName": "getAttributeNS",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Element::getAttributeNS(java.lang.String, java.lang.String) @ akasha.HTMLMarqueeElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLMarqueeElement",
      "classSimpleName": "HTMLMarqueeElement",
      "elementKind": "method",
      "methodName": "getAttributeNS",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Element::getAttributeNS(java.lang.String, java.lang.String) @ akasha.HTMLMediaElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLMediaElement",
      "classSimpleName": "HTMLMediaElement",
      "elementKind": "method",
      "methodName": "getAttributeNS",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Element::getAttributeNS(java.lang.String, java.lang.String) @ akasha.HTMLMenuElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLMenuElement",
      "classSimpleName": "HTMLMenuElement",
      "elementKind": "method",
      "methodName": "getAttributeNS",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Element::getAttributeNS(java.lang.String, java.lang.String) @ akasha.HTMLMetaElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLMetaElement",
      "classSimpleName": "HTMLMetaElement",
      "elementKind": "method",
      "methodName": "getAttributeNS",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Element::getAttributeNS(java.lang.String, java.lang.String) @ akasha.HTMLMeterElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLMeterElement",
      "classSimpleName": "HTMLMeterElement",
      "elementKind": "method",
      "methodName": "getAttributeNS",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Element::getAttributeNS(java.lang.String, java.lang.String) @ akasha.HTMLModElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLModElement",
      "classSimpleName": "HTMLModElement",
      "elementKind": "method",
      "methodName": "getAttributeNS",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Element::getAttributeNS(java.lang.String, java.lang.String) @ akasha.HTMLOListElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLOListElement",
      "classSimpleName": "HTMLOListElement",
      "elementKind": "method",
      "methodName": "getAttributeNS",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Element::getAttributeNS(java.lang.String, java.lang.String) @ akasha.HTMLObjectElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLObjectElement",
      "classSimpleName": "HTMLObjectElement",
      "elementKind": "method",
      "methodName": "getAttributeNS",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Element::getAttributeNS(java.lang.String, java.lang.String) @ akasha.HTMLOptGroupElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLOptGroupElement",
      "classSimpleName": "HTMLOptGroupElement",
      "elementKind": "method",
      "methodName": "getAttributeNS",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Element::getAttributeNS(java.lang.String, java.lang.String) @ akasha.HTMLOptionElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLOptionElement",
      "classSimpleName": "HTMLOptionElement",
      "elementKind": "method",
      "methodName": "getAttributeNS",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Element::getAttributeNS(java.lang.String, java.lang.String) @ akasha.HTMLOutputElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLOutputElement",
      "classSimpleName": "HTMLOutputElement",
      "elementKind": "method",
      "methodName": "getAttributeNS",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Element::getAttributeNS(java.lang.String, java.lang.String) @ akasha.HTMLParagraphElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLParagraphElement",
      "classSimpleName": "HTMLParagraphElement",
      "elementKind": "method",
      "methodName": "getAttributeNS",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Element::getAttributeNS(java.lang.String, java.lang.String) @ akasha.HTMLParamElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLParamElement",
      "classSimpleName": "HTMLParamElement",
      "elementKind": "method",
      "methodName": "getAttributeNS",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Element::getAttributeNS(java.lang.String, java.lang.String) @ akasha.HTMLPictureElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLPictureElement",
      "classSimpleName": "HTMLPictureElement",
      "elementKind": "method",
      "methodName": "getAttributeNS",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Element::getAttributeNS(java.lang.String, java.lang.String) @ akasha.HTMLPreElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLPreElement",
      "classSimpleName": "HTMLPreElement",
      "elementKind": "method",
      "methodName": "getAttributeNS",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Element::getAttributeNS(java.lang.String, java.lang.String) @ akasha.HTMLProgressElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLProgressElement",
      "classSimpleName": "HTMLProgressElement",
      "elementKind": "method",
      "methodName": "getAttributeNS",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Element::getAttributeNS(java.lang.String, java.lang.String) @ akasha.HTMLQuoteElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLQuoteElement",
      "classSimpleName": "HTMLQuoteElement",
      "elementKind": "method",
      "methodName": "getAttributeNS",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Element::getAttributeNS(java.lang.String, java.lang.String) @ akasha.HTMLScriptElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLScriptElement",
      "classSimpleName": "HTMLScriptElement",
      "elementKind": "method",
      "methodName": "getAttributeNS",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Element::getAttributeNS(java.lang.String, java.lang.String) @ akasha.HTMLSelectElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLSelectElement",
      "classSimpleName": "HTMLSelectElement",
      "elementKind": "method",
      "methodName": "getAttributeNS",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Element::getAttributeNS(java.lang.String, java.lang.String) @ akasha.HTMLSlotElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLSlotElement",
      "classSimpleName": "HTMLSlotElement",
      "elementKind": "method",
      "methodName": "getAttributeNS",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Element::getAttributeNS(java.lang.String, java.lang.String) @ akasha.HTMLSourceElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLSourceElement",
      "classSimpleName": "HTMLSourceElement",
      "elementKind": "method",
      "methodName": "getAttributeNS",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Element::getAttributeNS(java.lang.String, java.lang.String) @ akasha.HTMLSpanElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLSpanElement",
      "classSimpleName": "HTMLSpanElement",
      "elementKind": "method",
      "methodName": "getAttributeNS",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Element::getAttributeNS(java.lang.String, java.lang.String) @ akasha.HTMLStyleElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLStyleElement",
      "classSimpleName": "HTMLStyleElement",
      "elementKind": "method",
      "methodName": "getAttributeNS",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Element::getAttributeNS(java.lang.String, java.lang.String) @ akasha.HTMLTableCaptionElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLTableCaptionElement",
      "classSimpleName": "HTMLTableCaptionElement",
      "elementKind": "method",
      "methodName": "getAttributeNS",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Element::getAttributeNS(java.lang.String, java.lang.String) @ akasha.HTMLTableCellElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLTableCellElement",
      "classSimpleName": "HTMLTableCellElement",
      "elementKind": "method",
      "methodName": "getAttributeNS",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Element::getAttributeNS(java.lang.String, java.lang.String) @ akasha.HTMLTableColElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLTableColElement",
      "classSimpleName": "HTMLTableColElement",
      "elementKind": "method",
      "methodName": "getAttributeNS",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Element::getAttributeNS(java.lang.String, java.lang.String) @ akasha.HTMLTableElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLTableElement",
      "classSimpleName": "HTMLTableElement",
      "elementKind": "method",
      "methodName": "getAttributeNS",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Element::getAttributeNS(java.lang.String, java.lang.String) @ akasha.HTMLTableRowElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLTableRowElement",
      "classSimpleName": "HTMLTableRowElement",
      "elementKind": "method",
      "methodName": "getAttributeNS",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Element::getAttributeNS(java.lang.String, java.lang.String) @ akasha.HTMLTableSectionElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLTableSectionElement",
      "classSimpleName": "HTMLTableSectionElement",
      "elementKind": "method",
      "methodName": "getAttributeNS",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Element::getAttributeNS(java.lang.String, java.lang.String) @ akasha.HTMLTemplateElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLTemplateElement",
      "classSimpleName": "HTMLTemplateElement",
      "elementKind": "method",
      "methodName": "getAttributeNS",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Element::getAttributeNS(java.lang.String, java.lang.String) @ akasha.HTMLTextAreaElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLTextAreaElement",
      "classSimpleName": "HTMLTextAreaElement",
      "elementKind": "method",
      "methodName": "getAttributeNS",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Element::getAttributeNS(java.lang.String, java.lang.String) @ akasha.HTMLTimeElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLTimeElement",
      "classSimpleName": "HTMLTimeElement",
      "elementKind": "method",
      "methodName": "getAttributeNS",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Element::getAttributeNS(java.lang.String, java.lang.String) @ akasha.HTMLTitleElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLTitleElement",
      "classSimpleName": "HTMLTitleElement",
      "elementKind": "method",
      "methodName": "getAttributeNS",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Element::getAttributeNS(java.lang.String, java.lang.String) @ akasha.HTMLTrackElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLTrackElement",
      "classSimpleName": "HTMLTrackElement",
      "elementKind": "method",
      "methodName": "getAttributeNS",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Element::getAttributeNS(java.lang.String, java.lang.String) @ akasha.HTMLUListElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLUListElement",
      "classSimpleName": "HTMLUListElement",
      "elementKind": "method",
      "methodName": "getAttributeNS",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Element::getAttributeNS(java.lang.String, java.lang.String) @ akasha.HTMLUnknownElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLUnknownElement",
      "classSimpleName": "HTMLUnknownElement",
      "elementKind": "method",
      "methodName": "getAttributeNS",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Element::getAttributeNS(java.lang.String, java.lang.String) @ akasha.HTMLVideoElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLVideoElement",
      "classSimpleName": "HTMLVideoElement",
      "elementKind": "method",
      "methodName": "getAttributeNS",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Element::getAttributeNS(java.lang.String, java.lang.String) @ akasha.Image",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.Image",
      "classSimpleName": "Image",
      "elementKind": "method",
      "methodName": "getAttributeNS",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Element::getAttributeNS(java.lang.String, java.lang.String) @ akasha.Option",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.Option",
      "classSimpleName": "Option",
      "elementKind": "method",
      "methodName": "getAttributeNS",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Element::getAttributeNS(java.lang.String, java.lang.String) @ akasha.svg.SVGAElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGAElement",
      "classSimpleName": "SVGAElement",
      "elementKind": "method",
      "methodName": "getAttributeNS",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Element::getAttributeNS(java.lang.String, java.lang.String) @ akasha.svg.SVGCircleElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGCircleElement",
      "classSimpleName": "SVGCircleElement",
      "elementKind": "method",
      "methodName": "getAttributeNS",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Element::getAttributeNS(java.lang.String, java.lang.String) @ akasha.svg.SVGClipPathElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGClipPathElement",
      "classSimpleName": "SVGClipPathElement",
      "elementKind": "method",
      "methodName": "getAttributeNS",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Element::getAttributeNS(java.lang.String, java.lang.String) @ akasha.svg.SVGComponentTransferFunctionElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGComponentTransferFunctionElement",
      "classSimpleName": "SVGComponentTransferFunctionElement",
      "elementKind": "method",
      "methodName": "getAttributeNS",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Element::getAttributeNS(java.lang.String, java.lang.String) @ akasha.svg.SVGDefsElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGDefsElement",
      "classSimpleName": "SVGDefsElement",
      "elementKind": "method",
      "methodName": "getAttributeNS",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Element::getAttributeNS(java.lang.String, java.lang.String) @ akasha.svg.SVGDescElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGDescElement",
      "classSimpleName": "SVGDescElement",
      "elementKind": "method",
      "methodName": "getAttributeNS",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Element::getAttributeNS(java.lang.String, java.lang.String) @ akasha.svg.SVGElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGElement",
      "classSimpleName": "SVGElement",
      "elementKind": "method",
      "methodName": "getAttributeNS",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Element::getAttributeNS(java.lang.String, java.lang.String) @ akasha.svg.SVGEllipseElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGEllipseElement",
      "classSimpleName": "SVGEllipseElement",
      "elementKind": "method",
      "methodName": "getAttributeNS",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Element::getAttributeNS(java.lang.String, java.lang.String) @ akasha.svg.SVGFEBlendElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEBlendElement",
      "classSimpleName": "SVGFEBlendElement",
      "elementKind": "method",
      "methodName": "getAttributeNS",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Element::getAttributeNS(java.lang.String, java.lang.String) @ akasha.svg.SVGFEColorMatrixElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEColorMatrixElement",
      "classSimpleName": "SVGFEColorMatrixElement",
      "elementKind": "method",
      "methodName": "getAttributeNS",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Element::getAttributeNS(java.lang.String, java.lang.String) @ akasha.svg.SVGFEComponentTransferElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEComponentTransferElement",
      "classSimpleName": "SVGFEComponentTransferElement",
      "elementKind": "method",
      "methodName": "getAttributeNS",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Element::getAttributeNS(java.lang.String, java.lang.String) @ akasha.svg.SVGFECompositeElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFECompositeElement",
      "classSimpleName": "SVGFECompositeElement",
      "elementKind": "method",
      "methodName": "getAttributeNS",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Element::getAttributeNS(java.lang.String, java.lang.String) @ akasha.svg.SVGFEConvolveMatrixElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEConvolveMatrixElement",
      "classSimpleName": "SVGFEConvolveMatrixElement",
      "elementKind": "method",
      "methodName": "getAttributeNS",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Element::getAttributeNS(java.lang.String, java.lang.String) @ akasha.svg.SVGFEDiffuseLightingElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEDiffuseLightingElement",
      "classSimpleName": "SVGFEDiffuseLightingElement",
      "elementKind": "method",
      "methodName": "getAttributeNS",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Element::getAttributeNS(java.lang.String, java.lang.String) @ akasha.svg.SVGFEDisplacementMapElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEDisplacementMapElement",
      "classSimpleName": "SVGFEDisplacementMapElement",
      "elementKind": "method",
      "methodName": "getAttributeNS",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Element::getAttributeNS(java.lang.String, java.lang.String) @ akasha.svg.SVGFEDistantLightElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEDistantLightElement",
      "classSimpleName": "SVGFEDistantLightElement",
      "elementKind": "method",
      "methodName": "getAttributeNS",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Element::getAttributeNS(java.lang.String, java.lang.String) @ akasha.svg.SVGFEDropShadowElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEDropShadowElement",
      "classSimpleName": "SVGFEDropShadowElement",
      "elementKind": "method",
      "methodName": "getAttributeNS",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Element::getAttributeNS(java.lang.String, java.lang.String) @ akasha.svg.SVGFEFloodElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEFloodElement",
      "classSimpleName": "SVGFEFloodElement",
      "elementKind": "method",
      "methodName": "getAttributeNS",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Element::getAttributeNS(java.lang.String, java.lang.String) @ akasha.svg.SVGFEFuncAElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEFuncAElement",
      "classSimpleName": "SVGFEFuncAElement",
      "elementKind": "method",
      "methodName": "getAttributeNS",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Element::getAttributeNS(java.lang.String, java.lang.String) @ akasha.svg.SVGFEFuncBElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEFuncBElement",
      "classSimpleName": "SVGFEFuncBElement",
      "elementKind": "method",
      "methodName": "getAttributeNS",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Element::getAttributeNS(java.lang.String, java.lang.String) @ akasha.svg.SVGFEFuncGElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEFuncGElement",
      "classSimpleName": "SVGFEFuncGElement",
      "elementKind": "method",
      "methodName": "getAttributeNS",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Element::getAttributeNS(java.lang.String, java.lang.String) @ akasha.svg.SVGFEFuncRElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEFuncRElement",
      "classSimpleName": "SVGFEFuncRElement",
      "elementKind": "method",
      "methodName": "getAttributeNS",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Element::getAttributeNS(java.lang.String, java.lang.String) @ akasha.svg.SVGFEGaussianBlurElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEGaussianBlurElement",
      "classSimpleName": "SVGFEGaussianBlurElement",
      "elementKind": "method",
      "methodName": "getAttributeNS",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Element::getAttributeNS(java.lang.String, java.lang.String) @ akasha.svg.SVGFEImageElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEImageElement",
      "classSimpleName": "SVGFEImageElement",
      "elementKind": "method",
      "methodName": "getAttributeNS",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Element::getAttributeNS(java.lang.String, java.lang.String) @ akasha.svg.SVGFEMergeElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEMergeElement",
      "classSimpleName": "SVGFEMergeElement",
      "elementKind": "method",
      "methodName": "getAttributeNS",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Element::getAttributeNS(java.lang.String, java.lang.String) @ akasha.svg.SVGFEMergeNodeElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEMergeNodeElement",
      "classSimpleName": "SVGFEMergeNodeElement",
      "elementKind": "method",
      "methodName": "getAttributeNS",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Element::getAttributeNS(java.lang.String, java.lang.String) @ akasha.svg.SVGFEMorphologyElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEMorphologyElement",
      "classSimpleName": "SVGFEMorphologyElement",
      "elementKind": "method",
      "methodName": "getAttributeNS",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Element::getAttributeNS(java.lang.String, java.lang.String) @ akasha.svg.SVGFEOffsetElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEOffsetElement",
      "classSimpleName": "SVGFEOffsetElement",
      "elementKind": "method",
      "methodName": "getAttributeNS",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Element::getAttributeNS(java.lang.String, java.lang.String) @ akasha.svg.SVGFEPointLightElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEPointLightElement",
      "classSimpleName": "SVGFEPointLightElement",
      "elementKind": "method",
      "methodName": "getAttributeNS",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Element::getAttributeNS(java.lang.String, java.lang.String) @ akasha.svg.SVGFESpecularLightingElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFESpecularLightingElement",
      "classSimpleName": "SVGFESpecularLightingElement",
      "elementKind": "method",
      "methodName": "getAttributeNS",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Element::getAttributeNS(java.lang.String, java.lang.String) @ akasha.svg.SVGFESpotLightElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFESpotLightElement",
      "classSimpleName": "SVGFESpotLightElement",
      "elementKind": "method",
      "methodName": "getAttributeNS",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Element::getAttributeNS(java.lang.String, java.lang.String) @ akasha.svg.SVGFETileElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFETileElement",
      "classSimpleName": "SVGFETileElement",
      "elementKind": "method",
      "methodName": "getAttributeNS",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Element::getAttributeNS(java.lang.String, java.lang.String) @ akasha.svg.SVGFETurbulenceElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFETurbulenceElement",
      "classSimpleName": "SVGFETurbulenceElement",
      "elementKind": "method",
      "methodName": "getAttributeNS",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Element::getAttributeNS(java.lang.String, java.lang.String) @ akasha.svg.SVGFilterElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFilterElement",
      "classSimpleName": "SVGFilterElement",
      "elementKind": "method",
      "methodName": "getAttributeNS",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Element::getAttributeNS(java.lang.String, java.lang.String) @ akasha.svg.SVGForeignObjectElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGForeignObjectElement",
      "classSimpleName": "SVGForeignObjectElement",
      "elementKind": "method",
      "methodName": "getAttributeNS",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Element::getAttributeNS(java.lang.String, java.lang.String) @ akasha.svg.SVGGElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGGElement",
      "classSimpleName": "SVGGElement",
      "elementKind": "method",
      "methodName": "getAttributeNS",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Element::getAttributeNS(java.lang.String, java.lang.String) @ akasha.svg.SVGGeometryElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGGeometryElement",
      "classSimpleName": "SVGGeometryElement",
      "elementKind": "method",
      "methodName": "getAttributeNS",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Element::getAttributeNS(java.lang.String, java.lang.String) @ akasha.svg.SVGGradientElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGGradientElement",
      "classSimpleName": "SVGGradientElement",
      "elementKind": "method",
      "methodName": "getAttributeNS",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Element::getAttributeNS(java.lang.String, java.lang.String) @ akasha.svg.SVGGraphicsElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGGraphicsElement",
      "classSimpleName": "SVGGraphicsElement",
      "elementKind": "method",
      "methodName": "getAttributeNS",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Element::getAttributeNS(java.lang.String, java.lang.String) @ akasha.svg.SVGImageElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGImageElement",
      "classSimpleName": "SVGImageElement",
      "elementKind": "method",
      "methodName": "getAttributeNS",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Element::getAttributeNS(java.lang.String, java.lang.String) @ akasha.svg.SVGLineElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGLineElement",
      "classSimpleName": "SVGLineElement",
      "elementKind": "method",
      "methodName": "getAttributeNS",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Element::getAttributeNS(java.lang.String, java.lang.String) @ akasha.svg.SVGLinearGradientElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGLinearGradientElement",
      "classSimpleName": "SVGLinearGradientElement",
      "elementKind": "method",
      "methodName": "getAttributeNS",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Element::getAttributeNS(java.lang.String, java.lang.String) @ akasha.svg.SVGMarkerElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGMarkerElement",
      "classSimpleName": "SVGMarkerElement",
      "elementKind": "method",
      "methodName": "getAttributeNS",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Element::getAttributeNS(java.lang.String, java.lang.String) @ akasha.svg.SVGMaskElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGMaskElement",
      "classSimpleName": "SVGMaskElement",
      "elementKind": "method",
      "methodName": "getAttributeNS",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Element::getAttributeNS(java.lang.String, java.lang.String) @ akasha.svg.SVGMetadataElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGMetadataElement",
      "classSimpleName": "SVGMetadataElement",
      "elementKind": "method",
      "methodName": "getAttributeNS",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Element::getAttributeNS(java.lang.String, java.lang.String) @ akasha.svg.SVGPathElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGPathElement",
      "classSimpleName": "SVGPathElement",
      "elementKind": "method",
      "methodName": "getAttributeNS",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Element::getAttributeNS(java.lang.String, java.lang.String) @ akasha.svg.SVGPatternElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGPatternElement",
      "classSimpleName": "SVGPatternElement",
      "elementKind": "method",
      "methodName": "getAttributeNS",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Element::getAttributeNS(java.lang.String, java.lang.String) @ akasha.svg.SVGPolygonElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGPolygonElement",
      "classSimpleName": "SVGPolygonElement",
      "elementKind": "method",
      "methodName": "getAttributeNS",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Element::getAttributeNS(java.lang.String, java.lang.String) @ akasha.svg.SVGPolylineElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGPolylineElement",
      "classSimpleName": "SVGPolylineElement",
      "elementKind": "method",
      "methodName": "getAttributeNS",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Element::getAttributeNS(java.lang.String, java.lang.String) @ akasha.svg.SVGRadialGradientElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGRadialGradientElement",
      "classSimpleName": "SVGRadialGradientElement",
      "elementKind": "method",
      "methodName": "getAttributeNS",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Element::getAttributeNS(java.lang.String, java.lang.String) @ akasha.svg.SVGRectElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGRectElement",
      "classSimpleName": "SVGRectElement",
      "elementKind": "method",
      "methodName": "getAttributeNS",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Element::getAttributeNS(java.lang.String, java.lang.String) @ akasha.svg.SVGSVGElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGSVGElement",
      "classSimpleName": "SVGSVGElement",
      "elementKind": "method",
      "methodName": "getAttributeNS",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Element::getAttributeNS(java.lang.String, java.lang.String) @ akasha.svg.SVGScriptElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGScriptElement",
      "classSimpleName": "SVGScriptElement",
      "elementKind": "method",
      "methodName": "getAttributeNS",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Element::getAttributeNS(java.lang.String, java.lang.String) @ akasha.svg.SVGStopElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGStopElement",
      "classSimpleName": "SVGStopElement",
      "elementKind": "method",
      "methodName": "getAttributeNS",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Element::getAttributeNS(java.lang.String, java.lang.String) @ akasha.svg.SVGStyleElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGStyleElement",
      "classSimpleName": "SVGStyleElement",
      "elementKind": "method",
      "methodName": "getAttributeNS",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Element::getAttributeNS(java.lang.String, java.lang.String) @ akasha.svg.SVGSwitchElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGSwitchElement",
      "classSimpleName": "SVGSwitchElement",
      "elementKind": "method",
      "methodName": "getAttributeNS",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Element::getAttributeNS(java.lang.String, java.lang.String) @ akasha.svg.SVGSymbolElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGSymbolElement",
      "classSimpleName": "SVGSymbolElement",
      "elementKind": "method",
      "methodName": "getAttributeNS",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Element::getAttributeNS(java.lang.String, java.lang.String) @ akasha.svg.SVGTSpanElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGTSpanElement",
      "classSimpleName": "SVGTSpanElement",
      "elementKind": "method",
      "methodName": "getAttributeNS",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Element::getAttributeNS(java.lang.String, java.lang.String) @ akasha.svg.SVGTextContentElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGTextContentElement",
      "classSimpleName": "SVGTextContentElement",
      "elementKind": "method",
      "methodName": "getAttributeNS",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Element::getAttributeNS(java.lang.String, java.lang.String) @ akasha.svg.SVGTextElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGTextElement",
      "classSimpleName": "SVGTextElement",
      "elementKind": "method",
      "methodName": "getAttributeNS",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Element::getAttributeNS(java.lang.String, java.lang.String) @ akasha.svg.SVGTextPathElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGTextPathElement",
      "classSimpleName": "SVGTextPathElement",
      "elementKind": "method",
      "methodName": "getAttributeNS",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Element::getAttributeNS(java.lang.String, java.lang.String) @ akasha.svg.SVGTextPositioningElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGTextPositioningElement",
      "classSimpleName": "SVGTextPositioningElement",
      "elementKind": "method",
      "methodName": "getAttributeNS",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Element::getAttributeNS(java.lang.String, java.lang.String) @ akasha.svg.SVGTitleElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGTitleElement",
      "classSimpleName": "SVGTitleElement",
      "elementKind": "method",
      "methodName": "getAttributeNS",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Element::getAttributeNS(java.lang.String, java.lang.String) @ akasha.svg.SVGUnknownElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGUnknownElement",
      "classSimpleName": "SVGUnknownElement",
      "elementKind": "method",
      "methodName": "getAttributeNS",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Element::getAttributeNS(java.lang.String, java.lang.String) @ akasha.svg.SVGUseElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGUseElement",
      "classSimpleName": "SVGUseElement",
      "elementKind": "method",
      "methodName": "getAttributeNS",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Element::getAttributeNS(java.lang.String, java.lang.String) @ akasha.svg.SVGViewElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGViewElement",
      "classSimpleName": "SVGViewElement",
      "elementKind": "method",
      "methodName": "getAttributeNS",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Element::getAttributeNS(java.lang.String, java.lang.String)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.Element",
      "classSimpleName": "Element",
      "elementKind": "method",
      "methodName": "getAttributeNS",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Global::escape(java.lang.String)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.Global",
      "classSimpleName": "Global",
      "elementKind": "method",
      "methodName": "escape",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Global::unescape(java.lang.String)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.Global",
      "classSimpleName": "Global",
      "elementKind": "method",
      "methodName": "unescape",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.HTMLMediaElement::canPlayType(java.lang.String) @ akasha.Audio",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.Audio",
      "classSimpleName": "Audio",
      "elementKind": "method",
      "methodName": "canPlayType",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.HTMLMediaElement::canPlayType(java.lang.String) @ akasha.HTMLAudioElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLAudioElement",
      "classSimpleName": "HTMLAudioElement",
      "elementKind": "method",
      "methodName": "canPlayType",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.HTMLMediaElement::canPlayType(java.lang.String) @ akasha.HTMLVideoElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLVideoElement",
      "classSimpleName": "HTMLVideoElement",
      "elementKind": "method",
      "methodName": "canPlayType",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.HTMLMediaElement::canPlayType(java.lang.String)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLMediaElement",
      "classSimpleName": "HTMLMediaElement",
      "elementKind": "method",
      "methodName": "canPlayType",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.MediaList::item(int)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.MediaList",
      "classSimpleName": "MediaList",
      "elementKind": "method",
      "methodName": "item",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Node::lookupNamespaceURI(java.lang.String) @ akasha.Attr",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.Attr",
      "classSimpleName": "Attr",
      "elementKind": "method",
      "methodName": "lookupNamespaceURI",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Node::lookupNamespaceURI(java.lang.String) @ akasha.Audio",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.Audio",
      "classSimpleName": "Audio",
      "elementKind": "method",
      "methodName": "lookupNamespaceURI",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Node::lookupNamespaceURI(java.lang.String) @ akasha.CDATASection",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.CDATASection",
      "classSimpleName": "CDATASection",
      "elementKind": "method",
      "methodName": "lookupNamespaceURI",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Node::lookupNamespaceURI(java.lang.String) @ akasha.CharacterData",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.CharacterData",
      "classSimpleName": "CharacterData",
      "elementKind": "method",
      "methodName": "lookupNamespaceURI",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Node::lookupNamespaceURI(java.lang.String) @ akasha.Comment",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.Comment",
      "classSimpleName": "Comment",
      "elementKind": "method",
      "methodName": "lookupNamespaceURI",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Node::lookupNamespaceURI(java.lang.String) @ akasha.Document",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.Document",
      "classSimpleName": "Document",
      "elementKind": "method",
      "methodName": "lookupNamespaceURI",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Node::lookupNamespaceURI(java.lang.String) @ akasha.DocumentFragment",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.DocumentFragment",
      "classSimpleName": "DocumentFragment",
      "elementKind": "method",
      "methodName": "lookupNamespaceURI",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Node::lookupNamespaceURI(java.lang.String) @ akasha.DocumentType",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.DocumentType",
      "classSimpleName": "DocumentType",
      "elementKind": "method",
      "methodName": "lookupNamespaceURI",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Node::lookupNamespaceURI(java.lang.String) @ akasha.Element",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.Element",
      "classSimpleName": "Element",
      "elementKind": "method",
      "methodName": "lookupNamespaceURI",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Node::lookupNamespaceURI(java.lang.String) @ akasha.HTMLAnchorElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLAnchorElement",
      "classSimpleName": "HTMLAnchorElement",
      "elementKind": "method",
      "methodName": "lookupNamespaceURI",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Node::lookupNamespaceURI(java.lang.String) @ akasha.HTMLAreaElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLAreaElement",
      "classSimpleName": "HTMLAreaElement",
      "elementKind": "method",
      "methodName": "lookupNamespaceURI",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Node::lookupNamespaceURI(java.lang.String) @ akasha.HTMLAudioElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLAudioElement",
      "classSimpleName": "HTMLAudioElement",
      "elementKind": "method",
      "methodName": "lookupNamespaceURI",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Node::lookupNamespaceURI(java.lang.String) @ akasha.HTMLBRElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLBRElement",
      "classSimpleName": "HTMLBRElement",
      "elementKind": "method",
      "methodName": "lookupNamespaceURI",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Node::lookupNamespaceURI(java.lang.String) @ akasha.HTMLBaseElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLBaseElement",
      "classSimpleName": "HTMLBaseElement",
      "elementKind": "method",
      "methodName": "lookupNamespaceURI",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Node::lookupNamespaceURI(java.lang.String) @ akasha.HTMLBodyElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLBodyElement",
      "classSimpleName": "HTMLBodyElement",
      "elementKind": "method",
      "methodName": "lookupNamespaceURI",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Node::lookupNamespaceURI(java.lang.String) @ akasha.HTMLButtonElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLButtonElement",
      "classSimpleName": "HTMLButtonElement",
      "elementKind": "method",
      "methodName": "lookupNamespaceURI",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Node::lookupNamespaceURI(java.lang.String) @ akasha.HTMLCanvasElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLCanvasElement",
      "classSimpleName": "HTMLCanvasElement",
      "elementKind": "method",
      "methodName": "lookupNamespaceURI",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Node::lookupNamespaceURI(java.lang.String) @ akasha.HTMLDListElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLDListElement",
      "classSimpleName": "HTMLDListElement",
      "elementKind": "method",
      "methodName": "lookupNamespaceURI",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Node::lookupNamespaceURI(java.lang.String) @ akasha.HTMLDataElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLDataElement",
      "classSimpleName": "HTMLDataElement",
      "elementKind": "method",
      "methodName": "lookupNamespaceURI",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Node::lookupNamespaceURI(java.lang.String) @ akasha.HTMLDataListElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLDataListElement",
      "classSimpleName": "HTMLDataListElement",
      "elementKind": "method",
      "methodName": "lookupNamespaceURI",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Node::lookupNamespaceURI(java.lang.String) @ akasha.HTMLDetailsElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLDetailsElement",
      "classSimpleName": "HTMLDetailsElement",
      "elementKind": "method",
      "methodName": "lookupNamespaceURI",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Node::lookupNamespaceURI(java.lang.String) @ akasha.HTMLDialogElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLDialogElement",
      "classSimpleName": "HTMLDialogElement",
      "elementKind": "method",
      "methodName": "lookupNamespaceURI",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Node::lookupNamespaceURI(java.lang.String) @ akasha.HTMLDirectoryElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLDirectoryElement",
      "classSimpleName": "HTMLDirectoryElement",
      "elementKind": "method",
      "methodName": "lookupNamespaceURI",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Node::lookupNamespaceURI(java.lang.String) @ akasha.HTMLDivElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLDivElement",
      "classSimpleName": "HTMLDivElement",
      "elementKind": "method",
      "methodName": "lookupNamespaceURI",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Node::lookupNamespaceURI(java.lang.String) @ akasha.HTMLElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLElement",
      "classSimpleName": "HTMLElement",
      "elementKind": "method",
      "methodName": "lookupNamespaceURI",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Node::lookupNamespaceURI(java.lang.String) @ akasha.HTMLEmbedElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLEmbedElement",
      "classSimpleName": "HTMLEmbedElement",
      "elementKind": "method",
      "methodName": "lookupNamespaceURI",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Node::lookupNamespaceURI(java.lang.String) @ akasha.HTMLFieldSetElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLFieldSetElement",
      "classSimpleName": "HTMLFieldSetElement",
      "elementKind": "method",
      "methodName": "lookupNamespaceURI",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Node::lookupNamespaceURI(java.lang.String) @ akasha.HTMLFontElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLFontElement",
      "classSimpleName": "HTMLFontElement",
      "elementKind": "method",
      "methodName": "lookupNamespaceURI",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Node::lookupNamespaceURI(java.lang.String) @ akasha.HTMLFormElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLFormElement",
      "classSimpleName": "HTMLFormElement",
      "elementKind": "method",
      "methodName": "lookupNamespaceURI",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Node::lookupNamespaceURI(java.lang.String) @ akasha.HTMLFrameElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLFrameElement",
      "classSimpleName": "HTMLFrameElement",
      "elementKind": "method",
      "methodName": "lookupNamespaceURI",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Node::lookupNamespaceURI(java.lang.String) @ akasha.HTMLFrameSetElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLFrameSetElement",
      "classSimpleName": "HTMLFrameSetElement",
      "elementKind": "method",
      "methodName": "lookupNamespaceURI",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Node::lookupNamespaceURI(java.lang.String) @ akasha.HTMLHRElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLHRElement",
      "classSimpleName": "HTMLHRElement",
      "elementKind": "method",
      "methodName": "lookupNamespaceURI",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Node::lookupNamespaceURI(java.lang.String) @ akasha.HTMLHeadElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLHeadElement",
      "classSimpleName": "HTMLHeadElement",
      "elementKind": "method",
      "methodName": "lookupNamespaceURI",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Node::lookupNamespaceURI(java.lang.String) @ akasha.HTMLHeadingElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLHeadingElement",
      "classSimpleName": "HTMLHeadingElement",
      "elementKind": "method",
      "methodName": "lookupNamespaceURI",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Node::lookupNamespaceURI(java.lang.String) @ akasha.HTMLHtmlElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLHtmlElement",
      "classSimpleName": "HTMLHtmlElement",
      "elementKind": "method",
      "methodName": "lookupNamespaceURI",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Node::lookupNamespaceURI(java.lang.String) @ akasha.HTMLIFrameElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLIFrameElement",
      "classSimpleName": "HTMLIFrameElement",
      "elementKind": "method",
      "methodName": "lookupNamespaceURI",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Node::lookupNamespaceURI(java.lang.String) @ akasha.HTMLImageElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLImageElement",
      "classSimpleName": "HTMLImageElement",
      "elementKind": "method",
      "methodName": "lookupNamespaceURI",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Node::lookupNamespaceURI(java.lang.String) @ akasha.HTMLInputElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLInputElement",
      "classSimpleName": "HTMLInputElement",
      "elementKind": "method",
      "methodName": "lookupNamespaceURI",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Node::lookupNamespaceURI(java.lang.String) @ akasha.HTMLLIElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLLIElement",
      "classSimpleName": "HTMLLIElement",
      "elementKind": "method",
      "methodName": "lookupNamespaceURI",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Node::lookupNamespaceURI(java.lang.String) @ akasha.HTMLLabelElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLLabelElement",
      "classSimpleName": "HTMLLabelElement",
      "elementKind": "method",
      "methodName": "lookupNamespaceURI",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Node::lookupNamespaceURI(java.lang.String) @ akasha.HTMLLegendElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLLegendElement",
      "classSimpleName": "HTMLLegendElement",
      "elementKind": "method",
      "methodName": "lookupNamespaceURI",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Node::lookupNamespaceURI(java.lang.String) @ akasha.HTMLLinkElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLLinkElement",
      "classSimpleName": "HTMLLinkElement",
      "elementKind": "method",
      "methodName": "lookupNamespaceURI",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Node::lookupNamespaceURI(java.lang.String) @ akasha.HTMLMapElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLMapElement",
      "classSimpleName": "HTMLMapElement",
      "elementKind": "method",
      "methodName": "lookupNamespaceURI",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Node::lookupNamespaceURI(java.lang.String) @ akasha.HTMLMarqueeElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLMarqueeElement",
      "classSimpleName": "HTMLMarqueeElement",
      "elementKind": "method",
      "methodName": "lookupNamespaceURI",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Node::lookupNamespaceURI(java.lang.String) @ akasha.HTMLMediaElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLMediaElement",
      "classSimpleName": "HTMLMediaElement",
      "elementKind": "method",
      "methodName": "lookupNamespaceURI",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Node::lookupNamespaceURI(java.lang.String) @ akasha.HTMLMenuElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLMenuElement",
      "classSimpleName": "HTMLMenuElement",
      "elementKind": "method",
      "methodName": "lookupNamespaceURI",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Node::lookupNamespaceURI(java.lang.String) @ akasha.HTMLMetaElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLMetaElement",
      "classSimpleName": "HTMLMetaElement",
      "elementKind": "method",
      "methodName": "lookupNamespaceURI",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Node::lookupNamespaceURI(java.lang.String) @ akasha.HTMLMeterElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLMeterElement",
      "classSimpleName": "HTMLMeterElement",
      "elementKind": "method",
      "methodName": "lookupNamespaceURI",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Node::lookupNamespaceURI(java.lang.String) @ akasha.HTMLModElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLModElement",
      "classSimpleName": "HTMLModElement",
      "elementKind": "method",
      "methodName": "lookupNamespaceURI",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Node::lookupNamespaceURI(java.lang.String) @ akasha.HTMLOListElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLOListElement",
      "classSimpleName": "HTMLOListElement",
      "elementKind": "method",
      "methodName": "lookupNamespaceURI",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Node::lookupNamespaceURI(java.lang.String) @ akasha.HTMLObjectElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLObjectElement",
      "classSimpleName": "HTMLObjectElement",
      "elementKind": "method",
      "methodName": "lookupNamespaceURI",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Node::lookupNamespaceURI(java.lang.String) @ akasha.HTMLOptGroupElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLOptGroupElement",
      "classSimpleName": "HTMLOptGroupElement",
      "elementKind": "method",
      "methodName": "lookupNamespaceURI",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Node::lookupNamespaceURI(java.lang.String) @ akasha.HTMLOptionElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLOptionElement",
      "classSimpleName": "HTMLOptionElement",
      "elementKind": "method",
      "methodName": "lookupNamespaceURI",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Node::lookupNamespaceURI(java.lang.String) @ akasha.HTMLOutputElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLOutputElement",
      "classSimpleName": "HTMLOutputElement",
      "elementKind": "method",
      "methodName": "lookupNamespaceURI",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Node::lookupNamespaceURI(java.lang.String) @ akasha.HTMLParagraphElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLParagraphElement",
      "classSimpleName": "HTMLParagraphElement",
      "elementKind": "method",
      "methodName": "lookupNamespaceURI",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Node::lookupNamespaceURI(java.lang.String) @ akasha.HTMLParamElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLParamElement",
      "classSimpleName": "HTMLParamElement",
      "elementKind": "method",
      "methodName": "lookupNamespaceURI",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Node::lookupNamespaceURI(java.lang.String) @ akasha.HTMLPictureElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLPictureElement",
      "classSimpleName": "HTMLPictureElement",
      "elementKind": "method",
      "methodName": "lookupNamespaceURI",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Node::lookupNamespaceURI(java.lang.String) @ akasha.HTMLPreElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLPreElement",
      "classSimpleName": "HTMLPreElement",
      "elementKind": "method",
      "methodName": "lookupNamespaceURI",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Node::lookupNamespaceURI(java.lang.String) @ akasha.HTMLProgressElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLProgressElement",
      "classSimpleName": "HTMLProgressElement",
      "elementKind": "method",
      "methodName": "lookupNamespaceURI",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Node::lookupNamespaceURI(java.lang.String) @ akasha.HTMLQuoteElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLQuoteElement",
      "classSimpleName": "HTMLQuoteElement",
      "elementKind": "method",
      "methodName": "lookupNamespaceURI",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Node::lookupNamespaceURI(java.lang.String) @ akasha.HTMLScriptElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLScriptElement",
      "classSimpleName": "HTMLScriptElement",
      "elementKind": "method",
      "methodName": "lookupNamespaceURI",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Node::lookupNamespaceURI(java.lang.String) @ akasha.HTMLSelectElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLSelectElement",
      "classSimpleName": "HTMLSelectElement",
      "elementKind": "method",
      "methodName": "lookupNamespaceURI",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Node::lookupNamespaceURI(java.lang.String) @ akasha.HTMLSlotElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLSlotElement",
      "classSimpleName": "HTMLSlotElement",
      "elementKind": "method",
      "methodName": "lookupNamespaceURI",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Node::lookupNamespaceURI(java.lang.String) @ akasha.HTMLSourceElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLSourceElement",
      "classSimpleName": "HTMLSourceElement",
      "elementKind": "method",
      "methodName": "lookupNamespaceURI",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Node::lookupNamespaceURI(java.lang.String) @ akasha.HTMLSpanElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLSpanElement",
      "classSimpleName": "HTMLSpanElement",
      "elementKind": "method",
      "methodName": "lookupNamespaceURI",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Node::lookupNamespaceURI(java.lang.String) @ akasha.HTMLStyleElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLStyleElement",
      "classSimpleName": "HTMLStyleElement",
      "elementKind": "method",
      "methodName": "lookupNamespaceURI",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Node::lookupNamespaceURI(java.lang.String) @ akasha.HTMLTableCaptionElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLTableCaptionElement",
      "classSimpleName": "HTMLTableCaptionElement",
      "elementKind": "method",
      "methodName": "lookupNamespaceURI",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Node::lookupNamespaceURI(java.lang.String) @ akasha.HTMLTableCellElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLTableCellElement",
      "classSimpleName": "HTMLTableCellElement",
      "elementKind": "method",
      "methodName": "lookupNamespaceURI",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Node::lookupNamespaceURI(java.lang.String) @ akasha.HTMLTableColElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLTableColElement",
      "classSimpleName": "HTMLTableColElement",
      "elementKind": "method",
      "methodName": "lookupNamespaceURI",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Node::lookupNamespaceURI(java.lang.String) @ akasha.HTMLTableElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLTableElement",
      "classSimpleName": "HTMLTableElement",
      "elementKind": "method",
      "methodName": "lookupNamespaceURI",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Node::lookupNamespaceURI(java.lang.String) @ akasha.HTMLTableRowElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLTableRowElement",
      "classSimpleName": "HTMLTableRowElement",
      "elementKind": "method",
      "methodName": "lookupNamespaceURI",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Node::lookupNamespaceURI(java.lang.String) @ akasha.HTMLTableSectionElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLTableSectionElement",
      "classSimpleName": "HTMLTableSectionElement",
      "elementKind": "method",
      "methodName": "lookupNamespaceURI",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Node::lookupNamespaceURI(java.lang.String) @ akasha.HTMLTemplateElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLTemplateElement",
      "classSimpleName": "HTMLTemplateElement",
      "elementKind": "method",
      "methodName": "lookupNamespaceURI",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Node::lookupNamespaceURI(java.lang.String) @ akasha.HTMLTextAreaElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLTextAreaElement",
      "classSimpleName": "HTMLTextAreaElement",
      "elementKind": "method",
      "methodName": "lookupNamespaceURI",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Node::lookupNamespaceURI(java.lang.String) @ akasha.HTMLTimeElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLTimeElement",
      "classSimpleName": "HTMLTimeElement",
      "elementKind": "method",
      "methodName": "lookupNamespaceURI",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Node::lookupNamespaceURI(java.lang.String) @ akasha.HTMLTitleElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLTitleElement",
      "classSimpleName": "HTMLTitleElement",
      "elementKind": "method",
      "methodName": "lookupNamespaceURI",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Node::lookupNamespaceURI(java.lang.String) @ akasha.HTMLTrackElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLTrackElement",
      "classSimpleName": "HTMLTrackElement",
      "elementKind": "method",
      "methodName": "lookupNamespaceURI",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Node::lookupNamespaceURI(java.lang.String) @ akasha.HTMLUListElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLUListElement",
      "classSimpleName": "HTMLUListElement",
      "elementKind": "method",
      "methodName": "lookupNamespaceURI",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Node::lookupNamespaceURI(java.lang.String) @ akasha.HTMLUnknownElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLUnknownElement",
      "classSimpleName": "HTMLUnknownElement",
      "elementKind": "method",
      "methodName": "lookupNamespaceURI",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Node::lookupNamespaceURI(java.lang.String) @ akasha.HTMLVideoElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLVideoElement",
      "classSimpleName": "HTMLVideoElement",
      "elementKind": "method",
      "methodName": "lookupNamespaceURI",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Node::lookupNamespaceURI(java.lang.String) @ akasha.Image",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.Image",
      "classSimpleName": "Image",
      "elementKind": "method",
      "methodName": "lookupNamespaceURI",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Node::lookupNamespaceURI(java.lang.String) @ akasha.Option",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.Option",
      "classSimpleName": "Option",
      "elementKind": "method",
      "methodName": "lookupNamespaceURI",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Node::lookupNamespaceURI(java.lang.String) @ akasha.ProcessingInstruction",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.ProcessingInstruction",
      "classSimpleName": "ProcessingInstruction",
      "elementKind": "method",
      "methodName": "lookupNamespaceURI",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Node::lookupNamespaceURI(java.lang.String) @ akasha.ShadowRoot",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.ShadowRoot",
      "classSimpleName": "ShadowRoot",
      "elementKind": "method",
      "methodName": "lookupNamespaceURI",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Node::lookupNamespaceURI(java.lang.String) @ akasha.Text",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.Text",
      "classSimpleName": "Text",
      "elementKind": "method",
      "methodName": "lookupNamespaceURI",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Node::lookupNamespaceURI(java.lang.String) @ akasha.XMLDocument",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.XMLDocument",
      "classSimpleName": "XMLDocument",
      "elementKind": "method",
      "methodName": "lookupNamespaceURI",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Node::lookupNamespaceURI(java.lang.String) @ akasha.svg.SVGAElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGAElement",
      "classSimpleName": "SVGAElement",
      "elementKind": "method",
      "methodName": "lookupNamespaceURI",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Node::lookupNamespaceURI(java.lang.String) @ akasha.svg.SVGCircleElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGCircleElement",
      "classSimpleName": "SVGCircleElement",
      "elementKind": "method",
      "methodName": "lookupNamespaceURI",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Node::lookupNamespaceURI(java.lang.String) @ akasha.svg.SVGClipPathElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGClipPathElement",
      "classSimpleName": "SVGClipPathElement",
      "elementKind": "method",
      "methodName": "lookupNamespaceURI",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Node::lookupNamespaceURI(java.lang.String) @ akasha.svg.SVGComponentTransferFunctionElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGComponentTransferFunctionElement",
      "classSimpleName": "SVGComponentTransferFunctionElement",
      "elementKind": "method",
      "methodName": "lookupNamespaceURI",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Node::lookupNamespaceURI(java.lang.String) @ akasha.svg.SVGDefsElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGDefsElement",
      "classSimpleName": "SVGDefsElement",
      "elementKind": "method",
      "methodName": "lookupNamespaceURI",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Node::lookupNamespaceURI(java.lang.String) @ akasha.svg.SVGDescElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGDescElement",
      "classSimpleName": "SVGDescElement",
      "elementKind": "method",
      "methodName": "lookupNamespaceURI",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Node::lookupNamespaceURI(java.lang.String) @ akasha.svg.SVGElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGElement",
      "classSimpleName": "SVGElement",
      "elementKind": "method",
      "methodName": "lookupNamespaceURI",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Node::lookupNamespaceURI(java.lang.String) @ akasha.svg.SVGEllipseElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGEllipseElement",
      "classSimpleName": "SVGEllipseElement",
      "elementKind": "method",
      "methodName": "lookupNamespaceURI",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Node::lookupNamespaceURI(java.lang.String) @ akasha.svg.SVGFEBlendElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEBlendElement",
      "classSimpleName": "SVGFEBlendElement",
      "elementKind": "method",
      "methodName": "lookupNamespaceURI",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Node::lookupNamespaceURI(java.lang.String) @ akasha.svg.SVGFEColorMatrixElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEColorMatrixElement",
      "classSimpleName": "SVGFEColorMatrixElement",
      "elementKind": "method",
      "methodName": "lookupNamespaceURI",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Node::lookupNamespaceURI(java.lang.String) @ akasha.svg.SVGFEComponentTransferElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEComponentTransferElement",
      "classSimpleName": "SVGFEComponentTransferElement",
      "elementKind": "method",
      "methodName": "lookupNamespaceURI",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Node::lookupNamespaceURI(java.lang.String) @ akasha.svg.SVGFECompositeElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFECompositeElement",
      "classSimpleName": "SVGFECompositeElement",
      "elementKind": "method",
      "methodName": "lookupNamespaceURI",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Node::lookupNamespaceURI(java.lang.String) @ akasha.svg.SVGFEConvolveMatrixElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEConvolveMatrixElement",
      "classSimpleName": "SVGFEConvolveMatrixElement",
      "elementKind": "method",
      "methodName": "lookupNamespaceURI",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Node::lookupNamespaceURI(java.lang.String) @ akasha.svg.SVGFEDiffuseLightingElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEDiffuseLightingElement",
      "classSimpleName": "SVGFEDiffuseLightingElement",
      "elementKind": "method",
      "methodName": "lookupNamespaceURI",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Node::lookupNamespaceURI(java.lang.String) @ akasha.svg.SVGFEDisplacementMapElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEDisplacementMapElement",
      "classSimpleName": "SVGFEDisplacementMapElement",
      "elementKind": "method",
      "methodName": "lookupNamespaceURI",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Node::lookupNamespaceURI(java.lang.String) @ akasha.svg.SVGFEDistantLightElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEDistantLightElement",
      "classSimpleName": "SVGFEDistantLightElement",
      "elementKind": "method",
      "methodName": "lookupNamespaceURI",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Node::lookupNamespaceURI(java.lang.String) @ akasha.svg.SVGFEDropShadowElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEDropShadowElement",
      "classSimpleName": "SVGFEDropShadowElement",
      "elementKind": "method",
      "methodName": "lookupNamespaceURI",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Node::lookupNamespaceURI(java.lang.String) @ akasha.svg.SVGFEFloodElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEFloodElement",
      "classSimpleName": "SVGFEFloodElement",
      "elementKind": "method",
      "methodName": "lookupNamespaceURI",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Node::lookupNamespaceURI(java.lang.String) @ akasha.svg.SVGFEFuncAElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEFuncAElement",
      "classSimpleName": "SVGFEFuncAElement",
      "elementKind": "method",
      "methodName": "lookupNamespaceURI",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Node::lookupNamespaceURI(java.lang.String) @ akasha.svg.SVGFEFuncBElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEFuncBElement",
      "classSimpleName": "SVGFEFuncBElement",
      "elementKind": "method",
      "methodName": "lookupNamespaceURI",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Node::lookupNamespaceURI(java.lang.String) @ akasha.svg.SVGFEFuncGElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEFuncGElement",
      "classSimpleName": "SVGFEFuncGElement",
      "elementKind": "method",
      "methodName": "lookupNamespaceURI",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Node::lookupNamespaceURI(java.lang.String) @ akasha.svg.SVGFEFuncRElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEFuncRElement",
      "classSimpleName": "SVGFEFuncRElement",
      "elementKind": "method",
      "methodName": "lookupNamespaceURI",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Node::lookupNamespaceURI(java.lang.String) @ akasha.svg.SVGFEGaussianBlurElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEGaussianBlurElement",
      "classSimpleName": "SVGFEGaussianBlurElement",
      "elementKind": "method",
      "methodName": "lookupNamespaceURI",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Node::lookupNamespaceURI(java.lang.String) @ akasha.svg.SVGFEImageElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEImageElement",
      "classSimpleName": "SVGFEImageElement",
      "elementKind": "method",
      "methodName": "lookupNamespaceURI",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Node::lookupNamespaceURI(java.lang.String) @ akasha.svg.SVGFEMergeElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEMergeElement",
      "classSimpleName": "SVGFEMergeElement",
      "elementKind": "method",
      "methodName": "lookupNamespaceURI",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Node::lookupNamespaceURI(java.lang.String) @ akasha.svg.SVGFEMergeNodeElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEMergeNodeElement",
      "classSimpleName": "SVGFEMergeNodeElement",
      "elementKind": "method",
      "methodName": "lookupNamespaceURI",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Node::lookupNamespaceURI(java.lang.String) @ akasha.svg.SVGFEMorphologyElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEMorphologyElement",
      "classSimpleName": "SVGFEMorphologyElement",
      "elementKind": "method",
      "methodName": "lookupNamespaceURI",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Node::lookupNamespaceURI(java.lang.String) @ akasha.svg.SVGFEOffsetElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEOffsetElement",
      "classSimpleName": "SVGFEOffsetElement",
      "elementKind": "method",
      "methodName": "lookupNamespaceURI",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Node::lookupNamespaceURI(java.lang.String) @ akasha.svg.SVGFEPointLightElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEPointLightElement",
      "classSimpleName": "SVGFEPointLightElement",
      "elementKind": "method",
      "methodName": "lookupNamespaceURI",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Node::lookupNamespaceURI(java.lang.String) @ akasha.svg.SVGFESpecularLightingElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFESpecularLightingElement",
      "classSimpleName": "SVGFESpecularLightingElement",
      "elementKind": "method",
      "methodName": "lookupNamespaceURI",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Node::lookupNamespaceURI(java.lang.String) @ akasha.svg.SVGFESpotLightElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFESpotLightElement",
      "classSimpleName": "SVGFESpotLightElement",
      "elementKind": "method",
      "methodName": "lookupNamespaceURI",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Node::lookupNamespaceURI(java.lang.String) @ akasha.svg.SVGFETileElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFETileElement",
      "classSimpleName": "SVGFETileElement",
      "elementKind": "method",
      "methodName": "lookupNamespaceURI",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Node::lookupNamespaceURI(java.lang.String) @ akasha.svg.SVGFETurbulenceElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFETurbulenceElement",
      "classSimpleName": "SVGFETurbulenceElement",
      "elementKind": "method",
      "methodName": "lookupNamespaceURI",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Node::lookupNamespaceURI(java.lang.String) @ akasha.svg.SVGFilterElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFilterElement",
      "classSimpleName": "SVGFilterElement",
      "elementKind": "method",
      "methodName": "lookupNamespaceURI",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Node::lookupNamespaceURI(java.lang.String) @ akasha.svg.SVGForeignObjectElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGForeignObjectElement",
      "classSimpleName": "SVGForeignObjectElement",
      "elementKind": "method",
      "methodName": "lookupNamespaceURI",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Node::lookupNamespaceURI(java.lang.String) @ akasha.svg.SVGGElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGGElement",
      "classSimpleName": "SVGGElement",
      "elementKind": "method",
      "methodName": "lookupNamespaceURI",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Node::lookupNamespaceURI(java.lang.String) @ akasha.svg.SVGGeometryElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGGeometryElement",
      "classSimpleName": "SVGGeometryElement",
      "elementKind": "method",
      "methodName": "lookupNamespaceURI",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Node::lookupNamespaceURI(java.lang.String) @ akasha.svg.SVGGradientElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGGradientElement",
      "classSimpleName": "SVGGradientElement",
      "elementKind": "method",
      "methodName": "lookupNamespaceURI",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Node::lookupNamespaceURI(java.lang.String) @ akasha.svg.SVGGraphicsElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGGraphicsElement",
      "classSimpleName": "SVGGraphicsElement",
      "elementKind": "method",
      "methodName": "lookupNamespaceURI",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Node::lookupNamespaceURI(java.lang.String) @ akasha.svg.SVGImageElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGImageElement",
      "classSimpleName": "SVGImageElement",
      "elementKind": "method",
      "methodName": "lookupNamespaceURI",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Node::lookupNamespaceURI(java.lang.String) @ akasha.svg.SVGLineElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGLineElement",
      "classSimpleName": "SVGLineElement",
      "elementKind": "method",
      "methodName": "lookupNamespaceURI",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Node::lookupNamespaceURI(java.lang.String) @ akasha.svg.SVGLinearGradientElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGLinearGradientElement",
      "classSimpleName": "SVGLinearGradientElement",
      "elementKind": "method",
      "methodName": "lookupNamespaceURI",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Node::lookupNamespaceURI(java.lang.String) @ akasha.svg.SVGMarkerElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGMarkerElement",
      "classSimpleName": "SVGMarkerElement",
      "elementKind": "method",
      "methodName": "lookupNamespaceURI",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Node::lookupNamespaceURI(java.lang.String) @ akasha.svg.SVGMaskElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGMaskElement",
      "classSimpleName": "SVGMaskElement",
      "elementKind": "method",
      "methodName": "lookupNamespaceURI",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Node::lookupNamespaceURI(java.lang.String) @ akasha.svg.SVGMetadataElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGMetadataElement",
      "classSimpleName": "SVGMetadataElement",
      "elementKind": "method",
      "methodName": "lookupNamespaceURI",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Node::lookupNamespaceURI(java.lang.String) @ akasha.svg.SVGPathElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGPathElement",
      "classSimpleName": "SVGPathElement",
      "elementKind": "method",
      "methodName": "lookupNamespaceURI",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Node::lookupNamespaceURI(java.lang.String) @ akasha.svg.SVGPatternElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGPatternElement",
      "classSimpleName": "SVGPatternElement",
      "elementKind": "method",
      "methodName": "lookupNamespaceURI",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Node::lookupNamespaceURI(java.lang.String) @ akasha.svg.SVGPolygonElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGPolygonElement",
      "classSimpleName": "SVGPolygonElement",
      "elementKind": "method",
      "methodName": "lookupNamespaceURI",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Node::lookupNamespaceURI(java.lang.String) @ akasha.svg.SVGPolylineElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGPolylineElement",
      "classSimpleName": "SVGPolylineElement",
      "elementKind": "method",
      "methodName": "lookupNamespaceURI",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Node::lookupNamespaceURI(java.lang.String) @ akasha.svg.SVGRadialGradientElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGRadialGradientElement",
      "classSimpleName": "SVGRadialGradientElement",
      "elementKind": "method",
      "methodName": "lookupNamespaceURI",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Node::lookupNamespaceURI(java.lang.String) @ akasha.svg.SVGRectElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGRectElement",
      "classSimpleName": "SVGRectElement",
      "elementKind": "method",
      "methodName": "lookupNamespaceURI",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Node::lookupNamespaceURI(java.lang.String) @ akasha.svg.SVGSVGElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGSVGElement",
      "classSimpleName": "SVGSVGElement",
      "elementKind": "method",
      "methodName": "lookupNamespaceURI",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Node::lookupNamespaceURI(java.lang.String) @ akasha.svg.SVGScriptElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGScriptElement",
      "classSimpleName": "SVGScriptElement",
      "elementKind": "method",
      "methodName": "lookupNamespaceURI",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Node::lookupNamespaceURI(java.lang.String) @ akasha.svg.SVGStopElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGStopElement",
      "classSimpleName": "SVGStopElement",
      "elementKind": "method",
      "methodName": "lookupNamespaceURI",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Node::lookupNamespaceURI(java.lang.String) @ akasha.svg.SVGStyleElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGStyleElement",
      "classSimpleName": "SVGStyleElement",
      "elementKind": "method",
      "methodName": "lookupNamespaceURI",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Node::lookupNamespaceURI(java.lang.String) @ akasha.svg.SVGSwitchElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGSwitchElement",
      "classSimpleName": "SVGSwitchElement",
      "elementKind": "method",
      "methodName": "lookupNamespaceURI",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Node::lookupNamespaceURI(java.lang.String) @ akasha.svg.SVGSymbolElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGSymbolElement",
      "classSimpleName": "SVGSymbolElement",
      "elementKind": "method",
      "methodName": "lookupNamespaceURI",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Node::lookupNamespaceURI(java.lang.String) @ akasha.svg.SVGTSpanElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGTSpanElement",
      "classSimpleName": "SVGTSpanElement",
      "elementKind": "method",
      "methodName": "lookupNamespaceURI",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Node::lookupNamespaceURI(java.lang.String) @ akasha.svg.SVGTextContentElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGTextContentElement",
      "classSimpleName": "SVGTextContentElement",
      "elementKind": "method",
      "methodName": "lookupNamespaceURI",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Node::lookupNamespaceURI(java.lang.String) @ akasha.svg.SVGTextElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGTextElement",
      "classSimpleName": "SVGTextElement",
      "elementKind": "method",
      "methodName": "lookupNamespaceURI",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Node::lookupNamespaceURI(java.lang.String) @ akasha.svg.SVGTextPathElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGTextPathElement",
      "classSimpleName": "SVGTextPathElement",
      "elementKind": "method",
      "methodName": "lookupNamespaceURI",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Node::lookupNamespaceURI(java.lang.String) @ akasha.svg.SVGTextPositioningElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGTextPositioningElement",
      "classSimpleName": "SVGTextPositioningElement",
      "elementKind": "method",
      "methodName": "lookupNamespaceURI",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Node::lookupNamespaceURI(java.lang.String) @ akasha.svg.SVGTitleElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGTitleElement",
      "classSimpleName": "SVGTitleElement",
      "elementKind": "method",
      "methodName": "lookupNamespaceURI",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Node::lookupNamespaceURI(java.lang.String) @ akasha.svg.SVGUnknownElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGUnknownElement",
      "classSimpleName": "SVGUnknownElement",
      "elementKind": "method",
      "methodName": "lookupNamespaceURI",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Node::lookupNamespaceURI(java.lang.String) @ akasha.svg.SVGUseElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGUseElement",
      "classSimpleName": "SVGUseElement",
      "elementKind": "method",
      "methodName": "lookupNamespaceURI",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Node::lookupNamespaceURI(java.lang.String) @ akasha.svg.SVGUseElementShadowRoot",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGUseElementShadowRoot",
      "classSimpleName": "SVGUseElementShadowRoot",
      "elementKind": "method",
      "methodName": "lookupNamespaceURI",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Node::lookupNamespaceURI(java.lang.String) @ akasha.svg.SVGViewElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGViewElement",
      "classSimpleName": "SVGViewElement",
      "elementKind": "method",
      "methodName": "lookupNamespaceURI",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Node::lookupNamespaceURI(java.lang.String)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.Node",
      "classSimpleName": "Node",
      "elementKind": "method",
      "methodName": "lookupNamespaceURI",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Node::lookupPrefix(java.lang.String) @ akasha.Attr",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.Attr",
      "classSimpleName": "Attr",
      "elementKind": "method",
      "methodName": "lookupPrefix",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Node::lookupPrefix(java.lang.String) @ akasha.Audio",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.Audio",
      "classSimpleName": "Audio",
      "elementKind": "method",
      "methodName": "lookupPrefix",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Node::lookupPrefix(java.lang.String) @ akasha.CDATASection",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.CDATASection",
      "classSimpleName": "CDATASection",
      "elementKind": "method",
      "methodName": "lookupPrefix",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Node::lookupPrefix(java.lang.String) @ akasha.CharacterData",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.CharacterData",
      "classSimpleName": "CharacterData",
      "elementKind": "method",
      "methodName": "lookupPrefix",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Node::lookupPrefix(java.lang.String) @ akasha.Comment",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.Comment",
      "classSimpleName": "Comment",
      "elementKind": "method",
      "methodName": "lookupPrefix",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Node::lookupPrefix(java.lang.String) @ akasha.Document",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.Document",
      "classSimpleName": "Document",
      "elementKind": "method",
      "methodName": "lookupPrefix",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Node::lookupPrefix(java.lang.String) @ akasha.DocumentFragment",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.DocumentFragment",
      "classSimpleName": "DocumentFragment",
      "elementKind": "method",
      "methodName": "lookupPrefix",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Node::lookupPrefix(java.lang.String) @ akasha.DocumentType",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.DocumentType",
      "classSimpleName": "DocumentType",
      "elementKind": "method",
      "methodName": "lookupPrefix",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Node::lookupPrefix(java.lang.String) @ akasha.Element",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.Element",
      "classSimpleName": "Element",
      "elementKind": "method",
      "methodName": "lookupPrefix",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Node::lookupPrefix(java.lang.String) @ akasha.HTMLAnchorElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLAnchorElement",
      "classSimpleName": "HTMLAnchorElement",
      "elementKind": "method",
      "methodName": "lookupPrefix",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Node::lookupPrefix(java.lang.String) @ akasha.HTMLAreaElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLAreaElement",
      "classSimpleName": "HTMLAreaElement",
      "elementKind": "method",
      "methodName": "lookupPrefix",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Node::lookupPrefix(java.lang.String) @ akasha.HTMLAudioElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLAudioElement",
      "classSimpleName": "HTMLAudioElement",
      "elementKind": "method",
      "methodName": "lookupPrefix",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Node::lookupPrefix(java.lang.String) @ akasha.HTMLBRElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLBRElement",
      "classSimpleName": "HTMLBRElement",
      "elementKind": "method",
      "methodName": "lookupPrefix",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Node::lookupPrefix(java.lang.String) @ akasha.HTMLBaseElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLBaseElement",
      "classSimpleName": "HTMLBaseElement",
      "elementKind": "method",
      "methodName": "lookupPrefix",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Node::lookupPrefix(java.lang.String) @ akasha.HTMLBodyElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLBodyElement",
      "classSimpleName": "HTMLBodyElement",
      "elementKind": "method",
      "methodName": "lookupPrefix",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Node::lookupPrefix(java.lang.String) @ akasha.HTMLButtonElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLButtonElement",
      "classSimpleName": "HTMLButtonElement",
      "elementKind": "method",
      "methodName": "lookupPrefix",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Node::lookupPrefix(java.lang.String) @ akasha.HTMLCanvasElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLCanvasElement",
      "classSimpleName": "HTMLCanvasElement",
      "elementKind": "method",
      "methodName": "lookupPrefix",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Node::lookupPrefix(java.lang.String) @ akasha.HTMLDListElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLDListElement",
      "classSimpleName": "HTMLDListElement",
      "elementKind": "method",
      "methodName": "lookupPrefix",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Node::lookupPrefix(java.lang.String) @ akasha.HTMLDataElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLDataElement",
      "classSimpleName": "HTMLDataElement",
      "elementKind": "method",
      "methodName": "lookupPrefix",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Node::lookupPrefix(java.lang.String) @ akasha.HTMLDataListElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLDataListElement",
      "classSimpleName": "HTMLDataListElement",
      "elementKind": "method",
      "methodName": "lookupPrefix",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Node::lookupPrefix(java.lang.String) @ akasha.HTMLDetailsElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLDetailsElement",
      "classSimpleName": "HTMLDetailsElement",
      "elementKind": "method",
      "methodName": "lookupPrefix",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Node::lookupPrefix(java.lang.String) @ akasha.HTMLDialogElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLDialogElement",
      "classSimpleName": "HTMLDialogElement",
      "elementKind": "method",
      "methodName": "lookupPrefix",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Node::lookupPrefix(java.lang.String) @ akasha.HTMLDirectoryElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLDirectoryElement",
      "classSimpleName": "HTMLDirectoryElement",
      "elementKind": "method",
      "methodName": "lookupPrefix",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Node::lookupPrefix(java.lang.String) @ akasha.HTMLDivElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLDivElement",
      "classSimpleName": "HTMLDivElement",
      "elementKind": "method",
      "methodName": "lookupPrefix",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Node::lookupPrefix(java.lang.String) @ akasha.HTMLElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLElement",
      "classSimpleName": "HTMLElement",
      "elementKind": "method",
      "methodName": "lookupPrefix",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Node::lookupPrefix(java.lang.String) @ akasha.HTMLEmbedElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLEmbedElement",
      "classSimpleName": "HTMLEmbedElement",
      "elementKind": "method",
      "methodName": "lookupPrefix",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Node::lookupPrefix(java.lang.String) @ akasha.HTMLFieldSetElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLFieldSetElement",
      "classSimpleName": "HTMLFieldSetElement",
      "elementKind": "method",
      "methodName": "lookupPrefix",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Node::lookupPrefix(java.lang.String) @ akasha.HTMLFontElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLFontElement",
      "classSimpleName": "HTMLFontElement",
      "elementKind": "method",
      "methodName": "lookupPrefix",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Node::lookupPrefix(java.lang.String) @ akasha.HTMLFormElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLFormElement",
      "classSimpleName": "HTMLFormElement",
      "elementKind": "method",
      "methodName": "lookupPrefix",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Node::lookupPrefix(java.lang.String) @ akasha.HTMLFrameElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLFrameElement",
      "classSimpleName": "HTMLFrameElement",
      "elementKind": "method",
      "methodName": "lookupPrefix",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Node::lookupPrefix(java.lang.String) @ akasha.HTMLFrameSetElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLFrameSetElement",
      "classSimpleName": "HTMLFrameSetElement",
      "elementKind": "method",
      "methodName": "lookupPrefix",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Node::lookupPrefix(java.lang.String) @ akasha.HTMLHRElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLHRElement",
      "classSimpleName": "HTMLHRElement",
      "elementKind": "method",
      "methodName": "lookupPrefix",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Node::lookupPrefix(java.lang.String) @ akasha.HTMLHeadElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLHeadElement",
      "classSimpleName": "HTMLHeadElement",
      "elementKind": "method",
      "methodName": "lookupPrefix",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Node::lookupPrefix(java.lang.String) @ akasha.HTMLHeadingElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLHeadingElement",
      "classSimpleName": "HTMLHeadingElement",
      "elementKind": "method",
      "methodName": "lookupPrefix",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Node::lookupPrefix(java.lang.String) @ akasha.HTMLHtmlElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLHtmlElement",
      "classSimpleName": "HTMLHtmlElement",
      "elementKind": "method",
      "methodName": "lookupPrefix",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Node::lookupPrefix(java.lang.String) @ akasha.HTMLIFrameElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLIFrameElement",
      "classSimpleName": "HTMLIFrameElement",
      "elementKind": "method",
      "methodName": "lookupPrefix",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Node::lookupPrefix(java.lang.String) @ akasha.HTMLImageElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLImageElement",
      "classSimpleName": "HTMLImageElement",
      "elementKind": "method",
      "methodName": "lookupPrefix",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Node::lookupPrefix(java.lang.String) @ akasha.HTMLInputElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLInputElement",
      "classSimpleName": "HTMLInputElement",
      "elementKind": "method",
      "methodName": "lookupPrefix",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Node::lookupPrefix(java.lang.String) @ akasha.HTMLLIElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLLIElement",
      "classSimpleName": "HTMLLIElement",
      "elementKind": "method",
      "methodName": "lookupPrefix",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Node::lookupPrefix(java.lang.String) @ akasha.HTMLLabelElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLLabelElement",
      "classSimpleName": "HTMLLabelElement",
      "elementKind": "method",
      "methodName": "lookupPrefix",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Node::lookupPrefix(java.lang.String) @ akasha.HTMLLegendElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLLegendElement",
      "classSimpleName": "HTMLLegendElement",
      "elementKind": "method",
      "methodName": "lookupPrefix",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Node::lookupPrefix(java.lang.String) @ akasha.HTMLLinkElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLLinkElement",
      "classSimpleName": "HTMLLinkElement",
      "elementKind": "method",
      "methodName": "lookupPrefix",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Node::lookupPrefix(java.lang.String) @ akasha.HTMLMapElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLMapElement",
      "classSimpleName": "HTMLMapElement",
      "elementKind": "method",
      "methodName": "lookupPrefix",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Node::lookupPrefix(java.lang.String) @ akasha.HTMLMarqueeElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLMarqueeElement",
      "classSimpleName": "HTMLMarqueeElement",
      "elementKind": "method",
      "methodName": "lookupPrefix",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Node::lookupPrefix(java.lang.String) @ akasha.HTMLMediaElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLMediaElement",
      "classSimpleName": "HTMLMediaElement",
      "elementKind": "method",
      "methodName": "lookupPrefix",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Node::lookupPrefix(java.lang.String) @ akasha.HTMLMenuElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLMenuElement",
      "classSimpleName": "HTMLMenuElement",
      "elementKind": "method",
      "methodName": "lookupPrefix",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Node::lookupPrefix(java.lang.String) @ akasha.HTMLMetaElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLMetaElement",
      "classSimpleName": "HTMLMetaElement",
      "elementKind": "method",
      "methodName": "lookupPrefix",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Node::lookupPrefix(java.lang.String) @ akasha.HTMLMeterElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLMeterElement",
      "classSimpleName": "HTMLMeterElement",
      "elementKind": "method",
      "methodName": "lookupPrefix",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Node::lookupPrefix(java.lang.String) @ akasha.HTMLModElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLModElement",
      "classSimpleName": "HTMLModElement",
      "elementKind": "method",
      "methodName": "lookupPrefix",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Node::lookupPrefix(java.lang.String) @ akasha.HTMLOListElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLOListElement",
      "classSimpleName": "HTMLOListElement",
      "elementKind": "method",
      "methodName": "lookupPrefix",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Node::lookupPrefix(java.lang.String) @ akasha.HTMLObjectElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLObjectElement",
      "classSimpleName": "HTMLObjectElement",
      "elementKind": "method",
      "methodName": "lookupPrefix",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Node::lookupPrefix(java.lang.String) @ akasha.HTMLOptGroupElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLOptGroupElement",
      "classSimpleName": "HTMLOptGroupElement",
      "elementKind": "method",
      "methodName": "lookupPrefix",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Node::lookupPrefix(java.lang.String) @ akasha.HTMLOptionElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLOptionElement",
      "classSimpleName": "HTMLOptionElement",
      "elementKind": "method",
      "methodName": "lookupPrefix",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Node::lookupPrefix(java.lang.String) @ akasha.HTMLOutputElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLOutputElement",
      "classSimpleName": "HTMLOutputElement",
      "elementKind": "method",
      "methodName": "lookupPrefix",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Node::lookupPrefix(java.lang.String) @ akasha.HTMLParagraphElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLParagraphElement",
      "classSimpleName": "HTMLParagraphElement",
      "elementKind": "method",
      "methodName": "lookupPrefix",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Node::lookupPrefix(java.lang.String) @ akasha.HTMLParamElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLParamElement",
      "classSimpleName": "HTMLParamElement",
      "elementKind": "method",
      "methodName": "lookupPrefix",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Node::lookupPrefix(java.lang.String) @ akasha.HTMLPictureElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLPictureElement",
      "classSimpleName": "HTMLPictureElement",
      "elementKind": "method",
      "methodName": "lookupPrefix",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Node::lookupPrefix(java.lang.String) @ akasha.HTMLPreElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLPreElement",
      "classSimpleName": "HTMLPreElement",
      "elementKind": "method",
      "methodName": "lookupPrefix",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Node::lookupPrefix(java.lang.String) @ akasha.HTMLProgressElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLProgressElement",
      "classSimpleName": "HTMLProgressElement",
      "elementKind": "method",
      "methodName": "lookupPrefix",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Node::lookupPrefix(java.lang.String) @ akasha.HTMLQuoteElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLQuoteElement",
      "classSimpleName": "HTMLQuoteElement",
      "elementKind": "method",
      "methodName": "lookupPrefix",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Node::lookupPrefix(java.lang.String) @ akasha.HTMLScriptElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLScriptElement",
      "classSimpleName": "HTMLScriptElement",
      "elementKind": "method",
      "methodName": "lookupPrefix",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Node::lookupPrefix(java.lang.String) @ akasha.HTMLSelectElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLSelectElement",
      "classSimpleName": "HTMLSelectElement",
      "elementKind": "method",
      "methodName": "lookupPrefix",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Node::lookupPrefix(java.lang.String) @ akasha.HTMLSlotElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLSlotElement",
      "classSimpleName": "HTMLSlotElement",
      "elementKind": "method",
      "methodName": "lookupPrefix",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Node::lookupPrefix(java.lang.String) @ akasha.HTMLSourceElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLSourceElement",
      "classSimpleName": "HTMLSourceElement",
      "elementKind": "method",
      "methodName": "lookupPrefix",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Node::lookupPrefix(java.lang.String) @ akasha.HTMLSpanElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLSpanElement",
      "classSimpleName": "HTMLSpanElement",
      "elementKind": "method",
      "methodName": "lookupPrefix",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Node::lookupPrefix(java.lang.String) @ akasha.HTMLStyleElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLStyleElement",
      "classSimpleName": "HTMLStyleElement",
      "elementKind": "method",
      "methodName": "lookupPrefix",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Node::lookupPrefix(java.lang.String) @ akasha.HTMLTableCaptionElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLTableCaptionElement",
      "classSimpleName": "HTMLTableCaptionElement",
      "elementKind": "method",
      "methodName": "lookupPrefix",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Node::lookupPrefix(java.lang.String) @ akasha.HTMLTableCellElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLTableCellElement",
      "classSimpleName": "HTMLTableCellElement",
      "elementKind": "method",
      "methodName": "lookupPrefix",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Node::lookupPrefix(java.lang.String) @ akasha.HTMLTableColElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLTableColElement",
      "classSimpleName": "HTMLTableColElement",
      "elementKind": "method",
      "methodName": "lookupPrefix",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Node::lookupPrefix(java.lang.String) @ akasha.HTMLTableElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLTableElement",
      "classSimpleName": "HTMLTableElement",
      "elementKind": "method",
      "methodName": "lookupPrefix",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Node::lookupPrefix(java.lang.String) @ akasha.HTMLTableRowElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLTableRowElement",
      "classSimpleName": "HTMLTableRowElement",
      "elementKind": "method",
      "methodName": "lookupPrefix",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Node::lookupPrefix(java.lang.String) @ akasha.HTMLTableSectionElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLTableSectionElement",
      "classSimpleName": "HTMLTableSectionElement",
      "elementKind": "method",
      "methodName": "lookupPrefix",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Node::lookupPrefix(java.lang.String) @ akasha.HTMLTemplateElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLTemplateElement",
      "classSimpleName": "HTMLTemplateElement",
      "elementKind": "method",
      "methodName": "lookupPrefix",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Node::lookupPrefix(java.lang.String) @ akasha.HTMLTextAreaElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLTextAreaElement",
      "classSimpleName": "HTMLTextAreaElement",
      "elementKind": "method",
      "methodName": "lookupPrefix",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Node::lookupPrefix(java.lang.String) @ akasha.HTMLTimeElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLTimeElement",
      "classSimpleName": "HTMLTimeElement",
      "elementKind": "method",
      "methodName": "lookupPrefix",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Node::lookupPrefix(java.lang.String) @ akasha.HTMLTitleElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLTitleElement",
      "classSimpleName": "HTMLTitleElement",
      "elementKind": "method",
      "methodName": "lookupPrefix",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Node::lookupPrefix(java.lang.String) @ akasha.HTMLTrackElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLTrackElement",
      "classSimpleName": "HTMLTrackElement",
      "elementKind": "method",
      "methodName": "lookupPrefix",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Node::lookupPrefix(java.lang.String) @ akasha.HTMLUListElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLUListElement",
      "classSimpleName": "HTMLUListElement",
      "elementKind": "method",
      "methodName": "lookupPrefix",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Node::lookupPrefix(java.lang.String) @ akasha.HTMLUnknownElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLUnknownElement",
      "classSimpleName": "HTMLUnknownElement",
      "elementKind": "method",
      "methodName": "lookupPrefix",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Node::lookupPrefix(java.lang.String) @ akasha.HTMLVideoElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.HTMLVideoElement",
      "classSimpleName": "HTMLVideoElement",
      "elementKind": "method",
      "methodName": "lookupPrefix",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Node::lookupPrefix(java.lang.String) @ akasha.Image",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.Image",
      "classSimpleName": "Image",
      "elementKind": "method",
      "methodName": "lookupPrefix",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Node::lookupPrefix(java.lang.String) @ akasha.Option",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.Option",
      "classSimpleName": "Option",
      "elementKind": "method",
      "methodName": "lookupPrefix",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Node::lookupPrefix(java.lang.String) @ akasha.ProcessingInstruction",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.ProcessingInstruction",
      "classSimpleName": "ProcessingInstruction",
      "elementKind": "method",
      "methodName": "lookupPrefix",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Node::lookupPrefix(java.lang.String) @ akasha.ShadowRoot",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.ShadowRoot",
      "classSimpleName": "ShadowRoot",
      "elementKind": "method",
      "methodName": "lookupPrefix",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Node::lookupPrefix(java.lang.String) @ akasha.Text",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.Text",
      "classSimpleName": "Text",
      "elementKind": "method",
      "methodName": "lookupPrefix",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Node::lookupPrefix(java.lang.String) @ akasha.XMLDocument",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.XMLDocument",
      "classSimpleName": "XMLDocument",
      "elementKind": "method",
      "methodName": "lookupPrefix",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Node::lookupPrefix(java.lang.String) @ akasha.svg.SVGAElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGAElement",
      "classSimpleName": "SVGAElement",
      "elementKind": "method",
      "methodName": "lookupPrefix",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Node::lookupPrefix(java.lang.String) @ akasha.svg.SVGCircleElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGCircleElement",
      "classSimpleName": "SVGCircleElement",
      "elementKind": "method",
      "methodName": "lookupPrefix",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Node::lookupPrefix(java.lang.String) @ akasha.svg.SVGClipPathElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGClipPathElement",
      "classSimpleName": "SVGClipPathElement",
      "elementKind": "method",
      "methodName": "lookupPrefix",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Node::lookupPrefix(java.lang.String) @ akasha.svg.SVGComponentTransferFunctionElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGComponentTransferFunctionElement",
      "classSimpleName": "SVGComponentTransferFunctionElement",
      "elementKind": "method",
      "methodName": "lookupPrefix",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Node::lookupPrefix(java.lang.String) @ akasha.svg.SVGDefsElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGDefsElement",
      "classSimpleName": "SVGDefsElement",
      "elementKind": "method",
      "methodName": "lookupPrefix",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Node::lookupPrefix(java.lang.String) @ akasha.svg.SVGDescElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGDescElement",
      "classSimpleName": "SVGDescElement",
      "elementKind": "method",
      "methodName": "lookupPrefix",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Node::lookupPrefix(java.lang.String) @ akasha.svg.SVGElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGElement",
      "classSimpleName": "SVGElement",
      "elementKind": "method",
      "methodName": "lookupPrefix",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Node::lookupPrefix(java.lang.String) @ akasha.svg.SVGEllipseElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGEllipseElement",
      "classSimpleName": "SVGEllipseElement",
      "elementKind": "method",
      "methodName": "lookupPrefix",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Node::lookupPrefix(java.lang.String) @ akasha.svg.SVGFEBlendElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEBlendElement",
      "classSimpleName": "SVGFEBlendElement",
      "elementKind": "method",
      "methodName": "lookupPrefix",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Node::lookupPrefix(java.lang.String) @ akasha.svg.SVGFEColorMatrixElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEColorMatrixElement",
      "classSimpleName": "SVGFEColorMatrixElement",
      "elementKind": "method",
      "methodName": "lookupPrefix",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Node::lookupPrefix(java.lang.String) @ akasha.svg.SVGFEComponentTransferElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEComponentTransferElement",
      "classSimpleName": "SVGFEComponentTransferElement",
      "elementKind": "method",
      "methodName": "lookupPrefix",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Node::lookupPrefix(java.lang.String) @ akasha.svg.SVGFECompositeElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFECompositeElement",
      "classSimpleName": "SVGFECompositeElement",
      "elementKind": "method",
      "methodName": "lookupPrefix",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Node::lookupPrefix(java.lang.String) @ akasha.svg.SVGFEConvolveMatrixElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEConvolveMatrixElement",
      "classSimpleName": "SVGFEConvolveMatrixElement",
      "elementKind": "method",
      "methodName": "lookupPrefix",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Node::lookupPrefix(java.lang.String) @ akasha.svg.SVGFEDiffuseLightingElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEDiffuseLightingElement",
      "classSimpleName": "SVGFEDiffuseLightingElement",
      "elementKind": "method",
      "methodName": "lookupPrefix",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Node::lookupPrefix(java.lang.String) @ akasha.svg.SVGFEDisplacementMapElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEDisplacementMapElement",
      "classSimpleName": "SVGFEDisplacementMapElement",
      "elementKind": "method",
      "methodName": "lookupPrefix",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Node::lookupPrefix(java.lang.String) @ akasha.svg.SVGFEDistantLightElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEDistantLightElement",
      "classSimpleName": "SVGFEDistantLightElement",
      "elementKind": "method",
      "methodName": "lookupPrefix",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Node::lookupPrefix(java.lang.String) @ akasha.svg.SVGFEDropShadowElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEDropShadowElement",
      "classSimpleName": "SVGFEDropShadowElement",
      "elementKind": "method",
      "methodName": "lookupPrefix",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Node::lookupPrefix(java.lang.String) @ akasha.svg.SVGFEFloodElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEFloodElement",
      "classSimpleName": "SVGFEFloodElement",
      "elementKind": "method",
      "methodName": "lookupPrefix",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Node::lookupPrefix(java.lang.String) @ akasha.svg.SVGFEFuncAElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEFuncAElement",
      "classSimpleName": "SVGFEFuncAElement",
      "elementKind": "method",
      "methodName": "lookupPrefix",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Node::lookupPrefix(java.lang.String) @ akasha.svg.SVGFEFuncBElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEFuncBElement",
      "classSimpleName": "SVGFEFuncBElement",
      "elementKind": "method",
      "methodName": "lookupPrefix",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Node::lookupPrefix(java.lang.String) @ akasha.svg.SVGFEFuncGElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEFuncGElement",
      "classSimpleName": "SVGFEFuncGElement",
      "elementKind": "method",
      "methodName": "lookupPrefix",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Node::lookupPrefix(java.lang.String) @ akasha.svg.SVGFEFuncRElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEFuncRElement",
      "classSimpleName": "SVGFEFuncRElement",
      "elementKind": "method",
      "methodName": "lookupPrefix",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Node::lookupPrefix(java.lang.String) @ akasha.svg.SVGFEGaussianBlurElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEGaussianBlurElement",
      "classSimpleName": "SVGFEGaussianBlurElement",
      "elementKind": "method",
      "methodName": "lookupPrefix",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Node::lookupPrefix(java.lang.String) @ akasha.svg.SVGFEImageElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEImageElement",
      "classSimpleName": "SVGFEImageElement",
      "elementKind": "method",
      "methodName": "lookupPrefix",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Node::lookupPrefix(java.lang.String) @ akasha.svg.SVGFEMergeElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEMergeElement",
      "classSimpleName": "SVGFEMergeElement",
      "elementKind": "method",
      "methodName": "lookupPrefix",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Node::lookupPrefix(java.lang.String) @ akasha.svg.SVGFEMergeNodeElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEMergeNodeElement",
      "classSimpleName": "SVGFEMergeNodeElement",
      "elementKind": "method",
      "methodName": "lookupPrefix",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Node::lookupPrefix(java.lang.String) @ akasha.svg.SVGFEMorphologyElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEMorphologyElement",
      "classSimpleName": "SVGFEMorphologyElement",
      "elementKind": "method",
      "methodName": "lookupPrefix",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Node::lookupPrefix(java.lang.String) @ akasha.svg.SVGFEOffsetElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEOffsetElement",
      "classSimpleName": "SVGFEOffsetElement",
      "elementKind": "method",
      "methodName": "lookupPrefix",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Node::lookupPrefix(java.lang.String) @ akasha.svg.SVGFEPointLightElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFEPointLightElement",
      "classSimpleName": "SVGFEPointLightElement",
      "elementKind": "method",
      "methodName": "lookupPrefix",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Node::lookupPrefix(java.lang.String) @ akasha.svg.SVGFESpecularLightingElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFESpecularLightingElement",
      "classSimpleName": "SVGFESpecularLightingElement",
      "elementKind": "method",
      "methodName": "lookupPrefix",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Node::lookupPrefix(java.lang.String) @ akasha.svg.SVGFESpotLightElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFESpotLightElement",
      "classSimpleName": "SVGFESpotLightElement",
      "elementKind": "method",
      "methodName": "lookupPrefix",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Node::lookupPrefix(java.lang.String) @ akasha.svg.SVGFETileElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFETileElement",
      "classSimpleName": "SVGFETileElement",
      "elementKind": "method",
      "methodName": "lookupPrefix",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Node::lookupPrefix(java.lang.String) @ akasha.svg.SVGFETurbulenceElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFETurbulenceElement",
      "classSimpleName": "SVGFETurbulenceElement",
      "elementKind": "method",
      "methodName": "lookupPrefix",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Node::lookupPrefix(java.lang.String) @ akasha.svg.SVGFilterElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGFilterElement",
      "classSimpleName": "SVGFilterElement",
      "elementKind": "method",
      "methodName": "lookupPrefix",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Node::lookupPrefix(java.lang.String) @ akasha.svg.SVGForeignObjectElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGForeignObjectElement",
      "classSimpleName": "SVGForeignObjectElement",
      "elementKind": "method",
      "methodName": "lookupPrefix",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Node::lookupPrefix(java.lang.String) @ akasha.svg.SVGGElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGGElement",
      "classSimpleName": "SVGGElement",
      "elementKind": "method",
      "methodName": "lookupPrefix",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Node::lookupPrefix(java.lang.String) @ akasha.svg.SVGGeometryElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGGeometryElement",
      "classSimpleName": "SVGGeometryElement",
      "elementKind": "method",
      "methodName": "lookupPrefix",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Node::lookupPrefix(java.lang.String) @ akasha.svg.SVGGradientElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGGradientElement",
      "classSimpleName": "SVGGradientElement",
      "elementKind": "method",
      "methodName": "lookupPrefix",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Node::lookupPrefix(java.lang.String) @ akasha.svg.SVGGraphicsElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGGraphicsElement",
      "classSimpleName": "SVGGraphicsElement",
      "elementKind": "method",
      "methodName": "lookupPrefix",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Node::lookupPrefix(java.lang.String) @ akasha.svg.SVGImageElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGImageElement",
      "classSimpleName": "SVGImageElement",
      "elementKind": "method",
      "methodName": "lookupPrefix",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Node::lookupPrefix(java.lang.String) @ akasha.svg.SVGLineElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGLineElement",
      "classSimpleName": "SVGLineElement",
      "elementKind": "method",
      "methodName": "lookupPrefix",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Node::lookupPrefix(java.lang.String) @ akasha.svg.SVGLinearGradientElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGLinearGradientElement",
      "classSimpleName": "SVGLinearGradientElement",
      "elementKind": "method",
      "methodName": "lookupPrefix",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Node::lookupPrefix(java.lang.String) @ akasha.svg.SVGMarkerElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGMarkerElement",
      "classSimpleName": "SVGMarkerElement",
      "elementKind": "method",
      "methodName": "lookupPrefix",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Node::lookupPrefix(java.lang.String) @ akasha.svg.SVGMaskElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGMaskElement",
      "classSimpleName": "SVGMaskElement",
      "elementKind": "method",
      "methodName": "lookupPrefix",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Node::lookupPrefix(java.lang.String) @ akasha.svg.SVGMetadataElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGMetadataElement",
      "classSimpleName": "SVGMetadataElement",
      "elementKind": "method",
      "methodName": "lookupPrefix",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Node::lookupPrefix(java.lang.String) @ akasha.svg.SVGPathElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGPathElement",
      "classSimpleName": "SVGPathElement",
      "elementKind": "method",
      "methodName": "lookupPrefix",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Node::lookupPrefix(java.lang.String) @ akasha.svg.SVGPatternElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGPatternElement",
      "classSimpleName": "SVGPatternElement",
      "elementKind": "method",
      "methodName": "lookupPrefix",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Node::lookupPrefix(java.lang.String) @ akasha.svg.SVGPolygonElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGPolygonElement",
      "classSimpleName": "SVGPolygonElement",
      "elementKind": "method",
      "methodName": "lookupPrefix",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Node::lookupPrefix(java.lang.String) @ akasha.svg.SVGPolylineElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGPolylineElement",
      "classSimpleName": "SVGPolylineElement",
      "elementKind": "method",
      "methodName": "lookupPrefix",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Node::lookupPrefix(java.lang.String) @ akasha.svg.SVGRadialGradientElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGRadialGradientElement",
      "classSimpleName": "SVGRadialGradientElement",
      "elementKind": "method",
      "methodName": "lookupPrefix",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Node::lookupPrefix(java.lang.String) @ akasha.svg.SVGRectElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGRectElement",
      "classSimpleName": "SVGRectElement",
      "elementKind": "method",
      "methodName": "lookupPrefix",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Node::lookupPrefix(java.lang.String) @ akasha.svg.SVGSVGElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGSVGElement",
      "classSimpleName": "SVGSVGElement",
      "elementKind": "method",
      "methodName": "lookupPrefix",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Node::lookupPrefix(java.lang.String) @ akasha.svg.SVGScriptElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGScriptElement",
      "classSimpleName": "SVGScriptElement",
      "elementKind": "method",
      "methodName": "lookupPrefix",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Node::lookupPrefix(java.lang.String) @ akasha.svg.SVGStopElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGStopElement",
      "classSimpleName": "SVGStopElement",
      "elementKind": "method",
      "methodName": "lookupPrefix",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Node::lookupPrefix(java.lang.String) @ akasha.svg.SVGStyleElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGStyleElement",
      "classSimpleName": "SVGStyleElement",
      "elementKind": "method",
      "methodName": "lookupPrefix",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Node::lookupPrefix(java.lang.String) @ akasha.svg.SVGSwitchElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGSwitchElement",
      "classSimpleName": "SVGSwitchElement",
      "elementKind": "method",
      "methodName": "lookupPrefix",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Node::lookupPrefix(java.lang.String) @ akasha.svg.SVGSymbolElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGSymbolElement",
      "classSimpleName": "SVGSymbolElement",
      "elementKind": "method",
      "methodName": "lookupPrefix",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Node::lookupPrefix(java.lang.String) @ akasha.svg.SVGTSpanElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGTSpanElement",
      "classSimpleName": "SVGTSpanElement",
      "elementKind": "method",
      "methodName": "lookupPrefix",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Node::lookupPrefix(java.lang.String) @ akasha.svg.SVGTextContentElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGTextContentElement",
      "classSimpleName": "SVGTextContentElement",
      "elementKind": "method",
      "methodName": "lookupPrefix",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Node::lookupPrefix(java.lang.String) @ akasha.svg.SVGTextElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGTextElement",
      "classSimpleName": "SVGTextElement",
      "elementKind": "method",
      "methodName": "lookupPrefix",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Node::lookupPrefix(java.lang.String) @ akasha.svg.SVGTextPathElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGTextPathElement",
      "classSimpleName": "SVGTextPathElement",
      "elementKind": "method",
      "methodName": "lookupPrefix",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Node::lookupPrefix(java.lang.String) @ akasha.svg.SVGTextPositioningElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGTextPositioningElement",
      "classSimpleName": "SVGTextPositioningElement",
      "elementKind": "method",
      "methodName": "lookupPrefix",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Node::lookupPrefix(java.lang.String) @ akasha.svg.SVGTitleElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGTitleElement",
      "classSimpleName": "SVGTitleElement",
      "elementKind": "method",
      "methodName": "lookupPrefix",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Node::lookupPrefix(java.lang.String) @ akasha.svg.SVGUnknownElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGUnknownElement",
      "classSimpleName": "SVGUnknownElement",
      "elementKind": "method",
      "methodName": "lookupPrefix",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Node::lookupPrefix(java.lang.String) @ akasha.svg.SVGUseElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGUseElement",
      "classSimpleName": "SVGUseElement",
      "elementKind": "method",
      "methodName": "lookupPrefix",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Node::lookupPrefix(java.lang.String) @ akasha.svg.SVGUseElementShadowRoot",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGUseElementShadowRoot",
      "classSimpleName": "SVGUseElementShadowRoot",
      "elementKind": "method",
      "methodName": "lookupPrefix",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Node::lookupPrefix(java.lang.String) @ akasha.svg.SVGViewElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGViewElement",
      "classSimpleName": "SVGViewElement",
      "elementKind": "method",
      "methodName": "lookupPrefix",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Node::lookupPrefix(java.lang.String)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.Node",
      "classSimpleName": "Node",
      "elementKind": "method",
      "methodName": "lookupPrefix",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Storage::getItem(java.lang.String)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.Storage",
      "classSimpleName": "Storage",
      "elementKind": "method",
      "methodName": "getItem",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.URLSearchParams::get(java.lang.String)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.URLSearchParams",
      "classSimpleName": "URLSearchParams",
      "elementKind": "method",
      "methodName": "get",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Window::atob(java.lang.String)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.Window",
      "classSimpleName": "Window",
      "elementKind": "method",
      "methodName": "atob",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.Window::btoa(java.lang.String)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.Window",
      "classSimpleName": "Window",
      "elementKind": "method",
      "methodName": "btoa",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.WindowGlobal::atob(java.lang.String)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.WindowGlobal",
      "classSimpleName": "WindowGlobal",
      "elementKind": "method",
      "methodName": "atob",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.WindowGlobal::btoa(java.lang.String)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.WindowGlobal",
      "classSimpleName": "WindowGlobal",
      "elementKind": "method",
      "methodName": "btoa",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.core.JsDate::toDateString()",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.JsDate",
      "classSimpleName": "JsDate",
      "elementKind": "method",
      "methodName": "toDateString",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.core.JsDate::toUTCString()",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.JsDate",
      "classSimpleName": "JsDate",
      "elementKind": "method",
      "methodName": "toUTCString",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.core.JsNumber::toExponential()",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.JsNumber",
      "classSimpleName": "JsNumber",
      "elementKind": "method",
      "methodName": "toExponential",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.core.JsNumber::toExponential(int)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.JsNumber",
      "classSimpleName": "JsNumber",
      "elementKind": "method",
      "methodName": "toExponential",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.core.JsNumber::toFixed()",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.JsNumber",
      "classSimpleName": "JsNumber",
      "elementKind": "method",
      "methodName": "toFixed",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.core.JsNumber::toFixed(int)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.JsNumber",
      "classSimpleName": "JsNumber",
      "elementKind": "method",
      "methodName": "toFixed",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.core.JsNumber::toPrecision()",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.JsNumber",
      "classSimpleName": "JsNumber",
      "elementKind": "method",
      "methodName": "toPrecision",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.core.JsNumber::toPrecision(int)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.JsNumber",
      "classSimpleName": "JsNumber",
      "elementKind": "method",
      "methodName": "toPrecision",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.core.JsString::concat(java.lang.String[])",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.JsString",
      "classSimpleName": "JsString",
      "elementKind": "method",
      "methodName": "concat",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.core.JsString::padEnd(int)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.JsString",
      "classSimpleName": "JsString",
      "elementKind": "method",
      "methodName": "padEnd",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.core.JsString::padEnd(int, java.lang.String)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.JsString",
      "classSimpleName": "JsString",
      "elementKind": "method",
      "methodName": "padEnd",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.core.JsString::padStart(int)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.JsString",
      "classSimpleName": "JsString",
      "elementKind": "method",
      "methodName": "padStart",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.core.JsString::padStart(int, java.lang.String)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.JsString",
      "classSimpleName": "JsString",
      "elementKind": "method",
      "methodName": "padStart",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.core.JsString::repeat(int)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.JsString",
      "classSimpleName": "JsString",
      "elementKind": "method",
      "methodName": "repeat",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.core.JsString::slice(int)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.JsString",
      "classSimpleName": "JsString",
      "elementKind": "method",
      "methodName": "slice",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.core.JsString::slice(int, int)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.JsString",
      "classSimpleName": "JsString",
      "elementKind": "method",
      "methodName": "slice",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.core.JsString::substring(int)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.JsString",
      "classSimpleName": "JsString",
      "elementKind": "method",
      "methodName": "substring",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.core.JsString::substring(int, int)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.JsString",
      "classSimpleName": "JsString",
      "elementKind": "method",
      "methodName": "substring",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.core.JsString::toLocaleLowerCase()",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.JsString",
      "classSimpleName": "JsString",
      "elementKind": "method",
      "methodName": "toLocaleLowerCase",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.core.JsString::toLocaleLowerCase(akasha.lang.JsArray<java.lang.String>)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.JsString",
      "classSimpleName": "JsString",
      "elementKind": "method",
      "methodName": "toLocaleLowerCase",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.core.JsString::toLocaleLowerCase(java.lang.String[])",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.JsString",
      "classSimpleName": "JsString",
      "elementKind": "method",
      "methodName": "toLocaleLowerCase",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.core.JsString::toLocaleUpperCase()",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.JsString",
      "classSimpleName": "JsString",
      "elementKind": "method",
      "methodName": "toLocaleUpperCase",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.core.JsString::toLocaleUpperCase(akasha.lang.JsArray<java.lang.String>)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.JsString",
      "classSimpleName": "JsString",
      "elementKind": "method",
      "methodName": "toLocaleUpperCase",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.core.JsString::toLocaleUpperCase(java.lang.String[])",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.JsString",
      "classSimpleName": "JsString",
      "elementKind": "method",
      "methodName": "toLocaleUpperCase",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.core.JsString::toLowerCase()",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.JsString",
      "classSimpleName": "JsString",
      "elementKind": "method",
      "methodName": "toLowerCase",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.core.JsString::toUpperCase()",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.JsString",
      "classSimpleName": "JsString",
      "elementKind": "method",
      "methodName": "toUpperCase",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.core.JsString::trim()",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.JsString",
      "classSimpleName": "JsString",
      "elementKind": "method",
      "methodName": "trim",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.core.JsString::trimEnd()",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.JsString",
      "classSimpleName": "JsString",
      "elementKind": "method",
      "methodName": "trimEnd",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.core.JsString::trimLeft()",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.JsString",
      "classSimpleName": "JsString",
      "elementKind": "method",
      "methodName": "trimLeft",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.core.JsString::trimRight()",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.JsString",
      "classSimpleName": "JsString",
      "elementKind": "method",
      "methodName": "trimRight",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.core.JsString::trimStart()",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.JsString",
      "classSimpleName": "JsString",
      "elementKind": "method",
      "methodName": "trimStart",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.core.RegExpGroups::get(java.lang.String)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.RegExpGroups",
      "classSimpleName": "RegExpGroups",
      "elementKind": "method",
      "methodName": "get",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.gl.WEBGL_debug_shaders::getTranslatedShaderSource(akasha.gl.WebGLShader)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.gl.WEBGL_debug_shaders",
      "classSimpleName": "WEBGL_debug_shaders",
      "elementKind": "method",
      "methodName": "getTranslatedShaderSource",
      "package": "akasha.gl"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.gl.WebGL2RenderingContext::getActiveUniformBlockName(akasha.gl.WebGLProgram, int)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.gl.WebGL2RenderingContext",
      "classSimpleName": "WebGL2RenderingContext",
      "elementKind": "method",
      "methodName": "getActiveUniformBlockName",
      "package": "akasha.gl"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.gl.WebGL2RenderingContext::getProgramInfoLog(akasha.gl.WebGLProgram)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.gl.WebGL2RenderingContext",
      "classSimpleName": "WebGL2RenderingContext",
      "elementKind": "method",
      "methodName": "getProgramInfoLog",
      "package": "akasha.gl"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.gl.WebGL2RenderingContext::getShaderInfoLog(akasha.gl.WebGLShader)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.gl.WebGL2RenderingContext",
      "classSimpleName": "WebGL2RenderingContext",
      "elementKind": "method",
      "methodName": "getShaderInfoLog",
      "package": "akasha.gl"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.gl.WebGL2RenderingContext::getShaderSource(akasha.gl.WebGLShader)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.gl.WebGL2RenderingContext",
      "classSimpleName": "WebGL2RenderingContext",
      "elementKind": "method",
      "methodName": "getShaderSource",
      "package": "akasha.gl"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.gl.WebGLRenderingContext::getProgramInfoLog(akasha.gl.WebGLProgram)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.gl.WebGLRenderingContext",
      "classSimpleName": "WebGLRenderingContext",
      "elementKind": "method",
      "methodName": "getProgramInfoLog",
      "package": "akasha.gl"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.gl.WebGLRenderingContext::getShaderInfoLog(akasha.gl.WebGLShader)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.gl.WebGLRenderingContext",
      "classSimpleName": "WebGLRenderingContext",
      "elementKind": "method",
      "methodName": "getShaderInfoLog",
      "package": "akasha.gl"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.gl.WebGLRenderingContext::getShaderSource(akasha.gl.WebGLShader)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.gl.WebGLRenderingContext",
      "classSimpleName": "WebGLRenderingContext",
      "elementKind": "method",
      "methodName": "getShaderSource",
      "package": "akasha.gl"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.lang.JsArray<T>::join() @ akasha.CSSFontFeatureValuesMap.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.CSSFontFeatureValuesMap.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "join",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.lang.JsArray<T>::join() @ akasha.CSSFontPaletteValuesRule.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.CSSFontPaletteValuesRule.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "join",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.lang.JsArray<T>::join() @ akasha.DOMTokenList.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.DOMTokenList.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "join",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.lang.JsArray<T>::join() @ akasha.FormData.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.FormData.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "join",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.lang.JsArray<T>::join() @ akasha.Headers.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.Headers.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "join",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.lang.JsArray<T>::join() @ akasha.MediaKeyStatusMap.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.MediaKeyStatusMap.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "join",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.lang.JsArray<T>::join() @ akasha.NodeList.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.NodeList.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "join",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.lang.JsArray<T>::join() @ akasha.URLSearchParams.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.URLSearchParams.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "join",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.lang.JsArray<T>::join() @ akasha.audio.AudioParamMap.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.audio.AudioParamMap.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "join",
      "package": "akasha.audio"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.lang.JsArray<T>::join() @ akasha.bluetooth.BluetoothManufacturerDataMap.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.bluetooth.BluetoothManufacturerDataMap.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "join",
      "package": "akasha.bluetooth"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.lang.JsArray<T>::join() @ akasha.bluetooth.BluetoothServiceDataMap.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.bluetooth.BluetoothServiceDataMap.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "join",
      "package": "akasha.bluetooth"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.lang.JsArray<T>::join() @ akasha.core.JsMap.Entry<K, V>",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.JsMap.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "join",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.lang.JsArray<T>::join() @ akasha.core.JsWeakMap.Entry<K, V>",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.JsWeakMap.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "join",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.lang.JsArray<T>::join() @ akasha.core.ObjectPropertyEntry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.ObjectPropertyEntry",
      "classSimpleName": "ObjectPropertyEntry",
      "elementKind": "method",
      "methodName": "join",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.lang.JsArray<T>::join() @ akasha.core.RegExpGroups.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.RegExpGroups.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "join",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.lang.JsArray<T>::join() @ akasha.core.RegExpResult.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.RegExpResult.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "join",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.lang.JsArray<T>::join() @ akasha.lang.JsArray.Entry<T>",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.lang.JsArray.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "join",
      "package": "akasha.lang"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.lang.JsArray<T>::join() @ akasha.rtc.RTCStatsReport.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.rtc.RTCStatsReport.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "join",
      "package": "akasha.rtc"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.lang.JsArray<T>::join() @ akasha.xr.XRInputSourceArray.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.xr.XRInputSourceArray.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "join",
      "package": "akasha.xr"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.lang.JsArray<T>::join()",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.lang.JsArray",
      "classSimpleName": "JsArray",
      "elementKind": "method",
      "methodName": "join",
      "package": "akasha.lang"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.lang.JsArray<T>::join(java.lang.String) @ akasha.CSSFontFeatureValuesMap.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.CSSFontFeatureValuesMap.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "join",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.lang.JsArray<T>::join(java.lang.String) @ akasha.CSSFontPaletteValuesRule.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.CSSFontPaletteValuesRule.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "join",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.lang.JsArray<T>::join(java.lang.String) @ akasha.DOMTokenList.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.DOMTokenList.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "join",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.lang.JsArray<T>::join(java.lang.String) @ akasha.FormData.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.FormData.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "join",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.lang.JsArray<T>::join(java.lang.String) @ akasha.Headers.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.Headers.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "join",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.lang.JsArray<T>::join(java.lang.String) @ akasha.MediaKeyStatusMap.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.MediaKeyStatusMap.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "join",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.lang.JsArray<T>::join(java.lang.String) @ akasha.NodeList.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.NodeList.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "join",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.lang.JsArray<T>::join(java.lang.String) @ akasha.URLSearchParams.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.URLSearchParams.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "join",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.lang.JsArray<T>::join(java.lang.String) @ akasha.audio.AudioParamMap.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.audio.AudioParamMap.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "join",
      "package": "akasha.audio"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.lang.JsArray<T>::join(java.lang.String) @ akasha.bluetooth.BluetoothManufacturerDataMap.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.bluetooth.BluetoothManufacturerDataMap.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "join",
      "package": "akasha.bluetooth"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.lang.JsArray<T>::join(java.lang.String) @ akasha.bluetooth.BluetoothServiceDataMap.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.bluetooth.BluetoothServiceDataMap.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "join",
      "package": "akasha.bluetooth"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.lang.JsArray<T>::join(java.lang.String) @ akasha.core.JsMap.Entry<K, V>",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.JsMap.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "join",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.lang.JsArray<T>::join(java.lang.String) @ akasha.core.JsWeakMap.Entry<K, V>",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.JsWeakMap.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "join",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.lang.JsArray<T>::join(java.lang.String) @ akasha.core.ObjectPropertyEntry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.ObjectPropertyEntry",
      "classSimpleName": "ObjectPropertyEntry",
      "elementKind": "method",
      "methodName": "join",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.lang.JsArray<T>::join(java.lang.String) @ akasha.core.RegExpGroups.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.RegExpGroups.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "join",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.lang.JsArray<T>::join(java.lang.String) @ akasha.core.RegExpResult.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.RegExpResult.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "join",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.lang.JsArray<T>::join(java.lang.String) @ akasha.lang.JsArray.Entry<T>",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.lang.JsArray.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "join",
      "package": "akasha.lang"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.lang.JsArray<T>::join(java.lang.String) @ akasha.rtc.RTCStatsReport.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.rtc.RTCStatsReport.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "join",
      "package": "akasha.rtc"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.lang.JsArray<T>::join(java.lang.String) @ akasha.xr.XRInputSourceArray.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.xr.XRInputSourceArray.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "join",
      "package": "akasha.xr"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.lang.JsArray<T>::join(java.lang.String)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.lang.JsArray",
      "classSimpleName": "JsArray",
      "elementKind": "method",
      "methodName": "join",
      "package": "akasha.lang"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.lang.JsArray<T>::toString_() @ akasha.CSSFontFeatureValuesMap.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.CSSFontFeatureValuesMap.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "toString_",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.lang.JsArray<T>::toString_() @ akasha.CSSFontPaletteValuesRule.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.CSSFontPaletteValuesRule.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "toString_",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.lang.JsArray<T>::toString_() @ akasha.DOMTokenList.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.DOMTokenList.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "toString_",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.lang.JsArray<T>::toString_() @ akasha.FormData.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.FormData.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "toString_",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.lang.JsArray<T>::toString_() @ akasha.Headers.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.Headers.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "toString_",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.lang.JsArray<T>::toString_() @ akasha.MediaKeyStatusMap.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.MediaKeyStatusMap.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "toString_",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.lang.JsArray<T>::toString_() @ akasha.NodeList.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.NodeList.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "toString_",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.lang.JsArray<T>::toString_() @ akasha.URLSearchParams.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.URLSearchParams.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "toString_",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.lang.JsArray<T>::toString_() @ akasha.audio.AudioParamMap.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.audio.AudioParamMap.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "toString_",
      "package": "akasha.audio"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.lang.JsArray<T>::toString_() @ akasha.bluetooth.BluetoothManufacturerDataMap.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.bluetooth.BluetoothManufacturerDataMap.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "toString_",
      "package": "akasha.bluetooth"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.lang.JsArray<T>::toString_() @ akasha.bluetooth.BluetoothServiceDataMap.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.bluetooth.BluetoothServiceDataMap.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "toString_",
      "package": "akasha.bluetooth"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.lang.JsArray<T>::toString_() @ akasha.core.JsMap.Entry<K, V>",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.JsMap.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "toString_",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.lang.JsArray<T>::toString_() @ akasha.core.JsWeakMap.Entry<K, V>",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.JsWeakMap.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "toString_",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.lang.JsArray<T>::toString_() @ akasha.core.ObjectPropertyEntry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.ObjectPropertyEntry",
      "classSimpleName": "ObjectPropertyEntry",
      "elementKind": "method",
      "methodName": "toString_",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.lang.JsArray<T>::toString_() @ akasha.core.RegExpGroups.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.RegExpGroups.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "toString_",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.lang.JsArray<T>::toString_() @ akasha.core.RegExpResult.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.RegExpResult.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "toString_",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.lang.JsArray<T>::toString_() @ akasha.lang.JsArray.Entry<T>",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.lang.JsArray.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "toString_",
      "package": "akasha.lang"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.lang.JsArray<T>::toString_() @ akasha.rtc.RTCStatsReport.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.rtc.RTCStatsReport.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "toString_",
      "package": "akasha.rtc"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.lang.JsArray<T>::toString_() @ akasha.xr.XRInputSourceArray.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.xr.XRInputSourceArray.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "toString_",
      "package": "akasha.xr"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.lang.JsArray<T>::toString_()",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.lang.JsArray",
      "classSimpleName": "JsArray",
      "elementKind": "method",
      "methodName": "toString_",
      "package": "akasha.lang"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.svg.SVGStringList::getItem(int)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.svg.SVGStringList",
      "classSimpleName": "SVGStringList",
      "elementKind": "method",
      "methodName": "getItem",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.method.added",
    "description": "Method was added.",
    "newElement": "method jsinterop.base.Any akasha.core.JsObject::valueOf_()",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.core.JsObject",
      "classSimpleName": "JsObject",
      "elementKind": "method",
      "methodName": "valueOf_",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method jsinterop.base.Any akasha.gl.WebGL2RenderingContext::getBufferParameter(int, int)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.gl.WebGL2RenderingContext",
      "classSimpleName": "WebGL2RenderingContext",
      "elementKind": "method",
      "methodName": "getBufferParameter",
      "package": "akasha.gl"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method jsinterop.base.Any akasha.gl.WebGL2RenderingContext::getFramebufferAttachmentParameter(int, int, int)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.gl.WebGL2RenderingContext",
      "classSimpleName": "WebGL2RenderingContext",
      "elementKind": "method",
      "methodName": "getFramebufferAttachmentParameter",
      "package": "akasha.gl"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method jsinterop.base.Any akasha.gl.WebGL2RenderingContext::getInternalformatParameter(int, int, int)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.gl.WebGL2RenderingContext",
      "classSimpleName": "WebGL2RenderingContext",
      "elementKind": "method",
      "methodName": "getInternalformatParameter",
      "package": "akasha.gl"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method jsinterop.base.Any akasha.gl.WebGL2RenderingContext::getParameter(int)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.gl.WebGL2RenderingContext",
      "classSimpleName": "WebGL2RenderingContext",
      "elementKind": "method",
      "methodName": "getParameter",
      "package": "akasha.gl"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method jsinterop.base.Any akasha.gl.WebGL2RenderingContext::getProgramParameter(akasha.gl.WebGLProgram, int)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.gl.WebGL2RenderingContext",
      "classSimpleName": "WebGL2RenderingContext",
      "elementKind": "method",
      "methodName": "getProgramParameter",
      "package": "akasha.gl"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method jsinterop.base.Any akasha.gl.WebGL2RenderingContext::getRenderbufferParameter(int, int)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.gl.WebGL2RenderingContext",
      "classSimpleName": "WebGL2RenderingContext",
      "elementKind": "method",
      "methodName": "getRenderbufferParameter",
      "package": "akasha.gl"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method jsinterop.base.Any akasha.gl.WebGL2RenderingContext::getSamplerParameter(akasha.gl.WebGLSampler, int)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.gl.WebGL2RenderingContext",
      "classSimpleName": "WebGL2RenderingContext",
      "elementKind": "method",
      "methodName": "getSamplerParameter",
      "package": "akasha.gl"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method jsinterop.base.Any akasha.gl.WebGL2RenderingContext::getShaderParameter(akasha.gl.WebGLShader, int)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.gl.WebGL2RenderingContext",
      "classSimpleName": "WebGL2RenderingContext",
      "elementKind": "method",
      "methodName": "getShaderParameter",
      "package": "akasha.gl"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method jsinterop.base.Any akasha.gl.WebGL2RenderingContext::getTexParameter(int, int)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.gl.WebGL2RenderingContext",
      "classSimpleName": "WebGL2RenderingContext",
      "elementKind": "method",
      "methodName": "getTexParameter",
      "package": "akasha.gl"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method jsinterop.base.Any akasha.gl.WebGL2RenderingContext::getUniform(akasha.gl.WebGLProgram, akasha.gl.WebGLUniformLocation)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.gl.WebGL2RenderingContext",
      "classSimpleName": "WebGL2RenderingContext",
      "elementKind": "method",
      "methodName": "getUniform",
      "package": "akasha.gl"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method jsinterop.base.Any akasha.gl.WebGL2RenderingContext::getVertexAttrib(int, int)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.gl.WebGL2RenderingContext",
      "classSimpleName": "WebGL2RenderingContext",
      "elementKind": "method",
      "methodName": "getVertexAttrib",
      "package": "akasha.gl"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method jsinterop.base.Any akasha.gl.WebGLRenderingContext::getBufferParameter(int, int)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.gl.WebGLRenderingContext",
      "classSimpleName": "WebGLRenderingContext",
      "elementKind": "method",
      "methodName": "getBufferParameter",
      "package": "akasha.gl"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method jsinterop.base.Any akasha.gl.WebGLRenderingContext::getFramebufferAttachmentParameter(int, int, int)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.gl.WebGLRenderingContext",
      "classSimpleName": "WebGLRenderingContext",
      "elementKind": "method",
      "methodName": "getFramebufferAttachmentParameter",
      "package": "akasha.gl"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method jsinterop.base.Any akasha.gl.WebGLRenderingContext::getParameter(int)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.gl.WebGLRenderingContext",
      "classSimpleName": "WebGLRenderingContext",
      "elementKind": "method",
      "methodName": "getParameter",
      "package": "akasha.gl"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method jsinterop.base.Any akasha.gl.WebGLRenderingContext::getProgramParameter(akasha.gl.WebGLProgram, int)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.gl.WebGLRenderingContext",
      "classSimpleName": "WebGLRenderingContext",
      "elementKind": "method",
      "methodName": "getProgramParameter",
      "package": "akasha.gl"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method jsinterop.base.Any akasha.gl.WebGLRenderingContext::getRenderbufferParameter(int, int)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.gl.WebGLRenderingContext",
      "classSimpleName": "WebGLRenderingContext",
      "elementKind": "method",
      "methodName": "getRenderbufferParameter",
      "package": "akasha.gl"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method jsinterop.base.Any akasha.gl.WebGLRenderingContext::getShaderParameter(akasha.gl.WebGLShader, int)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.gl.WebGLRenderingContext",
      "classSimpleName": "WebGLRenderingContext",
      "elementKind": "method",
      "methodName": "getShaderParameter",
      "package": "akasha.gl"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method jsinterop.base.Any akasha.gl.WebGLRenderingContext::getTexParameter(int, int)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.gl.WebGLRenderingContext",
      "classSimpleName": "WebGLRenderingContext",
      "elementKind": "method",
      "methodName": "getTexParameter",
      "package": "akasha.gl"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method jsinterop.base.Any akasha.gl.WebGLRenderingContext::getUniform(akasha.gl.WebGLProgram, akasha.gl.WebGLUniformLocation)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.gl.WebGLRenderingContext",
      "classSimpleName": "WebGLRenderingContext",
      "elementKind": "method",
      "methodName": "getUniform",
      "package": "akasha.gl"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method jsinterop.base.Any akasha.gl.WebGLRenderingContext::getVertexAttrib(int, int)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.gl.WebGLRenderingContext",
      "classSimpleName": "WebGLRenderingContext",
      "elementKind": "method",
      "methodName": "getVertexAttrib",
      "package": "akasha.gl"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method short akasha.Range::comparePoint(akasha.Node, int)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.Range",
      "classSimpleName": "Range",
      "elementKind": "method",
      "methodName": "comparePoint",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method short akasha.core.Int16Array::get(int)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.Int16Array",
      "classSimpleName": "Int16Array",
      "elementKind": "method",
      "methodName": "get",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method short akasha.core.Uint8Array::get(int)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.Uint8Array",
      "classSimpleName": "Uint8Array",
      "elementKind": "method",
      "methodName": "get",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method short akasha.core.Uint8ClampedArray::get(int)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.Uint8ClampedArray",
      "classSimpleName": "Uint8ClampedArray",
      "elementKind": "method",
      "methodName": "get",
      "package": "akasha.core"
    }
  }
]
