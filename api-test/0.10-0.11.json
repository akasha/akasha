[
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method <S> akasha.lang.JsArray<S> akasha.lang.JsArray<T>::flat() @ akasha.CSSFontFeatureValuesMap.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.CSSFontFeatureValuesMap.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "flat",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method <S> akasha.lang.JsArray<S> akasha.lang.JsArray<T>::flat() @ akasha.CSSFontPaletteValuesRule.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.CSSFontPaletteValuesRule.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "flat",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method <S> akasha.lang.JsArray<S> akasha.lang.JsArray<T>::flat() @ akasha.DOMTokenList.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.DOMTokenList.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "flat",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method <S> akasha.lang.JsArray<S> akasha.lang.JsArray<T>::flat() @ akasha.FormData.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.FormData.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "flat",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method <S> akasha.lang.JsArray<S> akasha.lang.JsArray<T>::flat() @ akasha.Headers.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.Headers.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "flat",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method <S> akasha.lang.JsArray<S> akasha.lang.JsArray<T>::flat() @ akasha.MediaKeyStatusMap.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.MediaKeyStatusMap.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "flat",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method <S> akasha.lang.JsArray<S> akasha.lang.JsArray<T>::flat() @ akasha.NodeList.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.NodeList.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "flat",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method <S> akasha.lang.JsArray<S> akasha.lang.JsArray<T>::flat() @ akasha.URLSearchParams.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.URLSearchParams.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "flat",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method <S> akasha.lang.JsArray<S> akasha.lang.JsArray<T>::flat() @ akasha.audio.AudioParamMap.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.audio.AudioParamMap.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "flat",
      "package": "akasha.audio"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method <S> akasha.lang.JsArray<S> akasha.lang.JsArray<T>::flat() @ akasha.bluetooth.BluetoothManufacturerDataMap.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.bluetooth.BluetoothManufacturerDataMap.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "flat",
      "package": "akasha.bluetooth"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method <S> akasha.lang.JsArray<S> akasha.lang.JsArray<T>::flat() @ akasha.bluetooth.BluetoothServiceDataMap.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.bluetooth.BluetoothServiceDataMap.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "flat",
      "package": "akasha.bluetooth"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method <S> akasha.lang.JsArray<S> akasha.lang.JsArray<T>::flat() @ akasha.core.JsMap.Entry<K, V>",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.JsMap.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "flat",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method <S> akasha.lang.JsArray<S> akasha.lang.JsArray<T>::flat() @ akasha.core.JsWeakMap.Entry<K, V>",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.JsWeakMap.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "flat",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method <S> akasha.lang.JsArray<S> akasha.lang.JsArray<T>::flat() @ akasha.core.ObjectPropertyEntry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.ObjectPropertyEntry",
      "classSimpleName": "ObjectPropertyEntry",
      "elementKind": "method",
      "methodName": "flat",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method <S> akasha.lang.JsArray<S> akasha.lang.JsArray<T>::flat() @ akasha.core.RegExpGroups.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.RegExpGroups.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "flat",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method <S> akasha.lang.JsArray<S> akasha.lang.JsArray<T>::flat() @ akasha.core.RegExpResult.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.RegExpResult.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "flat",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method <S> akasha.lang.JsArray<S> akasha.lang.JsArray<T>::flat() @ akasha.lang.JsArray.Entry<T>",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.lang.JsArray.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "flat",
      "package": "akasha.lang"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method <S> akasha.lang.JsArray<S> akasha.lang.JsArray<T>::flat() @ akasha.rtc.RTCStatsReport.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.rtc.RTCStatsReport.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "flat",
      "package": "akasha.rtc"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method <S> akasha.lang.JsArray<S> akasha.lang.JsArray<T>::flat() @ akasha.xr.XRInputSourceArray.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.xr.XRInputSourceArray.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "flat",
      "package": "akasha.xr"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method <S> akasha.lang.JsArray<S> akasha.lang.JsArray<T>::flat()",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.lang.JsArray",
      "classSimpleName": "JsArray",
      "elementKind": "method",
      "methodName": "flat",
      "package": "akasha.lang"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method <S> akasha.lang.JsArray<S> akasha.lang.JsArray<T>::flat(double) @ akasha.CSSFontFeatureValuesMap.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.CSSFontFeatureValuesMap.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "flat",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method <S> akasha.lang.JsArray<S> akasha.lang.JsArray<T>::flat(double) @ akasha.CSSFontPaletteValuesRule.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.CSSFontPaletteValuesRule.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "flat",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method <S> akasha.lang.JsArray<S> akasha.lang.JsArray<T>::flat(double) @ akasha.DOMTokenList.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.DOMTokenList.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "flat",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method <S> akasha.lang.JsArray<S> akasha.lang.JsArray<T>::flat(double) @ akasha.FormData.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.FormData.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "flat",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method <S> akasha.lang.JsArray<S> akasha.lang.JsArray<T>::flat(double) @ akasha.Headers.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.Headers.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "flat",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method <S> akasha.lang.JsArray<S> akasha.lang.JsArray<T>::flat(double) @ akasha.MediaKeyStatusMap.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.MediaKeyStatusMap.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "flat",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method <S> akasha.lang.JsArray<S> akasha.lang.JsArray<T>::flat(double) @ akasha.NodeList.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.NodeList.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "flat",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method <S> akasha.lang.JsArray<S> akasha.lang.JsArray<T>::flat(double) @ akasha.URLSearchParams.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.URLSearchParams.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "flat",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method <S> akasha.lang.JsArray<S> akasha.lang.JsArray<T>::flat(double) @ akasha.audio.AudioParamMap.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.audio.AudioParamMap.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "flat",
      "package": "akasha.audio"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method <S> akasha.lang.JsArray<S> akasha.lang.JsArray<T>::flat(double) @ akasha.bluetooth.BluetoothManufacturerDataMap.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.bluetooth.BluetoothManufacturerDataMap.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "flat",
      "package": "akasha.bluetooth"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method <S> akasha.lang.JsArray<S> akasha.lang.JsArray<T>::flat(double) @ akasha.bluetooth.BluetoothServiceDataMap.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.bluetooth.BluetoothServiceDataMap.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "flat",
      "package": "akasha.bluetooth"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method <S> akasha.lang.JsArray<S> akasha.lang.JsArray<T>::flat(double) @ akasha.core.JsMap.Entry<K, V>",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.JsMap.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "flat",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method <S> akasha.lang.JsArray<S> akasha.lang.JsArray<T>::flat(double) @ akasha.core.JsWeakMap.Entry<K, V>",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.JsWeakMap.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "flat",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method <S> akasha.lang.JsArray<S> akasha.lang.JsArray<T>::flat(double) @ akasha.core.ObjectPropertyEntry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.ObjectPropertyEntry",
      "classSimpleName": "ObjectPropertyEntry",
      "elementKind": "method",
      "methodName": "flat",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method <S> akasha.lang.JsArray<S> akasha.lang.JsArray<T>::flat(double) @ akasha.core.RegExpGroups.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.RegExpGroups.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "flat",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method <S> akasha.lang.JsArray<S> akasha.lang.JsArray<T>::flat(double) @ akasha.core.RegExpResult.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.RegExpResult.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "flat",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method <S> akasha.lang.JsArray<S> akasha.lang.JsArray<T>::flat(double) @ akasha.lang.JsArray.Entry<T>",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.lang.JsArray.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "flat",
      "package": "akasha.lang"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method <S> akasha.lang.JsArray<S> akasha.lang.JsArray<T>::flat(double) @ akasha.rtc.RTCStatsReport.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.rtc.RTCStatsReport.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "flat",
      "package": "akasha.rtc"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method <S> akasha.lang.JsArray<S> akasha.lang.JsArray<T>::flat(double) @ akasha.xr.XRInputSourceArray.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.xr.XRInputSourceArray.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "flat",
      "package": "akasha.xr"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method <S> akasha.lang.JsArray<S> akasha.lang.JsArray<T>::flat(double)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.lang.JsArray",
      "classSimpleName": "JsArray",
      "elementKind": "method",
      "methodName": "flat",
      "package": "akasha.lang"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method <T> akasha.lang.JsArray<T> akasha.lang.JsArray<T>::of(T[]) @ akasha.CSSFontFeatureValuesMap.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.CSSFontFeatureValuesMap.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "of",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method <T> akasha.lang.JsArray<T> akasha.lang.JsArray<T>::of(T[]) @ akasha.CSSFontPaletteValuesRule.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.CSSFontPaletteValuesRule.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "of",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method <T> akasha.lang.JsArray<T> akasha.lang.JsArray<T>::of(T[]) @ akasha.DOMTokenList.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.DOMTokenList.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "of",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method <T> akasha.lang.JsArray<T> akasha.lang.JsArray<T>::of(T[]) @ akasha.FormData.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.FormData.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "of",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method <T> akasha.lang.JsArray<T> akasha.lang.JsArray<T>::of(T[]) @ akasha.Headers.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.Headers.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "of",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method <T> akasha.lang.JsArray<T> akasha.lang.JsArray<T>::of(T[]) @ akasha.MediaKeyStatusMap.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.MediaKeyStatusMap.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "of",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method <T> akasha.lang.JsArray<T> akasha.lang.JsArray<T>::of(T[]) @ akasha.NodeList.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.NodeList.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "of",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method <T> akasha.lang.JsArray<T> akasha.lang.JsArray<T>::of(T[]) @ akasha.URLSearchParams.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.URLSearchParams.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "of",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method <T> akasha.lang.JsArray<T> akasha.lang.JsArray<T>::of(T[]) @ akasha.audio.AudioParamMap.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.audio.AudioParamMap.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "of",
      "package": "akasha.audio"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method <T> akasha.lang.JsArray<T> akasha.lang.JsArray<T>::of(T[]) @ akasha.bluetooth.BluetoothManufacturerDataMap.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.bluetooth.BluetoothManufacturerDataMap.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "of",
      "package": "akasha.bluetooth"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method <T> akasha.lang.JsArray<T> akasha.lang.JsArray<T>::of(T[]) @ akasha.bluetooth.BluetoothServiceDataMap.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.bluetooth.BluetoothServiceDataMap.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "of",
      "package": "akasha.bluetooth"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method <T> akasha.lang.JsArray<T> akasha.lang.JsArray<T>::of(T[]) @ akasha.core.JsMap.Entry<K, V>",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.JsMap.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "of",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method <T> akasha.lang.JsArray<T> akasha.lang.JsArray<T>::of(T[]) @ akasha.core.JsWeakMap.Entry<K, V>",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.JsWeakMap.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "of",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method <T> akasha.lang.JsArray<T> akasha.lang.JsArray<T>::of(T[]) @ akasha.core.ObjectPropertyEntry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.ObjectPropertyEntry",
      "classSimpleName": "ObjectPropertyEntry",
      "elementKind": "method",
      "methodName": "of",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method <T> akasha.lang.JsArray<T> akasha.lang.JsArray<T>::of(T[]) @ akasha.core.RegExpGroups.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.RegExpGroups.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "of",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method <T> akasha.lang.JsArray<T> akasha.lang.JsArray<T>::of(T[]) @ akasha.core.RegExpResult.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.RegExpResult.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "of",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method <T> akasha.lang.JsArray<T> akasha.lang.JsArray<T>::of(T[]) @ akasha.lang.JsArray.Entry<T>",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.lang.JsArray.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "of",
      "package": "akasha.lang"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method <T> akasha.lang.JsArray<T> akasha.lang.JsArray<T>::of(T[]) @ akasha.rtc.RTCStatsReport.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.rtc.RTCStatsReport.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "of",
      "package": "akasha.rtc"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method <T> akasha.lang.JsArray<T> akasha.lang.JsArray<T>::of(T[]) @ akasha.xr.XRInputSourceArray.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.xr.XRInputSourceArray.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "of",
      "package": "akasha.xr"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method <T> akasha.lang.JsArray<T> akasha.lang.JsArray<T>::of(T[])",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.lang.JsArray",
      "classSimpleName": "JsArray",
      "elementKind": "method",
      "methodName": "of",
      "package": "akasha.lang"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method V akasha.core.JsMap<K, V>::get(K)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.JsMap",
      "classSimpleName": "JsMap",
      "elementKind": "method",
      "methodName": "get",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method V akasha.core.JsWeakMap<K, V>::get(K)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.JsWeakMap",
      "classSimpleName": "JsWeakMap",
      "elementKind": "method",
      "methodName": "get",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsArray<T> akasha.lang.JsArray<T>::concat(T[]) @ akasha.CSSFontFeatureValuesMap.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.CSSFontFeatureValuesMap.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "concat",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsArray<T> akasha.lang.JsArray<T>::concat(T[]) @ akasha.CSSFontPaletteValuesRule.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.CSSFontPaletteValuesRule.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "concat",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsArray<T> akasha.lang.JsArray<T>::concat(T[]) @ akasha.DOMTokenList.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.DOMTokenList.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "concat",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsArray<T> akasha.lang.JsArray<T>::concat(T[]) @ akasha.FormData.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.FormData.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "concat",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsArray<T> akasha.lang.JsArray<T>::concat(T[]) @ akasha.Headers.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.Headers.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "concat",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsArray<T> akasha.lang.JsArray<T>::concat(T[]) @ akasha.MediaKeyStatusMap.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.MediaKeyStatusMap.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "concat",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsArray<T> akasha.lang.JsArray<T>::concat(T[]) @ akasha.NodeList.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.NodeList.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "concat",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsArray<T> akasha.lang.JsArray<T>::concat(T[]) @ akasha.URLSearchParams.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.URLSearchParams.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "concat",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsArray<T> akasha.lang.JsArray<T>::concat(T[]) @ akasha.audio.AudioParamMap.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.audio.AudioParamMap.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "concat",
      "package": "akasha.audio"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsArray<T> akasha.lang.JsArray<T>::concat(T[]) @ akasha.bluetooth.BluetoothManufacturerDataMap.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.bluetooth.BluetoothManufacturerDataMap.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "concat",
      "package": "akasha.bluetooth"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsArray<T> akasha.lang.JsArray<T>::concat(T[]) @ akasha.bluetooth.BluetoothServiceDataMap.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.bluetooth.BluetoothServiceDataMap.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "concat",
      "package": "akasha.bluetooth"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsArray<T> akasha.lang.JsArray<T>::concat(T[]) @ akasha.core.JsMap.Entry<K, V>",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.JsMap.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "concat",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsArray<T> akasha.lang.JsArray<T>::concat(T[]) @ akasha.core.JsWeakMap.Entry<K, V>",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.JsWeakMap.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "concat",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsArray<T> akasha.lang.JsArray<T>::concat(T[]) @ akasha.core.ObjectPropertyEntry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.ObjectPropertyEntry",
      "classSimpleName": "ObjectPropertyEntry",
      "elementKind": "method",
      "methodName": "concat",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsArray<T> akasha.lang.JsArray<T>::concat(T[]) @ akasha.core.RegExpGroups.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.RegExpGroups.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "concat",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsArray<T> akasha.lang.JsArray<T>::concat(T[]) @ akasha.core.RegExpResult.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.RegExpResult.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "concat",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsArray<T> akasha.lang.JsArray<T>::concat(T[]) @ akasha.lang.JsArray.Entry<T>",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.lang.JsArray.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "concat",
      "package": "akasha.lang"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsArray<T> akasha.lang.JsArray<T>::concat(T[]) @ akasha.rtc.RTCStatsReport.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.rtc.RTCStatsReport.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "concat",
      "package": "akasha.rtc"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsArray<T> akasha.lang.JsArray<T>::concat(T[]) @ akasha.xr.XRInputSourceArray.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.xr.XRInputSourceArray.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "concat",
      "package": "akasha.xr"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsArray<T> akasha.lang.JsArray<T>::concat(T[])",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.lang.JsArray",
      "classSimpleName": "JsArray",
      "elementKind": "method",
      "methodName": "concat",
      "package": "akasha.lang"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsArray<T> akasha.lang.JsArray<T>::slice() @ akasha.CSSFontFeatureValuesMap.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.CSSFontFeatureValuesMap.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "slice",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsArray<T> akasha.lang.JsArray<T>::slice() @ akasha.CSSFontPaletteValuesRule.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.CSSFontPaletteValuesRule.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "slice",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsArray<T> akasha.lang.JsArray<T>::slice() @ akasha.DOMTokenList.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.DOMTokenList.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "slice",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsArray<T> akasha.lang.JsArray<T>::slice() @ akasha.FormData.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.FormData.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "slice",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsArray<T> akasha.lang.JsArray<T>::slice() @ akasha.Headers.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.Headers.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "slice",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsArray<T> akasha.lang.JsArray<T>::slice() @ akasha.MediaKeyStatusMap.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.MediaKeyStatusMap.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "slice",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsArray<T> akasha.lang.JsArray<T>::slice() @ akasha.NodeList.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.NodeList.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "slice",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsArray<T> akasha.lang.JsArray<T>::slice() @ akasha.URLSearchParams.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.URLSearchParams.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "slice",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsArray<T> akasha.lang.JsArray<T>::slice() @ akasha.audio.AudioParamMap.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.audio.AudioParamMap.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "slice",
      "package": "akasha.audio"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsArray<T> akasha.lang.JsArray<T>::slice() @ akasha.bluetooth.BluetoothManufacturerDataMap.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.bluetooth.BluetoothManufacturerDataMap.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "slice",
      "package": "akasha.bluetooth"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsArray<T> akasha.lang.JsArray<T>::slice() @ akasha.bluetooth.BluetoothServiceDataMap.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.bluetooth.BluetoothServiceDataMap.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "slice",
      "package": "akasha.bluetooth"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsArray<T> akasha.lang.JsArray<T>::slice() @ akasha.core.JsMap.Entry<K, V>",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.JsMap.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "slice",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsArray<T> akasha.lang.JsArray<T>::slice() @ akasha.core.JsWeakMap.Entry<K, V>",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.JsWeakMap.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "slice",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsArray<T> akasha.lang.JsArray<T>::slice() @ akasha.core.ObjectPropertyEntry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.ObjectPropertyEntry",
      "classSimpleName": "ObjectPropertyEntry",
      "elementKind": "method",
      "methodName": "slice",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsArray<T> akasha.lang.JsArray<T>::slice() @ akasha.core.RegExpGroups.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.RegExpGroups.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "slice",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsArray<T> akasha.lang.JsArray<T>::slice() @ akasha.core.RegExpResult.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.RegExpResult.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "slice",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsArray<T> akasha.lang.JsArray<T>::slice() @ akasha.lang.JsArray.Entry<T>",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.lang.JsArray.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "slice",
      "package": "akasha.lang"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsArray<T> akasha.lang.JsArray<T>::slice() @ akasha.rtc.RTCStatsReport.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.rtc.RTCStatsReport.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "slice",
      "package": "akasha.rtc"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsArray<T> akasha.lang.JsArray<T>::slice() @ akasha.xr.XRInputSourceArray.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.xr.XRInputSourceArray.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "slice",
      "package": "akasha.xr"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsArray<T> akasha.lang.JsArray<T>::slice()",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.lang.JsArray",
      "classSimpleName": "JsArray",
      "elementKind": "method",
      "methodName": "slice",
      "package": "akasha.lang"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsArray<T> akasha.lang.JsArray<T>::slice(int) @ akasha.CSSFontFeatureValuesMap.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.CSSFontFeatureValuesMap.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "slice",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsArray<T> akasha.lang.JsArray<T>::slice(int) @ akasha.CSSFontPaletteValuesRule.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.CSSFontPaletteValuesRule.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "slice",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsArray<T> akasha.lang.JsArray<T>::slice(int) @ akasha.DOMTokenList.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.DOMTokenList.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "slice",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsArray<T> akasha.lang.JsArray<T>::slice(int) @ akasha.FormData.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.FormData.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "slice",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsArray<T> akasha.lang.JsArray<T>::slice(int) @ akasha.Headers.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.Headers.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "slice",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsArray<T> akasha.lang.JsArray<T>::slice(int) @ akasha.MediaKeyStatusMap.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.MediaKeyStatusMap.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "slice",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsArray<T> akasha.lang.JsArray<T>::slice(int) @ akasha.NodeList.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.NodeList.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "slice",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsArray<T> akasha.lang.JsArray<T>::slice(int) @ akasha.URLSearchParams.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.URLSearchParams.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "slice",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsArray<T> akasha.lang.JsArray<T>::slice(int) @ akasha.audio.AudioParamMap.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.audio.AudioParamMap.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "slice",
      "package": "akasha.audio"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsArray<T> akasha.lang.JsArray<T>::slice(int) @ akasha.bluetooth.BluetoothManufacturerDataMap.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.bluetooth.BluetoothManufacturerDataMap.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "slice",
      "package": "akasha.bluetooth"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsArray<T> akasha.lang.JsArray<T>::slice(int) @ akasha.bluetooth.BluetoothServiceDataMap.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.bluetooth.BluetoothServiceDataMap.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "slice",
      "package": "akasha.bluetooth"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsArray<T> akasha.lang.JsArray<T>::slice(int) @ akasha.core.JsMap.Entry<K, V>",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.JsMap.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "slice",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsArray<T> akasha.lang.JsArray<T>::slice(int) @ akasha.core.JsWeakMap.Entry<K, V>",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.JsWeakMap.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "slice",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsArray<T> akasha.lang.JsArray<T>::slice(int) @ akasha.core.ObjectPropertyEntry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.ObjectPropertyEntry",
      "classSimpleName": "ObjectPropertyEntry",
      "elementKind": "method",
      "methodName": "slice",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsArray<T> akasha.lang.JsArray<T>::slice(int) @ akasha.core.RegExpGroups.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.RegExpGroups.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "slice",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsArray<T> akasha.lang.JsArray<T>::slice(int) @ akasha.core.RegExpResult.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.RegExpResult.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "slice",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsArray<T> akasha.lang.JsArray<T>::slice(int) @ akasha.lang.JsArray.Entry<T>",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.lang.JsArray.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "slice",
      "package": "akasha.lang"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsArray<T> akasha.lang.JsArray<T>::slice(int) @ akasha.rtc.RTCStatsReport.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.rtc.RTCStatsReport.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "slice",
      "package": "akasha.rtc"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsArray<T> akasha.lang.JsArray<T>::slice(int) @ akasha.xr.XRInputSourceArray.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.xr.XRInputSourceArray.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "slice",
      "package": "akasha.xr"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsArray<T> akasha.lang.JsArray<T>::slice(int)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.lang.JsArray",
      "classSimpleName": "JsArray",
      "elementKind": "method",
      "methodName": "slice",
      "package": "akasha.lang"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsArray<T> akasha.lang.JsArray<T>::slice(int, int) @ akasha.CSSFontFeatureValuesMap.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.CSSFontFeatureValuesMap.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "slice",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsArray<T> akasha.lang.JsArray<T>::slice(int, int) @ akasha.CSSFontPaletteValuesRule.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.CSSFontPaletteValuesRule.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "slice",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsArray<T> akasha.lang.JsArray<T>::slice(int, int) @ akasha.DOMTokenList.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.DOMTokenList.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "slice",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsArray<T> akasha.lang.JsArray<T>::slice(int, int) @ akasha.FormData.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.FormData.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "slice",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsArray<T> akasha.lang.JsArray<T>::slice(int, int) @ akasha.Headers.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.Headers.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "slice",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsArray<T> akasha.lang.JsArray<T>::slice(int, int) @ akasha.MediaKeyStatusMap.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.MediaKeyStatusMap.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "slice",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsArray<T> akasha.lang.JsArray<T>::slice(int, int) @ akasha.NodeList.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.NodeList.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "slice",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsArray<T> akasha.lang.JsArray<T>::slice(int, int) @ akasha.URLSearchParams.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.URLSearchParams.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "slice",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsArray<T> akasha.lang.JsArray<T>::slice(int, int) @ akasha.audio.AudioParamMap.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.audio.AudioParamMap.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "slice",
      "package": "akasha.audio"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsArray<T> akasha.lang.JsArray<T>::slice(int, int) @ akasha.bluetooth.BluetoothManufacturerDataMap.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.bluetooth.BluetoothManufacturerDataMap.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "slice",
      "package": "akasha.bluetooth"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsArray<T> akasha.lang.JsArray<T>::slice(int, int) @ akasha.bluetooth.BluetoothServiceDataMap.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.bluetooth.BluetoothServiceDataMap.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "slice",
      "package": "akasha.bluetooth"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsArray<T> akasha.lang.JsArray<T>::slice(int, int) @ akasha.core.JsMap.Entry<K, V>",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.JsMap.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "slice",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsArray<T> akasha.lang.JsArray<T>::slice(int, int) @ akasha.core.JsWeakMap.Entry<K, V>",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.JsWeakMap.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "slice",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsArray<T> akasha.lang.JsArray<T>::slice(int, int) @ akasha.core.ObjectPropertyEntry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.ObjectPropertyEntry",
      "classSimpleName": "ObjectPropertyEntry",
      "elementKind": "method",
      "methodName": "slice",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsArray<T> akasha.lang.JsArray<T>::slice(int, int) @ akasha.core.RegExpGroups.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.RegExpGroups.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "slice",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsArray<T> akasha.lang.JsArray<T>::slice(int, int) @ akasha.core.RegExpResult.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.RegExpResult.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "slice",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsArray<T> akasha.lang.JsArray<T>::slice(int, int) @ akasha.lang.JsArray.Entry<T>",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.lang.JsArray.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "slice",
      "package": "akasha.lang"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsArray<T> akasha.lang.JsArray<T>::slice(int, int) @ akasha.rtc.RTCStatsReport.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.rtc.RTCStatsReport.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "slice",
      "package": "akasha.rtc"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsArray<T> akasha.lang.JsArray<T>::slice(int, int) @ akasha.xr.XRInputSourceArray.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.xr.XRInputSourceArray.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "slice",
      "package": "akasha.xr"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsArray<T> akasha.lang.JsArray<T>::slice(int, int)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.lang.JsArray",
      "classSimpleName": "JsArray",
      "elementKind": "method",
      "methodName": "slice",
      "package": "akasha.lang"
    }
  },
  {
    "code": "java.method.added",
    "description": "Method was added.",
    "newElement": "method akasha.lang.JsArray<akasha.core.RegExpResult> akasha.core.JsString::matchAll(akasha.core.RegExp)",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.core.JsString",
      "classSimpleName": "JsString",
      "elementKind": "method",
      "methodName": "matchAll",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.method.added",
    "description": "Method was added.",
    "newElement": "method akasha.lang.JsArray<akasha.core.RegExpResult> akasha.core.JsString::matchAll(java.lang.String)",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.core.JsString",
      "classSimpleName": "JsString",
      "elementKind": "method",
      "methodName": "matchAll",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsIteratorIterable<K> akasha.core.JsMap<K, V>::keys()",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.JsMap",
      "classSimpleName": "JsMap",
      "elementKind": "method",
      "methodName": "keys",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsIteratorIterable<T> akasha.core.JsSet<T>::keys()",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.JsSet",
      "classSimpleName": "JsSet",
      "elementKind": "method",
      "methodName": "keys",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsIteratorIterable<T> akasha.core.JsSet<T>::values()",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.JsSet",
      "classSimpleName": "JsSet",
      "elementKind": "method",
      "methodName": "values",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsIteratorIterable<T> akasha.lang.JsArray<T>::values() @ akasha.CSSFontFeatureValuesMap.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.CSSFontFeatureValuesMap.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "values",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsIteratorIterable<T> akasha.lang.JsArray<T>::values() @ akasha.CSSFontPaletteValuesRule.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.CSSFontPaletteValuesRule.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "values",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsIteratorIterable<T> akasha.lang.JsArray<T>::values() @ akasha.DOMTokenList.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.DOMTokenList.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "values",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsIteratorIterable<T> akasha.lang.JsArray<T>::values() @ akasha.FormData.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.FormData.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "values",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsIteratorIterable<T> akasha.lang.JsArray<T>::values() @ akasha.Headers.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.Headers.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "values",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsIteratorIterable<T> akasha.lang.JsArray<T>::values() @ akasha.MediaKeyStatusMap.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.MediaKeyStatusMap.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "values",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsIteratorIterable<T> akasha.lang.JsArray<T>::values() @ akasha.NodeList.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.NodeList.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "values",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsIteratorIterable<T> akasha.lang.JsArray<T>::values() @ akasha.URLSearchParams.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.URLSearchParams.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "values",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsIteratorIterable<T> akasha.lang.JsArray<T>::values() @ akasha.audio.AudioParamMap.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.audio.AudioParamMap.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "values",
      "package": "akasha.audio"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsIteratorIterable<T> akasha.lang.JsArray<T>::values() @ akasha.bluetooth.BluetoothManufacturerDataMap.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.bluetooth.BluetoothManufacturerDataMap.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "values",
      "package": "akasha.bluetooth"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsIteratorIterable<T> akasha.lang.JsArray<T>::values() @ akasha.bluetooth.BluetoothServiceDataMap.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.bluetooth.BluetoothServiceDataMap.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "values",
      "package": "akasha.bluetooth"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsIteratorIterable<T> akasha.lang.JsArray<T>::values() @ akasha.core.JsMap.Entry<K, V>",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.JsMap.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "values",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsIteratorIterable<T> akasha.lang.JsArray<T>::values() @ akasha.core.JsWeakMap.Entry<K, V>",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.JsWeakMap.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "values",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsIteratorIterable<T> akasha.lang.JsArray<T>::values() @ akasha.core.ObjectPropertyEntry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.ObjectPropertyEntry",
      "classSimpleName": "ObjectPropertyEntry",
      "elementKind": "method",
      "methodName": "values",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsIteratorIterable<T> akasha.lang.JsArray<T>::values() @ akasha.core.RegExpGroups.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.RegExpGroups.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "values",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsIteratorIterable<T> akasha.lang.JsArray<T>::values() @ akasha.core.RegExpResult.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.RegExpResult.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "values",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsIteratorIterable<T> akasha.lang.JsArray<T>::values() @ akasha.lang.JsArray.Entry<T>",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.lang.JsArray.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "values",
      "package": "akasha.lang"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsIteratorIterable<T> akasha.lang.JsArray<T>::values() @ akasha.rtc.RTCStatsReport.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.rtc.RTCStatsReport.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "values",
      "package": "akasha.rtc"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsIteratorIterable<T> akasha.lang.JsArray<T>::values() @ akasha.xr.XRInputSourceArray.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.xr.XRInputSourceArray.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "values",
      "package": "akasha.xr"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsIteratorIterable<T> akasha.lang.JsArray<T>::values()",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.lang.JsArray",
      "classSimpleName": "JsArray",
      "elementKind": "method",
      "methodName": "values",
      "package": "akasha.lang"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsIteratorIterable<V> akasha.core.JsMap<K, V>::values()",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.JsMap",
      "classSimpleName": "JsMap",
      "elementKind": "method",
      "methodName": "values",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsIteratorIterable<akasha.core.JsMap.Entry<K, V>> akasha.core.JsMap<K, V>::entries()",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.JsMap",
      "classSimpleName": "JsMap",
      "elementKind": "method",
      "methodName": "entries",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsIteratorIterable<akasha.lang.JsArray<T>> akasha.core.JsSet<T>::entries()",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.JsSet",
      "classSimpleName": "JsSet",
      "elementKind": "method",
      "methodName": "entries",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsIteratorIterable<akasha.lang.JsArray<akasha.lang.JsArray.Entry<T>>> akasha.lang.JsArray<T>::entries() @ akasha.CSSFontFeatureValuesMap.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.CSSFontFeatureValuesMap.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "entries",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsIteratorIterable<akasha.lang.JsArray<akasha.lang.JsArray.Entry<T>>> akasha.lang.JsArray<T>::entries() @ akasha.CSSFontPaletteValuesRule.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.CSSFontPaletteValuesRule.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "entries",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsIteratorIterable<akasha.lang.JsArray<akasha.lang.JsArray.Entry<T>>> akasha.lang.JsArray<T>::entries() @ akasha.DOMTokenList.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.DOMTokenList.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "entries",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsIteratorIterable<akasha.lang.JsArray<akasha.lang.JsArray.Entry<T>>> akasha.lang.JsArray<T>::entries() @ akasha.FormData.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.FormData.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "entries",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsIteratorIterable<akasha.lang.JsArray<akasha.lang.JsArray.Entry<T>>> akasha.lang.JsArray<T>::entries() @ akasha.Headers.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.Headers.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "entries",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsIteratorIterable<akasha.lang.JsArray<akasha.lang.JsArray.Entry<T>>> akasha.lang.JsArray<T>::entries() @ akasha.MediaKeyStatusMap.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.MediaKeyStatusMap.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "entries",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsIteratorIterable<akasha.lang.JsArray<akasha.lang.JsArray.Entry<T>>> akasha.lang.JsArray<T>::entries() @ akasha.NodeList.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.NodeList.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "entries",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsIteratorIterable<akasha.lang.JsArray<akasha.lang.JsArray.Entry<T>>> akasha.lang.JsArray<T>::entries() @ akasha.URLSearchParams.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.URLSearchParams.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "entries",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsIteratorIterable<akasha.lang.JsArray<akasha.lang.JsArray.Entry<T>>> akasha.lang.JsArray<T>::entries() @ akasha.audio.AudioParamMap.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.audio.AudioParamMap.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "entries",
      "package": "akasha.audio"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsIteratorIterable<akasha.lang.JsArray<akasha.lang.JsArray.Entry<T>>> akasha.lang.JsArray<T>::entries() @ akasha.bluetooth.BluetoothManufacturerDataMap.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.bluetooth.BluetoothManufacturerDataMap.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "entries",
      "package": "akasha.bluetooth"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsIteratorIterable<akasha.lang.JsArray<akasha.lang.JsArray.Entry<T>>> akasha.lang.JsArray<T>::entries() @ akasha.bluetooth.BluetoothServiceDataMap.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.bluetooth.BluetoothServiceDataMap.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "entries",
      "package": "akasha.bluetooth"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsIteratorIterable<akasha.lang.JsArray<akasha.lang.JsArray.Entry<T>>> akasha.lang.JsArray<T>::entries() @ akasha.core.JsMap.Entry<K, V>",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.JsMap.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "entries",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsIteratorIterable<akasha.lang.JsArray<akasha.lang.JsArray.Entry<T>>> akasha.lang.JsArray<T>::entries() @ akasha.core.JsWeakMap.Entry<K, V>",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.JsWeakMap.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "entries",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsIteratorIterable<akasha.lang.JsArray<akasha.lang.JsArray.Entry<T>>> akasha.lang.JsArray<T>::entries() @ akasha.core.ObjectPropertyEntry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.ObjectPropertyEntry",
      "classSimpleName": "ObjectPropertyEntry",
      "elementKind": "method",
      "methodName": "entries",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsIteratorIterable<akasha.lang.JsArray<akasha.lang.JsArray.Entry<T>>> akasha.lang.JsArray<T>::entries() @ akasha.core.RegExpGroups.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.RegExpGroups.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "entries",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsIteratorIterable<akasha.lang.JsArray<akasha.lang.JsArray.Entry<T>>> akasha.lang.JsArray<T>::entries() @ akasha.core.RegExpResult.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.RegExpResult.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "entries",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsIteratorIterable<akasha.lang.JsArray<akasha.lang.JsArray.Entry<T>>> akasha.lang.JsArray<T>::entries() @ akasha.lang.JsArray.Entry<T>",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.lang.JsArray.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "entries",
      "package": "akasha.lang"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsIteratorIterable<akasha.lang.JsArray<akasha.lang.JsArray.Entry<T>>> akasha.lang.JsArray<T>::entries() @ akasha.rtc.RTCStatsReport.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.rtc.RTCStatsReport.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "entries",
      "package": "akasha.rtc"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsIteratorIterable<akasha.lang.JsArray<akasha.lang.JsArray.Entry<T>>> akasha.lang.JsArray<T>::entries() @ akasha.xr.XRInputSourceArray.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.xr.XRInputSourceArray.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "entries",
      "package": "akasha.xr"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsIteratorIterable<akasha.lang.JsArray<akasha.lang.JsArray.Entry<T>>> akasha.lang.JsArray<T>::entries()",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.lang.JsArray",
      "classSimpleName": "JsArray",
      "elementKind": "method",
      "methodName": "entries",
      "package": "akasha.lang"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsIteratorIterable<java.lang.Double> akasha.lang.JsArray<T>::keys() @ akasha.CSSFontFeatureValuesMap.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.CSSFontFeatureValuesMap.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "keys",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsIteratorIterable<java.lang.Double> akasha.lang.JsArray<T>::keys() @ akasha.CSSFontPaletteValuesRule.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.CSSFontPaletteValuesRule.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "keys",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsIteratorIterable<java.lang.Double> akasha.lang.JsArray<T>::keys() @ akasha.DOMTokenList.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.DOMTokenList.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "keys",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsIteratorIterable<java.lang.Double> akasha.lang.JsArray<T>::keys() @ akasha.FormData.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.FormData.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "keys",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsIteratorIterable<java.lang.Double> akasha.lang.JsArray<T>::keys() @ akasha.Headers.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.Headers.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "keys",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsIteratorIterable<java.lang.Double> akasha.lang.JsArray<T>::keys() @ akasha.MediaKeyStatusMap.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.MediaKeyStatusMap.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "keys",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsIteratorIterable<java.lang.Double> akasha.lang.JsArray<T>::keys() @ akasha.NodeList.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.NodeList.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "keys",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsIteratorIterable<java.lang.Double> akasha.lang.JsArray<T>::keys() @ akasha.URLSearchParams.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.URLSearchParams.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "keys",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsIteratorIterable<java.lang.Double> akasha.lang.JsArray<T>::keys() @ akasha.audio.AudioParamMap.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.audio.AudioParamMap.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "keys",
      "package": "akasha.audio"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsIteratorIterable<java.lang.Double> akasha.lang.JsArray<T>::keys() @ akasha.bluetooth.BluetoothManufacturerDataMap.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.bluetooth.BluetoothManufacturerDataMap.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "keys",
      "package": "akasha.bluetooth"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsIteratorIterable<java.lang.Double> akasha.lang.JsArray<T>::keys() @ akasha.bluetooth.BluetoothServiceDataMap.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.bluetooth.BluetoothServiceDataMap.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "keys",
      "package": "akasha.bluetooth"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsIteratorIterable<java.lang.Double> akasha.lang.JsArray<T>::keys() @ akasha.core.JsMap.Entry<K, V>",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.JsMap.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "keys",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsIteratorIterable<java.lang.Double> akasha.lang.JsArray<T>::keys() @ akasha.core.JsWeakMap.Entry<K, V>",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.JsWeakMap.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "keys",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsIteratorIterable<java.lang.Double> akasha.lang.JsArray<T>::keys() @ akasha.core.ObjectPropertyEntry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.ObjectPropertyEntry",
      "classSimpleName": "ObjectPropertyEntry",
      "elementKind": "method",
      "methodName": "keys",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsIteratorIterable<java.lang.Double> akasha.lang.JsArray<T>::keys() @ akasha.core.RegExpGroups.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.RegExpGroups.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "keys",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsIteratorIterable<java.lang.Double> akasha.lang.JsArray<T>::keys() @ akasha.core.RegExpResult.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.RegExpResult.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "keys",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsIteratorIterable<java.lang.Double> akasha.lang.JsArray<T>::keys() @ akasha.lang.JsArray.Entry<T>",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.lang.JsArray.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "keys",
      "package": "akasha.lang"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsIteratorIterable<java.lang.Double> akasha.lang.JsArray<T>::keys() @ akasha.rtc.RTCStatsReport.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.rtc.RTCStatsReport.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "keys",
      "package": "akasha.rtc"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsIteratorIterable<java.lang.Double> akasha.lang.JsArray<T>::keys() @ akasha.xr.XRInputSourceArray.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.xr.XRInputSourceArray.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "keys",
      "package": "akasha.xr"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method akasha.lang.JsIteratorIterable<java.lang.Double> akasha.lang.JsArray<T>::keys()",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.lang.JsArray",
      "classSimpleName": "JsArray",
      "elementKind": "method",
      "methodName": "keys",
      "package": "akasha.lang"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.core.JsMap<K, V>::has(K)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.JsMap",
      "classSimpleName": "JsMap",
      "elementKind": "method",
      "methodName": "has",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.core.JsSet<T>::has(T)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.JsSet",
      "classSimpleName": "JsSet",
      "elementKind": "method",
      "methodName": "has",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.core.JsWeakMap<K, V>::has(K)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.JsWeakMap",
      "classSimpleName": "JsWeakMap",
      "elementKind": "method",
      "methodName": "has",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.core.JsWeakSet<T>::has(T)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.JsWeakSet",
      "classSimpleName": "JsWeakSet",
      "elementKind": "method",
      "methodName": "has",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.lang.JsArray<T>::includes(T) @ akasha.CSSFontFeatureValuesMap.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.CSSFontFeatureValuesMap.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "includes",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.lang.JsArray<T>::includes(T) @ akasha.CSSFontPaletteValuesRule.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.CSSFontPaletteValuesRule.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "includes",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.lang.JsArray<T>::includes(T) @ akasha.DOMTokenList.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.DOMTokenList.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "includes",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.lang.JsArray<T>::includes(T) @ akasha.FormData.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.FormData.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "includes",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.lang.JsArray<T>::includes(T) @ akasha.Headers.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.Headers.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "includes",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.lang.JsArray<T>::includes(T) @ akasha.MediaKeyStatusMap.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.MediaKeyStatusMap.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "includes",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.lang.JsArray<T>::includes(T) @ akasha.NodeList.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.NodeList.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "includes",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.lang.JsArray<T>::includes(T) @ akasha.URLSearchParams.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.URLSearchParams.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "includes",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.lang.JsArray<T>::includes(T) @ akasha.audio.AudioParamMap.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.audio.AudioParamMap.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "includes",
      "package": "akasha.audio"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.lang.JsArray<T>::includes(T) @ akasha.bluetooth.BluetoothManufacturerDataMap.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.bluetooth.BluetoothManufacturerDataMap.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "includes",
      "package": "akasha.bluetooth"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.lang.JsArray<T>::includes(T) @ akasha.bluetooth.BluetoothServiceDataMap.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.bluetooth.BluetoothServiceDataMap.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "includes",
      "package": "akasha.bluetooth"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.lang.JsArray<T>::includes(T) @ akasha.core.JsMap.Entry<K, V>",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.JsMap.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "includes",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.lang.JsArray<T>::includes(T) @ akasha.core.JsWeakMap.Entry<K, V>",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.JsWeakMap.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "includes",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.lang.JsArray<T>::includes(T) @ akasha.core.ObjectPropertyEntry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.ObjectPropertyEntry",
      "classSimpleName": "ObjectPropertyEntry",
      "elementKind": "method",
      "methodName": "includes",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.lang.JsArray<T>::includes(T) @ akasha.core.RegExpGroups.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.RegExpGroups.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "includes",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.lang.JsArray<T>::includes(T) @ akasha.core.RegExpResult.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.RegExpResult.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "includes",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.lang.JsArray<T>::includes(T) @ akasha.lang.JsArray.Entry<T>",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.lang.JsArray.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "includes",
      "package": "akasha.lang"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.lang.JsArray<T>::includes(T) @ akasha.rtc.RTCStatsReport.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.rtc.RTCStatsReport.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "includes",
      "package": "akasha.rtc"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.lang.JsArray<T>::includes(T) @ akasha.xr.XRInputSourceArray.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.xr.XRInputSourceArray.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "includes",
      "package": "akasha.xr"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.lang.JsArray<T>::includes(T)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.lang.JsArray",
      "classSimpleName": "JsArray",
      "elementKind": "method",
      "methodName": "includes",
      "package": "akasha.lang"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.lang.JsArray<T>::includes(T, int) @ akasha.CSSFontFeatureValuesMap.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.CSSFontFeatureValuesMap.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "includes",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.lang.JsArray<T>::includes(T, int) @ akasha.CSSFontPaletteValuesRule.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.CSSFontPaletteValuesRule.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "includes",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.lang.JsArray<T>::includes(T, int) @ akasha.DOMTokenList.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.DOMTokenList.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "includes",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.lang.JsArray<T>::includes(T, int) @ akasha.FormData.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.FormData.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "includes",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.lang.JsArray<T>::includes(T, int) @ akasha.Headers.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.Headers.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "includes",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.lang.JsArray<T>::includes(T, int) @ akasha.MediaKeyStatusMap.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.MediaKeyStatusMap.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "includes",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.lang.JsArray<T>::includes(T, int) @ akasha.NodeList.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.NodeList.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "includes",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.lang.JsArray<T>::includes(T, int) @ akasha.URLSearchParams.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.URLSearchParams.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "includes",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.lang.JsArray<T>::includes(T, int) @ akasha.audio.AudioParamMap.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.audio.AudioParamMap.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "includes",
      "package": "akasha.audio"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.lang.JsArray<T>::includes(T, int) @ akasha.bluetooth.BluetoothManufacturerDataMap.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.bluetooth.BluetoothManufacturerDataMap.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "includes",
      "package": "akasha.bluetooth"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.lang.JsArray<T>::includes(T, int) @ akasha.bluetooth.BluetoothServiceDataMap.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.bluetooth.BluetoothServiceDataMap.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "includes",
      "package": "akasha.bluetooth"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.lang.JsArray<T>::includes(T, int) @ akasha.core.JsMap.Entry<K, V>",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.JsMap.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "includes",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.lang.JsArray<T>::includes(T, int) @ akasha.core.JsWeakMap.Entry<K, V>",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.JsWeakMap.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "includes",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.lang.JsArray<T>::includes(T, int) @ akasha.core.ObjectPropertyEntry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.ObjectPropertyEntry",
      "classSimpleName": "ObjectPropertyEntry",
      "elementKind": "method",
      "methodName": "includes",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.lang.JsArray<T>::includes(T, int) @ akasha.core.RegExpGroups.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.RegExpGroups.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "includes",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.lang.JsArray<T>::includes(T, int) @ akasha.core.RegExpResult.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.RegExpResult.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "includes",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.lang.JsArray<T>::includes(T, int) @ akasha.lang.JsArray.Entry<T>",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.lang.JsArray.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "includes",
      "package": "akasha.lang"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.lang.JsArray<T>::includes(T, int) @ akasha.rtc.RTCStatsReport.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.rtc.RTCStatsReport.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "includes",
      "package": "akasha.rtc"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.lang.JsArray<T>::includes(T, int) @ akasha.xr.XRInputSourceArray.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.xr.XRInputSourceArray.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "includes",
      "package": "akasha.xr"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method boolean akasha.lang.JsArray<T>::includes(T, int)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.lang.JsArray",
      "classSimpleName": "JsArray",
      "elementKind": "method",
      "methodName": "includes",
      "package": "akasha.lang"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.lang.JsArray<T>::indexOf(T) @ akasha.CSSFontFeatureValuesMap.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.CSSFontFeatureValuesMap.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "indexOf",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.lang.JsArray<T>::indexOf(T) @ akasha.CSSFontPaletteValuesRule.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.CSSFontPaletteValuesRule.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "indexOf",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.lang.JsArray<T>::indexOf(T) @ akasha.DOMTokenList.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.DOMTokenList.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "indexOf",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.lang.JsArray<T>::indexOf(T) @ akasha.FormData.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.FormData.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "indexOf",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.lang.JsArray<T>::indexOf(T) @ akasha.Headers.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.Headers.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "indexOf",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.lang.JsArray<T>::indexOf(T) @ akasha.MediaKeyStatusMap.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.MediaKeyStatusMap.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "indexOf",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.lang.JsArray<T>::indexOf(T) @ akasha.NodeList.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.NodeList.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "indexOf",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.lang.JsArray<T>::indexOf(T) @ akasha.URLSearchParams.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.URLSearchParams.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "indexOf",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.lang.JsArray<T>::indexOf(T) @ akasha.audio.AudioParamMap.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.audio.AudioParamMap.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "indexOf",
      "package": "akasha.audio"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.lang.JsArray<T>::indexOf(T) @ akasha.bluetooth.BluetoothManufacturerDataMap.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.bluetooth.BluetoothManufacturerDataMap.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "indexOf",
      "package": "akasha.bluetooth"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.lang.JsArray<T>::indexOf(T) @ akasha.bluetooth.BluetoothServiceDataMap.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.bluetooth.BluetoothServiceDataMap.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "indexOf",
      "package": "akasha.bluetooth"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.lang.JsArray<T>::indexOf(T) @ akasha.core.JsMap.Entry<K, V>",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.JsMap.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "indexOf",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.lang.JsArray<T>::indexOf(T) @ akasha.core.JsWeakMap.Entry<K, V>",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.JsWeakMap.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "indexOf",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.lang.JsArray<T>::indexOf(T) @ akasha.core.ObjectPropertyEntry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.ObjectPropertyEntry",
      "classSimpleName": "ObjectPropertyEntry",
      "elementKind": "method",
      "methodName": "indexOf",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.lang.JsArray<T>::indexOf(T) @ akasha.core.RegExpGroups.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.RegExpGroups.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "indexOf",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.lang.JsArray<T>::indexOf(T) @ akasha.core.RegExpResult.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.RegExpResult.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "indexOf",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.lang.JsArray<T>::indexOf(T) @ akasha.lang.JsArray.Entry<T>",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.lang.JsArray.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "indexOf",
      "package": "akasha.lang"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.lang.JsArray<T>::indexOf(T) @ akasha.rtc.RTCStatsReport.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.rtc.RTCStatsReport.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "indexOf",
      "package": "akasha.rtc"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.lang.JsArray<T>::indexOf(T) @ akasha.xr.XRInputSourceArray.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.xr.XRInputSourceArray.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "indexOf",
      "package": "akasha.xr"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.lang.JsArray<T>::indexOf(T)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.lang.JsArray",
      "classSimpleName": "JsArray",
      "elementKind": "method",
      "methodName": "indexOf",
      "package": "akasha.lang"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.lang.JsArray<T>::indexOf(T, int) @ akasha.CSSFontFeatureValuesMap.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.CSSFontFeatureValuesMap.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "indexOf",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.lang.JsArray<T>::indexOf(T, int) @ akasha.CSSFontPaletteValuesRule.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.CSSFontPaletteValuesRule.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "indexOf",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.lang.JsArray<T>::indexOf(T, int) @ akasha.DOMTokenList.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.DOMTokenList.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "indexOf",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.lang.JsArray<T>::indexOf(T, int) @ akasha.FormData.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.FormData.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "indexOf",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.lang.JsArray<T>::indexOf(T, int) @ akasha.Headers.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.Headers.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "indexOf",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.lang.JsArray<T>::indexOf(T, int) @ akasha.MediaKeyStatusMap.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.MediaKeyStatusMap.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "indexOf",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.lang.JsArray<T>::indexOf(T, int) @ akasha.NodeList.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.NodeList.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "indexOf",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.lang.JsArray<T>::indexOf(T, int) @ akasha.URLSearchParams.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.URLSearchParams.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "indexOf",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.lang.JsArray<T>::indexOf(T, int) @ akasha.audio.AudioParamMap.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.audio.AudioParamMap.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "indexOf",
      "package": "akasha.audio"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.lang.JsArray<T>::indexOf(T, int) @ akasha.bluetooth.BluetoothManufacturerDataMap.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.bluetooth.BluetoothManufacturerDataMap.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "indexOf",
      "package": "akasha.bluetooth"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.lang.JsArray<T>::indexOf(T, int) @ akasha.bluetooth.BluetoothServiceDataMap.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.bluetooth.BluetoothServiceDataMap.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "indexOf",
      "package": "akasha.bluetooth"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.lang.JsArray<T>::indexOf(T, int) @ akasha.core.JsMap.Entry<K, V>",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.JsMap.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "indexOf",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.lang.JsArray<T>::indexOf(T, int) @ akasha.core.JsWeakMap.Entry<K, V>",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.JsWeakMap.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "indexOf",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.lang.JsArray<T>::indexOf(T, int) @ akasha.core.ObjectPropertyEntry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.ObjectPropertyEntry",
      "classSimpleName": "ObjectPropertyEntry",
      "elementKind": "method",
      "methodName": "indexOf",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.lang.JsArray<T>::indexOf(T, int) @ akasha.core.RegExpGroups.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.RegExpGroups.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "indexOf",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.lang.JsArray<T>::indexOf(T, int) @ akasha.core.RegExpResult.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.RegExpResult.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "indexOf",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.lang.JsArray<T>::indexOf(T, int) @ akasha.lang.JsArray.Entry<T>",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.lang.JsArray.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "indexOf",
      "package": "akasha.lang"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.lang.JsArray<T>::indexOf(T, int) @ akasha.rtc.RTCStatsReport.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.rtc.RTCStatsReport.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "indexOf",
      "package": "akasha.rtc"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.lang.JsArray<T>::indexOf(T, int) @ akasha.xr.XRInputSourceArray.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.xr.XRInputSourceArray.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "indexOf",
      "package": "akasha.xr"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.lang.JsArray<T>::indexOf(T, int)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.lang.JsArray",
      "classSimpleName": "JsArray",
      "elementKind": "method",
      "methodName": "indexOf",
      "package": "akasha.lang"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.lang.JsArray<T>::lastIndexOf(T) @ akasha.CSSFontFeatureValuesMap.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.CSSFontFeatureValuesMap.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "lastIndexOf",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.lang.JsArray<T>::lastIndexOf(T) @ akasha.CSSFontPaletteValuesRule.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.CSSFontPaletteValuesRule.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "lastIndexOf",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.lang.JsArray<T>::lastIndexOf(T) @ akasha.DOMTokenList.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.DOMTokenList.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "lastIndexOf",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.lang.JsArray<T>::lastIndexOf(T) @ akasha.FormData.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.FormData.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "lastIndexOf",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.lang.JsArray<T>::lastIndexOf(T) @ akasha.Headers.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.Headers.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "lastIndexOf",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.lang.JsArray<T>::lastIndexOf(T) @ akasha.MediaKeyStatusMap.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.MediaKeyStatusMap.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "lastIndexOf",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.lang.JsArray<T>::lastIndexOf(T) @ akasha.NodeList.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.NodeList.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "lastIndexOf",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.lang.JsArray<T>::lastIndexOf(T) @ akasha.URLSearchParams.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.URLSearchParams.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "lastIndexOf",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.lang.JsArray<T>::lastIndexOf(T) @ akasha.audio.AudioParamMap.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.audio.AudioParamMap.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "lastIndexOf",
      "package": "akasha.audio"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.lang.JsArray<T>::lastIndexOf(T) @ akasha.bluetooth.BluetoothManufacturerDataMap.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.bluetooth.BluetoothManufacturerDataMap.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "lastIndexOf",
      "package": "akasha.bluetooth"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.lang.JsArray<T>::lastIndexOf(T) @ akasha.bluetooth.BluetoothServiceDataMap.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.bluetooth.BluetoothServiceDataMap.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "lastIndexOf",
      "package": "akasha.bluetooth"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.lang.JsArray<T>::lastIndexOf(T) @ akasha.core.JsMap.Entry<K, V>",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.JsMap.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "lastIndexOf",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.lang.JsArray<T>::lastIndexOf(T) @ akasha.core.JsWeakMap.Entry<K, V>",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.JsWeakMap.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "lastIndexOf",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.lang.JsArray<T>::lastIndexOf(T) @ akasha.core.ObjectPropertyEntry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.ObjectPropertyEntry",
      "classSimpleName": "ObjectPropertyEntry",
      "elementKind": "method",
      "methodName": "lastIndexOf",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.lang.JsArray<T>::lastIndexOf(T) @ akasha.core.RegExpGroups.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.RegExpGroups.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "lastIndexOf",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.lang.JsArray<T>::lastIndexOf(T) @ akasha.core.RegExpResult.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.RegExpResult.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "lastIndexOf",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.lang.JsArray<T>::lastIndexOf(T) @ akasha.lang.JsArray.Entry<T>",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.lang.JsArray.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "lastIndexOf",
      "package": "akasha.lang"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.lang.JsArray<T>::lastIndexOf(T) @ akasha.rtc.RTCStatsReport.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.rtc.RTCStatsReport.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "lastIndexOf",
      "package": "akasha.rtc"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.lang.JsArray<T>::lastIndexOf(T) @ akasha.xr.XRInputSourceArray.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.xr.XRInputSourceArray.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "lastIndexOf",
      "package": "akasha.xr"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.lang.JsArray<T>::lastIndexOf(T)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.lang.JsArray",
      "classSimpleName": "JsArray",
      "elementKind": "method",
      "methodName": "lastIndexOf",
      "package": "akasha.lang"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.lang.JsArray<T>::lastIndexOf(T, int) @ akasha.CSSFontFeatureValuesMap.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.CSSFontFeatureValuesMap.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "lastIndexOf",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.lang.JsArray<T>::lastIndexOf(T, int) @ akasha.CSSFontPaletteValuesRule.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.CSSFontPaletteValuesRule.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "lastIndexOf",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.lang.JsArray<T>::lastIndexOf(T, int) @ akasha.DOMTokenList.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.DOMTokenList.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "lastIndexOf",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.lang.JsArray<T>::lastIndexOf(T, int) @ akasha.FormData.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.FormData.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "lastIndexOf",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.lang.JsArray<T>::lastIndexOf(T, int) @ akasha.Headers.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.Headers.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "lastIndexOf",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.lang.JsArray<T>::lastIndexOf(T, int) @ akasha.MediaKeyStatusMap.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.MediaKeyStatusMap.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "lastIndexOf",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.lang.JsArray<T>::lastIndexOf(T, int) @ akasha.NodeList.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.NodeList.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "lastIndexOf",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.lang.JsArray<T>::lastIndexOf(T, int) @ akasha.URLSearchParams.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.URLSearchParams.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "lastIndexOf",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.lang.JsArray<T>::lastIndexOf(T, int) @ akasha.audio.AudioParamMap.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.audio.AudioParamMap.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "lastIndexOf",
      "package": "akasha.audio"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.lang.JsArray<T>::lastIndexOf(T, int) @ akasha.bluetooth.BluetoothManufacturerDataMap.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.bluetooth.BluetoothManufacturerDataMap.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "lastIndexOf",
      "package": "akasha.bluetooth"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.lang.JsArray<T>::lastIndexOf(T, int) @ akasha.bluetooth.BluetoothServiceDataMap.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.bluetooth.BluetoothServiceDataMap.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "lastIndexOf",
      "package": "akasha.bluetooth"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.lang.JsArray<T>::lastIndexOf(T, int) @ akasha.core.JsMap.Entry<K, V>",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.JsMap.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "lastIndexOf",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.lang.JsArray<T>::lastIndexOf(T, int) @ akasha.core.JsWeakMap.Entry<K, V>",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.JsWeakMap.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "lastIndexOf",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.lang.JsArray<T>::lastIndexOf(T, int) @ akasha.core.ObjectPropertyEntry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.ObjectPropertyEntry",
      "classSimpleName": "ObjectPropertyEntry",
      "elementKind": "method",
      "methodName": "lastIndexOf",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.lang.JsArray<T>::lastIndexOf(T, int) @ akasha.core.RegExpGroups.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.RegExpGroups.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "lastIndexOf",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.lang.JsArray<T>::lastIndexOf(T, int) @ akasha.core.RegExpResult.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.RegExpResult.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "lastIndexOf",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.lang.JsArray<T>::lastIndexOf(T, int) @ akasha.lang.JsArray.Entry<T>",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.lang.JsArray.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "lastIndexOf",
      "package": "akasha.lang"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.lang.JsArray<T>::lastIndexOf(T, int) @ akasha.rtc.RTCStatsReport.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.rtc.RTCStatsReport.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "lastIndexOf",
      "package": "akasha.rtc"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.lang.JsArray<T>::lastIndexOf(T, int) @ akasha.xr.XRInputSourceArray.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.xr.XRInputSourceArray.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "lastIndexOf",
      "package": "akasha.xr"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method int akasha.lang.JsArray<T>::lastIndexOf(T, int)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.lang.JsArray",
      "classSimpleName": "JsArray",
      "elementKind": "method",
      "methodName": "lastIndexOf",
      "package": "akasha.lang"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.lang.JsArray<T>::join() @ akasha.CSSFontFeatureValuesMap.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.CSSFontFeatureValuesMap.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "join",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.lang.JsArray<T>::join() @ akasha.CSSFontPaletteValuesRule.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.CSSFontPaletteValuesRule.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "join",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.lang.JsArray<T>::join() @ akasha.DOMTokenList.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.DOMTokenList.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "join",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.lang.JsArray<T>::join() @ akasha.FormData.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.FormData.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "join",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.lang.JsArray<T>::join() @ akasha.Headers.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.Headers.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "join",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.lang.JsArray<T>::join() @ akasha.MediaKeyStatusMap.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.MediaKeyStatusMap.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "join",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.lang.JsArray<T>::join() @ akasha.NodeList.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.NodeList.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "join",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.lang.JsArray<T>::join() @ akasha.URLSearchParams.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.URLSearchParams.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "join",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.lang.JsArray<T>::join() @ akasha.audio.AudioParamMap.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.audio.AudioParamMap.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "join",
      "package": "akasha.audio"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.lang.JsArray<T>::join() @ akasha.bluetooth.BluetoothManufacturerDataMap.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.bluetooth.BluetoothManufacturerDataMap.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "join",
      "package": "akasha.bluetooth"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.lang.JsArray<T>::join() @ akasha.bluetooth.BluetoothServiceDataMap.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.bluetooth.BluetoothServiceDataMap.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "join",
      "package": "akasha.bluetooth"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.lang.JsArray<T>::join() @ akasha.core.JsMap.Entry<K, V>",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.JsMap.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "join",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.lang.JsArray<T>::join() @ akasha.core.JsWeakMap.Entry<K, V>",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.JsWeakMap.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "join",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.lang.JsArray<T>::join() @ akasha.core.ObjectPropertyEntry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.ObjectPropertyEntry",
      "classSimpleName": "ObjectPropertyEntry",
      "elementKind": "method",
      "methodName": "join",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.lang.JsArray<T>::join() @ akasha.core.RegExpGroups.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.RegExpGroups.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "join",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.lang.JsArray<T>::join() @ akasha.core.RegExpResult.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.RegExpResult.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "join",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.lang.JsArray<T>::join() @ akasha.lang.JsArray.Entry<T>",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.lang.JsArray.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "join",
      "package": "akasha.lang"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.lang.JsArray<T>::join() @ akasha.rtc.RTCStatsReport.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.rtc.RTCStatsReport.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "join",
      "package": "akasha.rtc"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.lang.JsArray<T>::join() @ akasha.xr.XRInputSourceArray.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.xr.XRInputSourceArray.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "join",
      "package": "akasha.xr"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.lang.JsArray<T>::join()",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.lang.JsArray",
      "classSimpleName": "JsArray",
      "elementKind": "method",
      "methodName": "join",
      "package": "akasha.lang"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.lang.JsArray<T>::join(java.lang.String) @ akasha.CSSFontFeatureValuesMap.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.CSSFontFeatureValuesMap.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "join",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.lang.JsArray<T>::join(java.lang.String) @ akasha.CSSFontPaletteValuesRule.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.CSSFontPaletteValuesRule.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "join",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.lang.JsArray<T>::join(java.lang.String) @ akasha.DOMTokenList.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.DOMTokenList.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "join",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.lang.JsArray<T>::join(java.lang.String) @ akasha.FormData.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.FormData.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "join",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.lang.JsArray<T>::join(java.lang.String) @ akasha.Headers.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.Headers.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "join",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.lang.JsArray<T>::join(java.lang.String) @ akasha.MediaKeyStatusMap.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.MediaKeyStatusMap.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "join",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.lang.JsArray<T>::join(java.lang.String) @ akasha.NodeList.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.NodeList.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "join",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.lang.JsArray<T>::join(java.lang.String) @ akasha.URLSearchParams.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.URLSearchParams.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "join",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.lang.JsArray<T>::join(java.lang.String) @ akasha.audio.AudioParamMap.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.audio.AudioParamMap.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "join",
      "package": "akasha.audio"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.lang.JsArray<T>::join(java.lang.String) @ akasha.bluetooth.BluetoothManufacturerDataMap.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.bluetooth.BluetoothManufacturerDataMap.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "join",
      "package": "akasha.bluetooth"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.lang.JsArray<T>::join(java.lang.String) @ akasha.bluetooth.BluetoothServiceDataMap.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.bluetooth.BluetoothServiceDataMap.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "join",
      "package": "akasha.bluetooth"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.lang.JsArray<T>::join(java.lang.String) @ akasha.core.JsMap.Entry<K, V>",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.JsMap.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "join",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.lang.JsArray<T>::join(java.lang.String) @ akasha.core.JsWeakMap.Entry<K, V>",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.JsWeakMap.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "join",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.lang.JsArray<T>::join(java.lang.String) @ akasha.core.ObjectPropertyEntry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.ObjectPropertyEntry",
      "classSimpleName": "ObjectPropertyEntry",
      "elementKind": "method",
      "methodName": "join",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.lang.JsArray<T>::join(java.lang.String) @ akasha.core.RegExpGroups.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.RegExpGroups.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "join",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.lang.JsArray<T>::join(java.lang.String) @ akasha.core.RegExpResult.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.RegExpResult.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "join",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.lang.JsArray<T>::join(java.lang.String) @ akasha.lang.JsArray.Entry<T>",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.lang.JsArray.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "join",
      "package": "akasha.lang"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.lang.JsArray<T>::join(java.lang.String) @ akasha.rtc.RTCStatsReport.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.rtc.RTCStatsReport.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "join",
      "package": "akasha.rtc"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.lang.JsArray<T>::join(java.lang.String) @ akasha.xr.XRInputSourceArray.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.xr.XRInputSourceArray.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "join",
      "package": "akasha.xr"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.lang.JsArray<T>::join(java.lang.String)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.lang.JsArray",
      "classSimpleName": "JsArray",
      "elementKind": "method",
      "methodName": "join",
      "package": "akasha.lang"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.lang.JsArray<T>::toString_() @ akasha.CSSFontFeatureValuesMap.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.CSSFontFeatureValuesMap.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "toString_",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.lang.JsArray<T>::toString_() @ akasha.CSSFontPaletteValuesRule.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.CSSFontPaletteValuesRule.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "toString_",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.lang.JsArray<T>::toString_() @ akasha.DOMTokenList.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.DOMTokenList.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "toString_",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.lang.JsArray<T>::toString_() @ akasha.FormData.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.FormData.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "toString_",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.lang.JsArray<T>::toString_() @ akasha.Headers.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.Headers.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "toString_",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.lang.JsArray<T>::toString_() @ akasha.MediaKeyStatusMap.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.MediaKeyStatusMap.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "toString_",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.lang.JsArray<T>::toString_() @ akasha.NodeList.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.NodeList.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "toString_",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.lang.JsArray<T>::toString_() @ akasha.URLSearchParams.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.URLSearchParams.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "toString_",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.lang.JsArray<T>::toString_() @ akasha.audio.AudioParamMap.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.audio.AudioParamMap.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "toString_",
      "package": "akasha.audio"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.lang.JsArray<T>::toString_() @ akasha.bluetooth.BluetoothManufacturerDataMap.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.bluetooth.BluetoothManufacturerDataMap.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "toString_",
      "package": "akasha.bluetooth"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.lang.JsArray<T>::toString_() @ akasha.bluetooth.BluetoothServiceDataMap.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.bluetooth.BluetoothServiceDataMap.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "toString_",
      "package": "akasha.bluetooth"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.lang.JsArray<T>::toString_() @ akasha.core.JsMap.Entry<K, V>",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.JsMap.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "toString_",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.lang.JsArray<T>::toString_() @ akasha.core.JsWeakMap.Entry<K, V>",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.JsWeakMap.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "toString_",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.lang.JsArray<T>::toString_() @ akasha.core.ObjectPropertyEntry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.ObjectPropertyEntry",
      "classSimpleName": "ObjectPropertyEntry",
      "elementKind": "method",
      "methodName": "toString_",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.lang.JsArray<T>::toString_() @ akasha.core.RegExpGroups.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.RegExpGroups.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "toString_",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.lang.JsArray<T>::toString_() @ akasha.core.RegExpResult.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.core.RegExpResult.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "toString_",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.lang.JsArray<T>::toString_() @ akasha.lang.JsArray.Entry<T>",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.lang.JsArray.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "toString_",
      "package": "akasha.lang"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.lang.JsArray<T>::toString_() @ akasha.rtc.RTCStatsReport.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.rtc.RTCStatsReport.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "toString_",
      "package": "akasha.rtc"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.lang.JsArray<T>::toString_() @ akasha.xr.XRInputSourceArray.Entry",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.xr.XRInputSourceArray.Entry",
      "classSimpleName": "Entry",
      "elementKind": "method",
      "methodName": "toString_",
      "package": "akasha.xr"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "element": "method java.lang.String akasha.lang.JsArray<T>::toString_()",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.lang.JsArray",
      "classSimpleName": "JsArray",
      "elementKind": "method",
      "methodName": "toString_",
      "package": "akasha.lang"
    }
  },
  {
    "code": "java.method.added",
    "description": "Method was added.",
    "newElement": "method jsinterop.base.Any akasha.core.JsObject::valueOf_()",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.core.JsObject",
      "classSimpleName": "JsObject",
      "elementKind": "method",
      "methodName": "valueOf_",
      "package": "akasha.core"
    }
  }
]
