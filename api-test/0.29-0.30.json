[
  {
    "code": "java.class.added",
    "description": "Class was added.",
    "newElement": "@interface akasha.gl.SamplerMagnificationFilter",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.gl.SamplerMagnificationFilter",
      "classSimpleName": "SamplerMagnificationFilter",
      "elementKind": "@interface",
      "package": "akasha.gl"
    }
  },
  {
    "code": "java.class.added",
    "description": "Class was added.",
    "newElement": "@interface akasha.gl.SamplerMinificationFilter",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.gl.SamplerMinificationFilter",
      "classSimpleName": "SamplerMinificationFilter",
      "elementKind": "@interface",
      "package": "akasha.gl"
    }
  },
  {
    "code": "java.class.added",
    "description": "Class was added.",
    "newElement": "@interface akasha.gl.SamplerWrapMode",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.gl.SamplerWrapMode",
      "classSimpleName": "SamplerWrapMode",
      "elementKind": "@interface",
      "package": "akasha.gl"
    }
  },
  {
    "code": "java.class.added",
    "description": "Class was added.",
    "newElement": "@interface akasha.xr.XRDOMOverlayType",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.xr.XRDOMOverlayType",
      "classSimpleName": "XRDOMOverlayType",
      "elementKind": "@interface",
      "package": "akasha.xr"
    }
  },
  {
    "code": "java.class.added",
    "description": "Class was added.",
    "newElement": "@interface akasha.xr.XRDepthDataFormat",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.xr.XRDepthDataFormat",
      "classSimpleName": "XRDepthDataFormat",
      "elementKind": "@interface",
      "package": "akasha.xr"
    }
  },
  {
    "code": "java.class.added",
    "description": "Class was added.",
    "newElement": "@interface akasha.xr.XRDepthUsage",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.xr.XRDepthUsage",
      "classSimpleName": "XRDepthUsage",
      "elementKind": "@interface",
      "package": "akasha.xr"
    }
  },
  {
    "code": "java.class.added",
    "description": "Class was added.",
    "newElement": "@interface akasha.xr.XREnvironmentBlendMode",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.xr.XREnvironmentBlendMode",
      "classSimpleName": "XREnvironmentBlendMode",
      "elementKind": "@interface",
      "package": "akasha.xr"
    }
  },
  {
    "code": "java.class.added",
    "description": "Class was added.",
    "newElement": "@interface akasha.xr.XRHandJoint",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.xr.XRHandJoint",
      "classSimpleName": "XRHandJoint",
      "elementKind": "@interface",
      "package": "akasha.xr"
    }
  },
  {
    "code": "java.class.added",
    "description": "Class was added.",
    "newElement": "@interface akasha.xr.XRHitTestTrackableType",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.xr.XRHitTestTrackableType",
      "classSimpleName": "XRHitTestTrackableType",
      "elementKind": "@interface",
      "package": "akasha.xr"
    }
  },
  {
    "code": "java.class.added",
    "description": "Class was added.",
    "newElement": "@interface akasha.xr.XRInteractionMode",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.xr.XRInteractionMode",
      "classSimpleName": "XRInteractionMode",
      "elementKind": "@interface",
      "package": "akasha.xr"
    }
  },
  {
    "code": "java.class.added",
    "description": "Class was added.",
    "newElement": "@interface akasha.xr.XRLayerLayout",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.xr.XRLayerLayout",
      "classSimpleName": "XRLayerLayout",
      "elementKind": "@interface",
      "package": "akasha.xr"
    }
  },
  {
    "code": "java.class.added",
    "description": "Class was added.",
    "newElement": "@interface akasha.xr.XRReflectionFormat",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.xr.XRReflectionFormat",
      "classSimpleName": "XRReflectionFormat",
      "elementKind": "@interface",
      "package": "akasha.xr"
    }
  },
  {
    "code": "java.class.added",
    "description": "Class was added.",
    "newElement": "@interface akasha.xr.XRTextureType",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.xr.XRTextureType",
      "classSimpleName": "XRTextureType",
      "elementKind": "@interface",
      "package": "akasha.xr"
    }
  },
  {
    "code": "java.class.added",
    "description": "Class was added.",
    "newElement": "class akasha.CanvasFilter",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.CanvasFilter",
      "classSimpleName": "CanvasFilter",
      "elementKind": "class",
      "package": "akasha"
    }
  },
  {
    "code": "java.class.added",
    "description": "Class was added.",
    "newElement": "class akasha.RTCIdentityProviderGlobal",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.RTCIdentityProviderGlobal",
      "classSimpleName": "RTCIdentityProviderGlobal",
      "elementKind": "class",
      "package": "akasha"
    }
  },
  {
    "code": "java.class.added",
    "description": "Class was added.",
    "newElement": "class akasha.RTCIdentityProviderGlobalScope",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.RTCIdentityProviderGlobalScope",
      "classSimpleName": "RTCIdentityProviderGlobalScope",
      "elementKind": "class",
      "package": "akasha"
    }
  },
  {
    "code": "java.class.added",
    "description": "Class was added.",
    "newElement": "class akasha.xr.XRAnchor",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.xr.XRAnchor",
      "classSimpleName": "XRAnchor",
      "elementKind": "class",
      "package": "akasha.xr"
    }
  },
  {
    "code": "java.class.added",
    "description": "Class was added.",
    "newElement": "class akasha.xr.XRAnchorSet",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.xr.XRAnchorSet",
      "classSimpleName": "XRAnchorSet",
      "elementKind": "class",
      "package": "akasha.xr"
    }
  },
  {
    "code": "java.class.added",
    "description": "Class was added.",
    "newElement": "class akasha.xr.XRCPUDepthInformation",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.xr.XRCPUDepthInformation",
      "classSimpleName": "XRCPUDepthInformation",
      "elementKind": "class",
      "package": "akasha.xr"
    }
  },
  {
    "code": "java.class.added",
    "description": "Class was added.",
    "newElement": "class akasha.xr.XRCompositionLayer",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.xr.XRCompositionLayer",
      "classSimpleName": "XRCompositionLayer",
      "elementKind": "class",
      "package": "akasha.xr"
    }
  },
  {
    "code": "java.class.added",
    "description": "Class was added.",
    "newElement": "class akasha.xr.XRCubeLayer",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.xr.XRCubeLayer",
      "classSimpleName": "XRCubeLayer",
      "elementKind": "class",
      "package": "akasha.xr"
    }
  },
  {
    "code": "java.class.added",
    "description": "Class was added.",
    "newElement": "class akasha.xr.XRCylinderLayer",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.xr.XRCylinderLayer",
      "classSimpleName": "XRCylinderLayer",
      "elementKind": "class",
      "package": "akasha.xr"
    }
  },
  {
    "code": "java.class.added",
    "description": "Class was added.",
    "newElement": "class akasha.xr.XRDepthInformation",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.xr.XRDepthInformation",
      "classSimpleName": "XRDepthInformation",
      "elementKind": "class",
      "package": "akasha.xr"
    }
  },
  {
    "code": "java.class.added",
    "description": "Class was added.",
    "newElement": "class akasha.xr.XREquirectLayer",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.xr.XREquirectLayer",
      "classSimpleName": "XREquirectLayer",
      "elementKind": "class",
      "package": "akasha.xr"
    }
  },
  {
    "code": "java.class.added",
    "description": "Class was added.",
    "newElement": "class akasha.xr.XRHand",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.xr.XRHand",
      "classSimpleName": "XRHand",
      "elementKind": "class",
      "package": "akasha.xr"
    }
  },
  {
    "code": "java.class.added",
    "description": "Class was added.",
    "newElement": "class akasha.xr.XRHitTestResult",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.xr.XRHitTestResult",
      "classSimpleName": "XRHitTestResult",
      "elementKind": "class",
      "package": "akasha.xr"
    }
  },
  {
    "code": "java.class.added",
    "description": "Class was added.",
    "newElement": "class akasha.xr.XRHitTestSource",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.xr.XRHitTestSource",
      "classSimpleName": "XRHitTestSource",
      "elementKind": "class",
      "package": "akasha.xr"
    }
  },
  {
    "code": "java.class.added",
    "description": "Class was added.",
    "newElement": "class akasha.xr.XRJointPose",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.xr.XRJointPose",
      "classSimpleName": "XRJointPose",
      "elementKind": "class",
      "package": "akasha.xr"
    }
  },
  {
    "code": "java.class.added",
    "description": "Class was added.",
    "newElement": "class akasha.xr.XRJointSpace",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.xr.XRJointSpace",
      "classSimpleName": "XRJointSpace",
      "elementKind": "class",
      "package": "akasha.xr"
    }
  },
  {
    "code": "java.class.added",
    "description": "Class was added.",
    "newElement": "class akasha.xr.XRLayerEvent",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.xr.XRLayerEvent",
      "classSimpleName": "XRLayerEvent",
      "elementKind": "class",
      "package": "akasha.xr"
    }
  },
  {
    "code": "java.class.added",
    "description": "Class was added.",
    "newElement": "class akasha.xr.XRLightEstimate",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.xr.XRLightEstimate",
      "classSimpleName": "XRLightEstimate",
      "elementKind": "class",
      "package": "akasha.xr"
    }
  },
  {
    "code": "java.class.added",
    "description": "Class was added.",
    "newElement": "class akasha.xr.XRLightProbe",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.xr.XRLightProbe",
      "classSimpleName": "XRLightProbe",
      "elementKind": "class",
      "package": "akasha.xr"
    }
  },
  {
    "code": "java.class.added",
    "description": "Class was added.",
    "newElement": "class akasha.xr.XRMediaBinding",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.xr.XRMediaBinding",
      "classSimpleName": "XRMediaBinding",
      "elementKind": "class",
      "package": "akasha.xr"
    }
  },
  {
    "code": "java.class.added",
    "description": "Class was added.",
    "newElement": "class akasha.xr.XRProjectionLayer",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.xr.XRProjectionLayer",
      "classSimpleName": "XRProjectionLayer",
      "elementKind": "class",
      "package": "akasha.xr"
    }
  },
  {
    "code": "java.class.added",
    "description": "Class was added.",
    "newElement": "class akasha.xr.XRQuadLayer",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.xr.XRQuadLayer",
      "classSimpleName": "XRQuadLayer",
      "elementKind": "class",
      "package": "akasha.xr"
    }
  },
  {
    "code": "java.class.added",
    "description": "Class was added.",
    "newElement": "class akasha.xr.XRRay",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.xr.XRRay",
      "classSimpleName": "XRRay",
      "elementKind": "class",
      "package": "akasha.xr"
    }
  },
  {
    "code": "java.class.added",
    "description": "Class was added.",
    "newElement": "class akasha.xr.XRSubImage",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.xr.XRSubImage",
      "classSimpleName": "XRSubImage",
      "elementKind": "class",
      "package": "akasha.xr"
    }
  },
  {
    "code": "java.class.added",
    "description": "Class was added.",
    "newElement": "class akasha.xr.XRTransientInputHitTestResult",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.xr.XRTransientInputHitTestResult",
      "classSimpleName": "XRTransientInputHitTestResult",
      "elementKind": "class",
      "package": "akasha.xr"
    }
  },
  {
    "code": "java.class.added",
    "description": "Class was added.",
    "newElement": "class akasha.xr.XRTransientInputHitTestSource",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.xr.XRTransientInputHitTestSource",
      "classSimpleName": "XRTransientInputHitTestSource",
      "elementKind": "class",
      "package": "akasha.xr"
    }
  },
  {
    "code": "java.class.added",
    "description": "Class was added.",
    "newElement": "class akasha.xr.XRWebGLBinding",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.xr.XRWebGLBinding",
      "classSimpleName": "XRWebGLBinding",
      "elementKind": "class",
      "package": "akasha.xr"
    }
  },
  {
    "code": "java.class.added",
    "description": "Class was added.",
    "newElement": "class akasha.xr.XRWebGLDepthInformation",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.xr.XRWebGLDepthInformation",
      "classSimpleName": "XRWebGLDepthInformation",
      "elementKind": "class",
      "package": "akasha.xr"
    }
  },
  {
    "code": "java.class.added",
    "description": "Class was added.",
    "newElement": "class akasha.xr.XRWebGLSubImage",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.xr.XRWebGLSubImage",
      "classSimpleName": "XRWebGLSubImage",
      "elementKind": "class",
      "package": "akasha.xr"
    }
  },
  {
    "code": "java.field.typeChanged",
    "description": "The type of the field changed from 'java.lang.String' to 'akasha.StringOrCanvasFilterUnion'.",
    "element": "field akasha.CanvasRenderingContext2D.filter",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.CanvasRenderingContext2D",
      "classSimpleName": "CanvasRenderingContext2D",
      "elementKind": "field",
      "fieldName": "filter",
      "newType": "akasha.StringOrCanvasFilterUnion",
      "oldType": "java.lang.String",
      "package": "akasha"
    }
  },
  {
    "code": "java.field.typeChanged",
    "description": "The type of the field changed from 'double' to 'java.lang.String'.",
    "element": "field akasha.CanvasRenderingContext2D.letterSpacing",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.CanvasRenderingContext2D",
      "classSimpleName": "CanvasRenderingContext2D",
      "elementKind": "field",
      "fieldName": "letterSpacing",
      "newType": "java.lang.String",
      "oldType": "double",
      "package": "akasha"
    }
  },
  {
    "code": "java.field.typeChanged",
    "description": "The type of the field changed from 'double' to 'java.lang.String'.",
    "element": "field akasha.CanvasRenderingContext2D.wordSpacing",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.CanvasRenderingContext2D",
      "classSimpleName": "CanvasRenderingContext2D",
      "elementKind": "field",
      "fieldName": "wordSpacing",
      "newType": "java.lang.String",
      "oldType": "double",
      "package": "akasha"
    }
  },
  {
    "code": "java.field.added",
    "description": "Field added to class.",
    "newElement": "field akasha.Document.onbeforexrselect",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.Document",
      "classSimpleName": "Document",
      "elementKind": "field",
      "fieldName": "onbeforexrselect",
      "package": "akasha"
    }
  },
  {
    "code": "java.field.added",
    "description": "Field added to class.",
    "newElement": "field akasha.HTMLElement.onbeforexrselect",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.HTMLElement",
      "classSimpleName": "HTMLElement",
      "elementKind": "field",
      "fieldName": "onbeforexrselect",
      "package": "akasha"
    }
  },
  {
    "code": "java.field.typeChanged",
    "description": "The type of the field changed from 'java.lang.String' to 'akasha.StringOrCanvasFilterUnion'.",
    "element": "field akasha.OffscreenCanvasRenderingContext2D.filter",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.OffscreenCanvasRenderingContext2D",
      "classSimpleName": "OffscreenCanvasRenderingContext2D",
      "elementKind": "field",
      "fieldName": "filter",
      "newType": "akasha.StringOrCanvasFilterUnion",
      "oldType": "java.lang.String",
      "package": "akasha"
    }
  },
  {
    "code": "java.field.typeChanged",
    "description": "The type of the field changed from 'double' to 'java.lang.String'.",
    "element": "field akasha.OffscreenCanvasRenderingContext2D.letterSpacing",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.OffscreenCanvasRenderingContext2D",
      "classSimpleName": "OffscreenCanvasRenderingContext2D",
      "elementKind": "field",
      "fieldName": "letterSpacing",
      "newType": "java.lang.String",
      "oldType": "double",
      "package": "akasha"
    }
  },
  {
    "code": "java.field.typeChanged",
    "description": "The type of the field changed from 'double' to 'java.lang.String'.",
    "element": "field akasha.OffscreenCanvasRenderingContext2D.wordSpacing",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.OffscreenCanvasRenderingContext2D",
      "classSimpleName": "OffscreenCanvasRenderingContext2D",
      "elementKind": "field",
      "fieldName": "wordSpacing",
      "newType": "java.lang.String",
      "oldType": "double",
      "package": "akasha"
    }
  },
  {
    "code": "java.field.added",
    "description": "Field added to class.",
    "newElement": "field akasha.Window.onbeforexrselect",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.Window",
      "classSimpleName": "Window",
      "elementKind": "field",
      "fieldName": "onbeforexrselect",
      "package": "akasha"
    }
  },
  {
    "code": "java.field.addedStaticField",
    "description": "Static field added to class.",
    "newElement": "field akasha.WindowGlobal.onbeforexrselect",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.WindowGlobal",
      "classSimpleName": "WindowGlobal",
      "elementKind": "field",
      "fieldName": "onbeforexrselect",
      "package": "akasha"
    }
  },
  {
    "code": "java.field.typeChanged",
    "description": "The type of the field changed from 'java.lang.String' to 'akasha.StringOrUndefinedUnion'.",
    "element": "field akasha.gpu.GPUBindGroup.label",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.gpu.GPUBindGroup",
      "classSimpleName": "GPUBindGroup",
      "elementKind": "field",
      "fieldName": "label",
      "newType": "akasha.StringOrUndefinedUnion",
      "oldType": "java.lang.String",
      "package": "akasha.gpu"
    }
  },
  {
    "code": "java.field.typeChanged",
    "description": "The type of the field changed from 'java.lang.String' to 'akasha.StringOrUndefinedUnion'.",
    "element": "field akasha.gpu.GPUBindGroupLayout.label",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.gpu.GPUBindGroupLayout",
      "classSimpleName": "GPUBindGroupLayout",
      "elementKind": "field",
      "fieldName": "label",
      "newType": "akasha.StringOrUndefinedUnion",
      "oldType": "java.lang.String",
      "package": "akasha.gpu"
    }
  },
  {
    "code": "java.field.typeChanged",
    "description": "The type of the field changed from 'java.lang.String' to 'akasha.StringOrUndefinedUnion'.",
    "element": "field akasha.gpu.GPUBuffer.label",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.gpu.GPUBuffer",
      "classSimpleName": "GPUBuffer",
      "elementKind": "field",
      "fieldName": "label",
      "newType": "akasha.StringOrUndefinedUnion",
      "oldType": "java.lang.String",
      "package": "akasha.gpu"
    }
  },
  {
    "code": "java.field.typeChanged",
    "description": "The type of the field changed from 'java.lang.String' to 'akasha.StringOrUndefinedUnion'.",
    "element": "field akasha.gpu.GPUCommandBuffer.label",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.gpu.GPUCommandBuffer",
      "classSimpleName": "GPUCommandBuffer",
      "elementKind": "field",
      "fieldName": "label",
      "newType": "akasha.StringOrUndefinedUnion",
      "oldType": "java.lang.String",
      "package": "akasha.gpu"
    }
  },
  {
    "code": "java.field.typeChanged",
    "description": "The type of the field changed from 'java.lang.String' to 'akasha.StringOrUndefinedUnion'.",
    "element": "field akasha.gpu.GPUCommandEncoder.label",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.gpu.GPUCommandEncoder",
      "classSimpleName": "GPUCommandEncoder",
      "elementKind": "field",
      "fieldName": "label",
      "newType": "akasha.StringOrUndefinedUnion",
      "oldType": "java.lang.String",
      "package": "akasha.gpu"
    }
  },
  {
    "code": "java.field.typeChanged",
    "description": "The type of the field changed from 'java.lang.String' to 'akasha.StringOrUndefinedUnion'.",
    "element": "field akasha.gpu.GPUComputePassEncoder.label",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.gpu.GPUComputePassEncoder",
      "classSimpleName": "GPUComputePassEncoder",
      "elementKind": "field",
      "fieldName": "label",
      "newType": "akasha.StringOrUndefinedUnion",
      "oldType": "java.lang.String",
      "package": "akasha.gpu"
    }
  },
  {
    "code": "java.field.typeChanged",
    "description": "The type of the field changed from 'java.lang.String' to 'akasha.StringOrUndefinedUnion'.",
    "element": "field akasha.gpu.GPUComputePipeline.label",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.gpu.GPUComputePipeline",
      "classSimpleName": "GPUComputePipeline",
      "elementKind": "field",
      "fieldName": "label",
      "newType": "akasha.StringOrUndefinedUnion",
      "oldType": "java.lang.String",
      "package": "akasha.gpu"
    }
  },
  {
    "code": "java.field.typeChanged",
    "description": "The type of the field changed from 'java.lang.String' to 'akasha.StringOrUndefinedUnion'.",
    "element": "field akasha.gpu.GPUDevice.label",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.gpu.GPUDevice",
      "classSimpleName": "GPUDevice",
      "elementKind": "field",
      "fieldName": "label",
      "newType": "akasha.StringOrUndefinedUnion",
      "oldType": "java.lang.String",
      "package": "akasha.gpu"
    }
  },
  {
    "code": "java.field.typeChanged",
    "description": "The type of the field changed from 'java.lang.String' to 'akasha.StringOrUndefinedUnion'.",
    "element": "field akasha.gpu.GPUExternalTexture.label",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.gpu.GPUExternalTexture",
      "classSimpleName": "GPUExternalTexture",
      "elementKind": "field",
      "fieldName": "label",
      "newType": "akasha.StringOrUndefinedUnion",
      "oldType": "java.lang.String",
      "package": "akasha.gpu"
    }
  },
  {
    "code": "java.field.addedStaticField",
    "description": "Static field added to class.",
    "newElement": "field akasha.gpu.GPUFeatureName.indirect_first_instance",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.gpu.GPUFeatureName",
      "classSimpleName": "GPUFeatureName",
      "elementKind": "field",
      "fieldName": "indirect_first_instance",
      "package": "akasha.gpu"
    }
  },
  {
    "code": "java.field.addedStaticField",
    "description": "Static field added to class.",
    "newElement": "field akasha.gpu.GPULoadOp.clear",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.gpu.GPULoadOp",
      "classSimpleName": "GPULoadOp",
      "elementKind": "field",
      "fieldName": "clear",
      "package": "akasha.gpu"
    }
  },
  {
    "code": "java.field.typeChanged",
    "description": "The type of the field changed from 'java.lang.String' to 'akasha.StringOrUndefinedUnion'.",
    "element": "field akasha.gpu.GPUPipelineLayout.label",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.gpu.GPUPipelineLayout",
      "classSimpleName": "GPUPipelineLayout",
      "elementKind": "field",
      "fieldName": "label",
      "newType": "akasha.StringOrUndefinedUnion",
      "oldType": "java.lang.String",
      "package": "akasha.gpu"
    }
  },
  {
    "code": "java.field.typeChanged",
    "description": "The type of the field changed from 'java.lang.String' to 'akasha.StringOrUndefinedUnion'.",
    "element": "field akasha.gpu.GPUQuerySet.label",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.gpu.GPUQuerySet",
      "classSimpleName": "GPUQuerySet",
      "elementKind": "field",
      "fieldName": "label",
      "newType": "akasha.StringOrUndefinedUnion",
      "oldType": "java.lang.String",
      "package": "akasha.gpu"
    }
  },
  {
    "code": "java.field.typeChanged",
    "description": "The type of the field changed from 'java.lang.String' to 'akasha.StringOrUndefinedUnion'.",
    "element": "field akasha.gpu.GPUQueue.label",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.gpu.GPUQueue",
      "classSimpleName": "GPUQueue",
      "elementKind": "field",
      "fieldName": "label",
      "newType": "akasha.StringOrUndefinedUnion",
      "oldType": "java.lang.String",
      "package": "akasha.gpu"
    }
  },
  {
    "code": "java.field.typeChanged",
    "description": "The type of the field changed from 'java.lang.String' to 'akasha.StringOrUndefinedUnion'.",
    "element": "field akasha.gpu.GPURenderBundle.label",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.gpu.GPURenderBundle",
      "classSimpleName": "GPURenderBundle",
      "elementKind": "field",
      "fieldName": "label",
      "newType": "akasha.StringOrUndefinedUnion",
      "oldType": "java.lang.String",
      "package": "akasha.gpu"
    }
  },
  {
    "code": "java.field.typeChanged",
    "description": "The type of the field changed from 'java.lang.String' to 'akasha.StringOrUndefinedUnion'.",
    "element": "field akasha.gpu.GPURenderBundleEncoder.label",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.gpu.GPURenderBundleEncoder",
      "classSimpleName": "GPURenderBundleEncoder",
      "elementKind": "field",
      "fieldName": "label",
      "newType": "akasha.StringOrUndefinedUnion",
      "oldType": "java.lang.String",
      "package": "akasha.gpu"
    }
  },
  {
    "code": "java.field.typeChanged",
    "description": "The type of the field changed from 'java.lang.String' to 'akasha.StringOrUndefinedUnion'.",
    "element": "field akasha.gpu.GPURenderPassEncoder.label",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.gpu.GPURenderPassEncoder",
      "classSimpleName": "GPURenderPassEncoder",
      "elementKind": "field",
      "fieldName": "label",
      "newType": "akasha.StringOrUndefinedUnion",
      "oldType": "java.lang.String",
      "package": "akasha.gpu"
    }
  },
  {
    "code": "java.field.typeChanged",
    "description": "The type of the field changed from 'java.lang.String' to 'akasha.StringOrUndefinedUnion'.",
    "element": "field akasha.gpu.GPURenderPipeline.label",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.gpu.GPURenderPipeline",
      "classSimpleName": "GPURenderPipeline",
      "elementKind": "field",
      "fieldName": "label",
      "newType": "akasha.StringOrUndefinedUnion",
      "oldType": "java.lang.String",
      "package": "akasha.gpu"
    }
  },
  {
    "code": "java.field.typeChanged",
    "description": "The type of the field changed from 'java.lang.String' to 'akasha.StringOrUndefinedUnion'.",
    "element": "field akasha.gpu.GPUSampler.label",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.gpu.GPUSampler",
      "classSimpleName": "GPUSampler",
      "elementKind": "field",
      "fieldName": "label",
      "newType": "akasha.StringOrUndefinedUnion",
      "oldType": "java.lang.String",
      "package": "akasha.gpu"
    }
  },
  {
    "code": "java.field.typeChanged",
    "description": "The type of the field changed from 'java.lang.String' to 'akasha.StringOrUndefinedUnion'.",
    "element": "field akasha.gpu.GPUShaderModule.label",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.gpu.GPUShaderModule",
      "classSimpleName": "GPUShaderModule",
      "elementKind": "field",
      "fieldName": "label",
      "newType": "akasha.StringOrUndefinedUnion",
      "oldType": "java.lang.String",
      "package": "akasha.gpu"
    }
  },
  {
    "code": "java.field.typeChanged",
    "description": "The type of the field changed from 'java.lang.String' to 'akasha.StringOrUndefinedUnion'.",
    "element": "field akasha.gpu.GPUTexture.label",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.gpu.GPUTexture",
      "classSimpleName": "GPUTexture",
      "elementKind": "field",
      "fieldName": "label",
      "newType": "akasha.StringOrUndefinedUnion",
      "oldType": "java.lang.String",
      "package": "akasha.gpu"
    }
  },
  {
    "code": "java.field.typeChanged",
    "description": "The type of the field changed from 'java.lang.String' to 'akasha.StringOrUndefinedUnion'.",
    "element": "field akasha.gpu.GPUTextureView.label",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.gpu.GPUTextureView",
      "classSimpleName": "GPUTextureView",
      "elementKind": "field",
      "fieldName": "label",
      "newType": "akasha.StringOrUndefinedUnion",
      "oldType": "java.lang.String",
      "package": "akasha.gpu"
    }
  },
  {
    "code": "java.field.added",
    "description": "Field added to class.",
    "newElement": "field akasha.svg.SVGElement.onbeforexrselect",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.svg.SVGElement",
      "classSimpleName": "SVGElement",
      "elementKind": "field",
      "fieldName": "onbeforexrselect",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.class.added",
    "description": "Class was added.",
    "newElement": "interface akasha.ElementOrCSSPseudoElementUnion",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.ElementOrCSSPseudoElementUnion",
      "classSimpleName": "ElementOrCSSPseudoElementUnion",
      "elementKind": "interface",
      "package": "akasha"
    }
  },
  {
    "code": "java.class.added",
    "description": "Class was added.",
    "newElement": "interface akasha.PermissionSetParameters",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.PermissionSetParameters",
      "classSimpleName": "PermissionSetParameters",
      "elementKind": "interface",
      "package": "akasha"
    }
  },
  {
    "code": "java.class.added",
    "description": "Class was added.",
    "newElement": "interface akasha.StringOrCanvasFilterUnion",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.StringOrCanvasFilterUnion",
      "classSimpleName": "StringOrCanvasFilterUnion",
      "elementKind": "interface",
      "package": "akasha"
    }
  },
  {
    "code": "java.class.added",
    "description": "Class was added.",
    "newElement": "interface akasha.StringOrUndefinedUnion",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.StringOrUndefinedUnion",
      "classSimpleName": "StringOrUndefinedUnion",
      "elementKind": "interface",
      "package": "akasha"
    }
  },
  {
    "code": "java.class.added",
    "description": "Class was added.",
    "newElement": "interface akasha.gpu.GPUShaderModuleCompilationHint",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.gpu.GPUShaderModuleCompilationHint",
      "classSimpleName": "GPUShaderModuleCompilationHint",
      "elementKind": "interface",
      "package": "akasha.gpu"
    }
  },
  {
    "code": "java.class.added",
    "description": "Class was added.",
    "newElement": "interface akasha.media.CameraDevicePermissionDescriptor",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.media.CameraDevicePermissionDescriptor",
      "classSimpleName": "CameraDevicePermissionDescriptor",
      "elementKind": "interface",
      "package": "akasha.media"
    }
  },
  {
    "code": "java.class.added",
    "description": "Class was added.",
    "newElement": "interface akasha.media.DevicePermissionDescriptor",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.media.DevicePermissionDescriptor",
      "classSimpleName": "DevicePermissionDescriptor",
      "elementKind": "interface",
      "package": "akasha.media"
    }
  },
  {
    "code": "java.class.added",
    "description": "Class was added.",
    "newElement": "interface akasha.xr.XRCubeLayerInit",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.xr.XRCubeLayerInit",
      "classSimpleName": "XRCubeLayerInit",
      "elementKind": "interface",
      "package": "akasha.xr"
    }
  },
  {
    "code": "java.class.added",
    "description": "Class was added.",
    "newElement": "interface akasha.xr.XRCylinderLayerInit",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.xr.XRCylinderLayerInit",
      "classSimpleName": "XRCylinderLayerInit",
      "elementKind": "interface",
      "package": "akasha.xr"
    }
  },
  {
    "code": "java.class.added",
    "description": "Class was added.",
    "newElement": "interface akasha.xr.XRDOMOverlayInit",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.xr.XRDOMOverlayInit",
      "classSimpleName": "XRDOMOverlayInit",
      "elementKind": "interface",
      "package": "akasha.xr"
    }
  },
  {
    "code": "java.class.added",
    "description": "Class was added.",
    "newElement": "interface akasha.xr.XRDOMOverlayState",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.xr.XRDOMOverlayState",
      "classSimpleName": "XRDOMOverlayState",
      "elementKind": "interface",
      "package": "akasha.xr"
    }
  },
  {
    "code": "java.class.added",
    "description": "Class was added.",
    "newElement": "interface akasha.xr.XRDepthStateInit",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.xr.XRDepthStateInit",
      "classSimpleName": "XRDepthStateInit",
      "elementKind": "interface",
      "package": "akasha.xr"
    }
  },
  {
    "code": "java.class.added",
    "description": "Class was added.",
    "newElement": "interface akasha.xr.XREquirectLayerInit",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.xr.XREquirectLayerInit",
      "classSimpleName": "XREquirectLayerInit",
      "elementKind": "interface",
      "package": "akasha.xr"
    }
  },
  {
    "code": "java.class.added",
    "description": "Class was added.",
    "newElement": "interface akasha.xr.XRHitTestOptionsInit",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.xr.XRHitTestOptionsInit",
      "classSimpleName": "XRHitTestOptionsInit",
      "elementKind": "interface",
      "package": "akasha.xr"
    }
  },
  {
    "code": "java.class.added",
    "description": "Class was added.",
    "newElement": "interface akasha.xr.XRLayerEventInit",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.xr.XRLayerEventInit",
      "classSimpleName": "XRLayerEventInit",
      "elementKind": "interface",
      "package": "akasha.xr"
    }
  },
  {
    "code": "java.class.added",
    "description": "Class was added.",
    "newElement": "interface akasha.xr.XRLayerInit",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.xr.XRLayerInit",
      "classSimpleName": "XRLayerInit",
      "elementKind": "interface",
      "package": "akasha.xr"
    }
  },
  {
    "code": "java.class.added",
    "description": "Class was added.",
    "newElement": "interface akasha.xr.XRLightProbeInit",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.xr.XRLightProbeInit",
      "classSimpleName": "XRLightProbeInit",
      "elementKind": "interface",
      "package": "akasha.xr"
    }
  },
  {
    "code": "java.class.added",
    "description": "Class was added.",
    "newElement": "interface akasha.xr.XRMediaCylinderLayerInit",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.xr.XRMediaCylinderLayerInit",
      "classSimpleName": "XRMediaCylinderLayerInit",
      "elementKind": "interface",
      "package": "akasha.xr"
    }
  },
  {
    "code": "java.class.added",
    "description": "Class was added.",
    "newElement": "interface akasha.xr.XRMediaEquirectLayerInit",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.xr.XRMediaEquirectLayerInit",
      "classSimpleName": "XRMediaEquirectLayerInit",
      "elementKind": "interface",
      "package": "akasha.xr"
    }
  },
  {
    "code": "java.class.added",
    "description": "Class was added.",
    "newElement": "interface akasha.xr.XRMediaLayerInit",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.xr.XRMediaLayerInit",
      "classSimpleName": "XRMediaLayerInit",
      "elementKind": "interface",
      "package": "akasha.xr"
    }
  },
  {
    "code": "java.class.added",
    "description": "Class was added.",
    "newElement": "interface akasha.xr.XRMediaQuadLayerInit",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.xr.XRMediaQuadLayerInit",
      "classSimpleName": "XRMediaQuadLayerInit",
      "elementKind": "interface",
      "package": "akasha.xr"
    }
  },
  {
    "code": "java.class.added",
    "description": "Class was added.",
    "newElement": "interface akasha.xr.XRProjectionLayerInit",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.xr.XRProjectionLayerInit",
      "classSimpleName": "XRProjectionLayerInit",
      "elementKind": "interface",
      "package": "akasha.xr"
    }
  },
  {
    "code": "java.class.added",
    "description": "Class was added.",
    "newElement": "interface akasha.xr.XRQuadLayerInit",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.xr.XRQuadLayerInit",
      "classSimpleName": "XRQuadLayerInit",
      "elementKind": "interface",
      "package": "akasha.xr"
    }
  },
  {
    "code": "java.class.added",
    "description": "Class was added.",
    "newElement": "interface akasha.xr.XRRayDirectionInit",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.xr.XRRayDirectionInit",
      "classSimpleName": "XRRayDirectionInit",
      "elementKind": "interface",
      "package": "akasha.xr"
    }
  },
  {
    "code": "java.class.added",
    "description": "Class was added.",
    "newElement": "interface akasha.xr.XRTransientInputHitTestOptionsInit",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.xr.XRTransientInputHitTestOptionsInit",
      "classSimpleName": "XRTransientInputHitTestOptionsInit",
      "elementKind": "interface",
      "package": "akasha.xr"
    }
  },
  {
    "code": "java.method.added",
    "description": "Method was added.",
    "newElement": "method akasha.AbortSignal akasha.AbortSignal::abort(java.lang.Object)",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.AbortSignal",
      "classSimpleName": "AbortSignal",
      "elementKind": "method",
      "methodName": "abort",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.added",
    "description": "Method was added.",
    "newElement": "method akasha.AbortSignal akasha.AbortSignal::timeout(int)",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.AbortSignal",
      "classSimpleName": "AbortSignal",
      "elementKind": "method",
      "methodName": "timeout",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.added",
    "description": "Method was added.",
    "newElement": "method akasha.CSSPseudoElement akasha.CSSPseudoElement::pseudo(java.lang.String)",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.CSSPseudoElement",
      "classSimpleName": "CSSPseudoElement",
      "elementKind": "method",
      "methodName": "pseudo",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.added",
    "description": "Method was added.",
    "newElement": "method akasha.DOMTokenList akasha.HTMLLinkElement::blocking()",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.HTMLLinkElement",
      "classSimpleName": "HTMLLinkElement",
      "elementKind": "method",
      "methodName": "blocking",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.added",
    "description": "Method was added.",
    "newElement": "method akasha.DOMTokenList akasha.HTMLScriptElement::blocking()",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.HTMLScriptElement",
      "classSimpleName": "HTMLScriptElement",
      "elementKind": "method",
      "methodName": "blocking",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.added",
    "description": "Method was added.",
    "newElement": "method akasha.DOMTokenList akasha.HTMLStyleElement::blocking()",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.HTMLStyleElement",
      "classSimpleName": "HTMLStyleElement",
      "elementKind": "method",
      "methodName": "blocking",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.added",
    "description": "Method was added.",
    "newElement": "method akasha.ElementOrCSSPseudoElementUnion akasha.CSSPseudoElement::parent()",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.CSSPseudoElement",
      "classSimpleName": "CSSPseudoElement",
      "elementKind": "method",
      "methodName": "parent",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.added",
    "description": "Method was added.",
    "newElement": "method akasha.Gamepad akasha.xr.XRInputSource::gamepad()",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.xr.XRInputSource",
      "classSimpleName": "XRInputSource",
      "elementKind": "method",
      "methodName": "gamepad",
      "package": "akasha.xr"
    }
  },
  {
    "code": "java.method.defaultMethodAddedToInterface",
    "description": "A default method has been added to the interface.",
    "newElement": "method akasha.gpu.GPUCanvasConfiguration.Builder akasha.gpu.GPUCanvasConfiguration.Builder::viewFormats(akasha.lang.JsArray<java.lang.String>)",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.gpu.GPUCanvasConfiguration.Builder",
      "classSimpleName": "Builder",
      "elementKind": "method",
      "methodName": "viewFormats",
      "package": "akasha.gpu"
    }
  },
  {
    "code": "java.method.defaultMethodAddedToInterface",
    "description": "A default method has been added to the interface.",
    "newElement": "method akasha.gpu.GPUCanvasConfiguration.Builder akasha.gpu.GPUCanvasConfiguration.Builder::viewFormats(java.lang.String[])",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.gpu.GPUCanvasConfiguration.Builder",
      "classSimpleName": "Builder",
      "elementKind": "method",
      "methodName": "viewFormats",
      "package": "akasha.gpu"
    }
  },
  {
    "code": "java.method.addedToInterface",
    "description": "Method was added to an interface.",
    "newElement": "method akasha.gpu.GPUColor akasha.gpu.GPURenderPassColorAttachment::clearValue()",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "NON_BREAKING",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.gpu.GPURenderPassColorAttachment",
      "classSimpleName": "GPURenderPassColorAttachment",
      "elementKind": "method",
      "methodName": "clearValue",
      "package": "akasha.gpu"
    }
  },
  {
    "code": "java.method.defaultMethodAddedToInterface",
    "description": "A default method has been added to the interface.",
    "newElement": "method akasha.gpu.GPUImageCopyExternalImage.Builder akasha.gpu.GPUImageCopyExternalImage.Builder::flipY(boolean)",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.gpu.GPUImageCopyExternalImage.Builder",
      "classSimpleName": "Builder",
      "elementKind": "method",
      "methodName": "flipY",
      "package": "akasha.gpu"
    }
  },
  {
    "code": "java.method.defaultMethodAddedToInterface",
    "description": "A default method has been added to the interface.",
    "newElement": "method akasha.gpu.GPURenderPassColorAttachment.Builder akasha.gpu.GPURenderPassColorAttachment.Builder::clearValue(akasha.gpu.GPUColor)",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.gpu.GPURenderPassColorAttachment.Builder",
      "classSimpleName": "Builder",
      "elementKind": "method",
      "methodName": "clearValue",
      "package": "akasha.gpu"
    }
  },
  {
    "code": "java.method.defaultMethodAddedToInterface",
    "description": "A default method has been added to the interface.",
    "newElement": "method akasha.gpu.GPURenderPassColorAttachment.Builder akasha.gpu.GPURenderPassColorAttachment.Builder::clearValue(akasha.gpu.GPUColorDict)",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.gpu.GPURenderPassColorAttachment.Builder",
      "classSimpleName": "Builder",
      "elementKind": "method",
      "methodName": "clearValue",
      "package": "akasha.gpu"
    }
  },
  {
    "code": "java.method.defaultMethodAddedToInterface",
    "description": "A default method has been added to the interface.",
    "newElement": "method akasha.gpu.GPURenderPassColorAttachment.Builder akasha.gpu.GPURenderPassColorAttachment.Builder::clearValue(akasha.lang.JsArray<java.lang.Double>)",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.gpu.GPURenderPassColorAttachment.Builder",
      "classSimpleName": "Builder",
      "elementKind": "method",
      "methodName": "clearValue",
      "package": "akasha.gpu"
    }
  },
  {
    "code": "java.method.defaultMethodAddedToInterface",
    "description": "A default method has been added to the interface.",
    "newElement": "method akasha.gpu.GPURenderPassColorAttachment.Builder akasha.gpu.GPURenderPassColorAttachment.Builder::clearValue(double[])",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.gpu.GPURenderPassColorAttachment.Builder",
      "classSimpleName": "Builder",
      "elementKind": "method",
      "methodName": "clearValue",
      "package": "akasha.gpu"
    }
  },
  {
    "code": "java.method.defaultMethodAddedToInterface",
    "description": "A default method has been added to the interface.",
    "newElement": "method akasha.gpu.GPURenderPassColorAttachment.Step2 akasha.gpu.GPURenderPassColorAttachment.Step1::loadOp(java.lang.String)",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.gpu.GPURenderPassColorAttachment.Step1",
      "classSimpleName": "Step1",
      "elementKind": "method",
      "methodName": "loadOp",
      "package": "akasha.gpu"
    }
  },
  {
    "code": "java.method.defaultMethodAddedToInterface",
    "description": "A default method has been added to the interface.",
    "newElement": "method akasha.gpu.GPURenderPassDepthStencilAttachment.Builder akasha.gpu.GPURenderPassDepthStencilAttachment.Builder::depthClearValue(float)",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.gpu.GPURenderPassDepthStencilAttachment.Builder",
      "classSimpleName": "Builder",
      "elementKind": "method",
      "methodName": "depthClearValue",
      "package": "akasha.gpu"
    }
  },
  {
    "code": "java.method.defaultMethodAddedToInterface",
    "description": "A default method has been added to the interface.",
    "newElement": "method akasha.gpu.GPURenderPassDepthStencilAttachment.Builder akasha.gpu.GPURenderPassDepthStencilAttachment.Builder::depthLoadOp(java.lang.String)",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.gpu.GPURenderPassDepthStencilAttachment.Builder",
      "classSimpleName": "Builder",
      "elementKind": "method",
      "methodName": "depthLoadOp",
      "package": "akasha.gpu"
    }
  },
  {
    "code": "java.method.defaultMethodAddedToInterface",
    "description": "A default method has been added to the interface.",
    "newElement": "method akasha.gpu.GPURenderPassDepthStencilAttachment.Builder akasha.gpu.GPURenderPassDepthStencilAttachment.Builder::depthStoreOp(java.lang.String)",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.gpu.GPURenderPassDepthStencilAttachment.Builder",
      "classSimpleName": "Builder",
      "elementKind": "method",
      "methodName": "depthStoreOp",
      "package": "akasha.gpu"
    }
  },
  {
    "code": "java.method.defaultMethodAddedToInterface",
    "description": "A default method has been added to the interface.",
    "newElement": "method akasha.gpu.GPURenderPassDepthStencilAttachment.Builder akasha.gpu.GPURenderPassDepthStencilAttachment.Builder::stencilClearValue(int)",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.gpu.GPURenderPassDepthStencilAttachment.Builder",
      "classSimpleName": "Builder",
      "elementKind": "method",
      "methodName": "stencilClearValue",
      "package": "akasha.gpu"
    }
  },
  {
    "code": "java.method.defaultMethodAddedToInterface",
    "description": "A default method has been added to the interface.",
    "newElement": "method akasha.gpu.GPURenderPassDepthStencilAttachment.Builder akasha.gpu.GPURenderPassDepthStencilAttachment.Builder::stencilLoadOp(java.lang.String)",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.gpu.GPURenderPassDepthStencilAttachment.Builder",
      "classSimpleName": "Builder",
      "elementKind": "method",
      "methodName": "stencilLoadOp",
      "package": "akasha.gpu"
    }
  },
  {
    "code": "java.method.defaultMethodAddedToInterface",
    "description": "A default method has been added to the interface.",
    "newElement": "method akasha.gpu.GPURenderPassDepthStencilAttachment.Builder akasha.gpu.GPURenderPassDepthStencilAttachment.Builder::stencilStoreOp(java.lang.String)",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.gpu.GPURenderPassDepthStencilAttachment.Builder",
      "classSimpleName": "Builder",
      "elementKind": "method",
      "methodName": "stencilStoreOp",
      "package": "akasha.gpu"
    }
  },
  {
    "code": "java.method.returnTypeChanged",
    "description": "The return type changed from 'akasha.gpu.GPURenderPassDepthStencilAttachment.Step1' to  'akasha.gpu.GPURenderPassDepthStencilAttachment.Builder'.",
    "newElement": "method akasha.gpu.GPURenderPassDepthStencilAttachment.Builder akasha.gpu.GPURenderPassDepthStencilAttachment::view(akasha.gpu.GPUTextureView)",
    "oldElement": "method akasha.gpu.GPURenderPassDepthStencilAttachment.Step1 akasha.gpu.GPURenderPassDepthStencilAttachment::view(akasha.gpu.GPUTextureView)",
    "classification": {
      "SOURCE": "POTENTIALLY_BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.gpu.GPURenderPassDepthStencilAttachment",
      "classSimpleName": "GPURenderPassDepthStencilAttachment",
      "elementKind": "method",
      "methodName": "view",
      "newType": "akasha.gpu.GPURenderPassDepthStencilAttachment.Builder",
      "oldType": "akasha.gpu.GPURenderPassDepthStencilAttachment.Step1",
      "package": "akasha.gpu"
    }
  },
  {
    "code": "java.method.defaultMethodAddedToInterface",
    "description": "A default method has been added to the interface.",
    "newElement": "method akasha.gpu.GPUShaderModuleDescriptor.Builder akasha.gpu.GPUShaderModuleDescriptor.Builder::hints(jsinterop.base.JsPropertyMap<akasha.gpu.GPUShaderModuleCompilationHint>)",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.gpu.GPUShaderModuleDescriptor.Builder",
      "classSimpleName": "Builder",
      "elementKind": "method",
      "methodName": "hints",
      "package": "akasha.gpu"
    }
  },
  {
    "code": "java.method.defaultMethodAddedToInterface",
    "description": "A default method has been added to the interface.",
    "newElement": "method akasha.gpu.GPUTextureDescriptor.Builder akasha.gpu.GPUTextureDescriptor.Builder::viewFormats(akasha.lang.JsArray<java.lang.String>)",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.gpu.GPUTextureDescriptor.Builder",
      "classSimpleName": "Builder",
      "elementKind": "method",
      "methodName": "viewFormats",
      "package": "akasha.gpu"
    }
  },
  {
    "code": "java.method.defaultMethodAddedToInterface",
    "description": "A default method has been added to the interface.",
    "newElement": "method akasha.gpu.GPUTextureDescriptor.Builder akasha.gpu.GPUTextureDescriptor.Builder::viewFormats(java.lang.String[])",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.gpu.GPUTextureDescriptor.Builder",
      "classSimpleName": "Builder",
      "elementKind": "method",
      "methodName": "viewFormats",
      "package": "akasha.gpu"
    }
  },
  {
    "code": "java.method.added",
    "description": "Method was added.",
    "newElement": "method akasha.lang.JsArray<akasha.xr.XRHitTestResult> akasha.xr.XRFrame::getHitTestResults(akasha.xr.XRHitTestSource)",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.xr.XRFrame",
      "classSimpleName": "XRFrame",
      "elementKind": "method",
      "methodName": "getHitTestResults",
      "package": "akasha.xr"
    }
  },
  {
    "code": "java.method.added",
    "description": "Method was added.",
    "newElement": "method akasha.lang.JsArray<akasha.xr.XRLayer> akasha.xr.XRRenderState::layers()",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.xr.XRRenderState",
      "classSimpleName": "XRRenderState",
      "elementKind": "method",
      "methodName": "layers",
      "package": "akasha.xr"
    }
  },
  {
    "code": "java.method.added",
    "description": "Method was added.",
    "newElement": "method akasha.lang.JsArray<akasha.xr.XRTransientInputHitTestResult> akasha.xr.XRFrame::getHitTestResultsForTransientInput(akasha.xr.XRTransientInputHitTestSource)",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.xr.XRFrame",
      "classSimpleName": "XRFrame",
      "elementKind": "method",
      "methodName": "getHitTestResultsForTransientInput",
      "package": "akasha.xr"
    }
  },
  {
    "code": "java.method.addedToInterface",
    "description": "Method was added to an interface.",
    "newElement": "method akasha.lang.JsArray<java.lang.String> akasha.gpu.GPUCanvasConfiguration::viewFormats()",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "NON_BREAKING",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.gpu.GPUCanvasConfiguration",
      "classSimpleName": "GPUCanvasConfiguration",
      "elementKind": "method",
      "methodName": "viewFormats",
      "package": "akasha.gpu"
    }
  },
  {
    "code": "java.method.addedToInterface",
    "description": "Method was added to an interface.",
    "newElement": "method akasha.lang.JsArray<java.lang.String> akasha.gpu.GPUTextureDescriptor::viewFormats()",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "NON_BREAKING",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.gpu.GPUTextureDescriptor",
      "classSimpleName": "GPUTextureDescriptor",
      "elementKind": "method",
      "methodName": "viewFormats",
      "package": "akasha.gpu"
    }
  },
  {
    "code": "java.method.returnTypeTypeParametersChanged",
    "description": "The return type changed from 'akasha.promise.Promise<java.lang.Boolean>' to 'akasha.promise.Promise<akasha.codecs.VideoEncoderSupport>'.",
    "newElement": "method akasha.promise.Promise<akasha.codecs.VideoEncoderSupport> akasha.codecs.VideoEncoder::isConfigSupported(akasha.codecs.VideoEncoderConfig)",
    "oldElement": "method akasha.promise.Promise<java.lang.Boolean> akasha.codecs.VideoEncoder::isConfigSupported(akasha.codecs.VideoEncoderConfig)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.codecs.VideoEncoder",
      "classSimpleName": "VideoEncoder",
      "elementKind": "method",
      "methodName": "isConfigSupported",
      "newType": "akasha.promise.Promise<akasha.codecs.VideoEncoderSupport>",
      "oldType": "akasha.promise.Promise<java.lang.Boolean>",
      "package": "akasha.codecs"
    }
  },
  {
    "code": "java.method.added",
    "description": "Method was added.",
    "newElement": "method akasha.promise.Promise<akasha.xr.XRAnchor> akasha.xr.XRFrame::createAnchor(akasha.xr.XRRigidTransform, akasha.xr.XRSpace)",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.xr.XRFrame",
      "classSimpleName": "XRFrame",
      "elementKind": "method",
      "methodName": "createAnchor",
      "package": "akasha.xr"
    }
  },
  {
    "code": "java.method.added",
    "description": "Method was added.",
    "newElement": "method akasha.promise.Promise<akasha.xr.XRHitTestSource> akasha.xr.XRSession::requestHitTestSource(akasha.xr.XRHitTestOptionsInit)",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.xr.XRSession",
      "classSimpleName": "XRSession",
      "elementKind": "method",
      "methodName": "requestHitTestSource",
      "package": "akasha.xr"
    }
  },
  {
    "code": "java.method.added",
    "description": "Method was added.",
    "newElement": "method akasha.promise.Promise<akasha.xr.XRLightProbe> akasha.xr.XRSession::requestLightProbe()",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.xr.XRSession",
      "classSimpleName": "XRSession",
      "elementKind": "method",
      "methodName": "requestLightProbe",
      "package": "akasha.xr"
    }
  },
  {
    "code": "java.method.added",
    "description": "Method was added.",
    "newElement": "method akasha.promise.Promise<akasha.xr.XRLightProbe> akasha.xr.XRSession::requestLightProbe(akasha.xr.XRLightProbeInit)",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.xr.XRSession",
      "classSimpleName": "XRSession",
      "elementKind": "method",
      "methodName": "requestLightProbe",
      "package": "akasha.xr"
    }
  },
  {
    "code": "java.method.added",
    "description": "Method was added.",
    "newElement": "method akasha.promise.Promise<akasha.xr.XRTransientInputHitTestSource> akasha.xr.XRSession::requestHitTestSourceForTransientInput(akasha.xr.XRTransientInputHitTestOptionsInit)",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.xr.XRSession",
      "classSimpleName": "XRSession",
      "elementKind": "method",
      "methodName": "requestHitTestSourceForTransientInput",
      "package": "akasha.xr"
    }
  },
  {
    "code": "java.method.defaultMethodAddedToInterface",
    "description": "A default method has been added to the interface.",
    "newElement": "method akasha.rtc.RTCAudioSourceStats.Builder akasha.rtc.RTCAudioSourceStats.Step4::kind(java.lang.String)",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.rtc.RTCAudioSourceStats.Step4",
      "classSimpleName": "Step4",
      "elementKind": "method",
      "methodName": "kind",
      "package": "akasha.rtc"
    }
  },
  {
    "code": "java.method.defaultMethodAddedToInterface",
    "description": "A default method has been added to the interface.",
    "newElement": "method akasha.rtc.RTCAudioSourceStats.Step4 akasha.rtc.RTCAudioSourceStats.Step3::trackIdentifier(java.lang.String)",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.rtc.RTCAudioSourceStats.Step3",
      "classSimpleName": "Step3",
      "elementKind": "method",
      "methodName": "trackIdentifier",
      "package": "akasha.rtc"
    }
  },
  {
    "code": "java.method.defaultMethodAddedToInterface",
    "description": "A default method has been added to the interface.",
    "newElement": "method akasha.rtc.RTCCertificateStats.Builder akasha.rtc.RTCCertificateStats.Step5::base64Certificate(java.lang.String)",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.rtc.RTCCertificateStats.Step5",
      "classSimpleName": "Step5",
      "elementKind": "method",
      "methodName": "base64Certificate",
      "package": "akasha.rtc"
    }
  },
  {
    "code": "java.method.defaultMethodAddedToInterface",
    "description": "A default method has been added to the interface.",
    "newElement": "method akasha.rtc.RTCCertificateStats.Step4 akasha.rtc.RTCCertificateStats.Step3::fingerprint(java.lang.String)",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.rtc.RTCCertificateStats.Step3",
      "classSimpleName": "Step3",
      "elementKind": "method",
      "methodName": "fingerprint",
      "package": "akasha.rtc"
    }
  },
  {
    "code": "java.method.defaultMethodAddedToInterface",
    "description": "A default method has been added to the interface.",
    "newElement": "method akasha.rtc.RTCCertificateStats.Step5 akasha.rtc.RTCCertificateStats.Step4::fingerprintAlgorithm(java.lang.String)",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.rtc.RTCCertificateStats.Step4",
      "classSimpleName": "Step4",
      "elementKind": "method",
      "methodName": "fingerprintAlgorithm",
      "package": "akasha.rtc"
    }
  },
  {
    "code": "java.method.defaultMethodAddedToInterface",
    "description": "A default method has been added to the interface.",
    "newElement": "method akasha.rtc.RTCCodecStats.Builder akasha.rtc.RTCCodecStats.Step5::mimeType(java.lang.String)",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.rtc.RTCCodecStats.Step5",
      "classSimpleName": "Step5",
      "elementKind": "method",
      "methodName": "mimeType",
      "package": "akasha.rtc"
    }
  },
  {
    "code": "java.method.defaultMethodAddedToInterface",
    "description": "A default method has been added to the interface.",
    "newElement": "method akasha.rtc.RTCCodecStats.Step4 akasha.rtc.RTCCodecStats.Step3::payloadType(int)",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.rtc.RTCCodecStats.Step3",
      "classSimpleName": "Step3",
      "elementKind": "method",
      "methodName": "payloadType",
      "package": "akasha.rtc"
    }
  },
  {
    "code": "java.method.defaultMethodAddedToInterface",
    "description": "A default method has been added to the interface.",
    "newElement": "method akasha.rtc.RTCCodecStats.Step5 akasha.rtc.RTCCodecStats.Step4::transportId(java.lang.String)",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.rtc.RTCCodecStats.Step4",
      "classSimpleName": "Step4",
      "elementKind": "method",
      "methodName": "transportId",
      "package": "akasha.rtc"
    }
  },
  {
    "code": "java.method.defaultMethodAddedToInterface",
    "description": "A default method has been added to the interface.",
    "newElement": "method akasha.rtc.RTCIceCandidatePairStats.Builder akasha.rtc.RTCIceCandidatePairStats.Step6::state(java.lang.String)",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.rtc.RTCIceCandidatePairStats.Step6",
      "classSimpleName": "Step6",
      "elementKind": "method",
      "methodName": "state",
      "package": "akasha.rtc"
    }
  },
  {
    "code": "java.method.defaultMethodAddedToInterface",
    "description": "A default method has been added to the interface.",
    "newElement": "method akasha.rtc.RTCIceCandidatePairStats.Step4 akasha.rtc.RTCIceCandidatePairStats.Step3::transportId(java.lang.String)",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.rtc.RTCIceCandidatePairStats.Step3",
      "classSimpleName": "Step3",
      "elementKind": "method",
      "methodName": "transportId",
      "package": "akasha.rtc"
    }
  },
  {
    "code": "java.method.defaultMethodAddedToInterface",
    "description": "A default method has been added to the interface.",
    "newElement": "method akasha.rtc.RTCIceCandidatePairStats.Step5 akasha.rtc.RTCIceCandidatePairStats.Step4::localCandidateId(java.lang.String)",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.rtc.RTCIceCandidatePairStats.Step4",
      "classSimpleName": "Step4",
      "elementKind": "method",
      "methodName": "localCandidateId",
      "package": "akasha.rtc"
    }
  },
  {
    "code": "java.method.defaultMethodAddedToInterface",
    "description": "A default method has been added to the interface.",
    "newElement": "method akasha.rtc.RTCIceCandidatePairStats.Step6 akasha.rtc.RTCIceCandidatePairStats.Step5::remoteCandidateId(java.lang.String)",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.rtc.RTCIceCandidatePairStats.Step5",
      "classSimpleName": "Step5",
      "elementKind": "method",
      "methodName": "remoteCandidateId",
      "package": "akasha.rtc"
    }
  },
  {
    "code": "java.method.defaultMethodAddedToInterface",
    "description": "A default method has been added to the interface.",
    "newElement": "method akasha.rtc.RTCIceCandidateStats.Builder akasha.rtc.RTCIceCandidateStats.Step4::candidateType(java.lang.String)",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.rtc.RTCIceCandidateStats.Step4",
      "classSimpleName": "Step4",
      "elementKind": "method",
      "methodName": "candidateType",
      "package": "akasha.rtc"
    }
  },
  {
    "code": "java.method.defaultMethodAddedToInterface",
    "description": "A default method has been added to the interface.",
    "newElement": "method akasha.rtc.RTCIceCandidateStats.Step4 akasha.rtc.RTCIceCandidateStats.Step3::transportId(java.lang.String)",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.rtc.RTCIceCandidateStats.Step3",
      "classSimpleName": "Step3",
      "elementKind": "method",
      "methodName": "transportId",
      "package": "akasha.rtc"
    }
  },
  {
    "code": "java.method.defaultMethodAddedToInterface",
    "description": "A default method has been added to the interface.",
    "newElement": "method akasha.rtc.RTCIdentityAssertionResult akasha.rtc.RTCIdentityAssertionResult.Step1::assertion(java.lang.String)",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.rtc.RTCIdentityAssertionResult.Step1",
      "classSimpleName": "Step1",
      "elementKind": "method",
      "methodName": "assertion",
      "package": "akasha.rtc"
    }
  },
  {
    "code": "java.method.staticMethodAddedToInterface",
    "description": "A default method has been added to the interface.",
    "newElement": "method akasha.rtc.RTCIdentityAssertionResult.Step1 akasha.rtc.RTCIdentityAssertionResult::idp(akasha.rtc.RTCIdentityProviderDetails)",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.rtc.RTCIdentityAssertionResult",
      "classSimpleName": "RTCIdentityAssertionResult",
      "elementKind": "method",
      "methodName": "idp",
      "package": "akasha.rtc"
    }
  },
  {
    "code": "java.method.defaultMethodAddedToInterface",
    "description": "A default method has been added to the interface.",
    "newElement": "method akasha.rtc.RTCIdentityValidationResult akasha.rtc.RTCIdentityValidationResult.Step1::contents(java.lang.String)",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.rtc.RTCIdentityValidationResult.Step1",
      "classSimpleName": "Step1",
      "elementKind": "method",
      "methodName": "contents",
      "package": "akasha.rtc"
    }
  },
  {
    "code": "java.method.staticMethodAddedToInterface",
    "description": "A default method has been added to the interface.",
    "newElement": "method akasha.rtc.RTCIdentityValidationResult.Step1 akasha.rtc.RTCIdentityValidationResult::identity(java.lang.String)",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.rtc.RTCIdentityValidationResult",
      "classSimpleName": "RTCIdentityValidationResult",
      "elementKind": "method",
      "methodName": "identity",
      "package": "akasha.rtc"
    }
  },
  {
    "code": "java.method.defaultMethodAddedToInterface",
    "description": "A default method has been added to the interface.",
    "newElement": "method akasha.rtc.RTCInboundRtpStreamStats.Step4 akasha.rtc.RTCInboundRtpStreamStats.Step3::ssrc(int)",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.rtc.RTCInboundRtpStreamStats.Step3",
      "classSimpleName": "Step3",
      "elementKind": "method",
      "methodName": "ssrc",
      "package": "akasha.rtc"
    }
  },
  {
    "code": "java.method.defaultMethodAddedToInterface",
    "description": "A default method has been added to the interface.",
    "newElement": "method akasha.rtc.RTCInboundRtpStreamStats.Step5 akasha.rtc.RTCInboundRtpStreamStats.Step4::kind(java.lang.String)",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.rtc.RTCInboundRtpStreamStats.Step4",
      "classSimpleName": "Step4",
      "elementKind": "method",
      "methodName": "kind",
      "package": "akasha.rtc"
    }
  },
  {
    "code": "java.method.defaultMethodAddedToInterface",
    "description": "A default method has been added to the interface.",
    "newElement": "method akasha.rtc.RTCMediaSourceStats.Builder akasha.rtc.RTCMediaSourceStats.Step4::kind(java.lang.String)",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.rtc.RTCMediaSourceStats.Step4",
      "classSimpleName": "Step4",
      "elementKind": "method",
      "methodName": "kind",
      "package": "akasha.rtc"
    }
  },
  {
    "code": "java.method.defaultMethodAddedToInterface",
    "description": "A default method has been added to the interface.",
    "newElement": "method akasha.rtc.RTCMediaSourceStats.Step4 akasha.rtc.RTCMediaSourceStats.Step3::trackIdentifier(java.lang.String)",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.rtc.RTCMediaSourceStats.Step3",
      "classSimpleName": "Step3",
      "elementKind": "method",
      "methodName": "trackIdentifier",
      "package": "akasha.rtc"
    }
  },
  {
    "code": "java.method.defaultMethodAddedToInterface",
    "description": "A default method has been added to the interface.",
    "newElement": "method akasha.rtc.RTCOutboundRtpStreamStats.Builder akasha.rtc.RTCOutboundRtpStreamStats.Step4::kind(java.lang.String)",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.rtc.RTCOutboundRtpStreamStats.Step4",
      "classSimpleName": "Step4",
      "elementKind": "method",
      "methodName": "kind",
      "package": "akasha.rtc"
    }
  },
  {
    "code": "java.method.defaultMethodAddedToInterface",
    "description": "A default method has been added to the interface.",
    "newElement": "method akasha.rtc.RTCOutboundRtpStreamStats.Step4 akasha.rtc.RTCOutboundRtpStreamStats.Step3::ssrc(int)",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.rtc.RTCOutboundRtpStreamStats.Step3",
      "classSimpleName": "Step3",
      "elementKind": "method",
      "methodName": "ssrc",
      "package": "akasha.rtc"
    }
  },
  {
    "code": "java.method.defaultMethodAddedToInterface",
    "description": "A default method has been added to the interface.",
    "newElement": "method akasha.rtc.RTCReceivedRtpStreamStats.Builder akasha.rtc.RTCReceivedRtpStreamStats.Step4::kind(java.lang.String)",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.rtc.RTCReceivedRtpStreamStats.Step4",
      "classSimpleName": "Step4",
      "elementKind": "method",
      "methodName": "kind",
      "package": "akasha.rtc"
    }
  },
  {
    "code": "java.method.defaultMethodAddedToInterface",
    "description": "A default method has been added to the interface.",
    "newElement": "method akasha.rtc.RTCReceivedRtpStreamStats.Step4 akasha.rtc.RTCReceivedRtpStreamStats.Step3::ssrc(int)",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.rtc.RTCReceivedRtpStreamStats.Step3",
      "classSimpleName": "Step3",
      "elementKind": "method",
      "methodName": "ssrc",
      "package": "akasha.rtc"
    }
  },
  {
    "code": "java.method.defaultMethodAddedToInterface",
    "description": "A default method has been added to the interface.",
    "newElement": "method akasha.rtc.RTCRemoteInboundRtpStreamStats.Builder akasha.rtc.RTCRemoteInboundRtpStreamStats.Step4::kind(java.lang.String)",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.rtc.RTCRemoteInboundRtpStreamStats.Step4",
      "classSimpleName": "Step4",
      "elementKind": "method",
      "methodName": "kind",
      "package": "akasha.rtc"
    }
  },
  {
    "code": "java.method.defaultMethodAddedToInterface",
    "description": "A default method has been added to the interface.",
    "newElement": "method akasha.rtc.RTCRemoteInboundRtpStreamStats.Step4 akasha.rtc.RTCRemoteInboundRtpStreamStats.Step3::ssrc(int)",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.rtc.RTCRemoteInboundRtpStreamStats.Step3",
      "classSimpleName": "Step3",
      "elementKind": "method",
      "methodName": "ssrc",
      "package": "akasha.rtc"
    }
  },
  {
    "code": "java.method.defaultMethodAddedToInterface",
    "description": "A default method has been added to the interface.",
    "newElement": "method akasha.rtc.RTCRemoteOutboundRtpStreamStats.Builder akasha.rtc.RTCRemoteOutboundRtpStreamStats.Step4::kind(java.lang.String)",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.rtc.RTCRemoteOutboundRtpStreamStats.Step4",
      "classSimpleName": "Step4",
      "elementKind": "method",
      "methodName": "kind",
      "package": "akasha.rtc"
    }
  },
  {
    "code": "java.method.defaultMethodAddedToInterface",
    "description": "A default method has been added to the interface.",
    "newElement": "method akasha.rtc.RTCRemoteOutboundRtpStreamStats.Step4 akasha.rtc.RTCRemoteOutboundRtpStreamStats.Step3::ssrc(int)",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.rtc.RTCRemoteOutboundRtpStreamStats.Step3",
      "classSimpleName": "Step3",
      "elementKind": "method",
      "methodName": "ssrc",
      "package": "akasha.rtc"
    }
  },
  {
    "code": "java.method.defaultMethodAddedToInterface",
    "description": "A default method has been added to the interface.",
    "newElement": "method akasha.rtc.RTCRtpStreamStats.Builder akasha.rtc.RTCRtpStreamStats.Step4::kind(java.lang.String)",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.rtc.RTCRtpStreamStats.Step4",
      "classSimpleName": "Step4",
      "elementKind": "method",
      "methodName": "kind",
      "package": "akasha.rtc"
    }
  },
  {
    "code": "java.method.defaultMethodAddedToInterface",
    "description": "A default method has been added to the interface.",
    "newElement": "method akasha.rtc.RTCRtpStreamStats.Step4 akasha.rtc.RTCRtpStreamStats.Step3::ssrc(int)",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.rtc.RTCRtpStreamStats.Step3",
      "classSimpleName": "Step3",
      "elementKind": "method",
      "methodName": "ssrc",
      "package": "akasha.rtc"
    }
  },
  {
    "code": "java.method.defaultMethodAddedToInterface",
    "description": "A default method has been added to the interface.",
    "newElement": "method akasha.rtc.RTCRtpTransceiverStats.Builder akasha.rtc.RTCRtpTransceiverStats.Step4::receiverId(java.lang.String)",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.rtc.RTCRtpTransceiverStats.Step4",
      "classSimpleName": "Step4",
      "elementKind": "method",
      "methodName": "receiverId",
      "package": "akasha.rtc"
    }
  },
  {
    "code": "java.method.defaultMethodAddedToInterface",
    "description": "A default method has been added to the interface.",
    "newElement": "method akasha.rtc.RTCRtpTransceiverStats.Step4 akasha.rtc.RTCRtpTransceiverStats.Step3::senderId(java.lang.String)",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.rtc.RTCRtpTransceiverStats.Step3",
      "classSimpleName": "Step3",
      "elementKind": "method",
      "methodName": "senderId",
      "package": "akasha.rtc"
    }
  },
  {
    "code": "java.method.defaultMethodAddedToInterface",
    "description": "A default method has been added to the interface.",
    "newElement": "method akasha.rtc.RTCSentRtpStreamStats.Builder akasha.rtc.RTCSentRtpStreamStats.Step4::kind(java.lang.String)",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.rtc.RTCSentRtpStreamStats.Step4",
      "classSimpleName": "Step4",
      "elementKind": "method",
      "methodName": "kind",
      "package": "akasha.rtc"
    }
  },
  {
    "code": "java.method.defaultMethodAddedToInterface",
    "description": "A default method has been added to the interface.",
    "newElement": "method akasha.rtc.RTCSentRtpStreamStats.Step4 akasha.rtc.RTCSentRtpStreamStats.Step3::ssrc(int)",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.rtc.RTCSentRtpStreamStats.Step3",
      "classSimpleName": "Step3",
      "elementKind": "method",
      "methodName": "ssrc",
      "package": "akasha.rtc"
    }
  },
  {
    "code": "java.method.defaultMethodAddedToInterface",
    "description": "A default method has been added to the interface.",
    "newElement": "method akasha.rtc.RTCVideoSourceStats.Builder akasha.rtc.RTCVideoSourceStats.Step4::kind(java.lang.String)",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.rtc.RTCVideoSourceStats.Step4",
      "classSimpleName": "Step4",
      "elementKind": "method",
      "methodName": "kind",
      "package": "akasha.rtc"
    }
  },
  {
    "code": "java.method.defaultMethodAddedToInterface",
    "description": "A default method has been added to the interface.",
    "newElement": "method akasha.rtc.RTCVideoSourceStats.Step4 akasha.rtc.RTCVideoSourceStats.Step3::trackIdentifier(java.lang.String)",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.rtc.RTCVideoSourceStats.Step3",
      "classSimpleName": "Step3",
      "elementKind": "method",
      "methodName": "trackIdentifier",
      "package": "akasha.rtc"
    }
  },
  {
    "code": "java.method.added",
    "description": "Method was added.",
    "newElement": "method akasha.xr.XRAnchorSet akasha.xr.XRFrame::trackedAnchors()",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.xr.XRFrame",
      "classSimpleName": "XRFrame",
      "elementKind": "method",
      "methodName": "trackedAnchors",
      "package": "akasha.xr"
    }
  },
  {
    "code": "java.method.added",
    "description": "Method was added.",
    "newElement": "method akasha.xr.XRCPUDepthInformation akasha.xr.XRFrame::getDepthInformation(akasha.xr.XRView)",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.xr.XRFrame",
      "classSimpleName": "XRFrame",
      "elementKind": "method",
      "methodName": "getDepthInformation",
      "package": "akasha.xr"
    }
  },
  {
    "code": "java.method.addedToInterface",
    "description": "Method was added to an interface.",
    "newElement": "method akasha.xr.XRDOMOverlayInit akasha.xr.XRSessionInit::domOverlay()",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "NON_BREAKING",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.xr.XRSessionInit",
      "classSimpleName": "XRSessionInit",
      "elementKind": "method",
      "methodName": "domOverlay",
      "package": "akasha.xr"
    }
  },
  {
    "code": "java.method.added",
    "description": "Method was added.",
    "newElement": "method akasha.xr.XRDOMOverlayState akasha.xr.XRSession::domOverlayState()",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.xr.XRSession",
      "classSimpleName": "XRSession",
      "elementKind": "method",
      "methodName": "domOverlayState",
      "package": "akasha.xr"
    }
  },
  {
    "code": "java.method.addedToInterface",
    "description": "Method was added to an interface.",
    "newElement": "method akasha.xr.XRDepthStateInit akasha.xr.XRSessionInit::depthSensing()",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "NON_BREAKING",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.xr.XRSessionInit",
      "classSimpleName": "XRSessionInit",
      "elementKind": "method",
      "methodName": "depthSensing",
      "package": "akasha.xr"
    }
  },
  {
    "code": "java.method.added",
    "description": "Method was added.",
    "newElement": "method akasha.xr.XRHand akasha.xr.XRInputSource::hand()",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.xr.XRInputSource",
      "classSimpleName": "XRInputSource",
      "elementKind": "method",
      "methodName": "hand",
      "package": "akasha.xr"
    }
  },
  {
    "code": "java.method.added",
    "description": "Method was added.",
    "newElement": "method akasha.xr.XRJointPose akasha.xr.XRFrame::getJointPose(akasha.xr.XRJointSpace, akasha.xr.XRSpace)",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.xr.XRFrame",
      "classSimpleName": "XRFrame",
      "elementKind": "method",
      "methodName": "getJointPose",
      "package": "akasha.xr"
    }
  },
  {
    "code": "java.method.added",
    "description": "Method was added.",
    "newElement": "method akasha.xr.XRLightEstimate akasha.xr.XRFrame::getLightEstimate(akasha.xr.XRLightProbe)",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.xr.XRFrame",
      "classSimpleName": "XRFrame",
      "elementKind": "method",
      "methodName": "getLightEstimate",
      "package": "akasha.xr"
    }
  },
  {
    "code": "java.method.defaultMethodAddedToInterface",
    "description": "A default method has been added to the interface.",
    "newElement": "method akasha.xr.XRSessionInit.Builder akasha.xr.XRSessionInit.Builder::depthSensing(akasha.xr.XRDepthStateInit)",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.xr.XRSessionInit.Builder",
      "classSimpleName": "Builder",
      "elementKind": "method",
      "methodName": "depthSensing",
      "package": "akasha.xr"
    }
  },
  {
    "code": "java.method.defaultMethodAddedToInterface",
    "description": "A default method has been added to the interface.",
    "newElement": "method akasha.xr.XRSessionInit.Builder akasha.xr.XRSessionInit.Builder::domOverlay(akasha.xr.XRDOMOverlayInit)",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.xr.XRSessionInit.Builder",
      "classSimpleName": "Builder",
      "elementKind": "method",
      "methodName": "domOverlay",
      "package": "akasha.xr"
    }
  },
  {
    "code": "java.method.added",
    "description": "Method was added.",
    "newElement": "method boolean akasha.gpu.GPUExternalTexture::expired()",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.gpu.GPUExternalTexture",
      "classSimpleName": "GPUExternalTexture",
      "elementKind": "method",
      "methodName": "expired",
      "package": "akasha.gpu"
    }
  },
  {
    "code": "java.method.addedToInterface",
    "description": "Method was added to an interface.",
    "newElement": "method boolean akasha.gpu.GPUImageCopyExternalImage::flipY()",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "NON_BREAKING",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.gpu.GPUImageCopyExternalImage",
      "classSimpleName": "GPUImageCopyExternalImage",
      "elementKind": "method",
      "methodName": "flipY",
      "package": "akasha.gpu"
    }
  },
  {
    "code": "java.method.added",
    "description": "Method was added.",
    "newElement": "method boolean akasha.xr.XRFrame::fillJointRadii(akasha.lang.JsArray<akasha.xr.XRJointSpace>, akasha.core.Float32Array)",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.xr.XRFrame",
      "classSimpleName": "XRFrame",
      "elementKind": "method",
      "methodName": "fillJointRadii",
      "package": "akasha.xr"
    }
  },
  {
    "code": "java.method.added",
    "description": "Method was added.",
    "newElement": "method boolean akasha.xr.XRFrame::fillJointRadii(akasha.xr.XRJointSpace[], akasha.core.Float32Array)",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.xr.XRFrame",
      "classSimpleName": "XRFrame",
      "elementKind": "method",
      "methodName": "fillJointRadii",
      "package": "akasha.xr"
    }
  },
  {
    "code": "java.method.added",
    "description": "Method was added.",
    "newElement": "method boolean akasha.xr.XRFrame::fillPoses(akasha.lang.JsArray<akasha.xr.XRSpace>, akasha.xr.XRSpace, akasha.core.Float32Array)",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.xr.XRFrame",
      "classSimpleName": "XRFrame",
      "elementKind": "method",
      "methodName": "fillPoses",
      "package": "akasha.xr"
    }
  },
  {
    "code": "java.method.added",
    "description": "Method was added.",
    "newElement": "method boolean akasha.xr.XRFrame::fillPoses(akasha.xr.XRSpace[], akasha.xr.XRSpace, akasha.core.Float32Array)",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.xr.XRFrame",
      "classSimpleName": "XRFrame",
      "elementKind": "method",
      "methodName": "fillPoses",
      "package": "akasha.xr"
    }
  },
  {
    "code": "java.method.finalMethodAddedToNonFinalClass",
    "description": "A final method has been added to an inheritable class.",
    "newElement": "method boolean akasha.xr.XRFrame::isCreateAnchorSupported()",
    "classification": {
      "SOURCE": "POTENTIALLY_BREAKING",
      "BINARY": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.xr.XRFrame",
      "classSimpleName": "XRFrame",
      "elementKind": "method",
      "methodName": "isCreateAnchorSupported",
      "package": "akasha.xr"
    }
  },
  {
    "code": "java.method.finalMethodAddedToNonFinalClass",
    "description": "A final method has been added to an inheritable class.",
    "newElement": "method boolean akasha.xr.XRFrame::isFillJointRadiiSupported()",
    "classification": {
      "SOURCE": "POTENTIALLY_BREAKING",
      "BINARY": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.xr.XRFrame",
      "classSimpleName": "XRFrame",
      "elementKind": "method",
      "methodName": "isFillJointRadiiSupported",
      "package": "akasha.xr"
    }
  },
  {
    "code": "java.method.finalMethodAddedToNonFinalClass",
    "description": "A final method has been added to an inheritable class.",
    "newElement": "method boolean akasha.xr.XRFrame::isFillPosesSupported()",
    "classification": {
      "SOURCE": "POTENTIALLY_BREAKING",
      "BINARY": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.xr.XRFrame",
      "classSimpleName": "XRFrame",
      "elementKind": "method",
      "methodName": "isFillPosesSupported",
      "package": "akasha.xr"
    }
  },
  {
    "code": "java.method.finalMethodAddedToNonFinalClass",
    "description": "A final method has been added to an inheritable class.",
    "newElement": "method boolean akasha.xr.XRFrame::isGetDepthInformationSupported()",
    "classification": {
      "SOURCE": "POTENTIALLY_BREAKING",
      "BINARY": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.xr.XRFrame",
      "classSimpleName": "XRFrame",
      "elementKind": "method",
      "methodName": "isGetDepthInformationSupported",
      "package": "akasha.xr"
    }
  },
  {
    "code": "java.method.finalMethodAddedToNonFinalClass",
    "description": "A final method has been added to an inheritable class.",
    "newElement": "method boolean akasha.xr.XRFrame::isGetHitTestResultsForTransientInputSupported()",
    "classification": {
      "SOURCE": "POTENTIALLY_BREAKING",
      "BINARY": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.xr.XRFrame",
      "classSimpleName": "XRFrame",
      "elementKind": "method",
      "methodName": "isGetHitTestResultsForTransientInputSupported",
      "package": "akasha.xr"
    }
  },
  {
    "code": "java.method.finalMethodAddedToNonFinalClass",
    "description": "A final method has been added to an inheritable class.",
    "newElement": "method boolean akasha.xr.XRFrame::isGetHitTestResultsSupported()",
    "classification": {
      "SOURCE": "POTENTIALLY_BREAKING",
      "BINARY": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.xr.XRFrame",
      "classSimpleName": "XRFrame",
      "elementKind": "method",
      "methodName": "isGetHitTestResultsSupported",
      "package": "akasha.xr"
    }
  },
  {
    "code": "java.method.finalMethodAddedToNonFinalClass",
    "description": "A final method has been added to an inheritable class.",
    "newElement": "method boolean akasha.xr.XRFrame::isGetJointPoseSupported()",
    "classification": {
      "SOURCE": "POTENTIALLY_BREAKING",
      "BINARY": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.xr.XRFrame",
      "classSimpleName": "XRFrame",
      "elementKind": "method",
      "methodName": "isGetJointPoseSupported",
      "package": "akasha.xr"
    }
  },
  {
    "code": "java.method.finalMethodAddedToNonFinalClass",
    "description": "A final method has been added to an inheritable class.",
    "newElement": "method boolean akasha.xr.XRFrame::isGetLightEstimateSupported()",
    "classification": {
      "SOURCE": "POTENTIALLY_BREAKING",
      "BINARY": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.xr.XRFrame",
      "classSimpleName": "XRFrame",
      "elementKind": "method",
      "methodName": "isGetLightEstimateSupported",
      "package": "akasha.xr"
    }
  },
  {
    "code": "java.method.finalMethodAddedToNonFinalClass",
    "description": "A final method has been added to an inheritable class.",
    "newElement": "method boolean akasha.xr.XRFrame::isTrackedAnchorsSupported()",
    "classification": {
      "SOURCE": "POTENTIALLY_BREAKING",
      "BINARY": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.xr.XRFrame",
      "classSimpleName": "XRFrame",
      "elementKind": "method",
      "methodName": "isTrackedAnchorsSupported",
      "package": "akasha.xr"
    }
  },
  {
    "code": "java.method.finalMethodAddedToNonFinalClass",
    "description": "A final method has been added to an inheritable class.",
    "newElement": "method boolean akasha.xr.XRInputSource::isGamepadSupported()",
    "classification": {
      "SOURCE": "POTENTIALLY_BREAKING",
      "BINARY": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.xr.XRInputSource",
      "classSimpleName": "XRInputSource",
      "elementKind": "method",
      "methodName": "isGamepadSupported",
      "package": "akasha.xr"
    }
  },
  {
    "code": "java.method.finalMethodAddedToNonFinalClass",
    "description": "A final method has been added to an inheritable class.",
    "newElement": "method boolean akasha.xr.XRInputSource::isHandSupported()",
    "classification": {
      "SOURCE": "POTENTIALLY_BREAKING",
      "BINARY": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.xr.XRInputSource",
      "classSimpleName": "XRInputSource",
      "elementKind": "method",
      "methodName": "isHandSupported",
      "package": "akasha.xr"
    }
  },
  {
    "code": "java.method.finalMethodAddedToNonFinalClass",
    "description": "A final method has been added to an inheritable class.",
    "newElement": "method boolean akasha.xr.XRRenderState::isLayersSupported()",
    "classification": {
      "SOURCE": "POTENTIALLY_BREAKING",
      "BINARY": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.xr.XRRenderState",
      "classSimpleName": "XRRenderState",
      "elementKind": "method",
      "methodName": "isLayersSupported",
      "package": "akasha.xr"
    }
  },
  {
    "code": "java.method.finalMethodAddedToNonFinalClass",
    "description": "A final method has been added to an inheritable class.",
    "newElement": "method boolean akasha.xr.XRSession::isDepthDataFormatSupported()",
    "classification": {
      "SOURCE": "POTENTIALLY_BREAKING",
      "BINARY": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.xr.XRSession",
      "classSimpleName": "XRSession",
      "elementKind": "method",
      "methodName": "isDepthDataFormatSupported",
      "package": "akasha.xr"
    }
  },
  {
    "code": "java.method.finalMethodAddedToNonFinalClass",
    "description": "A final method has been added to an inheritable class.",
    "newElement": "method boolean akasha.xr.XRSession::isDepthUsageSupported()",
    "classification": {
      "SOURCE": "POTENTIALLY_BREAKING",
      "BINARY": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.xr.XRSession",
      "classSimpleName": "XRSession",
      "elementKind": "method",
      "methodName": "isDepthUsageSupported",
      "package": "akasha.xr"
    }
  },
  {
    "code": "java.method.finalMethodAddedToNonFinalClass",
    "description": "A final method has been added to an inheritable class.",
    "newElement": "method boolean akasha.xr.XRSession::isDomOverlayStateSupported()",
    "classification": {
      "SOURCE": "POTENTIALLY_BREAKING",
      "BINARY": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.xr.XRSession",
      "classSimpleName": "XRSession",
      "elementKind": "method",
      "methodName": "isDomOverlayStateSupported",
      "package": "akasha.xr"
    }
  },
  {
    "code": "java.method.finalMethodAddedToNonFinalClass",
    "description": "A final method has been added to an inheritable class.",
    "newElement": "method boolean akasha.xr.XRSession::isEnvironmentBlendModeSupported()",
    "classification": {
      "SOURCE": "POTENTIALLY_BREAKING",
      "BINARY": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.xr.XRSession",
      "classSimpleName": "XRSession",
      "elementKind": "method",
      "methodName": "isEnvironmentBlendModeSupported",
      "package": "akasha.xr"
    }
  },
  {
    "code": "java.method.finalMethodAddedToNonFinalClass",
    "description": "A final method has been added to an inheritable class.",
    "newElement": "method boolean akasha.xr.XRSession::isInteractionModeSupported()",
    "classification": {
      "SOURCE": "POTENTIALLY_BREAKING",
      "BINARY": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.xr.XRSession",
      "classSimpleName": "XRSession",
      "elementKind": "method",
      "methodName": "isInteractionModeSupported",
      "package": "akasha.xr"
    }
  },
  {
    "code": "java.method.finalMethodAddedToNonFinalClass",
    "description": "A final method has been added to an inheritable class.",
    "newElement": "method boolean akasha.xr.XRSession::isPreferredReflectionFormatSupported()",
    "classification": {
      "SOURCE": "POTENTIALLY_BREAKING",
      "BINARY": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.xr.XRSession",
      "classSimpleName": "XRSession",
      "elementKind": "method",
      "methodName": "isPreferredReflectionFormatSupported",
      "package": "akasha.xr"
    }
  },
  {
    "code": "java.method.finalMethodAddedToNonFinalClass",
    "description": "A final method has been added to an inheritable class.",
    "newElement": "method boolean akasha.xr.XRSession::isRequestHitTestSourceForTransientInputSupported()",
    "classification": {
      "SOURCE": "POTENTIALLY_BREAKING",
      "BINARY": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.xr.XRSession",
      "classSimpleName": "XRSession",
      "elementKind": "method",
      "methodName": "isRequestHitTestSourceForTransientInputSupported",
      "package": "akasha.xr"
    }
  },
  {
    "code": "java.method.finalMethodAddedToNonFinalClass",
    "description": "A final method has been added to an inheritable class.",
    "newElement": "method boolean akasha.xr.XRSession::isRequestHitTestSourceSupported()",
    "classification": {
      "SOURCE": "POTENTIALLY_BREAKING",
      "BINARY": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.xr.XRSession",
      "classSimpleName": "XRSession",
      "elementKind": "method",
      "methodName": "isRequestHitTestSourceSupported",
      "package": "akasha.xr"
    }
  },
  {
    "code": "java.method.finalMethodAddedToNonFinalClass",
    "description": "A final method has been added to an inheritable class.",
    "newElement": "method boolean akasha.xr.XRSession::isRequestLightProbeSupported()",
    "classification": {
      "SOURCE": "POTENTIALLY_BREAKING",
      "BINARY": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.xr.XRSession",
      "classSimpleName": "XRSession",
      "elementKind": "method",
      "methodName": "isRequestLightProbeSupported",
      "package": "akasha.xr"
    }
  },
  {
    "code": "java.method.added",
    "description": "Method was added.",
    "newElement": "method boolean akasha.xr.XRView::isFirstPersonObserver()",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.xr.XRView",
      "classSimpleName": "XRView",
      "elementKind": "method",
      "methodName": "isFirstPersonObserver",
      "package": "akasha.xr"
    }
  },
  {
    "code": "java.method.finalMethodAddedToNonFinalClass",
    "description": "A final method has been added to an inheritable class.",
    "newElement": "method boolean akasha.xr.XRView::isIsFirstPersonObserverSupported()",
    "classification": {
      "SOURCE": "POTENTIALLY_BREAKING",
      "BINARY": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.xr.XRView",
      "classSimpleName": "XRView",
      "elementKind": "method",
      "methodName": "isIsFirstPersonObserverSupported",
      "package": "akasha.xr"
    }
  },
  {
    "code": "java.method.returnTypeChanged",
    "description": "The return type changed from 'int' to  'double'.",
    "newElement": "method double akasha.MouseEvent::movementX()",
    "oldElement": "method int akasha.MouseEvent::movementX()",
    "classification": {
      "SOURCE": "POTENTIALLY_BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.MouseEvent",
      "classSimpleName": "MouseEvent",
      "elementKind": "method",
      "methodName": "movementX",
      "newType": "double",
      "oldType": "int",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.returnTypeChanged",
    "description": "The return type changed from 'int' to  'double'.",
    "newElement": "method double akasha.MouseEvent::movementY()",
    "oldElement": "method int akasha.MouseEvent::movementY()",
    "classification": {
      "SOURCE": "POTENTIALLY_BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.MouseEvent",
      "classSimpleName": "MouseEvent",
      "elementKind": "method",
      "methodName": "movementY",
      "newType": "double",
      "oldType": "int",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.returnTypeChanged",
    "description": "The return type changed from 'int' to  'double'.",
    "newElement": "method double akasha.MouseEventInit::movementX()",
    "oldElement": "method int akasha.MouseEventInit::movementX()",
    "classification": {
      "SOURCE": "POTENTIALLY_BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.MouseEventInit",
      "classSimpleName": "MouseEventInit",
      "elementKind": "method",
      "methodName": "movementX",
      "newType": "double",
      "oldType": "int",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.returnTypeChanged",
    "description": "The return type changed from 'int' to  'double'.",
    "newElement": "method double akasha.MouseEventInit::movementY()",
    "oldElement": "method int akasha.MouseEventInit::movementY()",
    "classification": {
      "SOURCE": "POTENTIALLY_BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.MouseEventInit",
      "classSimpleName": "MouseEventInit",
      "elementKind": "method",
      "methodName": "movementY",
      "newType": "double",
      "oldType": "int",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.addedToInterface",
    "description": "Method was added to an interface.",
    "newElement": "method float akasha.gpu.GPURenderPassDepthStencilAttachment::depthClearValue()",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "NON_BREAKING",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.gpu.GPURenderPassDepthStencilAttachment",
      "classSimpleName": "GPURenderPassDepthStencilAttachment",
      "elementKind": "method",
      "methodName": "depthClearValue",
      "package": "akasha.gpu"
    }
  },
  {
    "code": "java.method.addedToInterface",
    "description": "Method was added to an interface.",
    "newElement": "method int akasha.gpu.GPURenderPassDepthStencilAttachment::stencilClearValue()",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "NON_BREAKING",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.gpu.GPURenderPassDepthStencilAttachment",
      "classSimpleName": "GPURenderPassDepthStencilAttachment",
      "elementKind": "method",
      "methodName": "stencilClearValue",
      "package": "akasha.gpu"
    }
  },
  {
    "code": "java.annotation.removed",
    "description": "Element no longer annotated with 'akasha.PermissionName'.",
    "element": "method java.lang.String akasha.PermissionDescriptor::name() @ akasha.PushPermissionDescriptor",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@akasha.PermissionName",
      "annotationType": "akasha.PermissionName",
      "classQualifiedName": "akasha.PushPermissionDescriptor",
      "classSimpleName": "PushPermissionDescriptor",
      "elementKind": "method",
      "methodName": "name",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.removed",
    "description": "Element no longer annotated with 'akasha.PermissionName'.",
    "element": "method java.lang.String akasha.PermissionDescriptor::name() @ akasha.PushPermissionDescriptor.Builder",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@akasha.PermissionName",
      "annotationType": "akasha.PermissionName",
      "classQualifiedName": "akasha.PushPermissionDescriptor.Builder",
      "classSimpleName": "Builder",
      "elementKind": "method",
      "methodName": "name",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.removed",
    "description": "Element no longer annotated with 'akasha.PermissionName'.",
    "element": "method java.lang.String akasha.PermissionDescriptor::name() @ akasha.bluetooth.BluetoothPermissionDescriptor",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@akasha.PermissionName",
      "annotationType": "akasha.PermissionName",
      "classQualifiedName": "akasha.bluetooth.BluetoothPermissionDescriptor",
      "classSimpleName": "BluetoothPermissionDescriptor",
      "elementKind": "method",
      "methodName": "name",
      "package": "akasha.bluetooth"
    }
  },
  {
    "code": "java.annotation.removed",
    "description": "Element no longer annotated with 'akasha.PermissionName'.",
    "element": "method java.lang.String akasha.PermissionDescriptor::name() @ akasha.bluetooth.BluetoothPermissionDescriptor.Builder",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@akasha.PermissionName",
      "annotationType": "akasha.PermissionName",
      "classQualifiedName": "akasha.bluetooth.BluetoothPermissionDescriptor.Builder",
      "classSimpleName": "Builder",
      "elementKind": "method",
      "methodName": "name",
      "package": "akasha.bluetooth"
    }
  },
  {
    "code": "java.annotation.removed",
    "description": "Element no longer annotated with 'akasha.PermissionName'.",
    "element": "method java.lang.String akasha.PermissionDescriptor::name() @ akasha.clipboard.ClipboardPermissionDescriptor",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@akasha.PermissionName",
      "annotationType": "akasha.PermissionName",
      "classQualifiedName": "akasha.clipboard.ClipboardPermissionDescriptor",
      "classSimpleName": "ClipboardPermissionDescriptor",
      "elementKind": "method",
      "methodName": "name",
      "package": "akasha.clipboard"
    }
  },
  {
    "code": "java.annotation.removed",
    "description": "Element no longer annotated with 'akasha.PermissionName'.",
    "element": "method java.lang.String akasha.PermissionDescriptor::name() @ akasha.clipboard.ClipboardPermissionDescriptor.Builder",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@akasha.PermissionName",
      "annotationType": "akasha.PermissionName",
      "classQualifiedName": "akasha.clipboard.ClipboardPermissionDescriptor.Builder",
      "classSimpleName": "Builder",
      "elementKind": "method",
      "methodName": "name",
      "package": "akasha.clipboard"
    }
  },
  {
    "code": "java.annotation.removed",
    "description": "Element no longer annotated with 'akasha.PermissionName'.",
    "element": "method java.lang.String akasha.PermissionDescriptor::name() @ akasha.midi.MidiPermissionDescriptor",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@akasha.PermissionName",
      "annotationType": "akasha.PermissionName",
      "classQualifiedName": "akasha.midi.MidiPermissionDescriptor",
      "classSimpleName": "MidiPermissionDescriptor",
      "elementKind": "method",
      "methodName": "name",
      "package": "akasha.midi"
    }
  },
  {
    "code": "java.annotation.removed",
    "description": "Element no longer annotated with 'akasha.PermissionName'.",
    "element": "method java.lang.String akasha.PermissionDescriptor::name() @ akasha.midi.MidiPermissionDescriptor.Builder",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@akasha.PermissionName",
      "annotationType": "akasha.PermissionName",
      "classQualifiedName": "akasha.midi.MidiPermissionDescriptor.Builder",
      "classSimpleName": "Builder",
      "elementKind": "method",
      "methodName": "name",
      "package": "akasha.midi"
    }
  },
  {
    "code": "java.annotation.removed",
    "description": "Element no longer annotated with 'akasha.PermissionName'.",
    "element": "method java.lang.String akasha.PermissionDescriptor::name() @ akasha.usb.USBPermissionDescriptor",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@akasha.PermissionName",
      "annotationType": "akasha.PermissionName",
      "classQualifiedName": "akasha.usb.USBPermissionDescriptor",
      "classSimpleName": "USBPermissionDescriptor",
      "elementKind": "method",
      "methodName": "name",
      "package": "akasha.usb"
    }
  },
  {
    "code": "java.annotation.removed",
    "description": "Element no longer annotated with 'akasha.PermissionName'.",
    "element": "method java.lang.String akasha.PermissionDescriptor::name() @ akasha.usb.USBPermissionDescriptor.Builder",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@akasha.PermissionName",
      "annotationType": "akasha.PermissionName",
      "classQualifiedName": "akasha.usb.USBPermissionDescriptor.Builder",
      "classSimpleName": "Builder",
      "elementKind": "method",
      "methodName": "name",
      "package": "akasha.usb"
    }
  },
  {
    "code": "java.annotation.removed",
    "description": "Element no longer annotated with 'akasha.PermissionName'.",
    "element": "method java.lang.String akasha.PermissionDescriptor::name() @ akasha.xr.XRPermissionDescriptor",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@akasha.PermissionName",
      "annotationType": "akasha.PermissionName",
      "classQualifiedName": "akasha.xr.XRPermissionDescriptor",
      "classSimpleName": "XRPermissionDescriptor",
      "elementKind": "method",
      "methodName": "name",
      "package": "akasha.xr"
    }
  },
  {
    "code": "java.annotation.removed",
    "description": "Element no longer annotated with 'akasha.PermissionName'.",
    "element": "method java.lang.String akasha.PermissionDescriptor::name() @ akasha.xr.XRPermissionDescriptor.Builder",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@akasha.PermissionName",
      "annotationType": "akasha.PermissionName",
      "classQualifiedName": "akasha.xr.XRPermissionDescriptor.Builder",
      "classSimpleName": "Builder",
      "elementKind": "method",
      "methodName": "name",
      "package": "akasha.xr"
    }
  },
  {
    "code": "java.annotation.removed",
    "description": "Element no longer annotated with 'akasha.PermissionName'.",
    "element": "method java.lang.String akasha.PermissionDescriptor::name() @ akasha.xr.XRSessionSupportedPermissionDescriptor",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@akasha.PermissionName",
      "annotationType": "akasha.PermissionName",
      "classQualifiedName": "akasha.xr.XRSessionSupportedPermissionDescriptor",
      "classSimpleName": "XRSessionSupportedPermissionDescriptor",
      "elementKind": "method",
      "methodName": "name",
      "package": "akasha.xr"
    }
  },
  {
    "code": "java.annotation.removed",
    "description": "Element no longer annotated with 'akasha.PermissionName'.",
    "element": "method java.lang.String akasha.PermissionDescriptor::name() @ akasha.xr.XRSessionSupportedPermissionDescriptor.Builder",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@akasha.PermissionName",
      "annotationType": "akasha.PermissionName",
      "classQualifiedName": "akasha.xr.XRSessionSupportedPermissionDescriptor.Builder",
      "classSimpleName": "Builder",
      "elementKind": "method",
      "methodName": "name",
      "package": "akasha.xr"
    }
  },
  {
    "code": "java.annotation.removed",
    "description": "Element no longer annotated with 'akasha.PermissionName'.",
    "element": "method java.lang.String akasha.PermissionDescriptor::name()",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@akasha.PermissionName",
      "annotationType": "akasha.PermissionName",
      "classQualifiedName": "akasha.PermissionDescriptor",
      "classSimpleName": "PermissionDescriptor",
      "elementKind": "method",
      "methodName": "name",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.removed",
    "description": "Element no longer annotated with 'akasha.PermissionName'.",
    "element": "method java.lang.String akasha.PermissionStatus::name() @ akasha.bluetooth.BluetoothPermissionResult",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@akasha.PermissionName",
      "annotationType": "akasha.PermissionName",
      "classQualifiedName": "akasha.bluetooth.BluetoothPermissionResult",
      "classSimpleName": "BluetoothPermissionResult",
      "elementKind": "method",
      "methodName": "name",
      "package": "akasha.bluetooth"
    }
  },
  {
    "code": "java.annotation.removed",
    "description": "Element no longer annotated with 'akasha.PermissionName'.",
    "element": "method java.lang.String akasha.PermissionStatus::name() @ akasha.usb.USBPermissionResult",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@akasha.PermissionName",
      "annotationType": "akasha.PermissionName",
      "classQualifiedName": "akasha.usb.USBPermissionResult",
      "classSimpleName": "USBPermissionResult",
      "elementKind": "method",
      "methodName": "name",
      "package": "akasha.usb"
    }
  },
  {
    "code": "java.annotation.removed",
    "description": "Element no longer annotated with 'akasha.PermissionName'.",
    "element": "method java.lang.String akasha.PermissionStatus::name() @ akasha.xr.XRPermissionStatus",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@akasha.PermissionName",
      "annotationType": "akasha.PermissionName",
      "classQualifiedName": "akasha.xr.XRPermissionStatus",
      "classSimpleName": "XRPermissionStatus",
      "elementKind": "method",
      "methodName": "name",
      "package": "akasha.xr"
    }
  },
  {
    "code": "java.annotation.removed",
    "description": "Element no longer annotated with 'akasha.PermissionName'.",
    "element": "method java.lang.String akasha.PermissionStatus::name()",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@akasha.PermissionName",
      "annotationType": "akasha.PermissionName",
      "classQualifiedName": "akasha.PermissionStatus",
      "classSimpleName": "PermissionStatus",
      "elementKind": "method",
      "methodName": "name",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.added",
    "description": "Method was added.",
    "newElement": "method java.lang.String akasha.codecs.ImageDecoder::type()",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.codecs.ImageDecoder",
      "classSimpleName": "ImageDecoder",
      "elementKind": "method",
      "methodName": "type",
      "package": "akasha.codecs"
    }
  },
  {
    "code": "java.method.movedToSuperClass",
    "description": "The method used to be declared in class 'akasha.core.DataView' but is now declared in superclass 'akasha.core.JsObject'.",
    "newElement": "method java.lang.String akasha.core.JsObject::toString_() @ akasha.core.DataView",
    "oldElement": "method java.lang.String akasha.core.DataView::toString_()",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT"
    },
    "attachments": {
      "classQualifiedName": "akasha.core.DataView",
      "classSimpleName": "DataView",
      "elementKind": "method",
      "methodName": "toString_",
      "newClass": "akasha.core.JsObject",
      "oldClass": "akasha.core.DataView",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.method.movedToSuperClass",
    "description": "The method used to be declared in class 'akasha.core.JsBoolean' but is now declared in superclass 'akasha.core.JsObject'.",
    "newElement": "method java.lang.String akasha.core.JsObject::toString_() @ akasha.core.JsBoolean",
    "oldElement": "method java.lang.String akasha.core.JsBoolean::toString_()",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT"
    },
    "attachments": {
      "classQualifiedName": "akasha.core.JsBoolean",
      "classSimpleName": "JsBoolean",
      "elementKind": "method",
      "methodName": "toString_",
      "newClass": "akasha.core.JsObject",
      "oldClass": "akasha.core.JsBoolean",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.method.movedToSuperClass",
    "description": "The method used to be declared in class 'akasha.core.JsDate' but is now declared in superclass 'akasha.core.JsObject'.",
    "newElement": "method java.lang.String akasha.core.JsObject::toString_() @ akasha.core.JsDate",
    "oldElement": "method java.lang.String akasha.core.JsDate::toString_()",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT"
    },
    "attachments": {
      "classQualifiedName": "akasha.core.JsDate",
      "classSimpleName": "JsDate",
      "elementKind": "method",
      "methodName": "toString_",
      "newClass": "akasha.core.JsObject",
      "oldClass": "akasha.core.JsDate",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.method.movedToSuperClass",
    "description": "The method used to be declared in class 'akasha.core.JsString' but is now declared in superclass 'akasha.core.JsObject'.",
    "newElement": "method java.lang.String akasha.core.JsObject::toString_() @ akasha.core.JsString",
    "oldElement": "method java.lang.String akasha.core.JsString::toString_()",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT"
    },
    "attachments": {
      "classQualifiedName": "akasha.core.JsString",
      "classSimpleName": "JsString",
      "elementKind": "method",
      "methodName": "toString_",
      "newClass": "akasha.core.JsObject",
      "oldClass": "akasha.core.JsString",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.method.movedToSuperClass",
    "description": "The method used to be declared in class 'akasha.core.RegExp' but is now declared in superclass 'akasha.core.JsObject'.",
    "newElement": "method java.lang.String akasha.core.JsObject::toString_() @ akasha.core.RegExp",
    "oldElement": "method java.lang.String akasha.core.RegExp::toString_()",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT"
    },
    "attachments": {
      "classQualifiedName": "akasha.core.RegExp",
      "classSimpleName": "RegExp",
      "elementKind": "method",
      "methodName": "toString_",
      "newClass": "akasha.core.JsObject",
      "oldClass": "akasha.core.RegExp",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.method.added",
    "description": "Method was added.",
    "newElement": "method java.lang.String akasha.crypto.Crypto::randomUUID()",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.crypto.Crypto",
      "classSimpleName": "Crypto",
      "elementKind": "method",
      "methodName": "randomUUID",
      "package": "akasha.crypto"
    }
  },
  {
    "code": "java.method.addedToInterface",
    "description": "Method was added to an interface.",
    "newElement": "method java.lang.String akasha.gpu.GPURenderPassColorAttachment::loadOp()",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "NON_BREAKING",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.gpu.GPURenderPassColorAttachment",
      "classSimpleName": "GPURenderPassColorAttachment",
      "elementKind": "method",
      "methodName": "loadOp",
      "package": "akasha.gpu"
    }
  },
  {
    "code": "java.method.addedToInterface",
    "description": "Method was added to an interface.",
    "newElement": "method java.lang.String akasha.gpu.GPURenderPassDepthStencilAttachment::depthLoadOp()",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "NON_BREAKING",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.gpu.GPURenderPassDepthStencilAttachment",
      "classSimpleName": "GPURenderPassDepthStencilAttachment",
      "elementKind": "method",
      "methodName": "depthLoadOp",
      "package": "akasha.gpu"
    }
  },
  {
    "code": "java.method.addedToInterface",
    "description": "Method was added to an interface.",
    "newElement": "method java.lang.String akasha.gpu.GPURenderPassDepthStencilAttachment::stencilLoadOp()",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "NON_BREAKING",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.gpu.GPURenderPassDepthStencilAttachment",
      "classSimpleName": "GPURenderPassDepthStencilAttachment",
      "elementKind": "method",
      "methodName": "stencilLoadOp",
      "package": "akasha.gpu"
    }
  },
  {
    "code": "java.method.added",
    "description": "Method was added.",
    "newElement": "method java.lang.String akasha.xr.XRSession::depthDataFormat()",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.xr.XRSession",
      "classSimpleName": "XRSession",
      "elementKind": "method",
      "methodName": "depthDataFormat",
      "package": "akasha.xr"
    }
  },
  {
    "code": "java.method.added",
    "description": "Method was added.",
    "newElement": "method java.lang.String akasha.xr.XRSession::depthUsage()",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.xr.XRSession",
      "classSimpleName": "XRSession",
      "elementKind": "method",
      "methodName": "depthUsage",
      "package": "akasha.xr"
    }
  },
  {
    "code": "java.method.added",
    "description": "Method was added.",
    "newElement": "method java.lang.String akasha.xr.XRSession::environmentBlendMode()",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.xr.XRSession",
      "classSimpleName": "XRSession",
      "elementKind": "method",
      "methodName": "environmentBlendMode",
      "package": "akasha.xr"
    }
  },
  {
    "code": "java.method.added",
    "description": "Method was added.",
    "newElement": "method java.lang.String akasha.xr.XRSession::interactionMode()",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.xr.XRSession",
      "classSimpleName": "XRSession",
      "elementKind": "method",
      "methodName": "interactionMode",
      "package": "akasha.xr"
    }
  },
  {
    "code": "java.method.added",
    "description": "Method was added.",
    "newElement": "method java.lang.String akasha.xr.XRSession::preferredReflectionFormat()",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.xr.XRSession",
      "classSimpleName": "XRSession",
      "elementKind": "method",
      "methodName": "preferredReflectionFormat",
      "package": "akasha.xr"
    }
  },
  {
    "code": "java.method.added",
    "description": "Method was added.",
    "newElement": "method jsinterop.base.Any akasha.AbortSignal::reason()",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.AbortSignal",
      "classSimpleName": "AbortSignal",
      "elementKind": "method",
      "methodName": "reason",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.addedToInterface",
    "description": "Method was added to an interface.",
    "newElement": "method jsinterop.base.JsPropertyMap<akasha.gpu.GPUShaderModuleCompilationHint> akasha.gpu.GPUShaderModuleDescriptor::hints()",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "NON_BREAKING",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.gpu.GPUShaderModuleDescriptor",
      "classSimpleName": "GPUShaderModuleDescriptor",
      "elementKind": "method",
      "methodName": "hints",
      "package": "akasha.gpu"
    }
  },
  {
    "code": "java.method.added",
    "description": "Method was added.",
    "newElement": "method void akasha.AbortController::abort(java.lang.Object)",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.AbortController",
      "classSimpleName": "AbortController",
      "elementKind": "method",
      "methodName": "abort",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.added",
    "description": "Method was added.",
    "newElement": "method void akasha.AbortSignal::throwIfAborted()",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.AbortSignal",
      "classSimpleName": "AbortSignal",
      "elementKind": "method",
      "methodName": "throwIfAborted",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.added",
    "description": "Method was added.",
    "newElement": "method void akasha.CanvasRenderingContext2D::roundRect(double, double, double, double, akasha.DOMPointInit)",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.CanvasRenderingContext2D",
      "classSimpleName": "CanvasRenderingContext2D",
      "elementKind": "method",
      "methodName": "roundRect",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.added",
    "description": "Method was added.",
    "newElement": "method void akasha.CanvasRenderingContext2D::roundRect(double, double, double, double, double)",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.CanvasRenderingContext2D",
      "classSimpleName": "CanvasRenderingContext2D",
      "elementKind": "method",
      "methodName": "roundRect",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.added",
    "description": "Method was added.",
    "newElement": "method void akasha.HTMLInputElement::showPicker()",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.HTMLInputElement",
      "classSimpleName": "HTMLInputElement",
      "elementKind": "method",
      "methodName": "showPicker",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.added",
    "description": "Method was added.",
    "newElement": "method void akasha.OffscreenCanvasRenderingContext2D::roundRect(double, double, double, double, akasha.DOMPointInit)",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.OffscreenCanvasRenderingContext2D",
      "classSimpleName": "OffscreenCanvasRenderingContext2D",
      "elementKind": "method",
      "methodName": "roundRect",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.added",
    "description": "Method was added.",
    "newElement": "method void akasha.OffscreenCanvasRenderingContext2D::roundRect(double, double, double, double, double)",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.OffscreenCanvasRenderingContext2D",
      "classSimpleName": "OffscreenCanvasRenderingContext2D",
      "elementKind": "method",
      "methodName": "roundRect",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.added",
    "description": "Method was added.",
    "newElement": "method void akasha.Path2D::roundRect(double, double, double, double, akasha.DOMPointInit)",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.Path2D",
      "classSimpleName": "Path2D",
      "elementKind": "method",
      "methodName": "roundRect",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.added",
    "description": "Method was added.",
    "newElement": "method void akasha.Path2D::roundRect(double, double, double, double, double)",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.Path2D",
      "classSimpleName": "Path2D",
      "elementKind": "method",
      "methodName": "roundRect",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.addedToInterface",
    "description": "Method was added to an interface.",
    "newElement": "method void akasha.gpu.GPUCanvasConfiguration::setViewFormats(akasha.lang.JsArray<java.lang.String>)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "NON_BREAKING",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.gpu.GPUCanvasConfiguration",
      "classSimpleName": "GPUCanvasConfiguration",
      "elementKind": "method",
      "methodName": "setViewFormats",
      "package": "akasha.gpu"
    }
  },
  {
    "code": "java.method.defaultMethodAddedToInterface",
    "description": "A default method has been added to the interface.",
    "newElement": "method void akasha.gpu.GPUCanvasConfiguration::setViewFormats(java.lang.String[])",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.gpu.GPUCanvasConfiguration",
      "classSimpleName": "GPUCanvasConfiguration",
      "elementKind": "method",
      "methodName": "setViewFormats",
      "package": "akasha.gpu"
    }
  },
  {
    "code": "java.method.added",
    "description": "Method was added.",
    "newElement": "method void akasha.gpu.GPUCommandEncoder::clearBuffer(akasha.gpu.GPUBuffer)",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.gpu.GPUCommandEncoder",
      "classSimpleName": "GPUCommandEncoder",
      "elementKind": "method",
      "methodName": "clearBuffer",
      "package": "akasha.gpu"
    }
  },
  {
    "code": "java.method.added",
    "description": "Method was added.",
    "newElement": "method void akasha.gpu.GPUCommandEncoder::clearBuffer(akasha.gpu.GPUBuffer, int)",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.gpu.GPUCommandEncoder",
      "classSimpleName": "GPUCommandEncoder",
      "elementKind": "method",
      "methodName": "clearBuffer",
      "package": "akasha.gpu"
    }
  },
  {
    "code": "java.method.added",
    "description": "Method was added.",
    "newElement": "method void akasha.gpu.GPUCommandEncoder::clearBuffer(akasha.gpu.GPUBuffer, int, int)",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.gpu.GPUCommandEncoder",
      "classSimpleName": "GPUCommandEncoder",
      "elementKind": "method",
      "methodName": "clearBuffer",
      "package": "akasha.gpu"
    }
  },
  {
    "code": "java.method.added",
    "description": "Method was added.",
    "newElement": "method void akasha.gpu.GPUComputePassEncoder::end()",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.gpu.GPUComputePassEncoder",
      "classSimpleName": "GPUComputePassEncoder",
      "elementKind": "method",
      "methodName": "end",
      "package": "akasha.gpu"
    }
  },
  {
    "code": "java.method.addedToInterface",
    "description": "Method was added to an interface.",
    "newElement": "method void akasha.gpu.GPUImageCopyExternalImage::setFlipY(boolean)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "NON_BREAKING",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.gpu.GPUImageCopyExternalImage",
      "classSimpleName": "GPUImageCopyExternalImage",
      "elementKind": "method",
      "methodName": "setFlipY",
      "package": "akasha.gpu"
    }
  },
  {
    "code": "java.method.addedToInterface",
    "description": "Method was added to an interface.",
    "newElement": "method void akasha.gpu.GPURenderPassColorAttachment::setClearValue(akasha.gpu.GPUColor)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "NON_BREAKING",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.gpu.GPURenderPassColorAttachment",
      "classSimpleName": "GPURenderPassColorAttachment",
      "elementKind": "method",
      "methodName": "setClearValue",
      "package": "akasha.gpu"
    }
  },
  {
    "code": "java.method.defaultMethodAddedToInterface",
    "description": "A default method has been added to the interface.",
    "newElement": "method void akasha.gpu.GPURenderPassColorAttachment::setClearValue(akasha.gpu.GPUColorDict)",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.gpu.GPURenderPassColorAttachment",
      "classSimpleName": "GPURenderPassColorAttachment",
      "elementKind": "method",
      "methodName": "setClearValue",
      "package": "akasha.gpu"
    }
  },
  {
    "code": "java.method.defaultMethodAddedToInterface",
    "description": "A default method has been added to the interface.",
    "newElement": "method void akasha.gpu.GPURenderPassColorAttachment::setClearValue(akasha.lang.JsArray<java.lang.Double>)",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.gpu.GPURenderPassColorAttachment",
      "classSimpleName": "GPURenderPassColorAttachment",
      "elementKind": "method",
      "methodName": "setClearValue",
      "package": "akasha.gpu"
    }
  },
  {
    "code": "java.method.defaultMethodAddedToInterface",
    "description": "A default method has been added to the interface.",
    "newElement": "method void akasha.gpu.GPURenderPassColorAttachment::setClearValue(double[])",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.gpu.GPURenderPassColorAttachment",
      "classSimpleName": "GPURenderPassColorAttachment",
      "elementKind": "method",
      "methodName": "setClearValue",
      "package": "akasha.gpu"
    }
  },
  {
    "code": "java.method.addedToInterface",
    "description": "Method was added to an interface.",
    "newElement": "method void akasha.gpu.GPURenderPassColorAttachment::setLoadOp(java.lang.String)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "NON_BREAKING",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.gpu.GPURenderPassColorAttachment",
      "classSimpleName": "GPURenderPassColorAttachment",
      "elementKind": "method",
      "methodName": "setLoadOp",
      "package": "akasha.gpu"
    }
  },
  {
    "code": "java.method.addedToInterface",
    "description": "Method was added to an interface.",
    "newElement": "method void akasha.gpu.GPURenderPassDepthStencilAttachment::setDepthClearValue(float)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "NON_BREAKING",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.gpu.GPURenderPassDepthStencilAttachment",
      "classSimpleName": "GPURenderPassDepthStencilAttachment",
      "elementKind": "method",
      "methodName": "setDepthClearValue",
      "package": "akasha.gpu"
    }
  },
  {
    "code": "java.method.addedToInterface",
    "description": "Method was added to an interface.",
    "newElement": "method void akasha.gpu.GPURenderPassDepthStencilAttachment::setDepthLoadOp(java.lang.String)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "NON_BREAKING",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.gpu.GPURenderPassDepthStencilAttachment",
      "classSimpleName": "GPURenderPassDepthStencilAttachment",
      "elementKind": "method",
      "methodName": "setDepthLoadOp",
      "package": "akasha.gpu"
    }
  },
  {
    "code": "java.method.addedToInterface",
    "description": "Method was added to an interface.",
    "newElement": "method void akasha.gpu.GPURenderPassDepthStencilAttachment::setStencilClearValue(int)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "NON_BREAKING",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.gpu.GPURenderPassDepthStencilAttachment",
      "classSimpleName": "GPURenderPassDepthStencilAttachment",
      "elementKind": "method",
      "methodName": "setStencilClearValue",
      "package": "akasha.gpu"
    }
  },
  {
    "code": "java.method.addedToInterface",
    "description": "Method was added to an interface.",
    "newElement": "method void akasha.gpu.GPURenderPassDepthStencilAttachment::setStencilLoadOp(java.lang.String)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "NON_BREAKING",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.gpu.GPURenderPassDepthStencilAttachment",
      "classSimpleName": "GPURenderPassDepthStencilAttachment",
      "elementKind": "method",
      "methodName": "setStencilLoadOp",
      "package": "akasha.gpu"
    }
  },
  {
    "code": "java.method.added",
    "description": "Method was added.",
    "newElement": "method void akasha.gpu.GPURenderPassEncoder::end()",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.gpu.GPURenderPassEncoder",
      "classSimpleName": "GPURenderPassEncoder",
      "elementKind": "method",
      "methodName": "end",
      "package": "akasha.gpu"
    }
  },
  {
    "code": "java.method.addedToInterface",
    "description": "Method was added to an interface.",
    "newElement": "method void akasha.gpu.GPUShaderModuleDescriptor::setHints(jsinterop.base.JsPropertyMap<akasha.gpu.GPUShaderModuleCompilationHint>)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "NON_BREAKING",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.gpu.GPUShaderModuleDescriptor",
      "classSimpleName": "GPUShaderModuleDescriptor",
      "elementKind": "method",
      "methodName": "setHints",
      "package": "akasha.gpu"
    }
  },
  {
    "code": "java.method.addedToInterface",
    "description": "Method was added to an interface.",
    "newElement": "method void akasha.gpu.GPUTextureDescriptor::setViewFormats(akasha.lang.JsArray<java.lang.String>)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "NON_BREAKING",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.gpu.GPUTextureDescriptor",
      "classSimpleName": "GPUTextureDescriptor",
      "elementKind": "method",
      "methodName": "setViewFormats",
      "package": "akasha.gpu"
    }
  },
  {
    "code": "java.method.defaultMethodAddedToInterface",
    "description": "A default method has been added to the interface.",
    "newElement": "method void akasha.gpu.GPUTextureDescriptor::setViewFormats(java.lang.String[])",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.gpu.GPUTextureDescriptor",
      "classSimpleName": "GPUTextureDescriptor",
      "elementKind": "method",
      "methodName": "setViewFormats",
      "package": "akasha.gpu"
    }
  },
  {
    "code": "java.method.addedToInterface",
    "description": "Method was added to an interface.",
    "newElement": "method void akasha.xr.XRSessionInit::setDepthSensing(akasha.xr.XRDepthStateInit)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "NON_BREAKING",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.xr.XRSessionInit",
      "classSimpleName": "XRSessionInit",
      "elementKind": "method",
      "methodName": "setDepthSensing",
      "package": "akasha.xr"
    }
  },
  {
    "code": "java.method.addedToInterface",
    "description": "Method was added to an interface.",
    "newElement": "method void akasha.xr.XRSessionInit::setDomOverlay(akasha.xr.XRDOMOverlayInit)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "NON_BREAKING",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.xr.XRSessionInit",
      "classSimpleName": "XRSessionInit",
      "elementKind": "method",
      "methodName": "setDomOverlay",
      "package": "akasha.xr"
    }
  },
  {
    "code": "java.annotation.noLongerPresent",
    "description": "Old API referenced the annotation type but the new API version no longer does.",
    "oldElement": "@interface akasha.PermissionName",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "NON_BREAKING",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.PermissionName",
      "classSimpleName": "PermissionName",
      "elementKind": "@interface",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.noLongerPresent",
    "description": "Old API referenced the annotation type but the new API version no longer does.",
    "oldElement": "@interface akasha.gl.TextureMagnificationFilter",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "NON_BREAKING",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.gl.TextureMagnificationFilter",
      "classSimpleName": "TextureMagnificationFilter",
      "elementKind": "@interface",
      "package": "akasha.gl"
    }
  },
  {
    "code": "java.annotation.noLongerPresent",
    "description": "Old API referenced the annotation type but the new API version no longer does.",
    "oldElement": "@interface akasha.gl.TextureMinificationFilter",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "NON_BREAKING",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.gl.TextureMinificationFilter",
      "classSimpleName": "TextureMinificationFilter",
      "elementKind": "@interface",
      "package": "akasha.gl"
    }
  },
  {
    "code": "java.annotation.noLongerPresent",
    "description": "Old API referenced the annotation type but the new API version no longer does.",
    "oldElement": "@interface akasha.gl.TextureWrapMode",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "NON_BREAKING",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.gl.TextureWrapMode",
      "classSimpleName": "TextureWrapMode",
      "elementKind": "@interface",
      "package": "akasha.gl"
    }
  },
  {
    "code": "java.annotation.noLongerPresent",
    "description": "Old API referenced the annotation type but the new API version no longer does.",
    "oldElement": "@interface akasha.gpu.GPUPipelineStatisticName",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "NON_BREAKING",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.gpu.GPUPipelineStatisticName",
      "classSimpleName": "GPUPipelineStatisticName",
      "elementKind": "@interface",
      "package": "akasha.gpu"
    }
  },
  {
    "code": "java.class.removed",
    "description": "Class was removed.",
    "oldElement": "class akasha.rtc.RTCIdentityProviderGlobalScope",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.rtc.RTCIdentityProviderGlobalScope",
      "classSimpleName": "RTCIdentityProviderGlobalScope",
      "elementKind": "class",
      "package": "akasha.rtc"
    }
  },
  {
    "code": "java.field.removedWithConstant",
    "description": "Field with constant value has been removed.",
    "oldElement": "field akasha.gpu.GPUFeatureName.pipeline_statistics_query",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "NON_BREAKING",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.gpu.GPUFeatureName",
      "classSimpleName": "GPUFeatureName",
      "elementKind": "field",
      "fieldName": "pipeline_statistics_query",
      "package": "akasha.gpu"
    }
  },
  {
    "code": "java.field.removedWithConstant",
    "description": "Field with constant value has been removed.",
    "oldElement": "field akasha.gpu.GPUQueryType.pipeline_statistics",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "NON_BREAKING",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.gpu.GPUQueryType",
      "classSimpleName": "GPUQueryType",
      "elementKind": "field",
      "fieldName": "pipeline_statistics",
      "package": "akasha.gpu"
    }
  },
  {
    "code": "java.class.removed",
    "description": "Class was removed.",
    "oldElement": "interface akasha.CameraDevicePermissionDescriptor",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.CameraDevicePermissionDescriptor",
      "classSimpleName": "CameraDevicePermissionDescriptor",
      "elementKind": "interface",
      "package": "akasha"
    }
  },
  {
    "code": "java.class.removed",
    "description": "Class was removed.",
    "oldElement": "interface akasha.DevicePermissionDescriptor",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.DevicePermissionDescriptor",
      "classSimpleName": "DevicePermissionDescriptor",
      "elementKind": "interface",
      "package": "akasha"
    }
  },
  {
    "code": "java.class.removed",
    "description": "Class was removed.",
    "oldElement": "interface akasha.gpu.GPULoadOpOrFloatUnion",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.gpu.GPULoadOpOrFloatUnion",
      "classSimpleName": "GPULoadOpOrFloatUnion",
      "elementKind": "interface",
      "package": "akasha.gpu"
    }
  },
  {
    "code": "java.class.removed",
    "description": "Class was removed.",
    "oldElement": "interface akasha.gpu.GPULoadOpOrGPUColorUnion",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.gpu.GPULoadOpOrGPUColorUnion",
      "classSimpleName": "GPULoadOpOrGPUColorUnion",
      "elementKind": "interface",
      "package": "akasha.gpu"
    }
  },
  {
    "code": "java.class.removed",
    "description": "Class was removed.",
    "oldElement": "interface akasha.gpu.GPULoadOpOrGPUStencilValueUnion",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.gpu.GPULoadOpOrGPUStencilValueUnion",
      "classSimpleName": "GPULoadOpOrGPUStencilValueUnion",
      "elementKind": "interface",
      "package": "akasha.gpu"
    }
  },
  {
    "code": "java.class.removed",
    "description": "Class was removed.",
    "oldElement": "interface akasha.gpu.GPURenderPassDepthStencilAttachment.Step1",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.gpu.GPURenderPassDepthStencilAttachment.Step1",
      "classSimpleName": "Step1",
      "elementKind": "interface",
      "package": "akasha.gpu"
    }
  },
  {
    "code": "java.class.removed",
    "description": "Class was removed.",
    "oldElement": "interface akasha.gpu.GPURenderPassDepthStencilAttachment.Step2",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.gpu.GPURenderPassDepthStencilAttachment.Step2",
      "classSimpleName": "Step2",
      "elementKind": "interface",
      "package": "akasha.gpu"
    }
  },
  {
    "code": "java.class.removed",
    "description": "Class was removed.",
    "oldElement": "interface akasha.gpu.GPURenderPassDepthStencilAttachment.Step3",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.gpu.GPURenderPassDepthStencilAttachment.Step3",
      "classSimpleName": "Step3",
      "elementKind": "interface",
      "package": "akasha.gpu"
    }
  },
  {
    "code": "java.class.removed",
    "description": "Class was removed.",
    "oldElement": "interface akasha.gpu.GPURenderPassDepthStencilAttachment.Step4",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.gpu.GPURenderPassDepthStencilAttachment.Step4",
      "classSimpleName": "Step4",
      "elementKind": "interface",
      "package": "akasha.gpu"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.gpu.GPULoadOpOrFloatUnion akasha.gpu.GPURenderPassDepthStencilAttachment::depthLoadValue()",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.gpu.GPURenderPassDepthStencilAttachment",
      "classSimpleName": "GPURenderPassDepthStencilAttachment",
      "elementKind": "method",
      "methodName": "depthLoadValue",
      "package": "akasha.gpu"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.gpu.GPULoadOpOrGPUColorUnion akasha.gpu.GPURenderPassColorAttachment::loadValue()",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.gpu.GPURenderPassColorAttachment",
      "classSimpleName": "GPURenderPassColorAttachment",
      "elementKind": "method",
      "methodName": "loadValue",
      "package": "akasha.gpu"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.gpu.GPULoadOpOrGPUStencilValueUnion akasha.gpu.GPURenderPassDepthStencilAttachment::stencilLoadValue()",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.gpu.GPURenderPassDepthStencilAttachment",
      "classSimpleName": "GPURenderPassDepthStencilAttachment",
      "elementKind": "method",
      "methodName": "stencilLoadValue",
      "package": "akasha.gpu"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.gpu.GPUQuerySetDescriptor.Builder akasha.gpu.GPUQuerySetDescriptor.Builder::pipelineStatistics(akasha.lang.JsArray<java.lang.String>)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.gpu.GPUQuerySetDescriptor.Builder",
      "classSimpleName": "Builder",
      "elementKind": "method",
      "methodName": "pipelineStatistics",
      "package": "akasha.gpu"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.gpu.GPUQuerySetDescriptor.Builder akasha.gpu.GPUQuerySetDescriptor.Builder::pipelineStatistics(java.lang.String[])",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.gpu.GPUQuerySetDescriptor.Builder",
      "classSimpleName": "Builder",
      "elementKind": "method",
      "methodName": "pipelineStatistics",
      "package": "akasha.gpu"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.gpu.GPURenderPassColorAttachment.Step2 akasha.gpu.GPURenderPassColorAttachment.Step1::loadValue(akasha.gpu.GPUColor)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.gpu.GPURenderPassColorAttachment.Step1",
      "classSimpleName": "Step1",
      "elementKind": "method",
      "methodName": "loadValue",
      "package": "akasha.gpu"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.gpu.GPURenderPassColorAttachment.Step2 akasha.gpu.GPURenderPassColorAttachment.Step1::loadValue(akasha.gpu.GPUColorDict)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.gpu.GPURenderPassColorAttachment.Step1",
      "classSimpleName": "Step1",
      "elementKind": "method",
      "methodName": "loadValue",
      "package": "akasha.gpu"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.gpu.GPURenderPassColorAttachment.Step2 akasha.gpu.GPURenderPassColorAttachment.Step1::loadValue(akasha.gpu.GPULoadOpOrGPUColorUnion)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.gpu.GPURenderPassColorAttachment.Step1",
      "classSimpleName": "Step1",
      "elementKind": "method",
      "methodName": "loadValue",
      "package": "akasha.gpu"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.gpu.GPURenderPassColorAttachment.Step2 akasha.gpu.GPURenderPassColorAttachment.Step1::loadValue(akasha.lang.JsArray<java.lang.Double>)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.gpu.GPURenderPassColorAttachment.Step1",
      "classSimpleName": "Step1",
      "elementKind": "method",
      "methodName": "loadValue",
      "package": "akasha.gpu"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.gpu.GPURenderPassColorAttachment.Step2 akasha.gpu.GPURenderPassColorAttachment.Step1::loadValue(double[])",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.gpu.GPURenderPassColorAttachment.Step1",
      "classSimpleName": "Step1",
      "elementKind": "method",
      "methodName": "loadValue",
      "package": "akasha.gpu"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.gpu.GPURenderPassColorAttachment.Step2 akasha.gpu.GPURenderPassColorAttachment.Step1::loadValue(java.lang.String)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.gpu.GPURenderPassColorAttachment.Step1",
      "classSimpleName": "Step1",
      "elementKind": "method",
      "methodName": "loadValue",
      "package": "akasha.gpu"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.lang.JsArray<java.lang.String> akasha.gpu.GPUQuerySetDescriptor::pipelineStatistics()",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.gpu.GPUQuerySetDescriptor",
      "classSimpleName": "GPUQuerySetDescriptor",
      "elementKind": "method",
      "methodName": "pipelineStatistics",
      "package": "akasha.gpu"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.rtc.RTCAudioSourceStats.Builder akasha.rtc.RTCAudioSourceStats.Step4::trackIdentifier(java.lang.String)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.rtc.RTCAudioSourceStats.Step4",
      "classSimpleName": "Step4",
      "elementKind": "method",
      "methodName": "trackIdentifier",
      "package": "akasha.rtc"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.rtc.RTCAudioSourceStats.Step4 akasha.rtc.RTCAudioSourceStats.Step3::kind(java.lang.String)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.rtc.RTCAudioSourceStats.Step3",
      "classSimpleName": "Step3",
      "elementKind": "method",
      "methodName": "kind",
      "package": "akasha.rtc"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.rtc.RTCCertificateStats.Builder akasha.rtc.RTCCertificateStats.Step5::fingerprintAlgorithm(java.lang.String)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.rtc.RTCCertificateStats.Step5",
      "classSimpleName": "Step5",
      "elementKind": "method",
      "methodName": "fingerprintAlgorithm",
      "package": "akasha.rtc"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.rtc.RTCCertificateStats.Step4 akasha.rtc.RTCCertificateStats.Step3::base64Certificate(java.lang.String)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.rtc.RTCCertificateStats.Step3",
      "classSimpleName": "Step3",
      "elementKind": "method",
      "methodName": "base64Certificate",
      "package": "akasha.rtc"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.rtc.RTCCertificateStats.Step5 akasha.rtc.RTCCertificateStats.Step4::fingerprint(java.lang.String)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.rtc.RTCCertificateStats.Step4",
      "classSimpleName": "Step4",
      "elementKind": "method",
      "methodName": "fingerprint",
      "package": "akasha.rtc"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.rtc.RTCCodecStats.Builder akasha.rtc.RTCCodecStats.Step5::transportId(java.lang.String)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.rtc.RTCCodecStats.Step5",
      "classSimpleName": "Step5",
      "elementKind": "method",
      "methodName": "transportId",
      "package": "akasha.rtc"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.rtc.RTCCodecStats.Step4 akasha.rtc.RTCCodecStats.Step3::mimeType(java.lang.String)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.rtc.RTCCodecStats.Step3",
      "classSimpleName": "Step3",
      "elementKind": "method",
      "methodName": "mimeType",
      "package": "akasha.rtc"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.rtc.RTCCodecStats.Step5 akasha.rtc.RTCCodecStats.Step4::payloadType(int)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.rtc.RTCCodecStats.Step4",
      "classSimpleName": "Step4",
      "elementKind": "method",
      "methodName": "payloadType",
      "package": "akasha.rtc"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.rtc.RTCIceCandidatePairStats.Builder akasha.rtc.RTCIceCandidatePairStats.Step6::transportId(java.lang.String)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.rtc.RTCIceCandidatePairStats.Step6",
      "classSimpleName": "Step6",
      "elementKind": "method",
      "methodName": "transportId",
      "package": "akasha.rtc"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.rtc.RTCIceCandidatePairStats.Step4 akasha.rtc.RTCIceCandidatePairStats.Step3::localCandidateId(java.lang.String)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.rtc.RTCIceCandidatePairStats.Step3",
      "classSimpleName": "Step3",
      "elementKind": "method",
      "methodName": "localCandidateId",
      "package": "akasha.rtc"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.rtc.RTCIceCandidatePairStats.Step5 akasha.rtc.RTCIceCandidatePairStats.Step4::remoteCandidateId(java.lang.String)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.rtc.RTCIceCandidatePairStats.Step4",
      "classSimpleName": "Step4",
      "elementKind": "method",
      "methodName": "remoteCandidateId",
      "package": "akasha.rtc"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.rtc.RTCIceCandidatePairStats.Step6 akasha.rtc.RTCIceCandidatePairStats.Step5::state(java.lang.String)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.rtc.RTCIceCandidatePairStats.Step5",
      "classSimpleName": "Step5",
      "elementKind": "method",
      "methodName": "state",
      "package": "akasha.rtc"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.rtc.RTCIceCandidateStats.Builder akasha.rtc.RTCIceCandidateStats.Step4::transportId(java.lang.String)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.rtc.RTCIceCandidateStats.Step4",
      "classSimpleName": "Step4",
      "elementKind": "method",
      "methodName": "transportId",
      "package": "akasha.rtc"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.rtc.RTCIceCandidateStats.Step4 akasha.rtc.RTCIceCandidateStats.Step3::candidateType(java.lang.String)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.rtc.RTCIceCandidateStats.Step3",
      "classSimpleName": "Step3",
      "elementKind": "method",
      "methodName": "candidateType",
      "package": "akasha.rtc"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.rtc.RTCIdentityAssertionResult akasha.rtc.RTCIdentityAssertionResult.Step1::idp(akasha.rtc.RTCIdentityProviderDetails)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.rtc.RTCIdentityAssertionResult.Step1",
      "classSimpleName": "Step1",
      "elementKind": "method",
      "methodName": "idp",
      "package": "akasha.rtc"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.rtc.RTCIdentityAssertionResult.Step1 akasha.rtc.RTCIdentityAssertionResult::assertion(java.lang.String)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.rtc.RTCIdentityAssertionResult",
      "classSimpleName": "RTCIdentityAssertionResult",
      "elementKind": "method",
      "methodName": "assertion",
      "package": "akasha.rtc"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.rtc.RTCIdentityValidationResult akasha.rtc.RTCIdentityValidationResult.Step1::identity(java.lang.String)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.rtc.RTCIdentityValidationResult.Step1",
      "classSimpleName": "Step1",
      "elementKind": "method",
      "methodName": "identity",
      "package": "akasha.rtc"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.rtc.RTCIdentityValidationResult.Step1 akasha.rtc.RTCIdentityValidationResult::contents(java.lang.String)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.rtc.RTCIdentityValidationResult",
      "classSimpleName": "RTCIdentityValidationResult",
      "elementKind": "method",
      "methodName": "contents",
      "package": "akasha.rtc"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.rtc.RTCInboundRtpStreamStats.Step4 akasha.rtc.RTCInboundRtpStreamStats.Step3::kind(java.lang.String)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.rtc.RTCInboundRtpStreamStats.Step3",
      "classSimpleName": "Step3",
      "elementKind": "method",
      "methodName": "kind",
      "package": "akasha.rtc"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.rtc.RTCInboundRtpStreamStats.Step5 akasha.rtc.RTCInboundRtpStreamStats.Step4::ssrc(int)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.rtc.RTCInboundRtpStreamStats.Step4",
      "classSimpleName": "Step4",
      "elementKind": "method",
      "methodName": "ssrc",
      "package": "akasha.rtc"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.rtc.RTCMediaSourceStats.Builder akasha.rtc.RTCMediaSourceStats.Step4::trackIdentifier(java.lang.String)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.rtc.RTCMediaSourceStats.Step4",
      "classSimpleName": "Step4",
      "elementKind": "method",
      "methodName": "trackIdentifier",
      "package": "akasha.rtc"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.rtc.RTCMediaSourceStats.Step4 akasha.rtc.RTCMediaSourceStats.Step3::kind(java.lang.String)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.rtc.RTCMediaSourceStats.Step3",
      "classSimpleName": "Step3",
      "elementKind": "method",
      "methodName": "kind",
      "package": "akasha.rtc"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.rtc.RTCOutboundRtpStreamStats.Builder akasha.rtc.RTCOutboundRtpStreamStats.Step4::ssrc(int)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.rtc.RTCOutboundRtpStreamStats.Step4",
      "classSimpleName": "Step4",
      "elementKind": "method",
      "methodName": "ssrc",
      "package": "akasha.rtc"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.rtc.RTCOutboundRtpStreamStats.Step4 akasha.rtc.RTCOutboundRtpStreamStats.Step3::kind(java.lang.String)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.rtc.RTCOutboundRtpStreamStats.Step3",
      "classSimpleName": "Step3",
      "elementKind": "method",
      "methodName": "kind",
      "package": "akasha.rtc"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.rtc.RTCReceivedRtpStreamStats.Builder akasha.rtc.RTCReceivedRtpStreamStats.Step4::ssrc(int)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.rtc.RTCReceivedRtpStreamStats.Step4",
      "classSimpleName": "Step4",
      "elementKind": "method",
      "methodName": "ssrc",
      "package": "akasha.rtc"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.rtc.RTCReceivedRtpStreamStats.Step4 akasha.rtc.RTCReceivedRtpStreamStats.Step3::kind(java.lang.String)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.rtc.RTCReceivedRtpStreamStats.Step3",
      "classSimpleName": "Step3",
      "elementKind": "method",
      "methodName": "kind",
      "package": "akasha.rtc"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.rtc.RTCRemoteInboundRtpStreamStats.Builder akasha.rtc.RTCRemoteInboundRtpStreamStats.Step4::ssrc(int)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.rtc.RTCRemoteInboundRtpStreamStats.Step4",
      "classSimpleName": "Step4",
      "elementKind": "method",
      "methodName": "ssrc",
      "package": "akasha.rtc"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.rtc.RTCRemoteInboundRtpStreamStats.Step4 akasha.rtc.RTCRemoteInboundRtpStreamStats.Step3::kind(java.lang.String)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.rtc.RTCRemoteInboundRtpStreamStats.Step3",
      "classSimpleName": "Step3",
      "elementKind": "method",
      "methodName": "kind",
      "package": "akasha.rtc"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.rtc.RTCRemoteOutboundRtpStreamStats.Builder akasha.rtc.RTCRemoteOutboundRtpStreamStats.Step4::ssrc(int)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.rtc.RTCRemoteOutboundRtpStreamStats.Step4",
      "classSimpleName": "Step4",
      "elementKind": "method",
      "methodName": "ssrc",
      "package": "akasha.rtc"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.rtc.RTCRemoteOutboundRtpStreamStats.Step4 akasha.rtc.RTCRemoteOutboundRtpStreamStats.Step3::kind(java.lang.String)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.rtc.RTCRemoteOutboundRtpStreamStats.Step3",
      "classSimpleName": "Step3",
      "elementKind": "method",
      "methodName": "kind",
      "package": "akasha.rtc"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.rtc.RTCRtpStreamStats.Builder akasha.rtc.RTCRtpStreamStats.Step4::ssrc(int)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.rtc.RTCRtpStreamStats.Step4",
      "classSimpleName": "Step4",
      "elementKind": "method",
      "methodName": "ssrc",
      "package": "akasha.rtc"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.rtc.RTCRtpStreamStats.Step4 akasha.rtc.RTCRtpStreamStats.Step3::kind(java.lang.String)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.rtc.RTCRtpStreamStats.Step3",
      "classSimpleName": "Step3",
      "elementKind": "method",
      "methodName": "kind",
      "package": "akasha.rtc"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.rtc.RTCRtpTransceiverStats.Builder akasha.rtc.RTCRtpTransceiverStats.Step4::senderId(java.lang.String)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.rtc.RTCRtpTransceiverStats.Step4",
      "classSimpleName": "Step4",
      "elementKind": "method",
      "methodName": "senderId",
      "package": "akasha.rtc"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.rtc.RTCRtpTransceiverStats.Step4 akasha.rtc.RTCRtpTransceiverStats.Step3::receiverId(java.lang.String)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.rtc.RTCRtpTransceiverStats.Step3",
      "classSimpleName": "Step3",
      "elementKind": "method",
      "methodName": "receiverId",
      "package": "akasha.rtc"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.rtc.RTCSentRtpStreamStats.Builder akasha.rtc.RTCSentRtpStreamStats.Step4::ssrc(int)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.rtc.RTCSentRtpStreamStats.Step4",
      "classSimpleName": "Step4",
      "elementKind": "method",
      "methodName": "ssrc",
      "package": "akasha.rtc"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.rtc.RTCSentRtpStreamStats.Step4 akasha.rtc.RTCSentRtpStreamStats.Step3::kind(java.lang.String)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.rtc.RTCSentRtpStreamStats.Step3",
      "classSimpleName": "Step3",
      "elementKind": "method",
      "methodName": "kind",
      "package": "akasha.rtc"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.rtc.RTCVideoSourceStats.Builder akasha.rtc.RTCVideoSourceStats.Step4::trackIdentifier(java.lang.String)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.rtc.RTCVideoSourceStats.Step4",
      "classSimpleName": "Step4",
      "elementKind": "method",
      "methodName": "trackIdentifier",
      "package": "akasha.rtc"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.rtc.RTCVideoSourceStats.Step4 akasha.rtc.RTCVideoSourceStats.Step3::kind(java.lang.String)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.rtc.RTCVideoSourceStats.Step3",
      "classSimpleName": "Step3",
      "elementKind": "method",
      "methodName": "kind",
      "package": "akasha.rtc"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method void akasha.WebSocket::send(akasha.core.ArrayBuffer)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.WebSocket",
      "classSimpleName": "WebSocket",
      "elementKind": "method",
      "methodName": "send",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method void akasha.gpu.GPUCommandEncoder::fillBuffer(akasha.gpu.GPUBuffer, int, int)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.gpu.GPUCommandEncoder",
      "classSimpleName": "GPUCommandEncoder",
      "elementKind": "method",
      "methodName": "fillBuffer",
      "package": "akasha.gpu"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method void akasha.gpu.GPUComputePassEncoder::beginPipelineStatisticsQuery(akasha.gpu.GPUQuerySet, int)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.gpu.GPUComputePassEncoder",
      "classSimpleName": "GPUComputePassEncoder",
      "elementKind": "method",
      "methodName": "beginPipelineStatisticsQuery",
      "package": "akasha.gpu"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method void akasha.gpu.GPUComputePassEncoder::endPass()",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.gpu.GPUComputePassEncoder",
      "classSimpleName": "GPUComputePassEncoder",
      "elementKind": "method",
      "methodName": "endPass",
      "package": "akasha.gpu"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method void akasha.gpu.GPUComputePassEncoder::endPipelineStatisticsQuery()",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.gpu.GPUComputePassEncoder",
      "classSimpleName": "GPUComputePassEncoder",
      "elementKind": "method",
      "methodName": "endPipelineStatisticsQuery",
      "package": "akasha.gpu"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method void akasha.gpu.GPUQuerySetDescriptor::setPipelineStatistics(akasha.lang.JsArray<java.lang.String>)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.gpu.GPUQuerySetDescriptor",
      "classSimpleName": "GPUQuerySetDescriptor",
      "elementKind": "method",
      "methodName": "setPipelineStatistics",
      "package": "akasha.gpu"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method void akasha.gpu.GPUQuerySetDescriptor::setPipelineStatistics(java.lang.String[])",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.gpu.GPUQuerySetDescriptor",
      "classSimpleName": "GPUQuerySetDescriptor",
      "elementKind": "method",
      "methodName": "setPipelineStatistics",
      "package": "akasha.gpu"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method void akasha.gpu.GPURenderPassColorAttachment::setLoadValue(akasha.gpu.GPUColor)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.gpu.GPURenderPassColorAttachment",
      "classSimpleName": "GPURenderPassColorAttachment",
      "elementKind": "method",
      "methodName": "setLoadValue",
      "package": "akasha.gpu"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method void akasha.gpu.GPURenderPassColorAttachment::setLoadValue(akasha.gpu.GPUColorDict)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.gpu.GPURenderPassColorAttachment",
      "classSimpleName": "GPURenderPassColorAttachment",
      "elementKind": "method",
      "methodName": "setLoadValue",
      "package": "akasha.gpu"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method void akasha.gpu.GPURenderPassColorAttachment::setLoadValue(akasha.gpu.GPULoadOpOrGPUColorUnion)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.gpu.GPURenderPassColorAttachment",
      "classSimpleName": "GPURenderPassColorAttachment",
      "elementKind": "method",
      "methodName": "setLoadValue",
      "package": "akasha.gpu"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method void akasha.gpu.GPURenderPassColorAttachment::setLoadValue(akasha.lang.JsArray<java.lang.Double>)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.gpu.GPURenderPassColorAttachment",
      "classSimpleName": "GPURenderPassColorAttachment",
      "elementKind": "method",
      "methodName": "setLoadValue",
      "package": "akasha.gpu"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method void akasha.gpu.GPURenderPassColorAttachment::setLoadValue(double[])",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.gpu.GPURenderPassColorAttachment",
      "classSimpleName": "GPURenderPassColorAttachment",
      "elementKind": "method",
      "methodName": "setLoadValue",
      "package": "akasha.gpu"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method void akasha.gpu.GPURenderPassColorAttachment::setLoadValue(java.lang.String)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.gpu.GPURenderPassColorAttachment",
      "classSimpleName": "GPURenderPassColorAttachment",
      "elementKind": "method",
      "methodName": "setLoadValue",
      "package": "akasha.gpu"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method void akasha.gpu.GPURenderPassDepthStencilAttachment::setDepthLoadValue(akasha.gpu.GPULoadOpOrFloatUnion)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.gpu.GPURenderPassDepthStencilAttachment",
      "classSimpleName": "GPURenderPassDepthStencilAttachment",
      "elementKind": "method",
      "methodName": "setDepthLoadValue",
      "package": "akasha.gpu"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method void akasha.gpu.GPURenderPassDepthStencilAttachment::setDepthLoadValue(float)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.gpu.GPURenderPassDepthStencilAttachment",
      "classSimpleName": "GPURenderPassDepthStencilAttachment",
      "elementKind": "method",
      "methodName": "setDepthLoadValue",
      "package": "akasha.gpu"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method void akasha.gpu.GPURenderPassDepthStencilAttachment::setDepthLoadValue(java.lang.String)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.gpu.GPURenderPassDepthStencilAttachment",
      "classSimpleName": "GPURenderPassDepthStencilAttachment",
      "elementKind": "method",
      "methodName": "setDepthLoadValue",
      "package": "akasha.gpu"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method void akasha.gpu.GPURenderPassDepthStencilAttachment::setStencilLoadValue(akasha.gpu.GPULoadOpOrGPUStencilValueUnion)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.gpu.GPURenderPassDepthStencilAttachment",
      "classSimpleName": "GPURenderPassDepthStencilAttachment",
      "elementKind": "method",
      "methodName": "setStencilLoadValue",
      "package": "akasha.gpu"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method void akasha.gpu.GPURenderPassDepthStencilAttachment::setStencilLoadValue(int)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.gpu.GPURenderPassDepthStencilAttachment",
      "classSimpleName": "GPURenderPassDepthStencilAttachment",
      "elementKind": "method",
      "methodName": "setStencilLoadValue",
      "package": "akasha.gpu"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method void akasha.gpu.GPURenderPassDepthStencilAttachment::setStencilLoadValue(java.lang.String)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.gpu.GPURenderPassDepthStencilAttachment",
      "classSimpleName": "GPURenderPassDepthStencilAttachment",
      "elementKind": "method",
      "methodName": "setStencilLoadValue",
      "package": "akasha.gpu"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method void akasha.gpu.GPURenderPassEncoder::beginPipelineStatisticsQuery(akasha.gpu.GPUQuerySet, int)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.gpu.GPURenderPassEncoder",
      "classSimpleName": "GPURenderPassEncoder",
      "elementKind": "method",
      "methodName": "beginPipelineStatisticsQuery",
      "package": "akasha.gpu"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method void akasha.gpu.GPURenderPassEncoder::endPass()",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.gpu.GPURenderPassEncoder",
      "classSimpleName": "GPURenderPassEncoder",
      "elementKind": "method",
      "methodName": "endPass",
      "package": "akasha.gpu"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method void akasha.gpu.GPURenderPassEncoder::endPipelineStatisticsQuery()",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.gpu.GPURenderPassEncoder",
      "classSimpleName": "GPURenderPassEncoder",
      "elementKind": "method",
      "methodName": "endPipelineStatisticsQuery",
      "package": "akasha.gpu"
    }
  },
  {
    "code": "java.method.parameterTypeChanged",
    "description": "The type of the parameter changed from 'int' to 'double'.",
    "newElement": "parameter akasha.DragEventInit.Builder akasha.DragEventInit.Builder::movementX(===double===)",
    "oldElement": "parameter akasha.DragEventInit.Builder akasha.DragEventInit.Builder::movementX(===int===)",
    "classification": {
      "SOURCE": "POTENTIALLY_BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.DragEventInit.Builder",
      "classSimpleName": "Builder",
      "elementKind": "parameter",
      "methodName": "movementX",
      "newType": "double",
      "oldType": "int",
      "package": "akasha",
      "parameterIndex": "0"
    }
  },
  {
    "code": "java.method.parameterTypeChanged",
    "description": "The type of the parameter changed from 'int' to 'double'.",
    "newElement": "parameter akasha.DragEventInit.Builder akasha.DragEventInit.Builder::movementY(===double===)",
    "oldElement": "parameter akasha.DragEventInit.Builder akasha.DragEventInit.Builder::movementY(===int===)",
    "classification": {
      "SOURCE": "POTENTIALLY_BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.DragEventInit.Builder",
      "classSimpleName": "Builder",
      "elementKind": "parameter",
      "methodName": "movementY",
      "newType": "double",
      "oldType": "int",
      "package": "akasha",
      "parameterIndex": "0"
    }
  },
  {
    "code": "java.method.parameterTypeChanged",
    "description": "The type of the parameter changed from 'int' to 'double'.",
    "newElement": "parameter akasha.MouseEventInit.Builder akasha.MouseEventInit.Builder::movementX(===double===)",
    "oldElement": "parameter akasha.MouseEventInit.Builder akasha.MouseEventInit.Builder::movementX(===int===)",
    "classification": {
      "SOURCE": "POTENTIALLY_BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.MouseEventInit.Builder",
      "classSimpleName": "Builder",
      "elementKind": "parameter",
      "methodName": "movementX",
      "newType": "double",
      "oldType": "int",
      "package": "akasha",
      "parameterIndex": "0"
    }
  },
  {
    "code": "java.method.parameterTypeChanged",
    "description": "The type of the parameter changed from 'int' to 'double'.",
    "newElement": "parameter akasha.MouseEventInit.Builder akasha.MouseEventInit.Builder::movementY(===double===)",
    "oldElement": "parameter akasha.MouseEventInit.Builder akasha.MouseEventInit.Builder::movementY(===int===)",
    "classification": {
      "SOURCE": "POTENTIALLY_BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.MouseEventInit.Builder",
      "classSimpleName": "Builder",
      "elementKind": "parameter",
      "methodName": "movementY",
      "newType": "double",
      "oldType": "int",
      "package": "akasha",
      "parameterIndex": "0"
    }
  },
  {
    "code": "java.annotation.removed",
    "description": "Element no longer annotated with 'akasha.PermissionName'.",
    "element": "parameter akasha.PermissionDescriptor akasha.PermissionDescriptor::name(===java.lang.String===)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@akasha.PermissionName",
      "annotationType": "akasha.PermissionName",
      "classQualifiedName": "akasha.PermissionDescriptor",
      "classSimpleName": "PermissionDescriptor",
      "elementKind": "parameter",
      "methodName": "name",
      "package": "akasha",
      "parameterIndex": "0"
    }
  },
  {
    "code": "java.method.parameterTypeChanged",
    "description": "The type of the parameter changed from 'int' to 'double'.",
    "newElement": "parameter akasha.PointerEventInit.Builder akasha.PointerEventInit.Builder::movementX(===double===)",
    "oldElement": "parameter akasha.PointerEventInit.Builder akasha.PointerEventInit.Builder::movementX(===int===)",
    "classification": {
      "SOURCE": "POTENTIALLY_BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.PointerEventInit.Builder",
      "classSimpleName": "Builder",
      "elementKind": "parameter",
      "methodName": "movementX",
      "newType": "double",
      "oldType": "int",
      "package": "akasha",
      "parameterIndex": "0"
    }
  },
  {
    "code": "java.method.parameterTypeChanged",
    "description": "The type of the parameter changed from 'int' to 'double'.",
    "newElement": "parameter akasha.PointerEventInit.Builder akasha.PointerEventInit.Builder::movementY(===double===)",
    "oldElement": "parameter akasha.PointerEventInit.Builder akasha.PointerEventInit.Builder::movementY(===int===)",
    "classification": {
      "SOURCE": "POTENTIALLY_BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.PointerEventInit.Builder",
      "classSimpleName": "Builder",
      "elementKind": "parameter",
      "methodName": "movementY",
      "newType": "double",
      "oldType": "int",
      "package": "akasha",
      "parameterIndex": "0"
    }
  },
  {
    "code": "java.annotation.removed",
    "description": "Element no longer annotated with 'akasha.PermissionName'.",
    "element": "parameter akasha.PushPermissionDescriptor.Builder akasha.PushPermissionDescriptor::name(===java.lang.String===) @ akasha.PushPermissionDescriptor.Builder",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@akasha.PermissionName",
      "annotationType": "akasha.PermissionName",
      "classQualifiedName": "akasha.PushPermissionDescriptor.Builder",
      "classSimpleName": "Builder",
      "elementKind": "parameter",
      "methodName": "name",
      "package": "akasha",
      "parameterIndex": "0"
    }
  },
  {
    "code": "java.annotation.removed",
    "description": "Element no longer annotated with 'akasha.PermissionName'.",
    "element": "parameter akasha.PushPermissionDescriptor.Builder akasha.PushPermissionDescriptor::name(===java.lang.String===)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@akasha.PermissionName",
      "annotationType": "akasha.PermissionName",
      "classQualifiedName": "akasha.PushPermissionDescriptor",
      "classSimpleName": "PushPermissionDescriptor",
      "elementKind": "parameter",
      "methodName": "name",
      "package": "akasha",
      "parameterIndex": "0"
    }
  },
  {
    "code": "java.method.parameterTypeChanged",
    "description": "The type of the parameter changed from 'int' to 'double'.",
    "newElement": "parameter akasha.WheelEventInit.Builder akasha.WheelEventInit.Builder::movementX(===double===)",
    "oldElement": "parameter akasha.WheelEventInit.Builder akasha.WheelEventInit.Builder::movementX(===int===)",
    "classification": {
      "SOURCE": "POTENTIALLY_BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.WheelEventInit.Builder",
      "classSimpleName": "Builder",
      "elementKind": "parameter",
      "methodName": "movementX",
      "newType": "double",
      "oldType": "int",
      "package": "akasha",
      "parameterIndex": "0"
    }
  },
  {
    "code": "java.method.parameterTypeChanged",
    "description": "The type of the parameter changed from 'int' to 'double'.",
    "newElement": "parameter akasha.WheelEventInit.Builder akasha.WheelEventInit.Builder::movementY(===double===)",
    "oldElement": "parameter akasha.WheelEventInit.Builder akasha.WheelEventInit.Builder::movementY(===int===)",
    "classification": {
      "SOURCE": "POTENTIALLY_BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.WheelEventInit.Builder",
      "classSimpleName": "Builder",
      "elementKind": "parameter",
      "methodName": "movementY",
      "newType": "double",
      "oldType": "int",
      "package": "akasha",
      "parameterIndex": "0"
    }
  },
  {
    "code": "java.annotation.removed",
    "description": "Element no longer annotated with 'akasha.PermissionName'.",
    "element": "parameter akasha.bluetooth.BluetoothPermissionDescriptor.Builder akasha.bluetooth.BluetoothPermissionDescriptor::name(===java.lang.String===) @ akasha.bluetooth.BluetoothPermissionDescriptor.Builder",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@akasha.PermissionName",
      "annotationType": "akasha.PermissionName",
      "classQualifiedName": "akasha.bluetooth.BluetoothPermissionDescriptor.Builder",
      "classSimpleName": "Builder",
      "elementKind": "parameter",
      "methodName": "name",
      "package": "akasha.bluetooth",
      "parameterIndex": "0"
    }
  },
  {
    "code": "java.annotation.removed",
    "description": "Element no longer annotated with 'akasha.PermissionName'.",
    "element": "parameter akasha.bluetooth.BluetoothPermissionDescriptor.Builder akasha.bluetooth.BluetoothPermissionDescriptor::name(===java.lang.String===)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@akasha.PermissionName",
      "annotationType": "akasha.PermissionName",
      "classQualifiedName": "akasha.bluetooth.BluetoothPermissionDescriptor",
      "classSimpleName": "BluetoothPermissionDescriptor",
      "elementKind": "parameter",
      "methodName": "name",
      "package": "akasha.bluetooth",
      "parameterIndex": "0"
    }
  },
  {
    "code": "java.annotation.removed",
    "description": "Element no longer annotated with 'akasha.PermissionName'.",
    "element": "parameter akasha.clipboard.ClipboardPermissionDescriptor.Builder akasha.clipboard.ClipboardPermissionDescriptor::name(===java.lang.String===) @ akasha.clipboard.ClipboardPermissionDescriptor.Builder",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@akasha.PermissionName",
      "annotationType": "akasha.PermissionName",
      "classQualifiedName": "akasha.clipboard.ClipboardPermissionDescriptor.Builder",
      "classSimpleName": "Builder",
      "elementKind": "parameter",
      "methodName": "name",
      "package": "akasha.clipboard",
      "parameterIndex": "0"
    }
  },
  {
    "code": "java.annotation.removed",
    "description": "Element no longer annotated with 'akasha.PermissionName'.",
    "element": "parameter akasha.clipboard.ClipboardPermissionDescriptor.Builder akasha.clipboard.ClipboardPermissionDescriptor::name(===java.lang.String===)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@akasha.PermissionName",
      "annotationType": "akasha.PermissionName",
      "classQualifiedName": "akasha.clipboard.ClipboardPermissionDescriptor",
      "classSimpleName": "ClipboardPermissionDescriptor",
      "elementKind": "parameter",
      "methodName": "name",
      "package": "akasha.clipboard",
      "parameterIndex": "0"
    }
  },
  {
    "code": "java.annotation.removed",
    "description": "Element no longer annotated with 'akasha.PermissionName'.",
    "element": "parameter akasha.midi.MidiPermissionDescriptor.Builder akasha.midi.MidiPermissionDescriptor::name(===java.lang.String===) @ akasha.midi.MidiPermissionDescriptor.Builder",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@akasha.PermissionName",
      "annotationType": "akasha.PermissionName",
      "classQualifiedName": "akasha.midi.MidiPermissionDescriptor.Builder",
      "classSimpleName": "Builder",
      "elementKind": "parameter",
      "methodName": "name",
      "package": "akasha.midi",
      "parameterIndex": "0"
    }
  },
  {
    "code": "java.annotation.removed",
    "description": "Element no longer annotated with 'akasha.PermissionName'.",
    "element": "parameter akasha.midi.MidiPermissionDescriptor.Builder akasha.midi.MidiPermissionDescriptor::name(===java.lang.String===)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@akasha.PermissionName",
      "annotationType": "akasha.PermissionName",
      "classQualifiedName": "akasha.midi.MidiPermissionDescriptor",
      "classSimpleName": "MidiPermissionDescriptor",
      "elementKind": "parameter",
      "methodName": "name",
      "package": "akasha.midi",
      "parameterIndex": "0"
    }
  },
  {
    "code": "java.annotation.removed",
    "description": "Element no longer annotated with 'akasha.PermissionName'.",
    "element": "parameter akasha.usb.USBPermissionDescriptor.Builder akasha.usb.USBPermissionDescriptor::name(===java.lang.String===) @ akasha.usb.USBPermissionDescriptor.Builder",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@akasha.PermissionName",
      "annotationType": "akasha.PermissionName",
      "classQualifiedName": "akasha.usb.USBPermissionDescriptor.Builder",
      "classSimpleName": "Builder",
      "elementKind": "parameter",
      "methodName": "name",
      "package": "akasha.usb",
      "parameterIndex": "0"
    }
  },
  {
    "code": "java.annotation.removed",
    "description": "Element no longer annotated with 'akasha.PermissionName'.",
    "element": "parameter akasha.usb.USBPermissionDescriptor.Builder akasha.usb.USBPermissionDescriptor::name(===java.lang.String===)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@akasha.PermissionName",
      "annotationType": "akasha.PermissionName",
      "classQualifiedName": "akasha.usb.USBPermissionDescriptor",
      "classSimpleName": "USBPermissionDescriptor",
      "elementKind": "parameter",
      "methodName": "name",
      "package": "akasha.usb",
      "parameterIndex": "0"
    }
  },
  {
    "code": "java.annotation.removed",
    "description": "Element no longer annotated with 'akasha.PermissionName'.",
    "element": "parameter akasha.xr.XRPermissionDescriptor.Builder akasha.xr.XRPermissionDescriptor::name(===java.lang.String===) @ akasha.xr.XRPermissionDescriptor.Builder",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@akasha.PermissionName",
      "annotationType": "akasha.PermissionName",
      "classQualifiedName": "akasha.xr.XRPermissionDescriptor.Builder",
      "classSimpleName": "Builder",
      "elementKind": "parameter",
      "methodName": "name",
      "package": "akasha.xr",
      "parameterIndex": "0"
    }
  },
  {
    "code": "java.annotation.removed",
    "description": "Element no longer annotated with 'akasha.PermissionName'.",
    "element": "parameter akasha.xr.XRPermissionDescriptor.Builder akasha.xr.XRPermissionDescriptor::name(===java.lang.String===)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@akasha.PermissionName",
      "annotationType": "akasha.PermissionName",
      "classQualifiedName": "akasha.xr.XRPermissionDescriptor",
      "classSimpleName": "XRPermissionDescriptor",
      "elementKind": "parameter",
      "methodName": "name",
      "package": "akasha.xr",
      "parameterIndex": "0"
    }
  },
  {
    "code": "java.annotation.removed",
    "description": "Element no longer annotated with 'akasha.PermissionName'.",
    "element": "parameter akasha.xr.XRSessionSupportedPermissionDescriptor.Builder akasha.xr.XRSessionSupportedPermissionDescriptor::name(===java.lang.String===) @ akasha.xr.XRSessionSupportedPermissionDescriptor.Builder",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@akasha.PermissionName",
      "annotationType": "akasha.PermissionName",
      "classQualifiedName": "akasha.xr.XRSessionSupportedPermissionDescriptor.Builder",
      "classSimpleName": "Builder",
      "elementKind": "parameter",
      "methodName": "name",
      "package": "akasha.xr",
      "parameterIndex": "0"
    }
  },
  {
    "code": "java.annotation.removed",
    "description": "Element no longer annotated with 'akasha.PermissionName'.",
    "element": "parameter akasha.xr.XRSessionSupportedPermissionDescriptor.Builder akasha.xr.XRSessionSupportedPermissionDescriptor::name(===java.lang.String===)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@akasha.PermissionName",
      "annotationType": "akasha.PermissionName",
      "classQualifiedName": "akasha.xr.XRSessionSupportedPermissionDescriptor",
      "classSimpleName": "XRSessionSupportedPermissionDescriptor",
      "elementKind": "parameter",
      "methodName": "name",
      "package": "akasha.xr",
      "parameterIndex": "0"
    }
  },
  {
    "code": "java.method.parameterTypeChanged",
    "description": "The type of the parameter changed from 'int' to 'double'.",
    "newElement": "parameter void akasha.MouseEventInit::setMovementX(===double===)",
    "oldElement": "parameter void akasha.MouseEventInit::setMovementX(===int===)",
    "classification": {
      "SOURCE": "POTENTIALLY_BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.MouseEventInit",
      "classSimpleName": "MouseEventInit",
      "elementKind": "parameter",
      "methodName": "setMovementX",
      "newType": "double",
      "oldType": "int",
      "package": "akasha",
      "parameterIndex": "0"
    }
  },
  {
    "code": "java.method.parameterTypeChanged",
    "description": "The type of the parameter changed from 'int' to 'double'.",
    "newElement": "parameter void akasha.MouseEventInit::setMovementY(===double===)",
    "oldElement": "parameter void akasha.MouseEventInit::setMovementY(===int===)",
    "classification": {
      "SOURCE": "POTENTIALLY_BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.MouseEventInit",
      "classSimpleName": "MouseEventInit",
      "elementKind": "parameter",
      "methodName": "setMovementY",
      "newType": "double",
      "oldType": "int",
      "package": "akasha",
      "parameterIndex": "0"
    }
  },
  {
    "code": "java.annotation.removed",
    "description": "Element no longer annotated with 'akasha.PermissionName'.",
    "element": "parameter void akasha.PermissionDescriptor::setName(===java.lang.String===) @ akasha.PushPermissionDescriptor",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@akasha.PermissionName",
      "annotationType": "akasha.PermissionName",
      "classQualifiedName": "akasha.PushPermissionDescriptor",
      "classSimpleName": "PushPermissionDescriptor",
      "elementKind": "parameter",
      "methodName": "setName",
      "package": "akasha",
      "parameterIndex": "0"
    }
  },
  {
    "code": "java.annotation.removed",
    "description": "Element no longer annotated with 'akasha.PermissionName'.",
    "element": "parameter void akasha.PermissionDescriptor::setName(===java.lang.String===) @ akasha.PushPermissionDescriptor.Builder",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@akasha.PermissionName",
      "annotationType": "akasha.PermissionName",
      "classQualifiedName": "akasha.PushPermissionDescriptor.Builder",
      "classSimpleName": "Builder",
      "elementKind": "parameter",
      "methodName": "setName",
      "package": "akasha",
      "parameterIndex": "0"
    }
  },
  {
    "code": "java.annotation.removed",
    "description": "Element no longer annotated with 'akasha.PermissionName'.",
    "element": "parameter void akasha.PermissionDescriptor::setName(===java.lang.String===) @ akasha.bluetooth.BluetoothPermissionDescriptor",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@akasha.PermissionName",
      "annotationType": "akasha.PermissionName",
      "classQualifiedName": "akasha.bluetooth.BluetoothPermissionDescriptor",
      "classSimpleName": "BluetoothPermissionDescriptor",
      "elementKind": "parameter",
      "methodName": "setName",
      "package": "akasha.bluetooth",
      "parameterIndex": "0"
    }
  },
  {
    "code": "java.annotation.removed",
    "description": "Element no longer annotated with 'akasha.PermissionName'.",
    "element": "parameter void akasha.PermissionDescriptor::setName(===java.lang.String===) @ akasha.bluetooth.BluetoothPermissionDescriptor.Builder",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@akasha.PermissionName",
      "annotationType": "akasha.PermissionName",
      "classQualifiedName": "akasha.bluetooth.BluetoothPermissionDescriptor.Builder",
      "classSimpleName": "Builder",
      "elementKind": "parameter",
      "methodName": "setName",
      "package": "akasha.bluetooth",
      "parameterIndex": "0"
    }
  },
  {
    "code": "java.annotation.removed",
    "description": "Element no longer annotated with 'akasha.PermissionName'.",
    "element": "parameter void akasha.PermissionDescriptor::setName(===java.lang.String===) @ akasha.clipboard.ClipboardPermissionDescriptor",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@akasha.PermissionName",
      "annotationType": "akasha.PermissionName",
      "classQualifiedName": "akasha.clipboard.ClipboardPermissionDescriptor",
      "classSimpleName": "ClipboardPermissionDescriptor",
      "elementKind": "parameter",
      "methodName": "setName",
      "package": "akasha.clipboard",
      "parameterIndex": "0"
    }
  },
  {
    "code": "java.annotation.removed",
    "description": "Element no longer annotated with 'akasha.PermissionName'.",
    "element": "parameter void akasha.PermissionDescriptor::setName(===java.lang.String===) @ akasha.clipboard.ClipboardPermissionDescriptor.Builder",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@akasha.PermissionName",
      "annotationType": "akasha.PermissionName",
      "classQualifiedName": "akasha.clipboard.ClipboardPermissionDescriptor.Builder",
      "classSimpleName": "Builder",
      "elementKind": "parameter",
      "methodName": "setName",
      "package": "akasha.clipboard",
      "parameterIndex": "0"
    }
  },
  {
    "code": "java.annotation.removed",
    "description": "Element no longer annotated with 'akasha.PermissionName'.",
    "element": "parameter void akasha.PermissionDescriptor::setName(===java.lang.String===) @ akasha.midi.MidiPermissionDescriptor",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@akasha.PermissionName",
      "annotationType": "akasha.PermissionName",
      "classQualifiedName": "akasha.midi.MidiPermissionDescriptor",
      "classSimpleName": "MidiPermissionDescriptor",
      "elementKind": "parameter",
      "methodName": "setName",
      "package": "akasha.midi",
      "parameterIndex": "0"
    }
  },
  {
    "code": "java.annotation.removed",
    "description": "Element no longer annotated with 'akasha.PermissionName'.",
    "element": "parameter void akasha.PermissionDescriptor::setName(===java.lang.String===) @ akasha.midi.MidiPermissionDescriptor.Builder",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@akasha.PermissionName",
      "annotationType": "akasha.PermissionName",
      "classQualifiedName": "akasha.midi.MidiPermissionDescriptor.Builder",
      "classSimpleName": "Builder",
      "elementKind": "parameter",
      "methodName": "setName",
      "package": "akasha.midi",
      "parameterIndex": "0"
    }
  },
  {
    "code": "java.annotation.removed",
    "description": "Element no longer annotated with 'akasha.PermissionName'.",
    "element": "parameter void akasha.PermissionDescriptor::setName(===java.lang.String===) @ akasha.usb.USBPermissionDescriptor",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@akasha.PermissionName",
      "annotationType": "akasha.PermissionName",
      "classQualifiedName": "akasha.usb.USBPermissionDescriptor",
      "classSimpleName": "USBPermissionDescriptor",
      "elementKind": "parameter",
      "methodName": "setName",
      "package": "akasha.usb",
      "parameterIndex": "0"
    }
  },
  {
    "code": "java.annotation.removed",
    "description": "Element no longer annotated with 'akasha.PermissionName'.",
    "element": "parameter void akasha.PermissionDescriptor::setName(===java.lang.String===) @ akasha.usb.USBPermissionDescriptor.Builder",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@akasha.PermissionName",
      "annotationType": "akasha.PermissionName",
      "classQualifiedName": "akasha.usb.USBPermissionDescriptor.Builder",
      "classSimpleName": "Builder",
      "elementKind": "parameter",
      "methodName": "setName",
      "package": "akasha.usb",
      "parameterIndex": "0"
    }
  },
  {
    "code": "java.annotation.removed",
    "description": "Element no longer annotated with 'akasha.PermissionName'.",
    "element": "parameter void akasha.PermissionDescriptor::setName(===java.lang.String===) @ akasha.xr.XRPermissionDescriptor",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@akasha.PermissionName",
      "annotationType": "akasha.PermissionName",
      "classQualifiedName": "akasha.xr.XRPermissionDescriptor",
      "classSimpleName": "XRPermissionDescriptor",
      "elementKind": "parameter",
      "methodName": "setName",
      "package": "akasha.xr",
      "parameterIndex": "0"
    }
  },
  {
    "code": "java.annotation.removed",
    "description": "Element no longer annotated with 'akasha.PermissionName'.",
    "element": "parameter void akasha.PermissionDescriptor::setName(===java.lang.String===) @ akasha.xr.XRPermissionDescriptor.Builder",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@akasha.PermissionName",
      "annotationType": "akasha.PermissionName",
      "classQualifiedName": "akasha.xr.XRPermissionDescriptor.Builder",
      "classSimpleName": "Builder",
      "elementKind": "parameter",
      "methodName": "setName",
      "package": "akasha.xr",
      "parameterIndex": "0"
    }
  },
  {
    "code": "java.annotation.removed",
    "description": "Element no longer annotated with 'akasha.PermissionName'.",
    "element": "parameter void akasha.PermissionDescriptor::setName(===java.lang.String===) @ akasha.xr.XRSessionSupportedPermissionDescriptor",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@akasha.PermissionName",
      "annotationType": "akasha.PermissionName",
      "classQualifiedName": "akasha.xr.XRSessionSupportedPermissionDescriptor",
      "classSimpleName": "XRSessionSupportedPermissionDescriptor",
      "elementKind": "parameter",
      "methodName": "setName",
      "package": "akasha.xr",
      "parameterIndex": "0"
    }
  },
  {
    "code": "java.annotation.removed",
    "description": "Element no longer annotated with 'akasha.PermissionName'.",
    "element": "parameter void akasha.PermissionDescriptor::setName(===java.lang.String===) @ akasha.xr.XRSessionSupportedPermissionDescriptor.Builder",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@akasha.PermissionName",
      "annotationType": "akasha.PermissionName",
      "classQualifiedName": "akasha.xr.XRSessionSupportedPermissionDescriptor.Builder",
      "classSimpleName": "Builder",
      "elementKind": "parameter",
      "methodName": "setName",
      "package": "akasha.xr",
      "parameterIndex": "0"
    }
  },
  {
    "code": "java.annotation.removed",
    "description": "Element no longer annotated with 'akasha.PermissionName'.",
    "element": "parameter void akasha.PermissionDescriptor::setName(===java.lang.String===)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@akasha.PermissionName",
      "annotationType": "akasha.PermissionName",
      "classQualifiedName": "akasha.PermissionDescriptor",
      "classSimpleName": "PermissionDescriptor",
      "elementKind": "parameter",
      "methodName": "setName",
      "package": "akasha",
      "parameterIndex": "0"
    }
  },
  {
    "code": "java.method.parameterTypeChanged",
    "description": "The type of the parameter changed from 'java.lang.String' to 'akasha.core.BufferSource'.",
    "newElement": "parameter void akasha.WebSocket::send(===akasha.core.BufferSource===)",
    "oldElement": "parameter void akasha.WebSocket::send(===java.lang.String===)",
    "classification": {
      "SOURCE": "POTENTIALLY_BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.WebSocket",
      "classSimpleName": "WebSocket",
      "elementKind": "parameter",
      "methodName": "send",
      "newType": "akasha.core.BufferSource",
      "oldType": "java.lang.String",
      "package": "akasha",
      "parameterIndex": "0"
    }
  },
  {
    "code": "java.method.parameterTypeChanged",
    "description": "The type of the parameter changed from 'akasha.core.ArrayBufferView' to 'java.lang.String'.",
    "newElement": "parameter void akasha.WebSocket::send(===java.lang.String===)",
    "oldElement": "parameter void akasha.WebSocket::send(===akasha.core.ArrayBufferView===)",
    "classification": {
      "SOURCE": "POTENTIALLY_BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.WebSocket",
      "classSimpleName": "WebSocket",
      "elementKind": "parameter",
      "methodName": "send",
      "newType": "java.lang.String",
      "oldType": "akasha.core.ArrayBufferView",
      "package": "akasha",
      "parameterIndex": "0"
    }
  }
]
