[
  {
    "code": "java.class.added",
    "description": "Class was added.",
    "newElement": "@interface akasha.AnimationReplaceState",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.AnimationReplaceState",
      "classSimpleName": "AnimationReplaceState",
      "elementKind": "@interface",
      "package": "akasha"
    }
  },
  {
    "code": "java.class.added",
    "description": "Class was added.",
    "newElement": "@interface akasha.AudioSampleFormat",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.AudioSampleFormat",
      "classSimpleName": "AudioSampleFormat",
      "elementKind": "@interface",
      "package": "akasha"
    }
  },
  {
    "code": "java.class.added",
    "description": "Class was added.",
    "newElement": "@interface akasha.CanvasFontKerning",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.CanvasFontKerning",
      "classSimpleName": "CanvasFontKerning",
      "elementKind": "@interface",
      "package": "akasha"
    }
  },
  {
    "code": "java.class.added",
    "description": "Class was added.",
    "newElement": "@interface akasha.CanvasFontStretch",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.CanvasFontStretch",
      "classSimpleName": "CanvasFontStretch",
      "elementKind": "@interface",
      "package": "akasha"
    }
  },
  {
    "code": "java.class.added",
    "description": "Class was added.",
    "newElement": "@interface akasha.CanvasFontVariantCaps",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.CanvasFontVariantCaps",
      "classSimpleName": "CanvasFontVariantCaps",
      "elementKind": "@interface",
      "package": "akasha"
    }
  },
  {
    "code": "java.class.added",
    "description": "Class was added.",
    "newElement": "@interface akasha.CanvasTextRendering",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.CanvasTextRendering",
      "classSimpleName": "CanvasTextRendering",
      "elementKind": "@interface",
      "package": "akasha"
    }
  },
  {
    "code": "java.class.added",
    "description": "Class was added.",
    "newElement": "@interface akasha.CodecState",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.CodecState",
      "classSimpleName": "CodecState",
      "elementKind": "@interface",
      "package": "akasha"
    }
  },
  {
    "code": "java.class.added",
    "description": "Class was added.",
    "newElement": "@interface akasha.EncodedAudioChunkType",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.EncodedAudioChunkType",
      "classSimpleName": "EncodedAudioChunkType",
      "elementKind": "@interface",
      "package": "akasha"
    }
  },
  {
    "code": "java.class.added",
    "description": "Class was added.",
    "newElement": "@interface akasha.EncodedVideoChunkType",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.EncodedVideoChunkType",
      "classSimpleName": "EncodedVideoChunkType",
      "elementKind": "@interface",
      "package": "akasha"
    }
  },
  {
    "code": "java.class.added",
    "description": "Class was added.",
    "newElement": "@interface akasha.GeolocationPositionErrorCode",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.GeolocationPositionErrorCode",
      "classSimpleName": "GeolocationPositionErrorCode",
      "elementKind": "@interface",
      "package": "akasha"
    }
  },
  {
    "code": "java.class.added",
    "description": "Class was added.",
    "newElement": "@interface akasha.HardwareAcceleration",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.HardwareAcceleration",
      "classSimpleName": "HardwareAcceleration",
      "elementKind": "@interface",
      "package": "akasha"
    }
  },
  {
    "code": "java.class.added",
    "description": "Class was added.",
    "newElement": "@interface akasha.LargeBlobSupport",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.LargeBlobSupport",
      "classSimpleName": "LargeBlobSupport",
      "elementKind": "@interface",
      "package": "akasha"
    }
  },
  {
    "code": "java.class.added",
    "description": "Class was added.",
    "newElement": "@interface akasha.PixelFormat",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.PixelFormat",
      "classSimpleName": "PixelFormat",
      "elementKind": "@interface",
      "package": "akasha"
    }
  },
  {
    "code": "java.class.added",
    "description": "Class was added.",
    "newElement": "@interface akasha.PredefinedColorSpace",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.PredefinedColorSpace",
      "classSimpleName": "PredefinedColorSpace",
      "elementKind": "@interface",
      "package": "akasha"
    }
  },
  {
    "code": "java.class.added",
    "description": "Class was added.",
    "newElement": "@interface akasha.ResidentKeyRequirement",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.ResidentKeyRequirement",
      "classSimpleName": "ResidentKeyRequirement",
      "elementKind": "@interface",
      "package": "akasha"
    }
  },
  {
    "code": "java.class.added",
    "description": "Class was added.",
    "newElement": "@interface akasha.SlotAssignmentMode",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.SlotAssignmentMode",
      "classSimpleName": "SlotAssignmentMode",
      "elementKind": "@interface",
      "package": "akasha"
    }
  },
  {
    "code": "java.class.added",
    "description": "Class was added.",
    "newElement": "@interface akasha.TimelinePhase",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.TimelinePhase",
      "classSimpleName": "TimelinePhase",
      "elementKind": "@interface",
      "package": "akasha"
    }
  },
  {
    "code": "java.class.added",
    "description": "Class was added.",
    "newElement": "class akasha.AudioData",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.AudioData",
      "classSimpleName": "AudioData",
      "elementKind": "class",
      "package": "akasha"
    }
  },
  {
    "code": "java.class.added",
    "description": "Class was added.",
    "newElement": "class akasha.AudioDecoder",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.AudioDecoder",
      "classSimpleName": "AudioDecoder",
      "elementKind": "class",
      "package": "akasha"
    }
  },
  {
    "code": "java.class.added",
    "description": "Class was added.",
    "newElement": "class akasha.AudioEncoder",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.AudioEncoder",
      "classSimpleName": "AudioEncoder",
      "elementKind": "class",
      "package": "akasha"
    }
  },
  {
    "code": "java.class.added",
    "description": "Class was added.",
    "newElement": "class akasha.EncodedAudioChunk",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.EncodedAudioChunk",
      "classSimpleName": "EncodedAudioChunk",
      "elementKind": "class",
      "package": "akasha"
    }
  },
  {
    "code": "java.class.added",
    "description": "Class was added.",
    "newElement": "class akasha.EncodedVideoChunk",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.EncodedVideoChunk",
      "classSimpleName": "EncodedVideoChunk",
      "elementKind": "class",
      "package": "akasha"
    }
  },
  {
    "code": "java.class.added",
    "description": "Class was added.",
    "newElement": "class akasha.GeolocationCoordinates",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.GeolocationCoordinates",
      "classSimpleName": "GeolocationCoordinates",
      "elementKind": "class",
      "package": "akasha"
    }
  },
  {
    "code": "java.class.added",
    "description": "Class was added.",
    "newElement": "class akasha.GeolocationPosition",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.GeolocationPosition",
      "classSimpleName": "GeolocationPosition",
      "elementKind": "class",
      "package": "akasha"
    }
  },
  {
    "code": "java.class.added",
    "description": "Class was added.",
    "newElement": "class akasha.GeolocationPositionError",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.GeolocationPositionError",
      "classSimpleName": "GeolocationPositionError",
      "elementKind": "class",
      "package": "akasha"
    }
  },
  {
    "code": "java.class.added",
    "description": "Class was added.",
    "newElement": "class akasha.ImageDecoder",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.ImageDecoder",
      "classSimpleName": "ImageDecoder",
      "elementKind": "class",
      "package": "akasha"
    }
  },
  {
    "code": "java.class.added",
    "description": "Class was added.",
    "newElement": "class akasha.ImageTrack",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.ImageTrack",
      "classSimpleName": "ImageTrack",
      "elementKind": "class",
      "package": "akasha"
    }
  },
  {
    "code": "java.class.added",
    "description": "Class was added.",
    "newElement": "class akasha.ImageTrackList",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.ImageTrackList",
      "classSimpleName": "ImageTrackList",
      "elementKind": "class",
      "package": "akasha"
    }
  },
  {
    "code": "java.class.added",
    "description": "Class was added.",
    "newElement": "class akasha.VideoDecoder",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.VideoDecoder",
      "classSimpleName": "VideoDecoder",
      "elementKind": "class",
      "package": "akasha"
    }
  },
  {
    "code": "java.class.added",
    "description": "Class was added.",
    "newElement": "class akasha.VideoEncoder",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.VideoEncoder",
      "classSimpleName": "VideoEncoder",
      "elementKind": "class",
      "package": "akasha"
    }
  },
  {
    "code": "java.class.added",
    "description": "Class was added.",
    "newElement": "class akasha.VideoFrame",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.VideoFrame",
      "classSimpleName": "VideoFrame",
      "elementKind": "class",
      "package": "akasha"
    }
  },
  {
    "code": "java.class.added",
    "description": "Class was added.",
    "newElement": "class akasha.XSLTProcessor",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.XSLTProcessor",
      "classSimpleName": "XSLTProcessor",
      "elementKind": "class",
      "package": "akasha"
    }
  },
  {
    "code": "java.field.added",
    "description": "Field added to class.",
    "newElement": "field akasha.Animation.onremove",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.Animation",
      "classSimpleName": "Animation",
      "elementKind": "field",
      "fieldName": "onremove",
      "package": "akasha"
    }
  },
  {
    "code": "java.field.addedStaticField",
    "description": "Static field added to class.",
    "newElement": "field akasha.AttestationConveyancePreference.enterprise",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.AttestationConveyancePreference",
      "classSimpleName": "AttestationConveyancePreference",
      "elementKind": "field",
      "fieldName": "enterprise",
      "package": "akasha"
    }
  },
  {
    "code": "java.field.added",
    "description": "Field added to class.",
    "newElement": "field akasha.CanvasRenderingContext2D.fontKerning",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.CanvasRenderingContext2D",
      "classSimpleName": "CanvasRenderingContext2D",
      "elementKind": "field",
      "fieldName": "fontKerning",
      "package": "akasha"
    }
  },
  {
    "code": "java.field.added",
    "description": "Field added to class.",
    "newElement": "field akasha.CanvasRenderingContext2D.fontStretch",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.CanvasRenderingContext2D",
      "classSimpleName": "CanvasRenderingContext2D",
      "elementKind": "field",
      "fieldName": "fontStretch",
      "package": "akasha"
    }
  },
  {
    "code": "java.field.added",
    "description": "Field added to class.",
    "newElement": "field akasha.CanvasRenderingContext2D.fontVariantCaps",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.CanvasRenderingContext2D",
      "classSimpleName": "CanvasRenderingContext2D",
      "elementKind": "field",
      "fieldName": "fontVariantCaps",
      "package": "akasha"
    }
  },
  {
    "code": "java.field.added",
    "description": "Field added to class.",
    "newElement": "field akasha.CanvasRenderingContext2D.textLetterSpacing",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.CanvasRenderingContext2D",
      "classSimpleName": "CanvasRenderingContext2D",
      "elementKind": "field",
      "fieldName": "textLetterSpacing",
      "package": "akasha"
    }
  },
  {
    "code": "java.field.added",
    "description": "Field added to class.",
    "newElement": "field akasha.CanvasRenderingContext2D.textRendering",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.CanvasRenderingContext2D",
      "classSimpleName": "CanvasRenderingContext2D",
      "elementKind": "field",
      "fieldName": "textRendering",
      "package": "akasha"
    }
  },
  {
    "code": "java.field.added",
    "description": "Field added to class.",
    "newElement": "field akasha.CanvasRenderingContext2D.textWordSpacing",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.CanvasRenderingContext2D",
      "classSimpleName": "CanvasRenderingContext2D",
      "elementKind": "field",
      "fieldName": "textWordSpacing",
      "package": "akasha"
    }
  },
  {
    "code": "java.field.addedStaticField",
    "description": "Static field added to class.",
    "newElement": "field akasha.GamepadMappingType.xr_standard",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.GamepadMappingType",
      "classSimpleName": "GamepadMappingType",
      "elementKind": "field",
      "fieldName": "xr_standard",
      "package": "akasha"
    }
  },
  {
    "code": "java.field.added",
    "description": "Field added to class.",
    "newElement": "field akasha.HTMLBodyElement.ongamepadconnected",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.HTMLBodyElement",
      "classSimpleName": "HTMLBodyElement",
      "elementKind": "field",
      "fieldName": "ongamepadconnected",
      "package": "akasha"
    }
  },
  {
    "code": "java.field.added",
    "description": "Field added to class.",
    "newElement": "field akasha.HTMLBodyElement.ongamepaddisconnected",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.HTMLBodyElement",
      "classSimpleName": "HTMLBodyElement",
      "elementKind": "field",
      "fieldName": "ongamepaddisconnected",
      "package": "akasha"
    }
  },
  {
    "code": "java.field.added",
    "description": "Field added to class.",
    "newElement": "field akasha.HTMLElement.outerText",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.HTMLElement",
      "classSimpleName": "HTMLElement",
      "elementKind": "field",
      "fieldName": "outerText",
      "package": "akasha"
    }
  },
  {
    "code": "java.field.added",
    "description": "Field added to class.",
    "newElement": "field akasha.HTMLFrameSetElement.ongamepadconnected",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.HTMLFrameSetElement",
      "classSimpleName": "HTMLFrameSetElement",
      "elementKind": "field",
      "fieldName": "ongamepadconnected",
      "package": "akasha"
    }
  },
  {
    "code": "java.field.added",
    "description": "Field added to class.",
    "newElement": "field akasha.HTMLFrameSetElement.ongamepaddisconnected",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.HTMLFrameSetElement",
      "classSimpleName": "HTMLFrameSetElement",
      "elementKind": "field",
      "fieldName": "ongamepaddisconnected",
      "package": "akasha"
    }
  },
  {
    "code": "java.field.added",
    "description": "Field added to class.",
    "newElement": "field akasha.KeyframeEffect.pseudoElement",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.KeyframeEffect",
      "classSimpleName": "KeyframeEffect",
      "elementKind": "field",
      "fieldName": "pseudoElement",
      "package": "akasha"
    }
  },
  {
    "code": "java.field.typeChanged",
    "description": "The type of the field changed from 'akasha.ElementOrCSSPseudoElementUnion' to 'akasha.Element'.",
    "element": "field akasha.KeyframeEffect.target",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.KeyframeEffect",
      "classSimpleName": "KeyframeEffect",
      "elementKind": "field",
      "fieldName": "target",
      "newType": "akasha.Element",
      "oldType": "akasha.ElementOrCSSPseudoElementUnion",
      "package": "akasha"
    }
  },
  {
    "code": "java.field.added",
    "description": "Field added to class.",
    "newElement": "field akasha.OffscreenCanvasRenderingContext2D.fontKerning",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.OffscreenCanvasRenderingContext2D",
      "classSimpleName": "OffscreenCanvasRenderingContext2D",
      "elementKind": "field",
      "fieldName": "fontKerning",
      "package": "akasha"
    }
  },
  {
    "code": "java.field.added",
    "description": "Field added to class.",
    "newElement": "field akasha.OffscreenCanvasRenderingContext2D.fontStretch",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.OffscreenCanvasRenderingContext2D",
      "classSimpleName": "OffscreenCanvasRenderingContext2D",
      "elementKind": "field",
      "fieldName": "fontStretch",
      "package": "akasha"
    }
  },
  {
    "code": "java.field.added",
    "description": "Field added to class.",
    "newElement": "field akasha.OffscreenCanvasRenderingContext2D.fontVariantCaps",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.OffscreenCanvasRenderingContext2D",
      "classSimpleName": "OffscreenCanvasRenderingContext2D",
      "elementKind": "field",
      "fieldName": "fontVariantCaps",
      "package": "akasha"
    }
  },
  {
    "code": "java.field.added",
    "description": "Field added to class.",
    "newElement": "field akasha.OffscreenCanvasRenderingContext2D.textLetterSpacing",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.OffscreenCanvasRenderingContext2D",
      "classSimpleName": "OffscreenCanvasRenderingContext2D",
      "elementKind": "field",
      "fieldName": "textLetterSpacing",
      "package": "akasha"
    }
  },
  {
    "code": "java.field.added",
    "description": "Field added to class.",
    "newElement": "field akasha.OffscreenCanvasRenderingContext2D.textRendering",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.OffscreenCanvasRenderingContext2D",
      "classSimpleName": "OffscreenCanvasRenderingContext2D",
      "elementKind": "field",
      "fieldName": "textRendering",
      "package": "akasha"
    }
  },
  {
    "code": "java.field.added",
    "description": "Field added to class.",
    "newElement": "field akasha.OffscreenCanvasRenderingContext2D.textWordSpacing",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.OffscreenCanvasRenderingContext2D",
      "classSimpleName": "OffscreenCanvasRenderingContext2D",
      "elementKind": "field",
      "fieldName": "textWordSpacing",
      "package": "akasha"
    }
  },
  {
    "code": "java.field.added",
    "description": "Field added to class.",
    "newElement": "field akasha.Window.ongamepadconnected",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.Window",
      "classSimpleName": "Window",
      "elementKind": "field",
      "fieldName": "ongamepadconnected",
      "package": "akasha"
    }
  },
  {
    "code": "java.field.added",
    "description": "Field added to class.",
    "newElement": "field akasha.Window.ongamepaddisconnected",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.Window",
      "classSimpleName": "Window",
      "elementKind": "field",
      "fieldName": "ongamepaddisconnected",
      "package": "akasha"
    }
  },
  {
    "code": "java.field.addedStaticField",
    "description": "Static field added to class.",
    "newElement": "field akasha.WindowGlobal.ongamepadconnected",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.WindowGlobal",
      "classSimpleName": "WindowGlobal",
      "elementKind": "field",
      "fieldName": "ongamepadconnected",
      "package": "akasha"
    }
  },
  {
    "code": "java.field.addedStaticField",
    "description": "Static field added to class.",
    "newElement": "field akasha.WindowGlobal.ongamepaddisconnected",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.WindowGlobal",
      "classSimpleName": "WindowGlobal",
      "elementKind": "field",
      "fieldName": "ongamepaddisconnected",
      "package": "akasha"
    }
  },
  {
    "code": "java.field.added",
    "description": "Field added to class.",
    "newElement": "field akasha.svg.SVGSVGElement.ongamepadconnected",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.svg.SVGSVGElement",
      "classSimpleName": "SVGSVGElement",
      "elementKind": "field",
      "fieldName": "ongamepadconnected",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.field.added",
    "description": "Field added to class.",
    "newElement": "field akasha.svg.SVGSVGElement.ongamepaddisconnected",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.svg.SVGSVGElement",
      "classSimpleName": "SVGSVGElement",
      "elementKind": "field",
      "fieldName": "ongamepaddisconnected",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.class.added",
    "description": "Class was added.",
    "newElement": "interface akasha.AudioDataCopyToOptions",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.AudioDataCopyToOptions",
      "classSimpleName": "AudioDataCopyToOptions",
      "elementKind": "interface",
      "package": "akasha"
    }
  },
  {
    "code": "java.class.added",
    "description": "Class was added.",
    "newElement": "interface akasha.AudioDataInit",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.AudioDataInit",
      "classSimpleName": "AudioDataInit",
      "elementKind": "interface",
      "package": "akasha"
    }
  },
  {
    "code": "java.class.added",
    "description": "Class was added.",
    "newElement": "interface akasha.AudioDataOutputCallback",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.AudioDataOutputCallback",
      "classSimpleName": "AudioDataOutputCallback",
      "elementKind": "interface",
      "package": "akasha"
    }
  },
  {
    "code": "java.class.added",
    "description": "Class was added.",
    "newElement": "interface akasha.AudioDecoderConfig",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.AudioDecoderConfig",
      "classSimpleName": "AudioDecoderConfig",
      "elementKind": "interface",
      "package": "akasha"
    }
  },
  {
    "code": "java.class.added",
    "description": "Class was added.",
    "newElement": "interface akasha.AudioDecoderInit",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.AudioDecoderInit",
      "classSimpleName": "AudioDecoderInit",
      "elementKind": "interface",
      "package": "akasha"
    }
  },
  {
    "code": "java.class.added",
    "description": "Class was added.",
    "newElement": "interface akasha.AudioDecoderSupport",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.AudioDecoderSupport",
      "classSimpleName": "AudioDecoderSupport",
      "elementKind": "interface",
      "package": "akasha"
    }
  },
  {
    "code": "java.class.added",
    "description": "Class was added.",
    "newElement": "interface akasha.AudioEncoderConfig",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.AudioEncoderConfig",
      "classSimpleName": "AudioEncoderConfig",
      "elementKind": "interface",
      "package": "akasha"
    }
  },
  {
    "code": "java.class.added",
    "description": "Class was added.",
    "newElement": "interface akasha.AudioEncoderInit",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.AudioEncoderInit",
      "classSimpleName": "AudioEncoderInit",
      "elementKind": "interface",
      "package": "akasha"
    }
  },
  {
    "code": "java.class.added",
    "description": "Class was added.",
    "newElement": "interface akasha.AudioEncoderSupport",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.AudioEncoderSupport",
      "classSimpleName": "AudioEncoderSupport",
      "elementKind": "interface",
      "package": "akasha"
    }
  },
  {
    "code": "java.class.added",
    "description": "Class was added.",
    "newElement": "interface akasha.AuthenticationExtensionsLargeBlobInputs",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.AuthenticationExtensionsLargeBlobInputs",
      "classSimpleName": "AuthenticationExtensionsLargeBlobInputs",
      "elementKind": "interface",
      "package": "akasha"
    }
  },
  {
    "code": "java.class.added",
    "description": "Class was added.",
    "newElement": "interface akasha.AuthenticationExtensionsLargeBlobOutputs",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.AuthenticationExtensionsLargeBlobOutputs",
      "classSimpleName": "AuthenticationExtensionsLargeBlobOutputs",
      "elementKind": "interface",
      "package": "akasha"
    }
  },
  {
    "code": "java.class.added",
    "description": "Class was added.",
    "newElement": "interface akasha.CredentialPropertiesOutput",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.CredentialPropertiesOutput",
      "classSimpleName": "CredentialPropertiesOutput",
      "elementKind": "interface",
      "package": "akasha"
    }
  },
  {
    "code": "java.class.added",
    "description": "Class was added.",
    "newElement": "interface akasha.EncodedAudioChunkInit",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.EncodedAudioChunkInit",
      "classSimpleName": "EncodedAudioChunkInit",
      "elementKind": "interface",
      "package": "akasha"
    }
  },
  {
    "code": "java.class.added",
    "description": "Class was added.",
    "newElement": "interface akasha.EncodedAudioChunkMetadata",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.EncodedAudioChunkMetadata",
      "classSimpleName": "EncodedAudioChunkMetadata",
      "elementKind": "interface",
      "package": "akasha"
    }
  },
  {
    "code": "java.class.added",
    "description": "Class was added.",
    "newElement": "interface akasha.EncodedAudioChunkOutputCallback",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.EncodedAudioChunkOutputCallback",
      "classSimpleName": "EncodedAudioChunkOutputCallback",
      "elementKind": "interface",
      "package": "akasha"
    }
  },
  {
    "code": "java.class.added",
    "description": "Class was added.",
    "newElement": "interface akasha.EncodedVideoChunkInit",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.EncodedVideoChunkInit",
      "classSimpleName": "EncodedVideoChunkInit",
      "elementKind": "interface",
      "package": "akasha"
    }
  },
  {
    "code": "java.class.added",
    "description": "Class was added.",
    "newElement": "interface akasha.EncodedVideoChunkMetadata",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.EncodedVideoChunkMetadata",
      "classSimpleName": "EncodedVideoChunkMetadata",
      "elementKind": "interface",
      "package": "akasha"
    }
  },
  {
    "code": "java.class.added",
    "description": "Class was added.",
    "newElement": "interface akasha.EncodedVideoChunkOutputCallback",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.EncodedVideoChunkOutputCallback",
      "classSimpleName": "EncodedVideoChunkOutputCallback",
      "elementKind": "interface",
      "package": "akasha"
    }
  },
  {
    "code": "java.class.added",
    "description": "Class was added.",
    "newElement": "interface akasha.GamepadEventHandler",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.GamepadEventHandler",
      "classSimpleName": "GamepadEventHandler",
      "elementKind": "interface",
      "package": "akasha"
    }
  },
  {
    "code": "java.class.added",
    "description": "Class was added.",
    "newElement": "interface akasha.GetAnimationsOptions",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.GetAnimationsOptions",
      "classSimpleName": "GetAnimationsOptions",
      "elementKind": "interface",
      "package": "akasha"
    }
  },
  {
    "code": "java.class.added",
    "description": "Class was added.",
    "newElement": "interface akasha.ImageBufferSource",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.ImageBufferSource",
      "classSimpleName": "ImageBufferSource",
      "elementKind": "interface",
      "package": "akasha"
    }
  },
  {
    "code": "java.class.added",
    "description": "Class was added.",
    "newElement": "interface akasha.ImageDataSettings",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.ImageDataSettings",
      "classSimpleName": "ImageDataSettings",
      "elementKind": "interface",
      "package": "akasha"
    }
  },
  {
    "code": "java.class.added",
    "description": "Class was added.",
    "newElement": "interface akasha.ImageDecodeOptions",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.ImageDecodeOptions",
      "classSimpleName": "ImageDecodeOptions",
      "elementKind": "interface",
      "package": "akasha"
    }
  },
  {
    "code": "java.class.added",
    "description": "Class was added.",
    "newElement": "interface akasha.ImageDecodeResult",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.ImageDecodeResult",
      "classSimpleName": "ImageDecodeResult",
      "elementKind": "interface",
      "package": "akasha"
    }
  },
  {
    "code": "java.class.added",
    "description": "Class was added.",
    "newElement": "interface akasha.ImageDecoderInit",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.ImageDecoderInit",
      "classSimpleName": "ImageDecoderInit",
      "elementKind": "interface",
      "package": "akasha"
    }
  },
  {
    "code": "java.class.added",
    "description": "Class was added.",
    "newElement": "interface akasha.PlaneInit",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.PlaneInit",
      "classSimpleName": "PlaneInit",
      "elementKind": "interface",
      "package": "akasha"
    }
  },
  {
    "code": "java.class.added",
    "description": "Class was added.",
    "newElement": "interface akasha.PlaneLayout",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.PlaneLayout",
      "classSimpleName": "PlaneLayout",
      "elementKind": "interface",
      "package": "akasha"
    }
  },
  {
    "code": "java.class.added",
    "description": "Class was added.",
    "newElement": "interface akasha.VideoDecoderConfig",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.VideoDecoderConfig",
      "classSimpleName": "VideoDecoderConfig",
      "elementKind": "interface",
      "package": "akasha"
    }
  },
  {
    "code": "java.class.added",
    "description": "Class was added.",
    "newElement": "interface akasha.VideoDecoderInit",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.VideoDecoderInit",
      "classSimpleName": "VideoDecoderInit",
      "elementKind": "interface",
      "package": "akasha"
    }
  },
  {
    "code": "java.class.added",
    "description": "Class was added.",
    "newElement": "interface akasha.VideoDecoderSupport",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.VideoDecoderSupport",
      "classSimpleName": "VideoDecoderSupport",
      "elementKind": "interface",
      "package": "akasha"
    }
  },
  {
    "code": "java.class.added",
    "description": "Class was added.",
    "newElement": "interface akasha.VideoEncoderConfig",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.VideoEncoderConfig",
      "classSimpleName": "VideoEncoderConfig",
      "elementKind": "interface",
      "package": "akasha"
    }
  },
  {
    "code": "java.class.added",
    "description": "Class was added.",
    "newElement": "interface akasha.VideoEncoderEncodeOptions",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.VideoEncoderEncodeOptions",
      "classSimpleName": "VideoEncoderEncodeOptions",
      "elementKind": "interface",
      "package": "akasha"
    }
  },
  {
    "code": "java.class.added",
    "description": "Class was added.",
    "newElement": "interface akasha.VideoEncoderInit",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.VideoEncoderInit",
      "classSimpleName": "VideoEncoderInit",
      "elementKind": "interface",
      "package": "akasha"
    }
  },
  {
    "code": "java.class.added",
    "description": "Class was added.",
    "newElement": "interface akasha.VideoEncoderSupport",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.VideoEncoderSupport",
      "classSimpleName": "VideoEncoderSupport",
      "elementKind": "interface",
      "package": "akasha"
    }
  },
  {
    "code": "java.class.added",
    "description": "Class was added.",
    "newElement": "interface akasha.VideoFrameCopyToOptions",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.VideoFrameCopyToOptions",
      "classSimpleName": "VideoFrameCopyToOptions",
      "elementKind": "interface",
      "package": "akasha"
    }
  },
  {
    "code": "java.class.added",
    "description": "Class was added.",
    "newElement": "interface akasha.VideoFrameInit",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.VideoFrameInit",
      "classSimpleName": "VideoFrameInit",
      "elementKind": "interface",
      "package": "akasha"
    }
  },
  {
    "code": "java.class.added",
    "description": "Class was added.",
    "newElement": "interface akasha.VideoFrameOutputCallback",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.VideoFrameOutputCallback",
      "classSimpleName": "VideoFrameOutputCallback",
      "elementKind": "interface",
      "package": "akasha"
    }
  },
  {
    "code": "java.class.added",
    "description": "Class was added.",
    "newElement": "interface akasha.VideoFramePlaneInit",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.VideoFramePlaneInit",
      "classSimpleName": "VideoFramePlaneInit",
      "elementKind": "interface",
      "package": "akasha"
    }
  },
  {
    "code": "java.class.added",
    "description": "Class was added.",
    "newElement": "interface akasha.VideoFrameRect",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.VideoFrameRect",
      "classSimpleName": "VideoFrameRect",
      "elementKind": "interface",
      "package": "akasha"
    }
  },
  {
    "code": "java.class.added",
    "description": "Class was added.",
    "newElement": "interface akasha.WebCodecsErrorCallback",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.WebCodecsErrorCallback",
      "classSimpleName": "WebCodecsErrorCallback",
      "elementKind": "interface",
      "package": "akasha"
    }
  },
  {
    "code": "java.class.added",
    "description": "Class was added.",
    "newElement": "interface akasha.bluetooth.BluetoothManufacturerDataFilterInit",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.bluetooth.BluetoothManufacturerDataFilterInit",
      "classSimpleName": "BluetoothManufacturerDataFilterInit",
      "elementKind": "interface",
      "package": "akasha.bluetooth"
    }
  },
  {
    "code": "java.class.added",
    "description": "Class was added.",
    "newElement": "interface akasha.bluetooth.BluetoothServiceDataFilterInit",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.bluetooth.BluetoothServiceDataFilterInit",
      "classSimpleName": "BluetoothServiceDataFilterInit",
      "elementKind": "interface",
      "package": "akasha.bluetooth"
    }
  },
  {
    "code": "java.method.addedToInterface",
    "description": "Method was added to an interface.",
    "newElement": "method akasha.AnimationTimeline akasha.KeyframeAnimationOptions::timeline()",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "NON_BREAKING",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.KeyframeAnimationOptions",
      "classSimpleName": "KeyframeAnimationOptions",
      "elementKind": "method",
      "methodName": "timeline",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.defaultMethodAddedToInterface",
    "description": "A default method has been added to the interface.",
    "newElement": "method akasha.AuthenticationExtensionsClientInputs.Builder akasha.AuthenticationExtensionsClientInputs.Builder::appidExclude(java.lang.String)",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.AuthenticationExtensionsClientInputs.Builder",
      "classSimpleName": "Builder",
      "elementKind": "method",
      "methodName": "appidExclude",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.defaultMethodAddedToInterface",
    "description": "A default method has been added to the interface.",
    "newElement": "method akasha.AuthenticationExtensionsClientInputs.Builder akasha.AuthenticationExtensionsClientInputs.Builder::credProps(boolean)",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.AuthenticationExtensionsClientInputs.Builder",
      "classSimpleName": "Builder",
      "elementKind": "method",
      "methodName": "credProps",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.defaultMethodAddedToInterface",
    "description": "A default method has been added to the interface.",
    "newElement": "method akasha.AuthenticationExtensionsClientInputs.Builder akasha.AuthenticationExtensionsClientInputs.Builder::largeBlob(akasha.AuthenticationExtensionsLargeBlobInputs)",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.AuthenticationExtensionsClientInputs.Builder",
      "classSimpleName": "Builder",
      "elementKind": "method",
      "methodName": "largeBlob",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.defaultMethodAddedToInterface",
    "description": "A default method has been added to the interface.",
    "newElement": "method akasha.AuthenticationExtensionsClientOutputs.Builder akasha.AuthenticationExtensionsClientOutputs.Builder::appidExclude(boolean)",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.AuthenticationExtensionsClientOutputs.Builder",
      "classSimpleName": "Builder",
      "elementKind": "method",
      "methodName": "appidExclude",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.defaultMethodAddedToInterface",
    "description": "A default method has been added to the interface.",
    "newElement": "method akasha.AuthenticationExtensionsClientOutputs.Builder akasha.AuthenticationExtensionsClientOutputs.Builder::credProps(akasha.CredentialPropertiesOutput)",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.AuthenticationExtensionsClientOutputs.Builder",
      "classSimpleName": "Builder",
      "elementKind": "method",
      "methodName": "credProps",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.defaultMethodAddedToInterface",
    "description": "A default method has been added to the interface.",
    "newElement": "method akasha.AuthenticationExtensionsClientOutputs.Builder akasha.AuthenticationExtensionsClientOutputs.Builder::largeBlob(akasha.AuthenticationExtensionsLargeBlobOutputs)",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.AuthenticationExtensionsClientOutputs.Builder",
      "classSimpleName": "Builder",
      "elementKind": "method",
      "methodName": "largeBlob",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.addedToInterface",
    "description": "Method was added to an interface.",
    "newElement": "method akasha.AuthenticationExtensionsLargeBlobInputs akasha.AuthenticationExtensionsClientInputs::largeBlob()",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "NON_BREAKING",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.AuthenticationExtensionsClientInputs",
      "classSimpleName": "AuthenticationExtensionsClientInputs",
      "elementKind": "method",
      "methodName": "largeBlob",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.addedToInterface",
    "description": "Method was added to an interface.",
    "newElement": "method akasha.AuthenticationExtensionsLargeBlobOutputs akasha.AuthenticationExtensionsClientOutputs::largeBlob()",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "NON_BREAKING",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.AuthenticationExtensionsClientOutputs",
      "classSimpleName": "AuthenticationExtensionsClientOutputs",
      "elementKind": "method",
      "methodName": "largeBlob",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.defaultMethodAddedToInterface",
    "description": "A default method has been added to the interface.",
    "newElement": "method akasha.AuthenticatorSelectionCriteria.Builder akasha.AuthenticatorSelectionCriteria.Builder::residentKey(java.lang.String)",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.AuthenticatorSelectionCriteria.Builder",
      "classSimpleName": "Builder",
      "elementKind": "method",
      "methodName": "residentKey",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.added",
    "description": "Method was added.",
    "newElement": "method akasha.CanvasGradient akasha.CanvasRenderingContext2D::createConicGradient(double, double, double)",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.CanvasRenderingContext2D",
      "classSimpleName": "CanvasRenderingContext2D",
      "elementKind": "method",
      "methodName": "createConicGradient",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.added",
    "description": "Method was added.",
    "newElement": "method akasha.CanvasGradient akasha.OffscreenCanvasRenderingContext2D::createConicGradient(double, double, double)",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.OffscreenCanvasRenderingContext2D",
      "classSimpleName": "OffscreenCanvasRenderingContext2D",
      "elementKind": "method",
      "methodName": "createConicGradient",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.defaultMethodAddedToInterface",
    "description": "A default method has been added to the interface.",
    "newElement": "method akasha.CanvasRenderingContext2DSettings.Builder akasha.CanvasRenderingContext2DSettings.Builder::colorSpace(java.lang.String)",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.CanvasRenderingContext2DSettings.Builder",
      "classSimpleName": "Builder",
      "elementKind": "method",
      "methodName": "colorSpace",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.defaultMethodAddedToInterface",
    "description": "A default method has been added to the interface.",
    "newElement": "method akasha.CollectedClientData.Builder akasha.CollectedClientData.Builder::crossOrigin(boolean)",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.CollectedClientData.Builder",
      "classSimpleName": "Builder",
      "elementKind": "method",
      "methodName": "crossOrigin",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.addedToInterface",
    "description": "Method was added to an interface.",
    "newElement": "method akasha.CredentialPropertiesOutput akasha.AuthenticationExtensionsClientOutputs::credProps()",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "NON_BREAKING",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.AuthenticationExtensionsClientOutputs",
      "classSimpleName": "AuthenticationExtensionsClientOutputs",
      "elementKind": "method",
      "methodName": "credProps",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.added",
    "description": "Method was added.",
    "newElement": "method akasha.ImageData akasha.CanvasRenderingContext2D::createImageData(int, int, akasha.ImageDataSettings)",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.CanvasRenderingContext2D",
      "classSimpleName": "CanvasRenderingContext2D",
      "elementKind": "method",
      "methodName": "createImageData",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.added",
    "description": "Method was added.",
    "newElement": "method akasha.ImageData akasha.CanvasRenderingContext2D::getImageData(int, int, int, int, akasha.ImageDataSettings)",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.CanvasRenderingContext2D",
      "classSimpleName": "CanvasRenderingContext2D",
      "elementKind": "method",
      "methodName": "getImageData",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.added",
    "description": "Method was added.",
    "newElement": "method akasha.ImageData akasha.OffscreenCanvasRenderingContext2D::createImageData(int, int, akasha.ImageDataSettings)",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.OffscreenCanvasRenderingContext2D",
      "classSimpleName": "OffscreenCanvasRenderingContext2D",
      "elementKind": "method",
      "methodName": "createImageData",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.added",
    "description": "Method was added.",
    "newElement": "method akasha.ImageData akasha.OffscreenCanvasRenderingContext2D::getImageData(int, int, int, int, akasha.ImageDataSettings)",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.OffscreenCanvasRenderingContext2D",
      "classSimpleName": "OffscreenCanvasRenderingContext2D",
      "elementKind": "method",
      "methodName": "getImageData",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.defaultMethodAddedToInterface",
    "description": "A default method has been added to the interface.",
    "newElement": "method akasha.KeyframeAnimationOptions.Builder akasha.KeyframeAnimationOptions.Builder::pseudoElement(java.lang.String)",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.KeyframeAnimationOptions.Builder",
      "classSimpleName": "Builder",
      "elementKind": "method",
      "methodName": "pseudoElement",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.defaultMethodAddedToInterface",
    "description": "A default method has been added to the interface.",
    "newElement": "method akasha.KeyframeAnimationOptions.Builder akasha.KeyframeAnimationOptions.Builder::timeline(akasha.AnimationTimeline)",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.KeyframeAnimationOptions.Builder",
      "classSimpleName": "Builder",
      "elementKind": "method",
      "methodName": "timeline",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.defaultMethodAddedToInterface",
    "description": "A default method has been added to the interface.",
    "newElement": "method akasha.KeyframeEffectOptions.Builder akasha.KeyframeEffectOptions.Builder::pseudoElement(java.lang.String)",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.KeyframeEffectOptions.Builder",
      "classSimpleName": "Builder",
      "elementKind": "method",
      "methodName": "pseudoElement",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.defaultMethodAddedToInterface",
    "description": "A default method has been added to the interface.",
    "newElement": "method akasha.ShadowRootInit.Builder akasha.ShadowRootInit.Builder::slotAssignment(java.lang.String)",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.ShadowRootInit.Builder",
      "classSimpleName": "Builder",
      "elementKind": "method",
      "methodName": "slotAssignment",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.defaultMethodAddedToInterface",
    "description": "A default method has been added to the interface.",
    "newElement": "method akasha.bluetooth.AllowedBluetoothDevice.Builder akasha.bluetooth.AllowedBluetoothDevice.Builder::allowedManufacturerData(akasha.lang.JsArray<java.lang.Double>)",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.bluetooth.AllowedBluetoothDevice.Builder",
      "classSimpleName": "Builder",
      "elementKind": "method",
      "methodName": "allowedManufacturerData",
      "package": "akasha.bluetooth"
    }
  },
  {
    "code": "java.method.defaultMethodAddedToInterface",
    "description": "A default method has been added to the interface.",
    "newElement": "method akasha.bluetooth.AllowedBluetoothDevice.Builder akasha.bluetooth.AllowedBluetoothDevice.Builder::allowedManufacturerData(double[])",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.bluetooth.AllowedBluetoothDevice.Builder",
      "classSimpleName": "Builder",
      "elementKind": "method",
      "methodName": "allowedManufacturerData",
      "package": "akasha.bluetooth"
    }
  },
  {
    "code": "java.method.staticMethodAddedToInterface",
    "description": "A default method has been added to the interface.",
    "newElement": "method akasha.bluetooth.AllowedBluetoothDevice.Builder akasha.bluetooth.AllowedBluetoothDevice::create(akasha.lang.JsArray<java.lang.Double>, akasha.lang.JsArray<java.lang.String>, java.lang.String, boolean)",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.bluetooth.AllowedBluetoothDevice",
      "classSimpleName": "AllowedBluetoothDevice",
      "elementKind": "method",
      "methodName": "create",
      "package": "akasha.bluetooth"
    }
  },
  {
    "code": "java.method.staticMethodAddedToInterface",
    "description": "A default method has been added to the interface.",
    "newElement": "method akasha.bluetooth.AllowedBluetoothDevice.Builder akasha.bluetooth.AllowedBluetoothDevice::create(akasha.lang.JsArray<java.lang.Double>, java.lang.String, java.lang.String, boolean)",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.bluetooth.AllowedBluetoothDevice",
      "classSimpleName": "AllowedBluetoothDevice",
      "elementKind": "method",
      "methodName": "create",
      "package": "akasha.bluetooth"
    }
  },
  {
    "code": "java.method.staticMethodAddedToInterface",
    "description": "A default method has been added to the interface.",
    "newElement": "method akasha.bluetooth.AllowedBluetoothDevice.Builder akasha.bluetooth.AllowedBluetoothDevice::create(akasha.lang.JsArray<java.lang.Double>, java.lang.String[], java.lang.String, boolean)",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.bluetooth.AllowedBluetoothDevice",
      "classSimpleName": "AllowedBluetoothDevice",
      "elementKind": "method",
      "methodName": "create",
      "package": "akasha.bluetooth"
    }
  },
  {
    "code": "java.method.numberOfParametersChanged",
    "description": "The number of parameters of the method have changed.",
    "newElement": "method akasha.bluetooth.AllowedBluetoothDevice.Builder akasha.bluetooth.AllowedBluetoothDevice::create(double[], akasha.lang.JsArray<java.lang.String>, java.lang.String, boolean)",
    "oldElement": "method akasha.bluetooth.AllowedBluetoothDevice.Builder akasha.bluetooth.AllowedBluetoothDevice::create(akasha.lang.JsArray<java.lang.String>, java.lang.String, boolean)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.bluetooth.AllowedBluetoothDevice",
      "classSimpleName": "AllowedBluetoothDevice",
      "elementKind": "method",
      "methodName": "create",
      "package": "akasha.bluetooth"
    }
  },
  {
    "code": "java.method.numberOfParametersChanged",
    "description": "The number of parameters of the method have changed.",
    "newElement": "method akasha.bluetooth.AllowedBluetoothDevice.Builder akasha.bluetooth.AllowedBluetoothDevice::create(double[], java.lang.String, java.lang.String, boolean)",
    "oldElement": "method akasha.bluetooth.AllowedBluetoothDevice.Builder akasha.bluetooth.AllowedBluetoothDevice::create(java.lang.String, java.lang.String, boolean)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.bluetooth.AllowedBluetoothDevice",
      "classSimpleName": "AllowedBluetoothDevice",
      "elementKind": "method",
      "methodName": "create",
      "package": "akasha.bluetooth"
    }
  },
  {
    "code": "java.method.numberOfParametersChanged",
    "description": "The number of parameters of the method have changed.",
    "newElement": "method akasha.bluetooth.AllowedBluetoothDevice.Builder akasha.bluetooth.AllowedBluetoothDevice::create(double[], java.lang.String[], java.lang.String, boolean)",
    "oldElement": "method akasha.bluetooth.AllowedBluetoothDevice.Builder akasha.bluetooth.AllowedBluetoothDevice::create(java.lang.String[], java.lang.String, boolean)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.bluetooth.AllowedBluetoothDevice",
      "classSimpleName": "AllowedBluetoothDevice",
      "elementKind": "method",
      "methodName": "create",
      "package": "akasha.bluetooth"
    }
  },
  {
    "code": "java.method.defaultMethodAddedToInterface",
    "description": "A default method has been added to the interface.",
    "newElement": "method akasha.bluetooth.BluetoothLEScanFilterInit.Builder akasha.bluetooth.BluetoothLEScanFilterInit.Builder::manufacturerData(akasha.bluetooth.BluetoothManufacturerDataFilterInit[])",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.bluetooth.BluetoothLEScanFilterInit.Builder",
      "classSimpleName": "Builder",
      "elementKind": "method",
      "methodName": "manufacturerData",
      "package": "akasha.bluetooth"
    }
  },
  {
    "code": "java.method.defaultMethodAddedToInterface",
    "description": "A default method has been added to the interface.",
    "newElement": "method akasha.bluetooth.BluetoothLEScanFilterInit.Builder akasha.bluetooth.BluetoothLEScanFilterInit.Builder::serviceData(akasha.bluetooth.BluetoothServiceDataFilterInit[])",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.bluetooth.BluetoothLEScanFilterInit.Builder",
      "classSimpleName": "Builder",
      "elementKind": "method",
      "methodName": "serviceData",
      "package": "akasha.bluetooth"
    }
  },
  {
    "code": "java.method.defaultMethodAddedToInterface",
    "description": "A default method has been added to the interface.",
    "newElement": "method akasha.bluetooth.BluetoothPermissionDescriptor.Builder akasha.bluetooth.BluetoothPermissionDescriptor.Builder::optionalManufacturerData(akasha.lang.JsArray<java.lang.Double>)",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.bluetooth.BluetoothPermissionDescriptor.Builder",
      "classSimpleName": "Builder",
      "elementKind": "method",
      "methodName": "optionalManufacturerData",
      "package": "akasha.bluetooth"
    }
  },
  {
    "code": "java.method.defaultMethodAddedToInterface",
    "description": "A default method has been added to the interface.",
    "newElement": "method akasha.bluetooth.BluetoothPermissionDescriptor.Builder akasha.bluetooth.BluetoothPermissionDescriptor.Builder::optionalManufacturerData(double[])",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.bluetooth.BluetoothPermissionDescriptor.Builder",
      "classSimpleName": "Builder",
      "elementKind": "method",
      "methodName": "optionalManufacturerData",
      "package": "akasha.bluetooth"
    }
  },
  {
    "code": "java.method.defaultMethodAddedToInterface",
    "description": "A default method has been added to the interface.",
    "newElement": "method akasha.bluetooth.RequestDeviceOptions.Builder akasha.bluetooth.RequestDeviceOptions.Builder::optionalManufacturerData(akasha.lang.JsArray<java.lang.Double>)",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.bluetooth.RequestDeviceOptions.Builder",
      "classSimpleName": "Builder",
      "elementKind": "method",
      "methodName": "optionalManufacturerData",
      "package": "akasha.bluetooth"
    }
  },
  {
    "code": "java.method.defaultMethodAddedToInterface",
    "description": "A default method has been added to the interface.",
    "newElement": "method akasha.bluetooth.RequestDeviceOptions.Builder akasha.bluetooth.RequestDeviceOptions.Builder::optionalManufacturerData(double[])",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.bluetooth.RequestDeviceOptions.Builder",
      "classSimpleName": "Builder",
      "elementKind": "method",
      "methodName": "optionalManufacturerData",
      "package": "akasha.bluetooth"
    }
  },
  {
    "code": "java.method.added",
    "description": "Method was added.",
    "newElement": "method akasha.core.ArrayBuffer akasha.AuthenticatorAttestationResponse::getAuthenticatorData()",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.AuthenticatorAttestationResponse",
      "classSimpleName": "AuthenticatorAttestationResponse",
      "elementKind": "method",
      "methodName": "getAuthenticatorData",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.added",
    "description": "Method was added.",
    "newElement": "method akasha.core.ArrayBuffer akasha.AuthenticatorAttestationResponse::getPublicKey()",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.AuthenticatorAttestationResponse",
      "classSimpleName": "AuthenticatorAttestationResponse",
      "elementKind": "method",
      "methodName": "getPublicKey",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.added",
    "description": "Method was added.",
    "newElement": "method akasha.lang.JsArray<akasha.Animation> akasha.Element::getAnimations(akasha.GetAnimationsOptions)",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.Element",
      "classSimpleName": "Element",
      "elementKind": "method",
      "methodName": "getAnimations",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.added",
    "description": "Method was added.",
    "newElement": "method akasha.lang.JsArray<akasha.Animation> akasha.ShadowRoot::getAnimations()",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.ShadowRoot",
      "classSimpleName": "ShadowRoot",
      "elementKind": "method",
      "methodName": "getAnimations",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.added",
    "description": "Method was added.",
    "newElement": "method akasha.lang.JsArray<akasha.DOMRect> akasha.VisualViewport::segments()",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.VisualViewport",
      "classSimpleName": "VisualViewport",
      "elementKind": "method",
      "methodName": "segments",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.returnTypeChanged",
    "description": "The return type changed from 'akasha.core.JsObject' to  'akasha.lang.JsArray<akasha.bluetooth.BluetoothManufacturerDataFilterInit>'.",
    "newElement": "method akasha.lang.JsArray<akasha.bluetooth.BluetoothManufacturerDataFilterInit> akasha.bluetooth.BluetoothLEScanFilterInit::manufacturerData()",
    "oldElement": "method akasha.core.JsObject akasha.bluetooth.BluetoothLEScanFilterInit::manufacturerData()",
    "classification": {
      "SOURCE": "POTENTIALLY_BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.bluetooth.BluetoothLEScanFilterInit",
      "classSimpleName": "BluetoothLEScanFilterInit",
      "elementKind": "method",
      "methodName": "manufacturerData",
      "newType": "akasha.lang.JsArray<akasha.bluetooth.BluetoothManufacturerDataFilterInit>",
      "oldType": "akasha.core.JsObject",
      "package": "akasha.bluetooth"
    }
  },
  {
    "code": "java.method.returnTypeChanged",
    "description": "The return type changed from 'akasha.core.JsObject' to  'akasha.lang.JsArray<akasha.bluetooth.BluetoothServiceDataFilterInit>'.",
    "newElement": "method akasha.lang.JsArray<akasha.bluetooth.BluetoothServiceDataFilterInit> akasha.bluetooth.BluetoothLEScanFilterInit::serviceData()",
    "oldElement": "method akasha.core.JsObject akasha.bluetooth.BluetoothLEScanFilterInit::serviceData()",
    "classification": {
      "SOURCE": "POTENTIALLY_BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.bluetooth.BluetoothLEScanFilterInit",
      "classSimpleName": "BluetoothLEScanFilterInit",
      "elementKind": "method",
      "methodName": "serviceData",
      "newType": "akasha.lang.JsArray<akasha.bluetooth.BluetoothServiceDataFilterInit>",
      "oldType": "akasha.core.JsObject",
      "package": "akasha.bluetooth"
    }
  },
  {
    "code": "java.method.addedToInterface",
    "description": "Method was added to an interface.",
    "newElement": "method akasha.lang.JsArray<java.lang.Double> akasha.bluetooth.AllowedBluetoothDevice::allowedManufacturerData()",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "NON_BREAKING",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.bluetooth.AllowedBluetoothDevice",
      "classSimpleName": "AllowedBluetoothDevice",
      "elementKind": "method",
      "methodName": "allowedManufacturerData",
      "package": "akasha.bluetooth"
    }
  },
  {
    "code": "java.method.addedToInterface",
    "description": "Method was added to an interface.",
    "newElement": "method akasha.lang.JsArray<java.lang.Double> akasha.bluetooth.BluetoothPermissionDescriptor::optionalManufacturerData()",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "NON_BREAKING",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.bluetooth.BluetoothPermissionDescriptor",
      "classSimpleName": "BluetoothPermissionDescriptor",
      "elementKind": "method",
      "methodName": "optionalManufacturerData",
      "package": "akasha.bluetooth"
    }
  },
  {
    "code": "java.method.addedToInterface",
    "description": "Method was added to an interface.",
    "newElement": "method akasha.lang.JsArray<java.lang.Double> akasha.bluetooth.RequestDeviceOptions::optionalManufacturerData()",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "NON_BREAKING",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.bluetooth.RequestDeviceOptions",
      "classSimpleName": "RequestDeviceOptions",
      "elementKind": "method",
      "methodName": "optionalManufacturerData",
      "package": "akasha.bluetooth"
    }
  },
  {
    "code": "java.method.added",
    "description": "Method was added.",
    "newElement": "method akasha.lang.JsArray<java.lang.String> akasha.AuthenticatorAttestationResponse::getTransports()",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.AuthenticatorAttestationResponse",
      "classSimpleName": "AuthenticatorAttestationResponse",
      "elementKind": "method",
      "methodName": "getTransports",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.addedToInterface",
    "description": "Method was added to an interface.",
    "newElement": "method akasha.lang.JsArray<java.lang.String> akasha.media.MediaTrackCapabilities::cursor()",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "NON_BREAKING",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.media.MediaTrackCapabilities",
      "classSimpleName": "MediaTrackCapabilities",
      "elementKind": "method",
      "methodName": "cursor",
      "package": "akasha.media"
    }
  },
  {
    "code": "java.method.addedToInterface",
    "description": "Method was added to an interface.",
    "newElement": "method akasha.media.ConstrainBoolean akasha.media.MediaTrackConstraintSet::suppressLocalAudioPlayback()",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "NON_BREAKING",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.media.MediaTrackConstraintSet",
      "classSimpleName": "MediaTrackConstraintSet",
      "elementKind": "method",
      "methodName": "suppressLocalAudioPlayback",
      "package": "akasha.media"
    }
  },
  {
    "code": "java.method.defaultMethodAddedToInterface",
    "description": "A default method has been added to the interface.",
    "newElement": "method akasha.media.MediaTrackCapabilities.Builder akasha.media.MediaTrackCapabilities.Builder::cursor(akasha.lang.JsArray<java.lang.String>)",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.media.MediaTrackCapabilities.Builder",
      "classSimpleName": "Builder",
      "elementKind": "method",
      "methodName": "cursor",
      "package": "akasha.media"
    }
  },
  {
    "code": "java.method.defaultMethodAddedToInterface",
    "description": "A default method has been added to the interface.",
    "newElement": "method akasha.media.MediaTrackCapabilities.Builder akasha.media.MediaTrackCapabilities.Builder::cursor(java.lang.String[])",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.media.MediaTrackCapabilities.Builder",
      "classSimpleName": "Builder",
      "elementKind": "method",
      "methodName": "cursor",
      "package": "akasha.media"
    }
  },
  {
    "code": "java.method.defaultMethodAddedToInterface",
    "description": "A default method has been added to the interface.",
    "newElement": "method akasha.media.MediaTrackCapabilities.Builder akasha.media.MediaTrackCapabilities.Builder::displaySurface(java.lang.String)",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.media.MediaTrackCapabilities.Builder",
      "classSimpleName": "Builder",
      "elementKind": "method",
      "methodName": "displaySurface",
      "package": "akasha.media"
    }
  },
  {
    "code": "java.method.defaultMethodAddedToInterface",
    "description": "A default method has been added to the interface.",
    "newElement": "method akasha.media.MediaTrackCapabilities.Builder akasha.media.MediaTrackCapabilities.Builder::logicalSurface(boolean)",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.media.MediaTrackCapabilities.Builder",
      "classSimpleName": "Builder",
      "elementKind": "method",
      "methodName": "logicalSurface",
      "package": "akasha.media"
    }
  },
  {
    "code": "java.method.defaultMethodAddedToInterface",
    "description": "A default method has been added to the interface.",
    "newElement": "method akasha.media.MediaTrackConstraintSet.Builder akasha.media.MediaTrackConstraintSet.Builder::suppressLocalAudioPlayback(akasha.media.ConstrainBoolean)",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.media.MediaTrackConstraintSet.Builder",
      "classSimpleName": "Builder",
      "elementKind": "method",
      "methodName": "suppressLocalAudioPlayback",
      "package": "akasha.media"
    }
  },
  {
    "code": "java.method.defaultMethodAddedToInterface",
    "description": "A default method has been added to the interface.",
    "newElement": "method akasha.media.MediaTrackConstraintSet.Builder akasha.media.MediaTrackConstraintSet.Builder::suppressLocalAudioPlayback(akasha.media.ConstrainBooleanParameters)",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.media.MediaTrackConstraintSet.Builder",
      "classSimpleName": "Builder",
      "elementKind": "method",
      "methodName": "suppressLocalAudioPlayback",
      "package": "akasha.media"
    }
  },
  {
    "code": "java.method.defaultMethodAddedToInterface",
    "description": "A default method has been added to the interface.",
    "newElement": "method akasha.media.MediaTrackConstraintSet.Builder akasha.media.MediaTrackConstraintSet.Builder::suppressLocalAudioPlayback(boolean)",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.media.MediaTrackConstraintSet.Builder",
      "classSimpleName": "Builder",
      "elementKind": "method",
      "methodName": "suppressLocalAudioPlayback",
      "package": "akasha.media"
    }
  },
  {
    "code": "java.method.defaultMethodAddedToInterface",
    "description": "A default method has been added to the interface.",
    "newElement": "method akasha.media.MediaTrackConstraints.Builder akasha.media.MediaTrackConstraints.Builder::suppressLocalAudioPlayback(akasha.media.ConstrainBoolean)",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.media.MediaTrackConstraints.Builder",
      "classSimpleName": "Builder",
      "elementKind": "method",
      "methodName": "suppressLocalAudioPlayback",
      "package": "akasha.media"
    }
  },
  {
    "code": "java.method.defaultMethodAddedToInterface",
    "description": "A default method has been added to the interface.",
    "newElement": "method akasha.media.MediaTrackConstraints.Builder akasha.media.MediaTrackConstraints.Builder::suppressLocalAudioPlayback(akasha.media.ConstrainBooleanParameters)",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.media.MediaTrackConstraints.Builder",
      "classSimpleName": "Builder",
      "elementKind": "method",
      "methodName": "suppressLocalAudioPlayback",
      "package": "akasha.media"
    }
  },
  {
    "code": "java.method.defaultMethodAddedToInterface",
    "description": "A default method has been added to the interface.",
    "newElement": "method akasha.media.MediaTrackConstraints.Builder akasha.media.MediaTrackConstraints.Builder::suppressLocalAudioPlayback(boolean)",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.media.MediaTrackConstraints.Builder",
      "classSimpleName": "Builder",
      "elementKind": "method",
      "methodName": "suppressLocalAudioPlayback",
      "package": "akasha.media"
    }
  },
  {
    "code": "java.method.defaultMethodAddedToInterface",
    "description": "A default method has been added to the interface.",
    "newElement": "method akasha.media.MediaTrackSettings.Builder akasha.media.MediaTrackSettings.Builder::restrictOwnAudio(boolean)",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.media.MediaTrackSettings.Builder",
      "classSimpleName": "Builder",
      "elementKind": "method",
      "methodName": "restrictOwnAudio",
      "package": "akasha.media"
    }
  },
  {
    "code": "java.method.defaultMethodAddedToInterface",
    "description": "A default method has been added to the interface.",
    "newElement": "method akasha.media.MediaTrackSupportedConstraints.Builder akasha.media.MediaTrackSupportedConstraints.Builder::suppressLocalAudioPlayback(boolean)",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.media.MediaTrackSupportedConstraints.Builder",
      "classSimpleName": "Builder",
      "elementKind": "method",
      "methodName": "suppressLocalAudioPlayback",
      "package": "akasha.media"
    }
  },
  {
    "code": "java.method.defaultMethodAddedToInterface",
    "description": "A default method has been added to the interface.",
    "newElement": "method akasha.rtc.RTCRemoteOutboundRtpStreamStats.Builder akasha.rtc.RTCRemoteOutboundRtpStreamStats.Builder::roundTripTime(double)",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.rtc.RTCRemoteOutboundRtpStreamStats.Builder",
      "classSimpleName": "Builder",
      "elementKind": "method",
      "methodName": "roundTripTime",
      "package": "akasha.rtc"
    }
  },
  {
    "code": "java.method.defaultMethodAddedToInterface",
    "description": "A default method has been added to the interface.",
    "newElement": "method akasha.rtc.RTCRemoteOutboundRtpStreamStats.Builder akasha.rtc.RTCRemoteOutboundRtpStreamStats.Builder::roundTripTimeMeasurements(int)",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.rtc.RTCRemoteOutboundRtpStreamStats.Builder",
      "classSimpleName": "Builder",
      "elementKind": "method",
      "methodName": "roundTripTimeMeasurements",
      "package": "akasha.rtc"
    }
  },
  {
    "code": "java.method.defaultMethodAddedToInterface",
    "description": "A default method has been added to the interface.",
    "newElement": "method akasha.rtc.RTCRemoteOutboundRtpStreamStats.Builder akasha.rtc.RTCRemoteOutboundRtpStreamStats.Builder::totalRoundTripTime(double)",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.rtc.RTCRemoteOutboundRtpStreamStats.Builder",
      "classSimpleName": "Builder",
      "elementKind": "method",
      "methodName": "totalRoundTripTime",
      "package": "akasha.rtc"
    }
  },
  {
    "code": "java.method.addedToInterface",
    "description": "Method was added to an interface.",
    "newElement": "method boolean akasha.AuthenticationExtensionsClientInputs::credProps()",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "NON_BREAKING",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.AuthenticationExtensionsClientInputs",
      "classSimpleName": "AuthenticationExtensionsClientInputs",
      "elementKind": "method",
      "methodName": "credProps",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.addedToInterface",
    "description": "Method was added to an interface.",
    "newElement": "method boolean akasha.AuthenticationExtensionsClientOutputs::appidExclude()",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "NON_BREAKING",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.AuthenticationExtensionsClientOutputs",
      "classSimpleName": "AuthenticationExtensionsClientOutputs",
      "elementKind": "method",
      "methodName": "appidExclude",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.addedToInterface",
    "description": "Method was added to an interface.",
    "newElement": "method boolean akasha.CollectedClientData::crossOrigin()",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "NON_BREAKING",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.CollectedClientData",
      "classSimpleName": "CollectedClientData",
      "elementKind": "method",
      "methodName": "crossOrigin",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.added",
    "description": "Method was added.",
    "newElement": "method boolean akasha.ShadowRoot::delegatesFocus()",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.ShadowRoot",
      "classSimpleName": "ShadowRoot",
      "elementKind": "method",
      "methodName": "delegatesFocus",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.addedToInterface",
    "description": "Method was added to an interface.",
    "newElement": "method boolean akasha.media.MediaTrackCapabilities::logicalSurface()",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "NON_BREAKING",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.media.MediaTrackCapabilities",
      "classSimpleName": "MediaTrackCapabilities",
      "elementKind": "method",
      "methodName": "logicalSurface",
      "package": "akasha.media"
    }
  },
  {
    "code": "java.method.addedToInterface",
    "description": "Method was added to an interface.",
    "newElement": "method boolean akasha.media.MediaTrackSettings::restrictOwnAudio()",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "NON_BREAKING",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.media.MediaTrackSettings",
      "classSimpleName": "MediaTrackSettings",
      "elementKind": "method",
      "methodName": "restrictOwnAudio",
      "package": "akasha.media"
    }
  },
  {
    "code": "java.method.addedToInterface",
    "description": "Method was added to an interface.",
    "newElement": "method boolean akasha.media.MediaTrackSupportedConstraints::suppressLocalAudioPlayback()",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "NON_BREAKING",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.media.MediaTrackSupportedConstraints",
      "classSimpleName": "MediaTrackSupportedConstraints",
      "elementKind": "method",
      "methodName": "suppressLocalAudioPlayback",
      "package": "akasha.media"
    }
  },
  {
    "code": "java.method.addedToInterface",
    "description": "Method was added to an interface.",
    "newElement": "method double akasha.rtc.RTCRemoteOutboundRtpStreamStats::roundTripTime()",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "NON_BREAKING",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.rtc.RTCRemoteOutboundRtpStreamStats",
      "classSimpleName": "RTCRemoteOutboundRtpStreamStats",
      "elementKind": "method",
      "methodName": "roundTripTime",
      "package": "akasha.rtc"
    }
  },
  {
    "code": "java.method.addedToInterface",
    "description": "Method was added to an interface.",
    "newElement": "method double akasha.rtc.RTCRemoteOutboundRtpStreamStats::totalRoundTripTime()",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "NON_BREAKING",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.rtc.RTCRemoteOutboundRtpStreamStats",
      "classSimpleName": "RTCRemoteOutboundRtpStreamStats",
      "elementKind": "method",
      "methodName": "totalRoundTripTime",
      "package": "akasha.rtc"
    }
  },
  {
    "code": "java.method.added",
    "description": "Method was added.",
    "newElement": "method int akasha.AuthenticatorAttestationResponse::getPublicKeyAlgorithm()",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.AuthenticatorAttestationResponse",
      "classSimpleName": "AuthenticatorAttestationResponse",
      "elementKind": "method",
      "methodName": "getPublicKeyAlgorithm",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.addedToInterface",
    "description": "Method was added to an interface.",
    "newElement": "method int akasha.rtc.RTCRemoteOutboundRtpStreamStats::roundTripTimeMeasurements()",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "NON_BREAKING",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.rtc.RTCRemoteOutboundRtpStreamStats",
      "classSimpleName": "RTCRemoteOutboundRtpStreamStats",
      "elementKind": "method",
      "methodName": "roundTripTimeMeasurements",
      "package": "akasha.rtc"
    }
  },
  {
    "code": "java.method.added",
    "description": "Method was added.",
    "newElement": "method java.lang.String akasha.Animation::replaceState()",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.Animation",
      "classSimpleName": "Animation",
      "elementKind": "method",
      "methodName": "replaceState",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.added",
    "description": "Method was added.",
    "newElement": "method java.lang.String akasha.AnimationTimeline::phase()",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.AnimationTimeline",
      "classSimpleName": "AnimationTimeline",
      "elementKind": "method",
      "methodName": "phase",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.addedToInterface",
    "description": "Method was added to an interface.",
    "newElement": "method java.lang.String akasha.AuthenticationExtensionsClientInputs::appidExclude()",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "NON_BREAKING",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.AuthenticationExtensionsClientInputs",
      "classSimpleName": "AuthenticationExtensionsClientInputs",
      "elementKind": "method",
      "methodName": "appidExclude",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.removed",
    "description": "Element no longer annotated with 'akasha.AuthenticatorAttachment'.",
    "element": "method java.lang.String akasha.AuthenticatorSelectionCriteria::authenticatorAttachment() @ akasha.AuthenticatorSelectionCriteria.Builder",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@akasha.AuthenticatorAttachment",
      "annotationType": "akasha.AuthenticatorAttachment",
      "classQualifiedName": "akasha.AuthenticatorSelectionCriteria.Builder",
      "classSimpleName": "Builder",
      "elementKind": "method",
      "methodName": "authenticatorAttachment",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.removed",
    "description": "Element no longer annotated with 'akasha.AuthenticatorAttachment'.",
    "element": "method java.lang.String akasha.AuthenticatorSelectionCriteria::authenticatorAttachment()",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@akasha.AuthenticatorAttachment",
      "annotationType": "akasha.AuthenticatorAttachment",
      "classQualifiedName": "akasha.AuthenticatorSelectionCriteria",
      "classSimpleName": "AuthenticatorSelectionCriteria",
      "elementKind": "method",
      "methodName": "authenticatorAttachment",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.addedToInterface",
    "description": "Method was added to an interface.",
    "newElement": "method java.lang.String akasha.AuthenticatorSelectionCriteria::residentKey()",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "NON_BREAKING",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.AuthenticatorSelectionCriteria",
      "classSimpleName": "AuthenticatorSelectionCriteria",
      "elementKind": "method",
      "methodName": "residentKey",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.removed",
    "description": "Element no longer annotated with 'akasha.UserVerificationRequirement'.",
    "element": "method java.lang.String akasha.AuthenticatorSelectionCriteria::userVerification() @ akasha.AuthenticatorSelectionCriteria.Builder",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@akasha.UserVerificationRequirement",
      "annotationType": "akasha.UserVerificationRequirement",
      "classQualifiedName": "akasha.AuthenticatorSelectionCriteria.Builder",
      "classSimpleName": "Builder",
      "elementKind": "method",
      "methodName": "userVerification",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.removed",
    "description": "Element no longer annotated with 'akasha.UserVerificationRequirement'.",
    "element": "method java.lang.String akasha.AuthenticatorSelectionCriteria::userVerification()",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@akasha.UserVerificationRequirement",
      "annotationType": "akasha.UserVerificationRequirement",
      "classQualifiedName": "akasha.AuthenticatorSelectionCriteria",
      "classSimpleName": "AuthenticatorSelectionCriteria",
      "elementKind": "method",
      "methodName": "userVerification",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.addedToInterface",
    "description": "Method was added to an interface.",
    "newElement": "method java.lang.String akasha.CanvasRenderingContext2DSettings::colorSpace()",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "NON_BREAKING",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.CanvasRenderingContext2DSettings",
      "classSimpleName": "CanvasRenderingContext2DSettings",
      "elementKind": "method",
      "methodName": "colorSpace",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.added",
    "description": "Method was added.",
    "newElement": "method java.lang.String akasha.ImageData::colorSpace()",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.ImageData",
      "classSimpleName": "ImageData",
      "elementKind": "method",
      "methodName": "colorSpace",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.addedToInterface",
    "description": "Method was added to an interface.",
    "newElement": "method java.lang.String akasha.KeyframeEffectOptions::pseudoElement()",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "NON_BREAKING",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.KeyframeEffectOptions",
      "classSimpleName": "KeyframeEffectOptions",
      "elementKind": "method",
      "methodName": "pseudoElement",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.removed",
    "description": "Element no longer annotated with 'akasha.AttestationConveyancePreference'.",
    "element": "method java.lang.String akasha.PublicKeyCredentialCreationOptions::attestation() @ akasha.PublicKeyCredentialCreationOptions.Builder",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@akasha.AttestationConveyancePreference",
      "annotationType": "akasha.AttestationConveyancePreference",
      "classQualifiedName": "akasha.PublicKeyCredentialCreationOptions.Builder",
      "classSimpleName": "Builder",
      "elementKind": "method",
      "methodName": "attestation",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.removed",
    "description": "Element no longer annotated with 'akasha.AttestationConveyancePreference'.",
    "element": "method java.lang.String akasha.PublicKeyCredentialCreationOptions::attestation()",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@akasha.AttestationConveyancePreference",
      "annotationType": "akasha.AttestationConveyancePreference",
      "classQualifiedName": "akasha.PublicKeyCredentialCreationOptions",
      "classSimpleName": "PublicKeyCredentialCreationOptions",
      "elementKind": "method",
      "methodName": "attestation",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.removed",
    "description": "Element no longer annotated with 'akasha.PublicKeyCredentialType'.",
    "element": "method java.lang.String akasha.PublicKeyCredentialDescriptor::type() @ akasha.PublicKeyCredentialDescriptor.Builder",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@akasha.PublicKeyCredentialType",
      "annotationType": "akasha.PublicKeyCredentialType",
      "classQualifiedName": "akasha.PublicKeyCredentialDescriptor.Builder",
      "classSimpleName": "Builder",
      "elementKind": "method",
      "methodName": "type",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.removed",
    "description": "Element no longer annotated with 'akasha.PublicKeyCredentialType'.",
    "element": "method java.lang.String akasha.PublicKeyCredentialDescriptor::type()",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@akasha.PublicKeyCredentialType",
      "annotationType": "akasha.PublicKeyCredentialType",
      "classQualifiedName": "akasha.PublicKeyCredentialDescriptor",
      "classSimpleName": "PublicKeyCredentialDescriptor",
      "elementKind": "method",
      "methodName": "type",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.removed",
    "description": "Element no longer annotated with 'akasha.PublicKeyCredentialType'.",
    "element": "method java.lang.String akasha.PublicKeyCredentialParameters::type() @ akasha.PublicKeyCredentialParameters.Builder",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@akasha.PublicKeyCredentialType",
      "annotationType": "akasha.PublicKeyCredentialType",
      "classQualifiedName": "akasha.PublicKeyCredentialParameters.Builder",
      "classSimpleName": "Builder",
      "elementKind": "method",
      "methodName": "type",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.removed",
    "description": "Element no longer annotated with 'akasha.PublicKeyCredentialType'.",
    "element": "method java.lang.String akasha.PublicKeyCredentialParameters::type()",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@akasha.PublicKeyCredentialType",
      "annotationType": "akasha.PublicKeyCredentialType",
      "classQualifiedName": "akasha.PublicKeyCredentialParameters",
      "classSimpleName": "PublicKeyCredentialParameters",
      "elementKind": "method",
      "methodName": "type",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.removed",
    "description": "Element no longer annotated with 'akasha.UserVerificationRequirement'.",
    "element": "method java.lang.String akasha.PublicKeyCredentialRequestOptions::userVerification() @ akasha.PublicKeyCredentialRequestOptions.Builder",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@akasha.UserVerificationRequirement",
      "annotationType": "akasha.UserVerificationRequirement",
      "classQualifiedName": "akasha.PublicKeyCredentialRequestOptions.Builder",
      "classSimpleName": "Builder",
      "elementKind": "method",
      "methodName": "userVerification",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.removed",
    "description": "Element no longer annotated with 'akasha.UserVerificationRequirement'.",
    "element": "method java.lang.String akasha.PublicKeyCredentialRequestOptions::userVerification()",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@akasha.UserVerificationRequirement",
      "annotationType": "akasha.UserVerificationRequirement",
      "classQualifiedName": "akasha.PublicKeyCredentialRequestOptions",
      "classSimpleName": "PublicKeyCredentialRequestOptions",
      "elementKind": "method",
      "methodName": "userVerification",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.added",
    "description": "Method was added.",
    "newElement": "method java.lang.String akasha.ShadowRoot::slotAssignment()",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.ShadowRoot",
      "classSimpleName": "ShadowRoot",
      "elementKind": "method",
      "methodName": "slotAssignment",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.addedToInterface",
    "description": "Method was added to an interface.",
    "newElement": "method java.lang.String akasha.ShadowRootInit::slotAssignment()",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "NON_BREAKING",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.ShadowRootInit",
      "classSimpleName": "ShadowRootInit",
      "elementKind": "method",
      "methodName": "slotAssignment",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.removed",
    "description": "Element no longer annotated with 'akasha.TokenBindingStatus'.",
    "element": "method java.lang.String akasha.TokenBinding::status() @ akasha.TokenBinding.Builder",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@akasha.TokenBindingStatus",
      "annotationType": "akasha.TokenBindingStatus",
      "classQualifiedName": "akasha.TokenBinding.Builder",
      "classSimpleName": "Builder",
      "elementKind": "method",
      "methodName": "status",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.removed",
    "description": "Element no longer annotated with 'akasha.TokenBindingStatus'.",
    "element": "method java.lang.String akasha.TokenBinding::status()",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@akasha.TokenBindingStatus",
      "annotationType": "akasha.TokenBindingStatus",
      "classQualifiedName": "akasha.TokenBinding",
      "classSimpleName": "TokenBinding",
      "elementKind": "method",
      "methodName": "status",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.addedToInterface",
    "description": "Method was added to an interface.",
    "newElement": "method java.lang.String akasha.media.MediaTrackCapabilities::displaySurface()",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "NON_BREAKING",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.media.MediaTrackCapabilities",
      "classSimpleName": "MediaTrackCapabilities",
      "elementKind": "method",
      "methodName": "displaySurface",
      "package": "akasha.media"
    }
  },
  {
    "code": "java.method.added",
    "description": "Method was added.",
    "newElement": "method void akasha.Animation::commitStyles()",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.Animation",
      "classSimpleName": "Animation",
      "elementKind": "method",
      "methodName": "commitStyles",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.added",
    "description": "Method was added.",
    "newElement": "method void akasha.Animation::persist()",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.Animation",
      "classSimpleName": "Animation",
      "elementKind": "method",
      "methodName": "persist",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.addedToInterface",
    "description": "Method was added to an interface.",
    "newElement": "method void akasha.AuthenticationExtensionsClientInputs::setAppidExclude(java.lang.String)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "NON_BREAKING",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.AuthenticationExtensionsClientInputs",
      "classSimpleName": "AuthenticationExtensionsClientInputs",
      "elementKind": "method",
      "methodName": "setAppidExclude",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.addedToInterface",
    "description": "Method was added to an interface.",
    "newElement": "method void akasha.AuthenticationExtensionsClientInputs::setCredProps(boolean)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "NON_BREAKING",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.AuthenticationExtensionsClientInputs",
      "classSimpleName": "AuthenticationExtensionsClientInputs",
      "elementKind": "method",
      "methodName": "setCredProps",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.addedToInterface",
    "description": "Method was added to an interface.",
    "newElement": "method void akasha.AuthenticationExtensionsClientInputs::setLargeBlob(akasha.AuthenticationExtensionsLargeBlobInputs)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "NON_BREAKING",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.AuthenticationExtensionsClientInputs",
      "classSimpleName": "AuthenticationExtensionsClientInputs",
      "elementKind": "method",
      "methodName": "setLargeBlob",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.addedToInterface",
    "description": "Method was added to an interface.",
    "newElement": "method void akasha.AuthenticationExtensionsClientOutputs::setAppidExclude(boolean)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "NON_BREAKING",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.AuthenticationExtensionsClientOutputs",
      "classSimpleName": "AuthenticationExtensionsClientOutputs",
      "elementKind": "method",
      "methodName": "setAppidExclude",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.addedToInterface",
    "description": "Method was added to an interface.",
    "newElement": "method void akasha.AuthenticationExtensionsClientOutputs::setCredProps(akasha.CredentialPropertiesOutput)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "NON_BREAKING",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.AuthenticationExtensionsClientOutputs",
      "classSimpleName": "AuthenticationExtensionsClientOutputs",
      "elementKind": "method",
      "methodName": "setCredProps",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.addedToInterface",
    "description": "Method was added to an interface.",
    "newElement": "method void akasha.AuthenticationExtensionsClientOutputs::setLargeBlob(akasha.AuthenticationExtensionsLargeBlobOutputs)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "NON_BREAKING",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.AuthenticationExtensionsClientOutputs",
      "classSimpleName": "AuthenticationExtensionsClientOutputs",
      "elementKind": "method",
      "methodName": "setLargeBlob",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.addedToInterface",
    "description": "Method was added to an interface.",
    "newElement": "method void akasha.AuthenticatorSelectionCriteria::setResidentKey(java.lang.String)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "NON_BREAKING",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.AuthenticatorSelectionCriteria",
      "classSimpleName": "AuthenticatorSelectionCriteria",
      "elementKind": "method",
      "methodName": "setResidentKey",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.added",
    "description": "Method was added.",
    "newElement": "method void akasha.CanvasRenderingContext2D::reset()",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.CanvasRenderingContext2D",
      "classSimpleName": "CanvasRenderingContext2D",
      "elementKind": "method",
      "methodName": "reset",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.addedToInterface",
    "description": "Method was added to an interface.",
    "newElement": "method void akasha.CanvasRenderingContext2DSettings::setColorSpace(java.lang.String)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "NON_BREAKING",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.CanvasRenderingContext2DSettings",
      "classSimpleName": "CanvasRenderingContext2DSettings",
      "elementKind": "method",
      "methodName": "setColorSpace",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.addedToInterface",
    "description": "Method was added to an interface.",
    "newElement": "method void akasha.CollectedClientData::setCrossOrigin(boolean)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "NON_BREAKING",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.CollectedClientData",
      "classSimpleName": "CollectedClientData",
      "elementKind": "method",
      "methodName": "setCrossOrigin",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.added",
    "description": "Method was added.",
    "newElement": "method void akasha.HTMLSlotElement::assign(akasha.Element[])",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.HTMLSlotElement",
      "classSimpleName": "HTMLSlotElement",
      "elementKind": "method",
      "methodName": "assign",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.added",
    "description": "Method was added.",
    "newElement": "method void akasha.HTMLSlotElement::assign(akasha.Text[])",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.HTMLSlotElement",
      "classSimpleName": "HTMLSlotElement",
      "elementKind": "method",
      "methodName": "assign",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.added",
    "description": "Method was added.",
    "newElement": "method void akasha.ImageData::<init>(akasha.core.Uint8ClampedArray, int, int, akasha.ImageDataSettings)",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.ImageData",
      "classSimpleName": "ImageData",
      "elementKind": "constructor",
      "methodName": "<init>",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.added",
    "description": "Method was added.",
    "newElement": "method void akasha.ImageData::<init>(int, int, akasha.ImageDataSettings)",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.ImageData",
      "classSimpleName": "ImageData",
      "elementKind": "constructor",
      "methodName": "<init>",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.addedToInterface",
    "description": "Method was added to an interface.",
    "newElement": "method void akasha.KeyframeAnimationOptions::setTimeline(akasha.AnimationTimeline)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "NON_BREAKING",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.KeyframeAnimationOptions",
      "classSimpleName": "KeyframeAnimationOptions",
      "elementKind": "method",
      "methodName": "setTimeline",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.addedToInterface",
    "description": "Method was added to an interface.",
    "newElement": "method void akasha.KeyframeEffectOptions::setPseudoElement(java.lang.String)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "NON_BREAKING",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.KeyframeEffectOptions",
      "classSimpleName": "KeyframeEffectOptions",
      "elementKind": "method",
      "methodName": "setPseudoElement",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.added",
    "description": "Method was added.",
    "newElement": "method void akasha.OffscreenCanvasRenderingContext2D::reset()",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.OffscreenCanvasRenderingContext2D",
      "classSimpleName": "OffscreenCanvasRenderingContext2D",
      "elementKind": "method",
      "methodName": "reset",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.addedToInterface",
    "description": "Method was added to an interface.",
    "newElement": "method void akasha.ShadowRootInit::setSlotAssignment(java.lang.String)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "NON_BREAKING",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.ShadowRootInit",
      "classSimpleName": "ShadowRootInit",
      "elementKind": "method",
      "methodName": "setSlotAssignment",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.addedToInterface",
    "description": "Method was added to an interface.",
    "newElement": "method void akasha.bluetooth.AllowedBluetoothDevice::setAllowedManufacturerData(akasha.lang.JsArray<java.lang.Double>)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "NON_BREAKING",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.bluetooth.AllowedBluetoothDevice",
      "classSimpleName": "AllowedBluetoothDevice",
      "elementKind": "method",
      "methodName": "setAllowedManufacturerData",
      "package": "akasha.bluetooth"
    }
  },
  {
    "code": "java.method.defaultMethodAddedToInterface",
    "description": "A default method has been added to the interface.",
    "newElement": "method void akasha.bluetooth.AllowedBluetoothDevice::setAllowedManufacturerData(double[])",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.bluetooth.AllowedBluetoothDevice",
      "classSimpleName": "AllowedBluetoothDevice",
      "elementKind": "method",
      "methodName": "setAllowedManufacturerData",
      "package": "akasha.bluetooth"
    }
  },
  {
    "code": "java.method.defaultMethodAddedToInterface",
    "description": "A default method has been added to the interface.",
    "newElement": "method void akasha.bluetooth.BluetoothLEScanFilterInit::setManufacturerData(akasha.bluetooth.BluetoothManufacturerDataFilterInit[])",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.bluetooth.BluetoothLEScanFilterInit",
      "classSimpleName": "BluetoothLEScanFilterInit",
      "elementKind": "method",
      "methodName": "setManufacturerData",
      "package": "akasha.bluetooth"
    }
  },
  {
    "code": "java.method.defaultMethodAddedToInterface",
    "description": "A default method has been added to the interface.",
    "newElement": "method void akasha.bluetooth.BluetoothLEScanFilterInit::setServiceData(akasha.bluetooth.BluetoothServiceDataFilterInit[])",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.bluetooth.BluetoothLEScanFilterInit",
      "classSimpleName": "BluetoothLEScanFilterInit",
      "elementKind": "method",
      "methodName": "setServiceData",
      "package": "akasha.bluetooth"
    }
  },
  {
    "code": "java.method.addedToInterface",
    "description": "Method was added to an interface.",
    "newElement": "method void akasha.bluetooth.BluetoothPermissionDescriptor::setOptionalManufacturerData(akasha.lang.JsArray<java.lang.Double>)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "NON_BREAKING",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.bluetooth.BluetoothPermissionDescriptor",
      "classSimpleName": "BluetoothPermissionDescriptor",
      "elementKind": "method",
      "methodName": "setOptionalManufacturerData",
      "package": "akasha.bluetooth"
    }
  },
  {
    "code": "java.method.defaultMethodAddedToInterface",
    "description": "A default method has been added to the interface.",
    "newElement": "method void akasha.bluetooth.BluetoothPermissionDescriptor::setOptionalManufacturerData(double[])",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.bluetooth.BluetoothPermissionDescriptor",
      "classSimpleName": "BluetoothPermissionDescriptor",
      "elementKind": "method",
      "methodName": "setOptionalManufacturerData",
      "package": "akasha.bluetooth"
    }
  },
  {
    "code": "java.method.addedToInterface",
    "description": "Method was added to an interface.",
    "newElement": "method void akasha.bluetooth.RequestDeviceOptions::setOptionalManufacturerData(akasha.lang.JsArray<java.lang.Double>)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "NON_BREAKING",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.bluetooth.RequestDeviceOptions",
      "classSimpleName": "RequestDeviceOptions",
      "elementKind": "method",
      "methodName": "setOptionalManufacturerData",
      "package": "akasha.bluetooth"
    }
  },
  {
    "code": "java.method.defaultMethodAddedToInterface",
    "description": "A default method has been added to the interface.",
    "newElement": "method void akasha.bluetooth.RequestDeviceOptions::setOptionalManufacturerData(double[])",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.bluetooth.RequestDeviceOptions",
      "classSimpleName": "RequestDeviceOptions",
      "elementKind": "method",
      "methodName": "setOptionalManufacturerData",
      "package": "akasha.bluetooth"
    }
  },
  {
    "code": "java.method.addedToInterface",
    "description": "Method was added to an interface.",
    "newElement": "method void akasha.media.MediaTrackCapabilities::setCursor(akasha.lang.JsArray<java.lang.String>)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "NON_BREAKING",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.media.MediaTrackCapabilities",
      "classSimpleName": "MediaTrackCapabilities",
      "elementKind": "method",
      "methodName": "setCursor",
      "package": "akasha.media"
    }
  },
  {
    "code": "java.method.defaultMethodAddedToInterface",
    "description": "A default method has been added to the interface.",
    "newElement": "method void akasha.media.MediaTrackCapabilities::setCursor(java.lang.String[])",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.media.MediaTrackCapabilities",
      "classSimpleName": "MediaTrackCapabilities",
      "elementKind": "method",
      "methodName": "setCursor",
      "package": "akasha.media"
    }
  },
  {
    "code": "java.method.addedToInterface",
    "description": "Method was added to an interface.",
    "newElement": "method void akasha.media.MediaTrackCapabilities::setDisplaySurface(java.lang.String)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "NON_BREAKING",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.media.MediaTrackCapabilities",
      "classSimpleName": "MediaTrackCapabilities",
      "elementKind": "method",
      "methodName": "setDisplaySurface",
      "package": "akasha.media"
    }
  },
  {
    "code": "java.method.addedToInterface",
    "description": "Method was added to an interface.",
    "newElement": "method void akasha.media.MediaTrackCapabilities::setLogicalSurface(boolean)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "NON_BREAKING",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.media.MediaTrackCapabilities",
      "classSimpleName": "MediaTrackCapabilities",
      "elementKind": "method",
      "methodName": "setLogicalSurface",
      "package": "akasha.media"
    }
  },
  {
    "code": "java.method.addedToInterface",
    "description": "Method was added to an interface.",
    "newElement": "method void akasha.media.MediaTrackConstraintSet::setSuppressLocalAudioPlayback(akasha.media.ConstrainBoolean)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "NON_BREAKING",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.media.MediaTrackConstraintSet",
      "classSimpleName": "MediaTrackConstraintSet",
      "elementKind": "method",
      "methodName": "setSuppressLocalAudioPlayback",
      "package": "akasha.media"
    }
  },
  {
    "code": "java.method.defaultMethodAddedToInterface",
    "description": "A default method has been added to the interface.",
    "newElement": "method void akasha.media.MediaTrackConstraintSet::setSuppressLocalAudioPlayback(akasha.media.ConstrainBooleanParameters)",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.media.MediaTrackConstraintSet",
      "classSimpleName": "MediaTrackConstraintSet",
      "elementKind": "method",
      "methodName": "setSuppressLocalAudioPlayback",
      "package": "akasha.media"
    }
  },
  {
    "code": "java.method.defaultMethodAddedToInterface",
    "description": "A default method has been added to the interface.",
    "newElement": "method void akasha.media.MediaTrackConstraintSet::setSuppressLocalAudioPlayback(boolean)",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.media.MediaTrackConstraintSet",
      "classSimpleName": "MediaTrackConstraintSet",
      "elementKind": "method",
      "methodName": "setSuppressLocalAudioPlayback",
      "package": "akasha.media"
    }
  },
  {
    "code": "java.method.addedToInterface",
    "description": "Method was added to an interface.",
    "newElement": "method void akasha.media.MediaTrackSettings::setRestrictOwnAudio(boolean)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "NON_BREAKING",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.media.MediaTrackSettings",
      "classSimpleName": "MediaTrackSettings",
      "elementKind": "method",
      "methodName": "setRestrictOwnAudio",
      "package": "akasha.media"
    }
  },
  {
    "code": "java.method.addedToInterface",
    "description": "Method was added to an interface.",
    "newElement": "method void akasha.media.MediaTrackSupportedConstraints::setSuppressLocalAudioPlayback(boolean)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "NON_BREAKING",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.media.MediaTrackSupportedConstraints",
      "classSimpleName": "MediaTrackSupportedConstraints",
      "elementKind": "method",
      "methodName": "setSuppressLocalAudioPlayback",
      "package": "akasha.media"
    }
  },
  {
    "code": "java.method.addedToInterface",
    "description": "Method was added to an interface.",
    "newElement": "method void akasha.rtc.RTCRemoteOutboundRtpStreamStats::setRoundTripTime(double)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "NON_BREAKING",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.rtc.RTCRemoteOutboundRtpStreamStats",
      "classSimpleName": "RTCRemoteOutboundRtpStreamStats",
      "elementKind": "method",
      "methodName": "setRoundTripTime",
      "package": "akasha.rtc"
    }
  },
  {
    "code": "java.method.addedToInterface",
    "description": "Method was added to an interface.",
    "newElement": "method void akasha.rtc.RTCRemoteOutboundRtpStreamStats::setRoundTripTimeMeasurements(int)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "NON_BREAKING",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.rtc.RTCRemoteOutboundRtpStreamStats",
      "classSimpleName": "RTCRemoteOutboundRtpStreamStats",
      "elementKind": "method",
      "methodName": "setRoundTripTimeMeasurements",
      "package": "akasha.rtc"
    }
  },
  {
    "code": "java.method.addedToInterface",
    "description": "Method was added to an interface.",
    "newElement": "method void akasha.rtc.RTCRemoteOutboundRtpStreamStats::setTotalRoundTripTime(double)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "NON_BREAKING",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.rtc.RTCRemoteOutboundRtpStreamStats",
      "classSimpleName": "RTCRemoteOutboundRtpStreamStats",
      "elementKind": "method",
      "methodName": "setTotalRoundTripTime",
      "package": "akasha.rtc"
    }
  },
  {
    "code": "java.annotation.noLongerPresent",
    "description": "Old API referenced the annotation type but the new API version no longer does.",
    "oldElement": "@interface akasha.CSSBoxType",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "NON_BREAKING",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.CSSBoxType",
      "classSimpleName": "CSSBoxType",
      "elementKind": "@interface",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.noLongerPresent",
    "description": "Old API referenced the annotation type but the new API version no longer does.",
    "oldElement": "@interface akasha.IterationCompositeOperation",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "NON_BREAKING",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.IterationCompositeOperation",
      "classSimpleName": "IterationCompositeOperation",
      "elementKind": "@interface",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.noLongerPresent",
    "description": "Old API referenced the annotation type but the new API version no longer does.",
    "oldElement": "@interface akasha.PositionErrorCode",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "NON_BREAKING",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.PositionErrorCode",
      "classSimpleName": "PositionErrorCode",
      "elementKind": "@interface",
      "package": "akasha"
    }
  },
  {
    "code": "java.class.removed",
    "description": "Class was removed.",
    "oldElement": "class akasha.Coordinates",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.Coordinates",
      "classSimpleName": "Coordinates",
      "elementKind": "class",
      "package": "akasha"
    }
  },
  {
    "code": "java.class.removed",
    "description": "Class was removed.",
    "oldElement": "class akasha.Position",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.Position",
      "classSimpleName": "Position",
      "elementKind": "class",
      "package": "akasha"
    }
  },
  {
    "code": "java.class.removed",
    "description": "Class was removed.",
    "oldElement": "class akasha.PositionError",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.PositionError",
      "classSimpleName": "PositionError",
      "elementKind": "class",
      "package": "akasha"
    }
  },
  {
    "code": "java.field.removed",
    "description": "Field removed from class.",
    "oldElement": "field akasha.KeyframeEffect.iterationComposite",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.KeyframeEffect",
      "classSimpleName": "KeyframeEffect",
      "elementKind": "field",
      "fieldName": "iterationComposite",
      "package": "akasha"
    }
  },
  {
    "code": "java.class.removed",
    "description": "Class was removed.",
    "oldElement": "interface akasha.AuthenticatorBiometricPerfBounds",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.AuthenticatorBiometricPerfBounds",
      "classSimpleName": "AuthenticatorBiometricPerfBounds",
      "elementKind": "interface",
      "package": "akasha"
    }
  },
  {
    "code": "java.class.removed",
    "description": "Class was removed.",
    "oldElement": "interface akasha.BoxQuadOptions",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.BoxQuadOptions",
      "classSimpleName": "BoxQuadOptions",
      "elementKind": "interface",
      "package": "akasha"
    }
  },
  {
    "code": "java.class.removed",
    "description": "Class was removed.",
    "oldElement": "interface akasha.ConvertCoordinateOptions",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.ConvertCoordinateOptions",
      "classSimpleName": "ConvertCoordinateOptions",
      "elementKind": "interface",
      "package": "akasha"
    }
  },
  {
    "code": "java.class.removed",
    "description": "Class was removed.",
    "oldElement": "interface akasha.ElementOrCSSPseudoElementUnion",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.ElementOrCSSPseudoElementUnion",
      "classSimpleName": "ElementOrCSSPseudoElementUnion",
      "elementKind": "interface",
      "package": "akasha"
    }
  },
  {
    "code": "java.class.removed",
    "description": "Class was removed.",
    "oldElement": "interface akasha.GeometryNode",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.GeometryNode",
      "classSimpleName": "GeometryNode",
      "elementKind": "interface",
      "package": "akasha"
    }
  },
  {
    "code": "java.class.removed",
    "description": "Class was removed.",
    "oldElement": "interface akasha.TxAuthGenericArg",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.TxAuthGenericArg",
      "classSimpleName": "TxAuthGenericArg",
      "elementKind": "interface",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.Animation akasha.CSSPseudoElement::animate(akasha.core.JsObject)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.CSSPseudoElement",
      "classSimpleName": "CSSPseudoElement",
      "elementKind": "method",
      "methodName": "animate",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.Animation akasha.CSSPseudoElement::animate(akasha.core.JsObject, akasha.KeyframeAnimationOptions)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.CSSPseudoElement",
      "classSimpleName": "CSSPseudoElement",
      "elementKind": "method",
      "methodName": "animate",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.Animation akasha.CSSPseudoElement::animate(akasha.core.JsObject, double)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.CSSPseudoElement",
      "classSimpleName": "CSSPseudoElement",
      "elementKind": "method",
      "methodName": "animate",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.AuthenticationExtensionsClientInputs.Builder akasha.AuthenticationExtensionsClientInputs.Builder::authnSel(akasha.core.BufferSource[])",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.AuthenticationExtensionsClientInputs.Builder",
      "classSimpleName": "Builder",
      "elementKind": "method",
      "methodName": "authnSel",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.AuthenticationExtensionsClientInputs.Builder akasha.AuthenticationExtensionsClientInputs.Builder::authnSel(akasha.lang.JsArray<akasha.core.BufferSource>)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.AuthenticationExtensionsClientInputs.Builder",
      "classSimpleName": "Builder",
      "elementKind": "method",
      "methodName": "authnSel",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.AuthenticationExtensionsClientInputs.Builder akasha.AuthenticationExtensionsClientInputs.Builder::exts(boolean)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.AuthenticationExtensionsClientInputs.Builder",
      "classSimpleName": "Builder",
      "elementKind": "method",
      "methodName": "exts",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.AuthenticationExtensionsClientInputs.Builder akasha.AuthenticationExtensionsClientInputs.Builder::loc(boolean)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.AuthenticationExtensionsClientInputs.Builder",
      "classSimpleName": "Builder",
      "elementKind": "method",
      "methodName": "loc",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.AuthenticationExtensionsClientInputs.Builder akasha.AuthenticationExtensionsClientInputs.Builder::txAuthGeneric(akasha.TxAuthGenericArg)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.AuthenticationExtensionsClientInputs.Builder",
      "classSimpleName": "Builder",
      "elementKind": "method",
      "methodName": "txAuthGeneric",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.AuthenticationExtensionsClientInputs.Builder akasha.AuthenticationExtensionsClientInputs.Builder::txAuthSimple(java.lang.String)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.AuthenticationExtensionsClientInputs.Builder",
      "classSimpleName": "Builder",
      "elementKind": "method",
      "methodName": "txAuthSimple",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.AuthenticationExtensionsClientInputs.Builder akasha.AuthenticationExtensionsClientInputs.Builder::uvi(boolean)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.AuthenticationExtensionsClientInputs.Builder",
      "classSimpleName": "Builder",
      "elementKind": "method",
      "methodName": "uvi",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.AuthenticationExtensionsClientOutputs.Builder akasha.AuthenticationExtensionsClientOutputs.Builder::authnSel(boolean)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.AuthenticationExtensionsClientOutputs.Builder",
      "classSimpleName": "Builder",
      "elementKind": "method",
      "methodName": "authnSel",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.AuthenticationExtensionsClientOutputs.Builder akasha.AuthenticationExtensionsClientOutputs.Builder::exts(akasha.lang.JsArray<java.lang.String>)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.AuthenticationExtensionsClientOutputs.Builder",
      "classSimpleName": "Builder",
      "elementKind": "method",
      "methodName": "exts",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.AuthenticationExtensionsClientOutputs.Builder akasha.AuthenticationExtensionsClientOutputs.Builder::exts(java.lang.String[])",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.AuthenticationExtensionsClientOutputs.Builder",
      "classSimpleName": "Builder",
      "elementKind": "method",
      "methodName": "exts",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.AuthenticationExtensionsClientOutputs.Builder akasha.AuthenticationExtensionsClientOutputs.Builder::loc(akasha.Coordinates)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.AuthenticationExtensionsClientOutputs.Builder",
      "classSimpleName": "Builder",
      "elementKind": "method",
      "methodName": "loc",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.AuthenticationExtensionsClientOutputs.Builder akasha.AuthenticationExtensionsClientOutputs.Builder::txAuthGeneric(akasha.core.ArrayBuffer)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.AuthenticationExtensionsClientOutputs.Builder",
      "classSimpleName": "Builder",
      "elementKind": "method",
      "methodName": "txAuthGeneric",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.AuthenticationExtensionsClientOutputs.Builder akasha.AuthenticationExtensionsClientOutputs.Builder::txAuthSimple(java.lang.String)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.AuthenticationExtensionsClientOutputs.Builder",
      "classSimpleName": "Builder",
      "elementKind": "method",
      "methodName": "txAuthSimple",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.AuthenticationExtensionsClientOutputs.Builder akasha.AuthenticationExtensionsClientOutputs.Builder::uvi(akasha.core.ArrayBuffer)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.AuthenticationExtensionsClientOutputs.Builder",
      "classSimpleName": "Builder",
      "elementKind": "method",
      "methodName": "uvi",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.Coordinates akasha.AuthenticationExtensionsClientOutputs::loc()",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.AuthenticationExtensionsClientOutputs",
      "classSimpleName": "AuthenticationExtensionsClientOutputs",
      "elementKind": "method",
      "methodName": "loc",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.DOMPoint akasha.CSSPseudoElement::convertPointFromNode(akasha.DOMPointInit, akasha.CSSPseudoElement)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.CSSPseudoElement",
      "classSimpleName": "CSSPseudoElement",
      "elementKind": "method",
      "methodName": "convertPointFromNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.DOMPoint akasha.CSSPseudoElement::convertPointFromNode(akasha.DOMPointInit, akasha.CSSPseudoElement, akasha.ConvertCoordinateOptions)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.CSSPseudoElement",
      "classSimpleName": "CSSPseudoElement",
      "elementKind": "method",
      "methodName": "convertPointFromNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.DOMPoint akasha.CSSPseudoElement::convertPointFromNode(akasha.DOMPointInit, akasha.Document)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.CSSPseudoElement",
      "classSimpleName": "CSSPseudoElement",
      "elementKind": "method",
      "methodName": "convertPointFromNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.DOMPoint akasha.CSSPseudoElement::convertPointFromNode(akasha.DOMPointInit, akasha.Document, akasha.ConvertCoordinateOptions)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.CSSPseudoElement",
      "classSimpleName": "CSSPseudoElement",
      "elementKind": "method",
      "methodName": "convertPointFromNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.DOMPoint akasha.CSSPseudoElement::convertPointFromNode(akasha.DOMPointInit, akasha.Element)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.CSSPseudoElement",
      "classSimpleName": "CSSPseudoElement",
      "elementKind": "method",
      "methodName": "convertPointFromNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.DOMPoint akasha.CSSPseudoElement::convertPointFromNode(akasha.DOMPointInit, akasha.Element, akasha.ConvertCoordinateOptions)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.CSSPseudoElement",
      "classSimpleName": "CSSPseudoElement",
      "elementKind": "method",
      "methodName": "convertPointFromNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.DOMPoint akasha.CSSPseudoElement::convertPointFromNode(akasha.DOMPointInit, akasha.GeometryNode)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.CSSPseudoElement",
      "classSimpleName": "CSSPseudoElement",
      "elementKind": "method",
      "methodName": "convertPointFromNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.DOMPoint akasha.CSSPseudoElement::convertPointFromNode(akasha.DOMPointInit, akasha.GeometryNode, akasha.ConvertCoordinateOptions)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.CSSPseudoElement",
      "classSimpleName": "CSSPseudoElement",
      "elementKind": "method",
      "methodName": "convertPointFromNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.DOMPoint akasha.CSSPseudoElement::convertPointFromNode(akasha.DOMPointInit, akasha.Text)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.CSSPseudoElement",
      "classSimpleName": "CSSPseudoElement",
      "elementKind": "method",
      "methodName": "convertPointFromNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.DOMPoint akasha.CSSPseudoElement::convertPointFromNode(akasha.DOMPointInit, akasha.Text, akasha.ConvertCoordinateOptions)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.CSSPseudoElement",
      "classSimpleName": "CSSPseudoElement",
      "elementKind": "method",
      "methodName": "convertPointFromNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.DOMPoint akasha.Document::convertPointFromNode(akasha.DOMPointInit, akasha.CSSPseudoElement)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.Document",
      "classSimpleName": "Document",
      "elementKind": "method",
      "methodName": "convertPointFromNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.DOMPoint akasha.Document::convertPointFromNode(akasha.DOMPointInit, akasha.CSSPseudoElement, akasha.ConvertCoordinateOptions)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.Document",
      "classSimpleName": "Document",
      "elementKind": "method",
      "methodName": "convertPointFromNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.DOMPoint akasha.Document::convertPointFromNode(akasha.DOMPointInit, akasha.Document)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.Document",
      "classSimpleName": "Document",
      "elementKind": "method",
      "methodName": "convertPointFromNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.DOMPoint akasha.Document::convertPointFromNode(akasha.DOMPointInit, akasha.Document, akasha.ConvertCoordinateOptions)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.Document",
      "classSimpleName": "Document",
      "elementKind": "method",
      "methodName": "convertPointFromNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.DOMPoint akasha.Document::convertPointFromNode(akasha.DOMPointInit, akasha.Element)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.Document",
      "classSimpleName": "Document",
      "elementKind": "method",
      "methodName": "convertPointFromNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.DOMPoint akasha.Document::convertPointFromNode(akasha.DOMPointInit, akasha.Element, akasha.ConvertCoordinateOptions)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.Document",
      "classSimpleName": "Document",
      "elementKind": "method",
      "methodName": "convertPointFromNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.DOMPoint akasha.Document::convertPointFromNode(akasha.DOMPointInit, akasha.GeometryNode)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.Document",
      "classSimpleName": "Document",
      "elementKind": "method",
      "methodName": "convertPointFromNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.DOMPoint akasha.Document::convertPointFromNode(akasha.DOMPointInit, akasha.GeometryNode, akasha.ConvertCoordinateOptions)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.Document",
      "classSimpleName": "Document",
      "elementKind": "method",
      "methodName": "convertPointFromNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.DOMPoint akasha.Document::convertPointFromNode(akasha.DOMPointInit, akasha.Text)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.Document",
      "classSimpleName": "Document",
      "elementKind": "method",
      "methodName": "convertPointFromNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.DOMPoint akasha.Document::convertPointFromNode(akasha.DOMPointInit, akasha.Text, akasha.ConvertCoordinateOptions)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.Document",
      "classSimpleName": "Document",
      "elementKind": "method",
      "methodName": "convertPointFromNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.DOMPoint akasha.Element::convertPointFromNode(akasha.DOMPointInit, akasha.CSSPseudoElement)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.Element",
      "classSimpleName": "Element",
      "elementKind": "method",
      "methodName": "convertPointFromNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.DOMPoint akasha.Element::convertPointFromNode(akasha.DOMPointInit, akasha.CSSPseudoElement, akasha.ConvertCoordinateOptions)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.Element",
      "classSimpleName": "Element",
      "elementKind": "method",
      "methodName": "convertPointFromNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.DOMPoint akasha.Element::convertPointFromNode(akasha.DOMPointInit, akasha.Document)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.Element",
      "classSimpleName": "Element",
      "elementKind": "method",
      "methodName": "convertPointFromNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.DOMPoint akasha.Element::convertPointFromNode(akasha.DOMPointInit, akasha.Document, akasha.ConvertCoordinateOptions)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.Element",
      "classSimpleName": "Element",
      "elementKind": "method",
      "methodName": "convertPointFromNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.DOMPoint akasha.Element::convertPointFromNode(akasha.DOMPointInit, akasha.Element)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.Element",
      "classSimpleName": "Element",
      "elementKind": "method",
      "methodName": "convertPointFromNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.DOMPoint akasha.Element::convertPointFromNode(akasha.DOMPointInit, akasha.Element, akasha.ConvertCoordinateOptions)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.Element",
      "classSimpleName": "Element",
      "elementKind": "method",
      "methodName": "convertPointFromNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.DOMPoint akasha.Element::convertPointFromNode(akasha.DOMPointInit, akasha.GeometryNode)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.Element",
      "classSimpleName": "Element",
      "elementKind": "method",
      "methodName": "convertPointFromNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.DOMPoint akasha.Element::convertPointFromNode(akasha.DOMPointInit, akasha.GeometryNode, akasha.ConvertCoordinateOptions)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.Element",
      "classSimpleName": "Element",
      "elementKind": "method",
      "methodName": "convertPointFromNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.DOMPoint akasha.Element::convertPointFromNode(akasha.DOMPointInit, akasha.Text)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.Element",
      "classSimpleName": "Element",
      "elementKind": "method",
      "methodName": "convertPointFromNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.DOMPoint akasha.Element::convertPointFromNode(akasha.DOMPointInit, akasha.Text, akasha.ConvertCoordinateOptions)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.Element",
      "classSimpleName": "Element",
      "elementKind": "method",
      "methodName": "convertPointFromNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.DOMPoint akasha.Text::convertPointFromNode(akasha.DOMPointInit, akasha.CSSPseudoElement)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.Text",
      "classSimpleName": "Text",
      "elementKind": "method",
      "methodName": "convertPointFromNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.DOMPoint akasha.Text::convertPointFromNode(akasha.DOMPointInit, akasha.CSSPseudoElement, akasha.ConvertCoordinateOptions)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.Text",
      "classSimpleName": "Text",
      "elementKind": "method",
      "methodName": "convertPointFromNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.DOMPoint akasha.Text::convertPointFromNode(akasha.DOMPointInit, akasha.Document)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.Text",
      "classSimpleName": "Text",
      "elementKind": "method",
      "methodName": "convertPointFromNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.DOMPoint akasha.Text::convertPointFromNode(akasha.DOMPointInit, akasha.Document, akasha.ConvertCoordinateOptions)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.Text",
      "classSimpleName": "Text",
      "elementKind": "method",
      "methodName": "convertPointFromNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.DOMPoint akasha.Text::convertPointFromNode(akasha.DOMPointInit, akasha.Element)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.Text",
      "classSimpleName": "Text",
      "elementKind": "method",
      "methodName": "convertPointFromNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.DOMPoint akasha.Text::convertPointFromNode(akasha.DOMPointInit, akasha.Element, akasha.ConvertCoordinateOptions)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.Text",
      "classSimpleName": "Text",
      "elementKind": "method",
      "methodName": "convertPointFromNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.DOMPoint akasha.Text::convertPointFromNode(akasha.DOMPointInit, akasha.GeometryNode)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.Text",
      "classSimpleName": "Text",
      "elementKind": "method",
      "methodName": "convertPointFromNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.DOMPoint akasha.Text::convertPointFromNode(akasha.DOMPointInit, akasha.GeometryNode, akasha.ConvertCoordinateOptions)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.Text",
      "classSimpleName": "Text",
      "elementKind": "method",
      "methodName": "convertPointFromNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.DOMPoint akasha.Text::convertPointFromNode(akasha.DOMPointInit, akasha.Text)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.Text",
      "classSimpleName": "Text",
      "elementKind": "method",
      "methodName": "convertPointFromNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.DOMPoint akasha.Text::convertPointFromNode(akasha.DOMPointInit, akasha.Text, akasha.ConvertCoordinateOptions)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.Text",
      "classSimpleName": "Text",
      "elementKind": "method",
      "methodName": "convertPointFromNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.DOMQuad akasha.CSSPseudoElement::convertQuadFromNode(akasha.DOMQuadInit, akasha.CSSPseudoElement)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.CSSPseudoElement",
      "classSimpleName": "CSSPseudoElement",
      "elementKind": "method",
      "methodName": "convertQuadFromNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.DOMQuad akasha.CSSPseudoElement::convertQuadFromNode(akasha.DOMQuadInit, akasha.CSSPseudoElement, akasha.ConvertCoordinateOptions)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.CSSPseudoElement",
      "classSimpleName": "CSSPseudoElement",
      "elementKind": "method",
      "methodName": "convertQuadFromNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.DOMQuad akasha.CSSPseudoElement::convertQuadFromNode(akasha.DOMQuadInit, akasha.Document)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.CSSPseudoElement",
      "classSimpleName": "CSSPseudoElement",
      "elementKind": "method",
      "methodName": "convertQuadFromNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.DOMQuad akasha.CSSPseudoElement::convertQuadFromNode(akasha.DOMQuadInit, akasha.Document, akasha.ConvertCoordinateOptions)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.CSSPseudoElement",
      "classSimpleName": "CSSPseudoElement",
      "elementKind": "method",
      "methodName": "convertQuadFromNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.DOMQuad akasha.CSSPseudoElement::convertQuadFromNode(akasha.DOMQuadInit, akasha.Element)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.CSSPseudoElement",
      "classSimpleName": "CSSPseudoElement",
      "elementKind": "method",
      "methodName": "convertQuadFromNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.DOMQuad akasha.CSSPseudoElement::convertQuadFromNode(akasha.DOMQuadInit, akasha.Element, akasha.ConvertCoordinateOptions)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.CSSPseudoElement",
      "classSimpleName": "CSSPseudoElement",
      "elementKind": "method",
      "methodName": "convertQuadFromNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.DOMQuad akasha.CSSPseudoElement::convertQuadFromNode(akasha.DOMQuadInit, akasha.GeometryNode)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.CSSPseudoElement",
      "classSimpleName": "CSSPseudoElement",
      "elementKind": "method",
      "methodName": "convertQuadFromNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.DOMQuad akasha.CSSPseudoElement::convertQuadFromNode(akasha.DOMQuadInit, akasha.GeometryNode, akasha.ConvertCoordinateOptions)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.CSSPseudoElement",
      "classSimpleName": "CSSPseudoElement",
      "elementKind": "method",
      "methodName": "convertQuadFromNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.DOMQuad akasha.CSSPseudoElement::convertQuadFromNode(akasha.DOMQuadInit, akasha.Text)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.CSSPseudoElement",
      "classSimpleName": "CSSPseudoElement",
      "elementKind": "method",
      "methodName": "convertQuadFromNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.DOMQuad akasha.CSSPseudoElement::convertQuadFromNode(akasha.DOMQuadInit, akasha.Text, akasha.ConvertCoordinateOptions)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.CSSPseudoElement",
      "classSimpleName": "CSSPseudoElement",
      "elementKind": "method",
      "methodName": "convertQuadFromNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.DOMQuad akasha.CSSPseudoElement::convertRectFromNode(akasha.DOMRectReadOnly, akasha.CSSPseudoElement)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.CSSPseudoElement",
      "classSimpleName": "CSSPseudoElement",
      "elementKind": "method",
      "methodName": "convertRectFromNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.DOMQuad akasha.CSSPseudoElement::convertRectFromNode(akasha.DOMRectReadOnly, akasha.CSSPseudoElement, akasha.ConvertCoordinateOptions)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.CSSPseudoElement",
      "classSimpleName": "CSSPseudoElement",
      "elementKind": "method",
      "methodName": "convertRectFromNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.DOMQuad akasha.CSSPseudoElement::convertRectFromNode(akasha.DOMRectReadOnly, akasha.Document)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.CSSPseudoElement",
      "classSimpleName": "CSSPseudoElement",
      "elementKind": "method",
      "methodName": "convertRectFromNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.DOMQuad akasha.CSSPseudoElement::convertRectFromNode(akasha.DOMRectReadOnly, akasha.Document, akasha.ConvertCoordinateOptions)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.CSSPseudoElement",
      "classSimpleName": "CSSPseudoElement",
      "elementKind": "method",
      "methodName": "convertRectFromNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.DOMQuad akasha.CSSPseudoElement::convertRectFromNode(akasha.DOMRectReadOnly, akasha.Element)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.CSSPseudoElement",
      "classSimpleName": "CSSPseudoElement",
      "elementKind": "method",
      "methodName": "convertRectFromNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.DOMQuad akasha.CSSPseudoElement::convertRectFromNode(akasha.DOMRectReadOnly, akasha.Element, akasha.ConvertCoordinateOptions)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.CSSPseudoElement",
      "classSimpleName": "CSSPseudoElement",
      "elementKind": "method",
      "methodName": "convertRectFromNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.DOMQuad akasha.CSSPseudoElement::convertRectFromNode(akasha.DOMRectReadOnly, akasha.GeometryNode)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.CSSPseudoElement",
      "classSimpleName": "CSSPseudoElement",
      "elementKind": "method",
      "methodName": "convertRectFromNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.DOMQuad akasha.CSSPseudoElement::convertRectFromNode(akasha.DOMRectReadOnly, akasha.GeometryNode, akasha.ConvertCoordinateOptions)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.CSSPseudoElement",
      "classSimpleName": "CSSPseudoElement",
      "elementKind": "method",
      "methodName": "convertRectFromNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.DOMQuad akasha.CSSPseudoElement::convertRectFromNode(akasha.DOMRectReadOnly, akasha.Text)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.CSSPseudoElement",
      "classSimpleName": "CSSPseudoElement",
      "elementKind": "method",
      "methodName": "convertRectFromNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.DOMQuad akasha.CSSPseudoElement::convertRectFromNode(akasha.DOMRectReadOnly, akasha.Text, akasha.ConvertCoordinateOptions)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.CSSPseudoElement",
      "classSimpleName": "CSSPseudoElement",
      "elementKind": "method",
      "methodName": "convertRectFromNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.DOMQuad akasha.Document::convertQuadFromNode(akasha.DOMQuadInit, akasha.CSSPseudoElement)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.Document",
      "classSimpleName": "Document",
      "elementKind": "method",
      "methodName": "convertQuadFromNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.DOMQuad akasha.Document::convertQuadFromNode(akasha.DOMQuadInit, akasha.CSSPseudoElement, akasha.ConvertCoordinateOptions)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.Document",
      "classSimpleName": "Document",
      "elementKind": "method",
      "methodName": "convertQuadFromNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.DOMQuad akasha.Document::convertQuadFromNode(akasha.DOMQuadInit, akasha.Document)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.Document",
      "classSimpleName": "Document",
      "elementKind": "method",
      "methodName": "convertQuadFromNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.DOMQuad akasha.Document::convertQuadFromNode(akasha.DOMQuadInit, akasha.Document, akasha.ConvertCoordinateOptions)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.Document",
      "classSimpleName": "Document",
      "elementKind": "method",
      "methodName": "convertQuadFromNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.DOMQuad akasha.Document::convertQuadFromNode(akasha.DOMQuadInit, akasha.Element)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.Document",
      "classSimpleName": "Document",
      "elementKind": "method",
      "methodName": "convertQuadFromNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.DOMQuad akasha.Document::convertQuadFromNode(akasha.DOMQuadInit, akasha.Element, akasha.ConvertCoordinateOptions)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.Document",
      "classSimpleName": "Document",
      "elementKind": "method",
      "methodName": "convertQuadFromNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.DOMQuad akasha.Document::convertQuadFromNode(akasha.DOMQuadInit, akasha.GeometryNode)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.Document",
      "classSimpleName": "Document",
      "elementKind": "method",
      "methodName": "convertQuadFromNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.DOMQuad akasha.Document::convertQuadFromNode(akasha.DOMQuadInit, akasha.GeometryNode, akasha.ConvertCoordinateOptions)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.Document",
      "classSimpleName": "Document",
      "elementKind": "method",
      "methodName": "convertQuadFromNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.DOMQuad akasha.Document::convertQuadFromNode(akasha.DOMQuadInit, akasha.Text)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.Document",
      "classSimpleName": "Document",
      "elementKind": "method",
      "methodName": "convertQuadFromNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.DOMQuad akasha.Document::convertQuadFromNode(akasha.DOMQuadInit, akasha.Text, akasha.ConvertCoordinateOptions)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.Document",
      "classSimpleName": "Document",
      "elementKind": "method",
      "methodName": "convertQuadFromNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.DOMQuad akasha.Document::convertRectFromNode(akasha.DOMRectReadOnly, akasha.CSSPseudoElement)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.Document",
      "classSimpleName": "Document",
      "elementKind": "method",
      "methodName": "convertRectFromNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.DOMQuad akasha.Document::convertRectFromNode(akasha.DOMRectReadOnly, akasha.CSSPseudoElement, akasha.ConvertCoordinateOptions)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.Document",
      "classSimpleName": "Document",
      "elementKind": "method",
      "methodName": "convertRectFromNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.DOMQuad akasha.Document::convertRectFromNode(akasha.DOMRectReadOnly, akasha.Document)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.Document",
      "classSimpleName": "Document",
      "elementKind": "method",
      "methodName": "convertRectFromNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.DOMQuad akasha.Document::convertRectFromNode(akasha.DOMRectReadOnly, akasha.Document, akasha.ConvertCoordinateOptions)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.Document",
      "classSimpleName": "Document",
      "elementKind": "method",
      "methodName": "convertRectFromNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.DOMQuad akasha.Document::convertRectFromNode(akasha.DOMRectReadOnly, akasha.Element)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.Document",
      "classSimpleName": "Document",
      "elementKind": "method",
      "methodName": "convertRectFromNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.DOMQuad akasha.Document::convertRectFromNode(akasha.DOMRectReadOnly, akasha.Element, akasha.ConvertCoordinateOptions)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.Document",
      "classSimpleName": "Document",
      "elementKind": "method",
      "methodName": "convertRectFromNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.DOMQuad akasha.Document::convertRectFromNode(akasha.DOMRectReadOnly, akasha.GeometryNode)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.Document",
      "classSimpleName": "Document",
      "elementKind": "method",
      "methodName": "convertRectFromNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.DOMQuad akasha.Document::convertRectFromNode(akasha.DOMRectReadOnly, akasha.GeometryNode, akasha.ConvertCoordinateOptions)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.Document",
      "classSimpleName": "Document",
      "elementKind": "method",
      "methodName": "convertRectFromNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.DOMQuad akasha.Document::convertRectFromNode(akasha.DOMRectReadOnly, akasha.Text)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.Document",
      "classSimpleName": "Document",
      "elementKind": "method",
      "methodName": "convertRectFromNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.DOMQuad akasha.Document::convertRectFromNode(akasha.DOMRectReadOnly, akasha.Text, akasha.ConvertCoordinateOptions)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.Document",
      "classSimpleName": "Document",
      "elementKind": "method",
      "methodName": "convertRectFromNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.DOMQuad akasha.Element::convertQuadFromNode(akasha.DOMQuadInit, akasha.CSSPseudoElement)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.Element",
      "classSimpleName": "Element",
      "elementKind": "method",
      "methodName": "convertQuadFromNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.DOMQuad akasha.Element::convertQuadFromNode(akasha.DOMQuadInit, akasha.CSSPseudoElement, akasha.ConvertCoordinateOptions)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.Element",
      "classSimpleName": "Element",
      "elementKind": "method",
      "methodName": "convertQuadFromNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.DOMQuad akasha.Element::convertQuadFromNode(akasha.DOMQuadInit, akasha.Document)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.Element",
      "classSimpleName": "Element",
      "elementKind": "method",
      "methodName": "convertQuadFromNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.DOMQuad akasha.Element::convertQuadFromNode(akasha.DOMQuadInit, akasha.Document, akasha.ConvertCoordinateOptions)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.Element",
      "classSimpleName": "Element",
      "elementKind": "method",
      "methodName": "convertQuadFromNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.DOMQuad akasha.Element::convertQuadFromNode(akasha.DOMQuadInit, akasha.Element)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.Element",
      "classSimpleName": "Element",
      "elementKind": "method",
      "methodName": "convertQuadFromNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.DOMQuad akasha.Element::convertQuadFromNode(akasha.DOMQuadInit, akasha.Element, akasha.ConvertCoordinateOptions)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.Element",
      "classSimpleName": "Element",
      "elementKind": "method",
      "methodName": "convertQuadFromNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.DOMQuad akasha.Element::convertQuadFromNode(akasha.DOMQuadInit, akasha.GeometryNode)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.Element",
      "classSimpleName": "Element",
      "elementKind": "method",
      "methodName": "convertQuadFromNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.DOMQuad akasha.Element::convertQuadFromNode(akasha.DOMQuadInit, akasha.GeometryNode, akasha.ConvertCoordinateOptions)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.Element",
      "classSimpleName": "Element",
      "elementKind": "method",
      "methodName": "convertQuadFromNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.DOMQuad akasha.Element::convertQuadFromNode(akasha.DOMQuadInit, akasha.Text)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.Element",
      "classSimpleName": "Element",
      "elementKind": "method",
      "methodName": "convertQuadFromNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.DOMQuad akasha.Element::convertQuadFromNode(akasha.DOMQuadInit, akasha.Text, akasha.ConvertCoordinateOptions)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.Element",
      "classSimpleName": "Element",
      "elementKind": "method",
      "methodName": "convertQuadFromNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.DOMQuad akasha.Element::convertRectFromNode(akasha.DOMRectReadOnly, akasha.CSSPseudoElement)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.Element",
      "classSimpleName": "Element",
      "elementKind": "method",
      "methodName": "convertRectFromNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.DOMQuad akasha.Element::convertRectFromNode(akasha.DOMRectReadOnly, akasha.CSSPseudoElement, akasha.ConvertCoordinateOptions)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.Element",
      "classSimpleName": "Element",
      "elementKind": "method",
      "methodName": "convertRectFromNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.DOMQuad akasha.Element::convertRectFromNode(akasha.DOMRectReadOnly, akasha.Document)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.Element",
      "classSimpleName": "Element",
      "elementKind": "method",
      "methodName": "convertRectFromNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.DOMQuad akasha.Element::convertRectFromNode(akasha.DOMRectReadOnly, akasha.Document, akasha.ConvertCoordinateOptions)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.Element",
      "classSimpleName": "Element",
      "elementKind": "method",
      "methodName": "convertRectFromNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.DOMQuad akasha.Element::convertRectFromNode(akasha.DOMRectReadOnly, akasha.Element)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.Element",
      "classSimpleName": "Element",
      "elementKind": "method",
      "methodName": "convertRectFromNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.DOMQuad akasha.Element::convertRectFromNode(akasha.DOMRectReadOnly, akasha.Element, akasha.ConvertCoordinateOptions)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.Element",
      "classSimpleName": "Element",
      "elementKind": "method",
      "methodName": "convertRectFromNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.DOMQuad akasha.Element::convertRectFromNode(akasha.DOMRectReadOnly, akasha.GeometryNode)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.Element",
      "classSimpleName": "Element",
      "elementKind": "method",
      "methodName": "convertRectFromNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.DOMQuad akasha.Element::convertRectFromNode(akasha.DOMRectReadOnly, akasha.GeometryNode, akasha.ConvertCoordinateOptions)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.Element",
      "classSimpleName": "Element",
      "elementKind": "method",
      "methodName": "convertRectFromNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.DOMQuad akasha.Element::convertRectFromNode(akasha.DOMRectReadOnly, akasha.Text)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.Element",
      "classSimpleName": "Element",
      "elementKind": "method",
      "methodName": "convertRectFromNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.DOMQuad akasha.Element::convertRectFromNode(akasha.DOMRectReadOnly, akasha.Text, akasha.ConvertCoordinateOptions)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.Element",
      "classSimpleName": "Element",
      "elementKind": "method",
      "methodName": "convertRectFromNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.DOMQuad akasha.Text::convertQuadFromNode(akasha.DOMQuadInit, akasha.CSSPseudoElement)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.Text",
      "classSimpleName": "Text",
      "elementKind": "method",
      "methodName": "convertQuadFromNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.DOMQuad akasha.Text::convertQuadFromNode(akasha.DOMQuadInit, akasha.CSSPseudoElement, akasha.ConvertCoordinateOptions)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.Text",
      "classSimpleName": "Text",
      "elementKind": "method",
      "methodName": "convertQuadFromNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.DOMQuad akasha.Text::convertQuadFromNode(akasha.DOMQuadInit, akasha.Document)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.Text",
      "classSimpleName": "Text",
      "elementKind": "method",
      "methodName": "convertQuadFromNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.DOMQuad akasha.Text::convertQuadFromNode(akasha.DOMQuadInit, akasha.Document, akasha.ConvertCoordinateOptions)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.Text",
      "classSimpleName": "Text",
      "elementKind": "method",
      "methodName": "convertQuadFromNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.DOMQuad akasha.Text::convertQuadFromNode(akasha.DOMQuadInit, akasha.Element)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.Text",
      "classSimpleName": "Text",
      "elementKind": "method",
      "methodName": "convertQuadFromNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.DOMQuad akasha.Text::convertQuadFromNode(akasha.DOMQuadInit, akasha.Element, akasha.ConvertCoordinateOptions)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.Text",
      "classSimpleName": "Text",
      "elementKind": "method",
      "methodName": "convertQuadFromNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.DOMQuad akasha.Text::convertQuadFromNode(akasha.DOMQuadInit, akasha.GeometryNode)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.Text",
      "classSimpleName": "Text",
      "elementKind": "method",
      "methodName": "convertQuadFromNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.DOMQuad akasha.Text::convertQuadFromNode(akasha.DOMQuadInit, akasha.GeometryNode, akasha.ConvertCoordinateOptions)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.Text",
      "classSimpleName": "Text",
      "elementKind": "method",
      "methodName": "convertQuadFromNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.DOMQuad akasha.Text::convertQuadFromNode(akasha.DOMQuadInit, akasha.Text)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.Text",
      "classSimpleName": "Text",
      "elementKind": "method",
      "methodName": "convertQuadFromNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.DOMQuad akasha.Text::convertQuadFromNode(akasha.DOMQuadInit, akasha.Text, akasha.ConvertCoordinateOptions)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.Text",
      "classSimpleName": "Text",
      "elementKind": "method",
      "methodName": "convertQuadFromNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.DOMQuad akasha.Text::convertRectFromNode(akasha.DOMRectReadOnly, akasha.CSSPseudoElement)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.Text",
      "classSimpleName": "Text",
      "elementKind": "method",
      "methodName": "convertRectFromNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.DOMQuad akasha.Text::convertRectFromNode(akasha.DOMRectReadOnly, akasha.CSSPseudoElement, akasha.ConvertCoordinateOptions)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.Text",
      "classSimpleName": "Text",
      "elementKind": "method",
      "methodName": "convertRectFromNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.DOMQuad akasha.Text::convertRectFromNode(akasha.DOMRectReadOnly, akasha.Document)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.Text",
      "classSimpleName": "Text",
      "elementKind": "method",
      "methodName": "convertRectFromNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.DOMQuad akasha.Text::convertRectFromNode(akasha.DOMRectReadOnly, akasha.Document, akasha.ConvertCoordinateOptions)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.Text",
      "classSimpleName": "Text",
      "elementKind": "method",
      "methodName": "convertRectFromNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.DOMQuad akasha.Text::convertRectFromNode(akasha.DOMRectReadOnly, akasha.Element)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.Text",
      "classSimpleName": "Text",
      "elementKind": "method",
      "methodName": "convertRectFromNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.DOMQuad akasha.Text::convertRectFromNode(akasha.DOMRectReadOnly, akasha.Element, akasha.ConvertCoordinateOptions)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.Text",
      "classSimpleName": "Text",
      "elementKind": "method",
      "methodName": "convertRectFromNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.DOMQuad akasha.Text::convertRectFromNode(akasha.DOMRectReadOnly, akasha.GeometryNode)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.Text",
      "classSimpleName": "Text",
      "elementKind": "method",
      "methodName": "convertRectFromNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.DOMQuad akasha.Text::convertRectFromNode(akasha.DOMRectReadOnly, akasha.GeometryNode, akasha.ConvertCoordinateOptions)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.Text",
      "classSimpleName": "Text",
      "elementKind": "method",
      "methodName": "convertRectFromNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.DOMQuad akasha.Text::convertRectFromNode(akasha.DOMRectReadOnly, akasha.Text)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.Text",
      "classSimpleName": "Text",
      "elementKind": "method",
      "methodName": "convertRectFromNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.DOMQuad akasha.Text::convertRectFromNode(akasha.DOMRectReadOnly, akasha.Text, akasha.ConvertCoordinateOptions)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.Text",
      "classSimpleName": "Text",
      "elementKind": "method",
      "methodName": "convertRectFromNode",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.KeyframeAnimationOptions.Builder akasha.KeyframeAnimationOptions.Builder::iterationComposite(java.lang.String)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.KeyframeAnimationOptions.Builder",
      "classSimpleName": "Builder",
      "elementKind": "method",
      "methodName": "iterationComposite",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.KeyframeEffectOptions.Builder akasha.KeyframeEffectOptions.Builder::iterationComposite(java.lang.String)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.KeyframeEffectOptions.Builder",
      "classSimpleName": "Builder",
      "elementKind": "method",
      "methodName": "iterationComposite",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.PublicKeyCredentialEntity.Builder akasha.PublicKeyCredentialEntity.Builder::icon(java.lang.String)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.PublicKeyCredentialEntity.Builder",
      "classSimpleName": "Builder",
      "elementKind": "method",
      "methodName": "icon",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.PublicKeyCredentialRpEntity.Builder akasha.PublicKeyCredentialRpEntity.Builder::icon(java.lang.String)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.PublicKeyCredentialRpEntity.Builder",
      "classSimpleName": "Builder",
      "elementKind": "method",
      "methodName": "icon",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.PublicKeyCredentialUserEntity.Builder akasha.PublicKeyCredentialUserEntity.Builder::icon(java.lang.String)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.PublicKeyCredentialUserEntity.Builder",
      "classSimpleName": "Builder",
      "elementKind": "method",
      "methodName": "icon",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.TxAuthGenericArg akasha.AuthenticationExtensionsClientInputs::txAuthGeneric()",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.AuthenticationExtensionsClientInputs",
      "classSimpleName": "AuthenticationExtensionsClientInputs",
      "elementKind": "method",
      "methodName": "txAuthGeneric",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.core.ArrayBuffer akasha.AuthenticationExtensionsClientOutputs::txAuthGeneric()",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.AuthenticationExtensionsClientOutputs",
      "classSimpleName": "AuthenticationExtensionsClientOutputs",
      "elementKind": "method",
      "methodName": "txAuthGeneric",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.core.ArrayBuffer akasha.AuthenticationExtensionsClientOutputs::uvi()",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.AuthenticationExtensionsClientOutputs",
      "classSimpleName": "AuthenticationExtensionsClientOutputs",
      "elementKind": "method",
      "methodName": "uvi",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.lang.JsArray<akasha.Animation> akasha.CSSPseudoElement::getAnimations()",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.CSSPseudoElement",
      "classSimpleName": "CSSPseudoElement",
      "elementKind": "method",
      "methodName": "getAnimations",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.lang.JsArray<akasha.DOMQuad> akasha.CSSPseudoElement::getBoxQuads()",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.CSSPseudoElement",
      "classSimpleName": "CSSPseudoElement",
      "elementKind": "method",
      "methodName": "getBoxQuads",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.lang.JsArray<akasha.DOMQuad> akasha.CSSPseudoElement::getBoxQuads(akasha.BoxQuadOptions)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.CSSPseudoElement",
      "classSimpleName": "CSSPseudoElement",
      "elementKind": "method",
      "methodName": "getBoxQuads",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.lang.JsArray<akasha.DOMQuad> akasha.Document::getBoxQuads()",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.Document",
      "classSimpleName": "Document",
      "elementKind": "method",
      "methodName": "getBoxQuads",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.lang.JsArray<akasha.DOMQuad> akasha.Document::getBoxQuads(akasha.BoxQuadOptions)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.Document",
      "classSimpleName": "Document",
      "elementKind": "method",
      "methodName": "getBoxQuads",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.lang.JsArray<akasha.DOMQuad> akasha.Element::getBoxQuads()",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.Element",
      "classSimpleName": "Element",
      "elementKind": "method",
      "methodName": "getBoxQuads",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.lang.JsArray<akasha.DOMQuad> akasha.Element::getBoxQuads(akasha.BoxQuadOptions)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.Element",
      "classSimpleName": "Element",
      "elementKind": "method",
      "methodName": "getBoxQuads",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.lang.JsArray<akasha.DOMQuad> akasha.Text::getBoxQuads()",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.Text",
      "classSimpleName": "Text",
      "elementKind": "method",
      "methodName": "getBoxQuads",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.lang.JsArray<akasha.DOMQuad> akasha.Text::getBoxQuads(akasha.BoxQuadOptions)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.Text",
      "classSimpleName": "Text",
      "elementKind": "method",
      "methodName": "getBoxQuads",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.lang.JsArray<akasha.core.BufferSource> akasha.AuthenticationExtensionsClientInputs::authnSel()",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.AuthenticationExtensionsClientInputs",
      "classSimpleName": "AuthenticationExtensionsClientInputs",
      "elementKind": "method",
      "methodName": "authnSel",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.lang.JsArray<java.lang.String> akasha.AuthenticationExtensionsClientOutputs::exts()",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.AuthenticationExtensionsClientOutputs",
      "classSimpleName": "AuthenticationExtensionsClientOutputs",
      "elementKind": "method",
      "methodName": "exts",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method boolean akasha.AuthenticationExtensionsClientInputs::exts()",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.AuthenticationExtensionsClientInputs",
      "classSimpleName": "AuthenticationExtensionsClientInputs",
      "elementKind": "method",
      "methodName": "exts",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method boolean akasha.AuthenticationExtensionsClientInputs::loc()",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.AuthenticationExtensionsClientInputs",
      "classSimpleName": "AuthenticationExtensionsClientInputs",
      "elementKind": "method",
      "methodName": "loc",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method boolean akasha.AuthenticationExtensionsClientInputs::uvi()",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.AuthenticationExtensionsClientInputs",
      "classSimpleName": "AuthenticationExtensionsClientInputs",
      "elementKind": "method",
      "methodName": "uvi",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method boolean akasha.AuthenticationExtensionsClientOutputs::authnSel()",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.AuthenticationExtensionsClientOutputs",
      "classSimpleName": "AuthenticationExtensionsClientOutputs",
      "elementKind": "method",
      "methodName": "authnSel",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method java.lang.String akasha.AuthenticationExtensionsClientInputs::txAuthSimple()",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.AuthenticationExtensionsClientInputs",
      "classSimpleName": "AuthenticationExtensionsClientInputs",
      "elementKind": "method",
      "methodName": "txAuthSimple",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method java.lang.String akasha.AuthenticationExtensionsClientOutputs::txAuthSimple()",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.AuthenticationExtensionsClientOutputs",
      "classSimpleName": "AuthenticationExtensionsClientOutputs",
      "elementKind": "method",
      "methodName": "txAuthSimple",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method java.lang.String akasha.KeyframeEffectOptions::iterationComposite()",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.KeyframeEffectOptions",
      "classSimpleName": "KeyframeEffectOptions",
      "elementKind": "method",
      "methodName": "iterationComposite",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method java.lang.String akasha.PublicKeyCredentialEntity::icon()",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.PublicKeyCredentialEntity",
      "classSimpleName": "PublicKeyCredentialEntity",
      "elementKind": "method",
      "methodName": "icon",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method void akasha.AuthenticationExtensionsClientInputs::setAuthnSel(akasha.core.BufferSource[])",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.AuthenticationExtensionsClientInputs",
      "classSimpleName": "AuthenticationExtensionsClientInputs",
      "elementKind": "method",
      "methodName": "setAuthnSel",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method void akasha.AuthenticationExtensionsClientInputs::setAuthnSel(akasha.lang.JsArray<akasha.core.BufferSource>)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.AuthenticationExtensionsClientInputs",
      "classSimpleName": "AuthenticationExtensionsClientInputs",
      "elementKind": "method",
      "methodName": "setAuthnSel",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method void akasha.AuthenticationExtensionsClientInputs::setExts(boolean)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.AuthenticationExtensionsClientInputs",
      "classSimpleName": "AuthenticationExtensionsClientInputs",
      "elementKind": "method",
      "methodName": "setExts",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method void akasha.AuthenticationExtensionsClientInputs::setLoc(boolean)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.AuthenticationExtensionsClientInputs",
      "classSimpleName": "AuthenticationExtensionsClientInputs",
      "elementKind": "method",
      "methodName": "setLoc",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method void akasha.AuthenticationExtensionsClientInputs::setTxAuthGeneric(akasha.TxAuthGenericArg)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.AuthenticationExtensionsClientInputs",
      "classSimpleName": "AuthenticationExtensionsClientInputs",
      "elementKind": "method",
      "methodName": "setTxAuthGeneric",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method void akasha.AuthenticationExtensionsClientInputs::setTxAuthSimple(java.lang.String)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.AuthenticationExtensionsClientInputs",
      "classSimpleName": "AuthenticationExtensionsClientInputs",
      "elementKind": "method",
      "methodName": "setTxAuthSimple",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method void akasha.AuthenticationExtensionsClientInputs::setUvi(boolean)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.AuthenticationExtensionsClientInputs",
      "classSimpleName": "AuthenticationExtensionsClientInputs",
      "elementKind": "method",
      "methodName": "setUvi",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method void akasha.AuthenticationExtensionsClientOutputs::setAuthnSel(boolean)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.AuthenticationExtensionsClientOutputs",
      "classSimpleName": "AuthenticationExtensionsClientOutputs",
      "elementKind": "method",
      "methodName": "setAuthnSel",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method void akasha.AuthenticationExtensionsClientOutputs::setExts(akasha.lang.JsArray<java.lang.String>)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.AuthenticationExtensionsClientOutputs",
      "classSimpleName": "AuthenticationExtensionsClientOutputs",
      "elementKind": "method",
      "methodName": "setExts",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method void akasha.AuthenticationExtensionsClientOutputs::setExts(java.lang.String[])",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.AuthenticationExtensionsClientOutputs",
      "classSimpleName": "AuthenticationExtensionsClientOutputs",
      "elementKind": "method",
      "methodName": "setExts",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method void akasha.AuthenticationExtensionsClientOutputs::setLoc(akasha.Coordinates)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.AuthenticationExtensionsClientOutputs",
      "classSimpleName": "AuthenticationExtensionsClientOutputs",
      "elementKind": "method",
      "methodName": "setLoc",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method void akasha.AuthenticationExtensionsClientOutputs::setTxAuthGeneric(akasha.core.ArrayBuffer)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.AuthenticationExtensionsClientOutputs",
      "classSimpleName": "AuthenticationExtensionsClientOutputs",
      "elementKind": "method",
      "methodName": "setTxAuthGeneric",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method void akasha.AuthenticationExtensionsClientOutputs::setTxAuthSimple(java.lang.String)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.AuthenticationExtensionsClientOutputs",
      "classSimpleName": "AuthenticationExtensionsClientOutputs",
      "elementKind": "method",
      "methodName": "setTxAuthSimple",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method void akasha.AuthenticationExtensionsClientOutputs::setUvi(akasha.core.ArrayBuffer)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.AuthenticationExtensionsClientOutputs",
      "classSimpleName": "AuthenticationExtensionsClientOutputs",
      "elementKind": "method",
      "methodName": "setUvi",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method void akasha.KeyframeEffect::<init>(akasha.CSSPseudoElement, akasha.core.JsObject)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.KeyframeEffect",
      "classSimpleName": "KeyframeEffect",
      "elementKind": "constructor",
      "methodName": "<init>",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method void akasha.KeyframeEffect::<init>(akasha.CSSPseudoElement, akasha.core.JsObject, akasha.KeyframeEffectOptions)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.KeyframeEffect",
      "classSimpleName": "KeyframeEffect",
      "elementKind": "constructor",
      "methodName": "<init>",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method void akasha.KeyframeEffect::<init>(akasha.CSSPseudoElement, akasha.core.JsObject, double)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.KeyframeEffect",
      "classSimpleName": "KeyframeEffect",
      "elementKind": "constructor",
      "methodName": "<init>",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method void akasha.KeyframeEffectOptions::setIterationComposite(java.lang.String)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.KeyframeEffectOptions",
      "classSimpleName": "KeyframeEffectOptions",
      "elementKind": "method",
      "methodName": "setIterationComposite",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method void akasha.PublicKeyCredentialEntity::setIcon(java.lang.String)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.PublicKeyCredentialEntity",
      "classSimpleName": "PublicKeyCredentialEntity",
      "elementKind": "method",
      "methodName": "setIcon",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.removed",
    "description": "Element no longer annotated with 'akasha.AuthenticatorAttachment'.",
    "element": "parameter akasha.AuthenticatorSelectionCriteria.Builder akasha.AuthenticatorSelectionCriteria.Builder::authenticatorAttachment(===java.lang.String===)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@akasha.AuthenticatorAttachment",
      "annotationType": "akasha.AuthenticatorAttachment",
      "classQualifiedName": "akasha.AuthenticatorSelectionCriteria.Builder",
      "classSimpleName": "Builder",
      "elementKind": "parameter",
      "methodName": "authenticatorAttachment",
      "package": "akasha",
      "parameterIndex": "0"
    }
  },
  {
    "code": "java.annotation.removed",
    "description": "Element no longer annotated with 'akasha.UserVerificationRequirement'.",
    "element": "parameter akasha.AuthenticatorSelectionCriteria.Builder akasha.AuthenticatorSelectionCriteria.Builder::userVerification(===java.lang.String===)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@akasha.UserVerificationRequirement",
      "annotationType": "akasha.UserVerificationRequirement",
      "classQualifiedName": "akasha.AuthenticatorSelectionCriteria.Builder",
      "classSimpleName": "Builder",
      "elementKind": "parameter",
      "methodName": "userVerification",
      "package": "akasha",
      "parameterIndex": "0"
    }
  },
  {
    "code": "java.annotation.removed",
    "description": "Element no longer annotated with 'akasha.AttestationConveyancePreference'.",
    "element": "parameter akasha.PublicKeyCredentialCreationOptions.Builder akasha.PublicKeyCredentialCreationOptions.Builder::attestation(===java.lang.String===)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@akasha.AttestationConveyancePreference",
      "annotationType": "akasha.AttestationConveyancePreference",
      "classQualifiedName": "akasha.PublicKeyCredentialCreationOptions.Builder",
      "classSimpleName": "Builder",
      "elementKind": "parameter",
      "methodName": "attestation",
      "package": "akasha",
      "parameterIndex": "0"
    }
  },
  {
    "code": "java.annotation.removed",
    "description": "Element no longer annotated with 'akasha.PublicKeyCredentialType'.",
    "element": "parameter akasha.PublicKeyCredentialDescriptor.Builder akasha.PublicKeyCredentialDescriptor.Builder::type(===java.lang.String===)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@akasha.PublicKeyCredentialType",
      "annotationType": "akasha.PublicKeyCredentialType",
      "classQualifiedName": "akasha.PublicKeyCredentialDescriptor.Builder",
      "classSimpleName": "Builder",
      "elementKind": "parameter",
      "methodName": "type",
      "package": "akasha",
      "parameterIndex": "0"
    }
  },
  {
    "code": "java.annotation.removed",
    "description": "Element no longer annotated with 'akasha.PublicKeyCredentialType'.",
    "element": "parameter akasha.PublicKeyCredentialDescriptor.Builder akasha.PublicKeyCredentialDescriptor::create(akasha.core.BufferSource, ===java.lang.String===) @ akasha.PublicKeyCredentialDescriptor.Builder",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@akasha.PublicKeyCredentialType",
      "annotationType": "akasha.PublicKeyCredentialType",
      "classQualifiedName": "akasha.PublicKeyCredentialDescriptor.Builder",
      "classSimpleName": "Builder",
      "elementKind": "parameter",
      "methodName": "create",
      "package": "akasha",
      "parameterIndex": "1"
    }
  },
  {
    "code": "java.annotation.removed",
    "description": "Element no longer annotated with 'akasha.PublicKeyCredentialType'.",
    "element": "parameter akasha.PublicKeyCredentialDescriptor.Builder akasha.PublicKeyCredentialDescriptor::create(akasha.core.BufferSource, ===java.lang.String===)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@akasha.PublicKeyCredentialType",
      "annotationType": "akasha.PublicKeyCredentialType",
      "classQualifiedName": "akasha.PublicKeyCredentialDescriptor",
      "classSimpleName": "PublicKeyCredentialDescriptor",
      "elementKind": "parameter",
      "methodName": "create",
      "package": "akasha",
      "parameterIndex": "1"
    }
  },
  {
    "code": "java.annotation.removed",
    "description": "Element no longer annotated with 'akasha.PublicKeyCredentialType'.",
    "element": "parameter akasha.PublicKeyCredentialParameters.Builder akasha.PublicKeyCredentialParameters.Builder::type(===java.lang.String===)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@akasha.PublicKeyCredentialType",
      "annotationType": "akasha.PublicKeyCredentialType",
      "classQualifiedName": "akasha.PublicKeyCredentialParameters.Builder",
      "classSimpleName": "Builder",
      "elementKind": "parameter",
      "methodName": "type",
      "package": "akasha",
      "parameterIndex": "0"
    }
  },
  {
    "code": "java.annotation.removed",
    "description": "Element no longer annotated with 'akasha.PublicKeyCredentialType'.",
    "element": "parameter akasha.PublicKeyCredentialParameters.Builder akasha.PublicKeyCredentialParameters::create(int, ===java.lang.String===) @ akasha.PublicKeyCredentialParameters.Builder",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@akasha.PublicKeyCredentialType",
      "annotationType": "akasha.PublicKeyCredentialType",
      "classQualifiedName": "akasha.PublicKeyCredentialParameters.Builder",
      "classSimpleName": "Builder",
      "elementKind": "parameter",
      "methodName": "create",
      "package": "akasha",
      "parameterIndex": "1"
    }
  },
  {
    "code": "java.annotation.removed",
    "description": "Element no longer annotated with 'akasha.PublicKeyCredentialType'.",
    "element": "parameter akasha.PublicKeyCredentialParameters.Builder akasha.PublicKeyCredentialParameters::create(int, ===java.lang.String===)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@akasha.PublicKeyCredentialType",
      "annotationType": "akasha.PublicKeyCredentialType",
      "classQualifiedName": "akasha.PublicKeyCredentialParameters",
      "classSimpleName": "PublicKeyCredentialParameters",
      "elementKind": "parameter",
      "methodName": "create",
      "package": "akasha",
      "parameterIndex": "1"
    }
  },
  {
    "code": "java.annotation.removed",
    "description": "Element no longer annotated with 'akasha.UserVerificationRequirement'.",
    "element": "parameter akasha.PublicKeyCredentialRequestOptions.Builder akasha.PublicKeyCredentialRequestOptions.Builder::userVerification(===java.lang.String===)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@akasha.UserVerificationRequirement",
      "annotationType": "akasha.UserVerificationRequirement",
      "classQualifiedName": "akasha.PublicKeyCredentialRequestOptions.Builder",
      "classSimpleName": "Builder",
      "elementKind": "parameter",
      "methodName": "userVerification",
      "package": "akasha",
      "parameterIndex": "0"
    }
  },
  {
    "code": "java.annotation.removed",
    "description": "Element no longer annotated with 'akasha.TokenBindingStatus'.",
    "element": "parameter akasha.TokenBinding.Builder akasha.TokenBinding.Builder::status(===java.lang.String===)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@akasha.TokenBindingStatus",
      "annotationType": "akasha.TokenBindingStatus",
      "classQualifiedName": "akasha.TokenBinding.Builder",
      "classSimpleName": "Builder",
      "elementKind": "parameter",
      "methodName": "status",
      "package": "akasha",
      "parameterIndex": "0"
    }
  },
  {
    "code": "java.annotation.removed",
    "description": "Element no longer annotated with 'akasha.TokenBindingStatus'.",
    "element": "parameter akasha.TokenBinding.Builder akasha.TokenBinding::create(===java.lang.String===) @ akasha.TokenBinding.Builder",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@akasha.TokenBindingStatus",
      "annotationType": "akasha.TokenBindingStatus",
      "classQualifiedName": "akasha.TokenBinding.Builder",
      "classSimpleName": "Builder",
      "elementKind": "parameter",
      "methodName": "create",
      "package": "akasha",
      "parameterIndex": "0"
    }
  },
  {
    "code": "java.annotation.removed",
    "description": "Element no longer annotated with 'akasha.TokenBindingStatus'.",
    "element": "parameter akasha.TokenBinding.Builder akasha.TokenBinding::create(===java.lang.String===)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@akasha.TokenBindingStatus",
      "annotationType": "akasha.TokenBindingStatus",
      "classQualifiedName": "akasha.TokenBinding",
      "classSimpleName": "TokenBinding",
      "elementKind": "parameter",
      "methodName": "create",
      "package": "akasha",
      "parameterIndex": "0"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javax.annotation.Nonnull'.",
    "newElement": "parameter akasha.bluetooth.AllowedBluetoothDevice.Builder akasha.bluetooth.AllowedBluetoothDevice::create(double[], akasha.lang.JsArray<java.lang.String>, ===java.lang.String===, boolean) @ akasha.bluetooth.AllowedBluetoothDevice.Builder",
    "oldElement": "parameter akasha.bluetooth.AllowedBluetoothDevice.Builder akasha.bluetooth.AllowedBluetoothDevice::create(akasha.lang.JsArray<java.lang.String>, java.lang.String, ===boolean===) @ akasha.bluetooth.AllowedBluetoothDevice.Builder",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javax.annotation.Nonnull",
      "annotationType": "javax.annotation.Nonnull",
      "classQualifiedName": "akasha.bluetooth.AllowedBluetoothDevice.Builder",
      "classSimpleName": "Builder",
      "elementKind": "parameter",
      "methodName": "create",
      "package": "akasha.bluetooth",
      "parameterIndex": "2"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javax.annotation.Nonnull'.",
    "newElement": "parameter akasha.bluetooth.AllowedBluetoothDevice.Builder akasha.bluetooth.AllowedBluetoothDevice::create(double[], akasha.lang.JsArray<java.lang.String>, ===java.lang.String===, boolean)",
    "oldElement": "parameter akasha.bluetooth.AllowedBluetoothDevice.Builder akasha.bluetooth.AllowedBluetoothDevice::create(akasha.lang.JsArray<java.lang.String>, java.lang.String, ===boolean===)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javax.annotation.Nonnull",
      "annotationType": "javax.annotation.Nonnull",
      "classQualifiedName": "akasha.bluetooth.AllowedBluetoothDevice",
      "classSimpleName": "AllowedBluetoothDevice",
      "elementKind": "parameter",
      "methodName": "create",
      "package": "akasha.bluetooth",
      "parameterIndex": "2"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javax.annotation.Nonnull'.",
    "newElement": "parameter akasha.bluetooth.AllowedBluetoothDevice.Builder akasha.bluetooth.AllowedBluetoothDevice::create(double[], java.lang.String, ===java.lang.String===, boolean) @ akasha.bluetooth.AllowedBluetoothDevice.Builder",
    "oldElement": "parameter akasha.bluetooth.AllowedBluetoothDevice.Builder akasha.bluetooth.AllowedBluetoothDevice::create(java.lang.String, java.lang.String, ===boolean===) @ akasha.bluetooth.AllowedBluetoothDevice.Builder",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javax.annotation.Nonnull",
      "annotationType": "javax.annotation.Nonnull",
      "classQualifiedName": "akasha.bluetooth.AllowedBluetoothDevice.Builder",
      "classSimpleName": "Builder",
      "elementKind": "parameter",
      "methodName": "create",
      "package": "akasha.bluetooth",
      "parameterIndex": "2"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javax.annotation.Nonnull'.",
    "newElement": "parameter akasha.bluetooth.AllowedBluetoothDevice.Builder akasha.bluetooth.AllowedBluetoothDevice::create(double[], java.lang.String, ===java.lang.String===, boolean)",
    "oldElement": "parameter akasha.bluetooth.AllowedBluetoothDevice.Builder akasha.bluetooth.AllowedBluetoothDevice::create(java.lang.String, java.lang.String, ===boolean===)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javax.annotation.Nonnull",
      "annotationType": "javax.annotation.Nonnull",
      "classQualifiedName": "akasha.bluetooth.AllowedBluetoothDevice",
      "classSimpleName": "AllowedBluetoothDevice",
      "elementKind": "parameter",
      "methodName": "create",
      "package": "akasha.bluetooth",
      "parameterIndex": "2"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javax.annotation.Nonnull'.",
    "newElement": "parameter akasha.bluetooth.AllowedBluetoothDevice.Builder akasha.bluetooth.AllowedBluetoothDevice::create(double[], java.lang.String[], ===java.lang.String===, boolean) @ akasha.bluetooth.AllowedBluetoothDevice.Builder",
    "oldElement": "parameter akasha.bluetooth.AllowedBluetoothDevice.Builder akasha.bluetooth.AllowedBluetoothDevice::create(java.lang.String[], java.lang.String, ===boolean===) @ akasha.bluetooth.AllowedBluetoothDevice.Builder",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javax.annotation.Nonnull",
      "annotationType": "javax.annotation.Nonnull",
      "classQualifiedName": "akasha.bluetooth.AllowedBluetoothDevice.Builder",
      "classSimpleName": "Builder",
      "elementKind": "parameter",
      "methodName": "create",
      "package": "akasha.bluetooth",
      "parameterIndex": "2"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javax.annotation.Nonnull'.",
    "newElement": "parameter akasha.bluetooth.AllowedBluetoothDevice.Builder akasha.bluetooth.AllowedBluetoothDevice::create(double[], java.lang.String[], ===java.lang.String===, boolean)",
    "oldElement": "parameter akasha.bluetooth.AllowedBluetoothDevice.Builder akasha.bluetooth.AllowedBluetoothDevice::create(java.lang.String[], java.lang.String, ===boolean===)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javax.annotation.Nonnull",
      "annotationType": "javax.annotation.Nonnull",
      "classQualifiedName": "akasha.bluetooth.AllowedBluetoothDevice",
      "classSimpleName": "AllowedBluetoothDevice",
      "elementKind": "parameter",
      "methodName": "create",
      "package": "akasha.bluetooth",
      "parameterIndex": "2"
    }
  },
  {
    "code": "java.method.parameterTypeChanged",
    "description": "The type of the parameter changed from 'akasha.core.JsObject' to 'akasha.lang.JsArray<akasha.bluetooth.BluetoothManufacturerDataFilterInit>'.",
    "newElement": "parameter akasha.bluetooth.BluetoothLEScanFilterInit.Builder akasha.bluetooth.BluetoothLEScanFilterInit.Builder::manufacturerData(===akasha.lang.JsArray<akasha.bluetooth.BluetoothManufacturerDataFilterInit>===)",
    "oldElement": "parameter akasha.bluetooth.BluetoothLEScanFilterInit.Builder akasha.bluetooth.BluetoothLEScanFilterInit.Builder::manufacturerData(===akasha.core.JsObject===)",
    "classification": {
      "SOURCE": "POTENTIALLY_BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.bluetooth.BluetoothLEScanFilterInit.Builder",
      "classSimpleName": "Builder",
      "elementKind": "parameter",
      "methodName": "manufacturerData",
      "newType": "akasha.lang.JsArray<akasha.bluetooth.BluetoothManufacturerDataFilterInit>",
      "oldType": "akasha.core.JsObject",
      "package": "akasha.bluetooth",
      "parameterIndex": "0"
    }
  },
  {
    "code": "java.method.parameterTypeChanged",
    "description": "The type of the parameter changed from 'akasha.core.JsObject' to 'akasha.lang.JsArray<akasha.bluetooth.BluetoothServiceDataFilterInit>'.",
    "newElement": "parameter akasha.bluetooth.BluetoothLEScanFilterInit.Builder akasha.bluetooth.BluetoothLEScanFilterInit.Builder::serviceData(===akasha.lang.JsArray<akasha.bluetooth.BluetoothServiceDataFilterInit>===)",
    "oldElement": "parameter akasha.bluetooth.BluetoothLEScanFilterInit.Builder akasha.bluetooth.BluetoothLEScanFilterInit.Builder::serviceData(===akasha.core.JsObject===)",
    "classification": {
      "SOURCE": "POTENTIALLY_BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.bluetooth.BluetoothLEScanFilterInit.Builder",
      "classSimpleName": "Builder",
      "elementKind": "parameter",
      "methodName": "serviceData",
      "newType": "akasha.lang.JsArray<akasha.bluetooth.BluetoothServiceDataFilterInit>",
      "oldType": "akasha.core.JsObject",
      "package": "akasha.bluetooth",
      "parameterIndex": "0"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javax.annotation.Nullable'.",
    "element": "parameter int akasha.Geolocation::watchPosition(akasha.PositionCallback, ===akasha.PositionErrorCallback===)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javax.annotation.Nullable",
      "annotationType": "javax.annotation.Nullable",
      "classQualifiedName": "akasha.Geolocation",
      "classSimpleName": "Geolocation",
      "elementKind": "parameter",
      "methodName": "watchPosition",
      "package": "akasha",
      "parameterIndex": "1"
    }
  },
  {
    "code": "java.annotation.removed",
    "description": "Element no longer annotated with 'javax.annotation.Nonnull'.",
    "element": "parameter int akasha.Geolocation::watchPosition(akasha.PositionCallback, ===akasha.PositionErrorCallback===)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javax.annotation.Nonnull",
      "annotationType": "javax.annotation.Nonnull",
      "classQualifiedName": "akasha.Geolocation",
      "classSimpleName": "Geolocation",
      "elementKind": "parameter",
      "methodName": "watchPosition",
      "package": "akasha",
      "parameterIndex": "1"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javax.annotation.Nullable'.",
    "element": "parameter int akasha.Geolocation::watchPosition(akasha.PositionCallback, ===akasha.PositionErrorCallback===, akasha.PositionOptions)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javax.annotation.Nullable",
      "annotationType": "javax.annotation.Nullable",
      "classQualifiedName": "akasha.Geolocation",
      "classSimpleName": "Geolocation",
      "elementKind": "parameter",
      "methodName": "watchPosition",
      "package": "akasha",
      "parameterIndex": "1"
    }
  },
  {
    "code": "java.annotation.removed",
    "description": "Element no longer annotated with 'javax.annotation.Nonnull'.",
    "element": "parameter int akasha.Geolocation::watchPosition(akasha.PositionCallback, ===akasha.PositionErrorCallback===, akasha.PositionOptions)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javax.annotation.Nonnull",
      "annotationType": "javax.annotation.Nonnull",
      "classQualifiedName": "akasha.Geolocation",
      "classSimpleName": "Geolocation",
      "elementKind": "parameter",
      "methodName": "watchPosition",
      "package": "akasha",
      "parameterIndex": "1"
    }
  },
  {
    "code": "java.annotation.removed",
    "description": "Element no longer annotated with 'akasha.AuthenticatorAttachment'.",
    "element": "parameter void akasha.AuthenticatorSelectionCriteria::setAuthenticatorAttachment(===java.lang.String===) @ akasha.AuthenticatorSelectionCriteria.Builder",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@akasha.AuthenticatorAttachment",
      "annotationType": "akasha.AuthenticatorAttachment",
      "classQualifiedName": "akasha.AuthenticatorSelectionCriteria.Builder",
      "classSimpleName": "Builder",
      "elementKind": "parameter",
      "methodName": "setAuthenticatorAttachment",
      "package": "akasha",
      "parameterIndex": "0"
    }
  },
  {
    "code": "java.annotation.removed",
    "description": "Element no longer annotated with 'akasha.AuthenticatorAttachment'.",
    "element": "parameter void akasha.AuthenticatorSelectionCriteria::setAuthenticatorAttachment(===java.lang.String===)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@akasha.AuthenticatorAttachment",
      "annotationType": "akasha.AuthenticatorAttachment",
      "classQualifiedName": "akasha.AuthenticatorSelectionCriteria",
      "classSimpleName": "AuthenticatorSelectionCriteria",
      "elementKind": "parameter",
      "methodName": "setAuthenticatorAttachment",
      "package": "akasha",
      "parameterIndex": "0"
    }
  },
  {
    "code": "java.annotation.removed",
    "description": "Element no longer annotated with 'akasha.UserVerificationRequirement'.",
    "element": "parameter void akasha.AuthenticatorSelectionCriteria::setUserVerification(===java.lang.String===) @ akasha.AuthenticatorSelectionCriteria.Builder",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@akasha.UserVerificationRequirement",
      "annotationType": "akasha.UserVerificationRequirement",
      "classQualifiedName": "akasha.AuthenticatorSelectionCriteria.Builder",
      "classSimpleName": "Builder",
      "elementKind": "parameter",
      "methodName": "setUserVerification",
      "package": "akasha",
      "parameterIndex": "0"
    }
  },
  {
    "code": "java.annotation.removed",
    "description": "Element no longer annotated with 'akasha.UserVerificationRequirement'.",
    "element": "parameter void akasha.AuthenticatorSelectionCriteria::setUserVerification(===java.lang.String===)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@akasha.UserVerificationRequirement",
      "annotationType": "akasha.UserVerificationRequirement",
      "classQualifiedName": "akasha.AuthenticatorSelectionCriteria",
      "classSimpleName": "AuthenticatorSelectionCriteria",
      "elementKind": "parameter",
      "methodName": "setUserVerification",
      "package": "akasha",
      "parameterIndex": "0"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javax.annotation.Nullable'.",
    "element": "parameter void akasha.Geolocation::getCurrentPosition(akasha.PositionCallback, ===akasha.PositionErrorCallback===)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javax.annotation.Nullable",
      "annotationType": "javax.annotation.Nullable",
      "classQualifiedName": "akasha.Geolocation",
      "classSimpleName": "Geolocation",
      "elementKind": "parameter",
      "methodName": "getCurrentPosition",
      "package": "akasha",
      "parameterIndex": "1"
    }
  },
  {
    "code": "java.annotation.removed",
    "description": "Element no longer annotated with 'javax.annotation.Nonnull'.",
    "element": "parameter void akasha.Geolocation::getCurrentPosition(akasha.PositionCallback, ===akasha.PositionErrorCallback===)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javax.annotation.Nonnull",
      "annotationType": "javax.annotation.Nonnull",
      "classQualifiedName": "akasha.Geolocation",
      "classSimpleName": "Geolocation",
      "elementKind": "parameter",
      "methodName": "getCurrentPosition",
      "package": "akasha",
      "parameterIndex": "1"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javax.annotation.Nullable'.",
    "element": "parameter void akasha.Geolocation::getCurrentPosition(akasha.PositionCallback, ===akasha.PositionErrorCallback===, akasha.PositionOptions)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javax.annotation.Nullable",
      "annotationType": "javax.annotation.Nullable",
      "classQualifiedName": "akasha.Geolocation",
      "classSimpleName": "Geolocation",
      "elementKind": "parameter",
      "methodName": "getCurrentPosition",
      "package": "akasha",
      "parameterIndex": "1"
    }
  },
  {
    "code": "java.annotation.removed",
    "description": "Element no longer annotated with 'javax.annotation.Nonnull'.",
    "element": "parameter void akasha.Geolocation::getCurrentPosition(akasha.PositionCallback, ===akasha.PositionErrorCallback===, akasha.PositionOptions)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javax.annotation.Nonnull",
      "annotationType": "javax.annotation.Nonnull",
      "classQualifiedName": "akasha.Geolocation",
      "classSimpleName": "Geolocation",
      "elementKind": "parameter",
      "methodName": "getCurrentPosition",
      "package": "akasha",
      "parameterIndex": "1"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javax.annotation.Nullable'.",
    "element": "parameter void akasha.KeyframeEffect::<init>(===akasha.Element===, akasha.core.JsObject)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javax.annotation.Nullable",
      "annotationType": "javax.annotation.Nullable",
      "classQualifiedName": "akasha.KeyframeEffect",
      "classSimpleName": "KeyframeEffect",
      "elementKind": "parameter",
      "methodName": "<init>",
      "package": "akasha",
      "parameterIndex": "0"
    }
  },
  {
    "code": "java.annotation.removed",
    "description": "Element no longer annotated with 'javax.annotation.Nonnull'.",
    "element": "parameter void akasha.KeyframeEffect::<init>(===akasha.Element===, akasha.core.JsObject)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javax.annotation.Nonnull",
      "annotationType": "javax.annotation.Nonnull",
      "classQualifiedName": "akasha.KeyframeEffect",
      "classSimpleName": "KeyframeEffect",
      "elementKind": "parameter",
      "methodName": "<init>",
      "package": "akasha",
      "parameterIndex": "0"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javax.annotation.Nullable'.",
    "element": "parameter void akasha.KeyframeEffect::<init>(===akasha.Element===, akasha.core.JsObject, akasha.KeyframeEffectOptions)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javax.annotation.Nullable",
      "annotationType": "javax.annotation.Nullable",
      "classQualifiedName": "akasha.KeyframeEffect",
      "classSimpleName": "KeyframeEffect",
      "elementKind": "parameter",
      "methodName": "<init>",
      "package": "akasha",
      "parameterIndex": "0"
    }
  },
  {
    "code": "java.annotation.removed",
    "description": "Element no longer annotated with 'javax.annotation.Nonnull'.",
    "element": "parameter void akasha.KeyframeEffect::<init>(===akasha.Element===, akasha.core.JsObject, akasha.KeyframeEffectOptions)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javax.annotation.Nonnull",
      "annotationType": "javax.annotation.Nonnull",
      "classQualifiedName": "akasha.KeyframeEffect",
      "classSimpleName": "KeyframeEffect",
      "elementKind": "parameter",
      "methodName": "<init>",
      "package": "akasha",
      "parameterIndex": "0"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javax.annotation.Nullable'.",
    "element": "parameter void akasha.KeyframeEffect::<init>(===akasha.Element===, akasha.core.JsObject, double)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javax.annotation.Nullable",
      "annotationType": "javax.annotation.Nullable",
      "classQualifiedName": "akasha.KeyframeEffect",
      "classSimpleName": "KeyframeEffect",
      "elementKind": "parameter",
      "methodName": "<init>",
      "package": "akasha",
      "parameterIndex": "0"
    }
  },
  {
    "code": "java.annotation.removed",
    "description": "Element no longer annotated with 'javax.annotation.Nonnull'.",
    "element": "parameter void akasha.KeyframeEffect::<init>(===akasha.Element===, akasha.core.JsObject, double)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javax.annotation.Nonnull",
      "annotationType": "javax.annotation.Nonnull",
      "classQualifiedName": "akasha.KeyframeEffect",
      "classSimpleName": "KeyframeEffect",
      "elementKind": "parameter",
      "methodName": "<init>",
      "package": "akasha",
      "parameterIndex": "0"
    }
  },
  {
    "code": "java.method.parameterTypeChanged",
    "description": "The type of the parameter changed from 'akasha.Position' to 'akasha.GeolocationPosition'.",
    "newElement": "parameter void akasha.PositionCallback::onInvoke(===akasha.GeolocationPosition===)",
    "oldElement": "parameter void akasha.PositionCallback::onInvoke(===akasha.Position===)",
    "classification": {
      "SOURCE": "POTENTIALLY_BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.PositionCallback",
      "classSimpleName": "PositionCallback",
      "elementKind": "parameter",
      "methodName": "onInvoke",
      "newType": "akasha.GeolocationPosition",
      "oldType": "akasha.Position",
      "package": "akasha",
      "parameterIndex": "0"
    }
  },
  {
    "code": "java.method.parameterTypeChanged",
    "description": "The type of the parameter changed from 'akasha.PositionError' to 'akasha.GeolocationPositionError'.",
    "newElement": "parameter void akasha.PositionErrorCallback::onInvoke(===akasha.GeolocationPositionError===)",
    "oldElement": "parameter void akasha.PositionErrorCallback::onInvoke(===akasha.PositionError===)",
    "classification": {
      "SOURCE": "POTENTIALLY_BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.PositionErrorCallback",
      "classSimpleName": "PositionErrorCallback",
      "elementKind": "parameter",
      "methodName": "onInvoke",
      "newType": "akasha.GeolocationPositionError",
      "oldType": "akasha.PositionError",
      "package": "akasha",
      "parameterIndex": "0"
    }
  },
  {
    "code": "java.annotation.removed",
    "description": "Element no longer annotated with 'akasha.AttestationConveyancePreference'.",
    "element": "parameter void akasha.PublicKeyCredentialCreationOptions::setAttestation(===java.lang.String===) @ akasha.PublicKeyCredentialCreationOptions.Builder",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@akasha.AttestationConveyancePreference",
      "annotationType": "akasha.AttestationConveyancePreference",
      "classQualifiedName": "akasha.PublicKeyCredentialCreationOptions.Builder",
      "classSimpleName": "Builder",
      "elementKind": "parameter",
      "methodName": "setAttestation",
      "package": "akasha",
      "parameterIndex": "0"
    }
  },
  {
    "code": "java.annotation.removed",
    "description": "Element no longer annotated with 'akasha.AttestationConveyancePreference'.",
    "element": "parameter void akasha.PublicKeyCredentialCreationOptions::setAttestation(===java.lang.String===)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@akasha.AttestationConveyancePreference",
      "annotationType": "akasha.AttestationConveyancePreference",
      "classQualifiedName": "akasha.PublicKeyCredentialCreationOptions",
      "classSimpleName": "PublicKeyCredentialCreationOptions",
      "elementKind": "parameter",
      "methodName": "setAttestation",
      "package": "akasha",
      "parameterIndex": "0"
    }
  },
  {
    "code": "java.annotation.removed",
    "description": "Element no longer annotated with 'akasha.PublicKeyCredentialType'.",
    "element": "parameter void akasha.PublicKeyCredentialDescriptor::setType(===java.lang.String===) @ akasha.PublicKeyCredentialDescriptor.Builder",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@akasha.PublicKeyCredentialType",
      "annotationType": "akasha.PublicKeyCredentialType",
      "classQualifiedName": "akasha.PublicKeyCredentialDescriptor.Builder",
      "classSimpleName": "Builder",
      "elementKind": "parameter",
      "methodName": "setType",
      "package": "akasha",
      "parameterIndex": "0"
    }
  },
  {
    "code": "java.annotation.removed",
    "description": "Element no longer annotated with 'akasha.PublicKeyCredentialType'.",
    "element": "parameter void akasha.PublicKeyCredentialDescriptor::setType(===java.lang.String===)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@akasha.PublicKeyCredentialType",
      "annotationType": "akasha.PublicKeyCredentialType",
      "classQualifiedName": "akasha.PublicKeyCredentialDescriptor",
      "classSimpleName": "PublicKeyCredentialDescriptor",
      "elementKind": "parameter",
      "methodName": "setType",
      "package": "akasha",
      "parameterIndex": "0"
    }
  },
  {
    "code": "java.annotation.removed",
    "description": "Element no longer annotated with 'akasha.PublicKeyCredentialType'.",
    "element": "parameter void akasha.PublicKeyCredentialParameters::setType(===java.lang.String===) @ akasha.PublicKeyCredentialParameters.Builder",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@akasha.PublicKeyCredentialType",
      "annotationType": "akasha.PublicKeyCredentialType",
      "classQualifiedName": "akasha.PublicKeyCredentialParameters.Builder",
      "classSimpleName": "Builder",
      "elementKind": "parameter",
      "methodName": "setType",
      "package": "akasha",
      "parameterIndex": "0"
    }
  },
  {
    "code": "java.annotation.removed",
    "description": "Element no longer annotated with 'akasha.PublicKeyCredentialType'.",
    "element": "parameter void akasha.PublicKeyCredentialParameters::setType(===java.lang.String===)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@akasha.PublicKeyCredentialType",
      "annotationType": "akasha.PublicKeyCredentialType",
      "classQualifiedName": "akasha.PublicKeyCredentialParameters",
      "classSimpleName": "PublicKeyCredentialParameters",
      "elementKind": "parameter",
      "methodName": "setType",
      "package": "akasha",
      "parameterIndex": "0"
    }
  },
  {
    "code": "java.annotation.removed",
    "description": "Element no longer annotated with 'akasha.UserVerificationRequirement'.",
    "element": "parameter void akasha.PublicKeyCredentialRequestOptions::setUserVerification(===java.lang.String===) @ akasha.PublicKeyCredentialRequestOptions.Builder",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@akasha.UserVerificationRequirement",
      "annotationType": "akasha.UserVerificationRequirement",
      "classQualifiedName": "akasha.PublicKeyCredentialRequestOptions.Builder",
      "classSimpleName": "Builder",
      "elementKind": "parameter",
      "methodName": "setUserVerification",
      "package": "akasha",
      "parameterIndex": "0"
    }
  },
  {
    "code": "java.annotation.removed",
    "description": "Element no longer annotated with 'akasha.UserVerificationRequirement'.",
    "element": "parameter void akasha.PublicKeyCredentialRequestOptions::setUserVerification(===java.lang.String===)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@akasha.UserVerificationRequirement",
      "annotationType": "akasha.UserVerificationRequirement",
      "classQualifiedName": "akasha.PublicKeyCredentialRequestOptions",
      "classSimpleName": "PublicKeyCredentialRequestOptions",
      "elementKind": "parameter",
      "methodName": "setUserVerification",
      "package": "akasha",
      "parameterIndex": "0"
    }
  },
  {
    "code": "java.annotation.removed",
    "description": "Element no longer annotated with 'akasha.TokenBindingStatus'.",
    "element": "parameter void akasha.TokenBinding::setStatus(===java.lang.String===) @ akasha.TokenBinding.Builder",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@akasha.TokenBindingStatus",
      "annotationType": "akasha.TokenBindingStatus",
      "classQualifiedName": "akasha.TokenBinding.Builder",
      "classSimpleName": "Builder",
      "elementKind": "parameter",
      "methodName": "setStatus",
      "package": "akasha",
      "parameterIndex": "0"
    }
  },
  {
    "code": "java.annotation.removed",
    "description": "Element no longer annotated with 'akasha.TokenBindingStatus'.",
    "element": "parameter void akasha.TokenBinding::setStatus(===java.lang.String===)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@akasha.TokenBindingStatus",
      "annotationType": "akasha.TokenBindingStatus",
      "classQualifiedName": "akasha.TokenBinding",
      "classSimpleName": "TokenBinding",
      "elementKind": "parameter",
      "methodName": "setStatus",
      "package": "akasha",
      "parameterIndex": "0"
    }
  },
  {
    "code": "java.method.parameterTypeChanged",
    "description": "The type of the parameter changed from 'akasha.core.JsObject' to 'akasha.lang.JsArray<akasha.bluetooth.BluetoothManufacturerDataFilterInit>'.",
    "newElement": "parameter void akasha.bluetooth.BluetoothLEScanFilterInit::setManufacturerData(===akasha.lang.JsArray<akasha.bluetooth.BluetoothManufacturerDataFilterInit>===)",
    "oldElement": "parameter void akasha.bluetooth.BluetoothLEScanFilterInit::setManufacturerData(===akasha.core.JsObject===)",
    "classification": {
      "SOURCE": "POTENTIALLY_BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.bluetooth.BluetoothLEScanFilterInit",
      "classSimpleName": "BluetoothLEScanFilterInit",
      "elementKind": "parameter",
      "methodName": "setManufacturerData",
      "newType": "akasha.lang.JsArray<akasha.bluetooth.BluetoothManufacturerDataFilterInit>",
      "oldType": "akasha.core.JsObject",
      "package": "akasha.bluetooth",
      "parameterIndex": "0"
    }
  },
  {
    "code": "java.method.parameterTypeChanged",
    "description": "The type of the parameter changed from 'akasha.core.JsObject' to 'akasha.lang.JsArray<akasha.bluetooth.BluetoothServiceDataFilterInit>'.",
    "newElement": "parameter void akasha.bluetooth.BluetoothLEScanFilterInit::setServiceData(===akasha.lang.JsArray<akasha.bluetooth.BluetoothServiceDataFilterInit>===)",
    "oldElement": "parameter void akasha.bluetooth.BluetoothLEScanFilterInit::setServiceData(===akasha.core.JsObject===)",
    "classification": {
      "SOURCE": "POTENTIALLY_BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.bluetooth.BluetoothLEScanFilterInit",
      "classSimpleName": "BluetoothLEScanFilterInit",
      "elementKind": "parameter",
      "methodName": "setServiceData",
      "newType": "akasha.lang.JsArray<akasha.bluetooth.BluetoothServiceDataFilterInit>",
      "oldType": "akasha.core.JsObject",
      "package": "akasha.bluetooth",
      "parameterIndex": "0"
    }
  }
]
