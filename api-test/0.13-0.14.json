[
  {
    "code": "java.class.added",
    "description": "Class was added.",
    "newElement": "@interface akasha.gpu.GPUVertexStepMode",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.gpu.GPUVertexStepMode",
      "classSimpleName": "GPUVertexStepMode",
      "elementKind": "@interface",
      "package": "akasha.gpu"
    }
  },
  {
    "code": "java.class.nowImplementsInterface",
    "description": "Class now implements interface 'akasha.ImageBitmapSource'.",
    "element": "class akasha.Blob",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.Blob",
      "classSimpleName": "Blob",
      "elementKind": "class",
      "interface": "akasha.ImageBitmapSource",
      "package": "akasha"
    }
  },
  {
    "code": "java.class.nowImplementsInterface",
    "description": "Class now implements interface 'akasha.CanvasImageSource'.",
    "element": "class akasha.HTMLCanvasElement",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.HTMLCanvasElement",
      "classSimpleName": "HTMLCanvasElement",
      "elementKind": "class",
      "interface": "akasha.CanvasImageSource",
      "package": "akasha"
    }
  },
  {
    "code": "java.class.nowImplementsInterface",
    "description": "Class now implements interface 'akasha.PasswordCredentialInit'.",
    "element": "class akasha.HTMLFormElement",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.HTMLFormElement",
      "classSimpleName": "HTMLFormElement",
      "elementKind": "class",
      "interface": "akasha.PasswordCredentialInit",
      "package": "akasha"
    }
  },
  {
    "code": "java.class.nowImplementsInterface",
    "description": "Class now implements interface 'akasha.HTMLOrSVGImageElement'.",
    "element": "class akasha.HTMLImageElement",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.HTMLImageElement",
      "classSimpleName": "HTMLImageElement",
      "elementKind": "class",
      "interface": "akasha.HTMLOrSVGImageElement",
      "package": "akasha"
    }
  },
  {
    "code": "java.class.nowImplementsInterface",
    "description": "Class now implements interface 'akasha.HTMLOrSVGScriptElement'.",
    "element": "class akasha.HTMLScriptElement",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.HTMLScriptElement",
      "classSimpleName": "HTMLScriptElement",
      "elementKind": "class",
      "interface": "akasha.HTMLOrSVGScriptElement",
      "package": "akasha"
    }
  },
  {
    "code": "java.class.nowImplementsInterface",
    "description": "Class now implements interface 'akasha.CanvasImageSource'.",
    "element": "class akasha.HTMLVideoElement",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.HTMLVideoElement",
      "classSimpleName": "HTMLVideoElement",
      "elementKind": "class",
      "interface": "akasha.CanvasImageSource",
      "package": "akasha"
    }
  },
  {
    "code": "java.class.nowImplementsInterface",
    "description": "Class now implements interface 'akasha.CanvasImageSource'.",
    "element": "class akasha.ImageBitmap",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.ImageBitmap",
      "classSimpleName": "ImageBitmap",
      "elementKind": "class",
      "interface": "akasha.CanvasImageSource",
      "package": "akasha"
    }
  },
  {
    "code": "java.class.nowImplementsInterface",
    "description": "Class now implements interface 'akasha.OffscreenRenderingContext'.",
    "element": "class akasha.ImageBitmapRenderingContext",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.ImageBitmapRenderingContext",
      "classSimpleName": "ImageBitmapRenderingContext",
      "elementKind": "class",
      "interface": "akasha.OffscreenRenderingContext",
      "package": "akasha"
    }
  },
  {
    "code": "java.class.nowImplementsInterface",
    "description": "Class now implements interface 'akasha.ImageBitmapSource'.",
    "element": "class akasha.ImageData",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.ImageData",
      "classSimpleName": "ImageData",
      "elementKind": "class",
      "interface": "akasha.ImageBitmapSource",
      "package": "akasha"
    }
  },
  {
    "code": "java.class.nowImplementsInterface",
    "description": "Class now implements interface 'akasha.MessageEventSource'.",
    "element": "class akasha.MessagePort",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.MessagePort",
      "classSimpleName": "MessagePort",
      "elementKind": "class",
      "interface": "akasha.MessageEventSource",
      "package": "akasha"
    }
  },
  {
    "code": "java.class.added",
    "description": "Class was added.",
    "newElement": "class akasha.MimeType",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.MimeType",
      "classSimpleName": "MimeType",
      "elementKind": "class",
      "package": "akasha"
    }
  },
  {
    "code": "java.class.nowImplementsInterface",
    "description": "Class now implements interface 'akasha.CanvasImageSource'.",
    "element": "class akasha.OffscreenCanvas",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.OffscreenCanvas",
      "classSimpleName": "OffscreenCanvas",
      "elementKind": "class",
      "interface": "akasha.CanvasImageSource",
      "package": "akasha"
    }
  },
  {
    "code": "java.class.nowImplementsInterface",
    "description": "Class now implements interface 'akasha.OffscreenRenderingContext'.",
    "element": "class akasha.OffscreenCanvasRenderingContext2D",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.OffscreenCanvasRenderingContext2D",
      "classSimpleName": "OffscreenCanvasRenderingContext2D",
      "elementKind": "class",
      "interface": "akasha.OffscreenRenderingContext",
      "package": "akasha"
    }
  },
  {
    "code": "java.class.added",
    "description": "Class was added.",
    "newElement": "class akasha.Plugin",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.Plugin",
      "classSimpleName": "Plugin",
      "elementKind": "class",
      "package": "akasha"
    }
  },
  {
    "code": "java.class.nowImplementsInterface",
    "description": "Class now implements interface 'akasha.ReadableStreamController'.",
    "element": "class akasha.ReadableByteStreamController",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.ReadableByteStreamController",
      "classSimpleName": "ReadableByteStreamController",
      "elementKind": "class",
      "interface": "akasha.ReadableStreamController",
      "package": "akasha"
    }
  },
  {
    "code": "java.class.nowImplementsInterface",
    "description": "Class now implements interface 'akasha.ImageBufferSource'.",
    "element": "class akasha.ReadableStream",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.ReadableStream",
      "classSimpleName": "ReadableStream",
      "elementKind": "class",
      "interface": "akasha.ImageBufferSource",
      "package": "akasha"
    }
  },
  {
    "code": "java.class.nowImplementsInterface",
    "description": "Class now implements interface 'akasha.ReadableStreamReader'.",
    "element": "class akasha.ReadableStreamBYOBReader",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.ReadableStreamBYOBReader",
      "classSimpleName": "ReadableStreamBYOBReader",
      "elementKind": "class",
      "interface": "akasha.ReadableStreamReader",
      "package": "akasha"
    }
  },
  {
    "code": "java.class.nowImplementsInterface",
    "description": "Class now implements interface 'akasha.ReadableStreamController'.",
    "element": "class akasha.ReadableStreamDefaultController",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.ReadableStreamDefaultController",
      "classSimpleName": "ReadableStreamDefaultController",
      "elementKind": "class",
      "interface": "akasha.ReadableStreamController",
      "package": "akasha"
    }
  },
  {
    "code": "java.class.nowImplementsInterface",
    "description": "Class now implements interface 'akasha.ReadableStreamReader'.",
    "element": "class akasha.ReadableStreamDefaultReader",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.ReadableStreamDefaultReader",
      "classSimpleName": "ReadableStreamDefaultReader",
      "elementKind": "class",
      "interface": "akasha.ReadableStreamReader",
      "package": "akasha"
    }
  },
  {
    "code": "java.class.nowImplementsInterface",
    "description": "Class now implements interface 'akasha.MessageEventSource'.",
    "element": "class akasha.ServiceWorker",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.ServiceWorker",
      "classSimpleName": "ServiceWorker",
      "elementKind": "class",
      "interface": "akasha.MessageEventSource",
      "package": "akasha"
    }
  },
  {
    "code": "java.class.nowImplementsInterface",
    "description": "Class now implements interface 'akasha.OffscreenRenderingContext'.",
    "element": "class akasha.gl.WebGL2RenderingContext",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.gl.WebGL2RenderingContext",
      "classSimpleName": "WebGL2RenderingContext",
      "elementKind": "class",
      "interface": "akasha.OffscreenRenderingContext",
      "package": "akasha.gl"
    }
  },
  {
    "code": "java.class.nowImplementsInterface",
    "description": "Class now implements interface 'akasha.xr.XRWebGLRenderingContext'.",
    "element": "class akasha.gl.WebGL2RenderingContext",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.gl.WebGL2RenderingContext",
      "classSimpleName": "WebGL2RenderingContext",
      "elementKind": "class",
      "interface": "akasha.xr.XRWebGLRenderingContext",
      "package": "akasha.gl"
    }
  },
  {
    "code": "java.class.nowImplementsInterface",
    "description": "Class now implements interface 'akasha.OffscreenRenderingContext'.",
    "element": "class akasha.gl.WebGLRenderingContext",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.gl.WebGLRenderingContext",
      "classSimpleName": "WebGLRenderingContext",
      "elementKind": "class",
      "interface": "akasha.OffscreenRenderingContext",
      "package": "akasha.gl"
    }
  },
  {
    "code": "java.class.nowImplementsInterface",
    "description": "Class now implements interface 'akasha.xr.XRWebGLRenderingContext'.",
    "element": "class akasha.gl.WebGLRenderingContext",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.gl.WebGLRenderingContext",
      "classSimpleName": "WebGLRenderingContext",
      "elementKind": "class",
      "interface": "akasha.xr.XRWebGLRenderingContext",
      "package": "akasha.gl"
    }
  },
  {
    "code": "java.class.added",
    "description": "Class was added.",
    "newElement": "class akasha.gpu.GPUCanvasContext",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.gpu.GPUCanvasContext",
      "classSimpleName": "GPUCanvasContext",
      "elementKind": "class",
      "package": "akasha.gpu"
    }
  },
  {
    "code": "java.class.nowImplementsInterface",
    "description": "Class now implements interface 'akasha.gpu.GPUBindingResource'.",
    "element": "class akasha.gpu.GPUExternalTexture",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.gpu.GPUExternalTexture",
      "classSimpleName": "GPUExternalTexture",
      "elementKind": "class",
      "interface": "akasha.gpu.GPUBindingResource",
      "package": "akasha.gpu"
    }
  },
  {
    "code": "java.class.nowImplementsInterface",
    "description": "Class now implements interface 'akasha.gpu.GPUError'.",
    "element": "class akasha.gpu.GPUOutOfMemoryError",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.gpu.GPUOutOfMemoryError",
      "classSimpleName": "GPUOutOfMemoryError",
      "elementKind": "class",
      "interface": "akasha.gpu.GPUError",
      "package": "akasha.gpu"
    }
  },
  {
    "code": "java.class.nowImplementsInterface",
    "description": "Class now implements interface 'akasha.gpu.GPUBindingResource'.",
    "element": "class akasha.gpu.GPUSampler",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.gpu.GPUSampler",
      "classSimpleName": "GPUSampler",
      "elementKind": "class",
      "interface": "akasha.gpu.GPUBindingResource",
      "package": "akasha.gpu"
    }
  },
  {
    "code": "java.class.nowImplementsInterface",
    "description": "Class now implements interface 'akasha.gpu.GPUBindingResource'.",
    "element": "class akasha.gpu.GPUTextureView",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.gpu.GPUTextureView",
      "classSimpleName": "GPUTextureView",
      "elementKind": "class",
      "interface": "akasha.gpu.GPUBindingResource",
      "package": "akasha.gpu"
    }
  },
  {
    "code": "java.class.nowImplementsInterface",
    "description": "Class now implements interface 'akasha.gpu.GPUError'.",
    "element": "class akasha.gpu.GPUValidationError",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.gpu.GPUValidationError",
      "classSimpleName": "GPUValidationError",
      "elementKind": "class",
      "interface": "akasha.gpu.GPUError",
      "package": "akasha.gpu"
    }
  },
  {
    "code": "java.class.nowImplementsInterface",
    "description": "Class now implements interface 'akasha.HTMLOrSVGImageElement'.",
    "element": "class akasha.svg.SVGImageElement",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.svg.SVGImageElement",
      "classSimpleName": "SVGImageElement",
      "elementKind": "class",
      "interface": "akasha.HTMLOrSVGImageElement",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.class.nowImplementsInterface",
    "description": "Class now implements interface 'akasha.HTMLOrSVGScriptElement'.",
    "element": "class akasha.svg.SVGScriptElement",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.svg.SVGScriptElement",
      "classSimpleName": "SVGScriptElement",
      "elementKind": "class",
      "interface": "akasha.HTMLOrSVGScriptElement",
      "package": "akasha.svg"
    }
  },
  {
    "code": "java.field.added",
    "description": "Field added to class.",
    "newElement": "field akasha.HTMLMetaElement.media",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.HTMLMetaElement",
      "classSimpleName": "HTMLMetaElement",
      "elementKind": "field",
      "fieldName": "media",
      "package": "akasha"
    }
  },
  {
    "code": "java.field.addedStaticField",
    "description": "Static field added to class.",
    "newElement": "field akasha.OffscreenRenderingContextId.webgpu",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.OffscreenRenderingContextId",
      "classSimpleName": "OffscreenRenderingContextId",
      "elementKind": "field",
      "fieldName": "webgpu",
      "package": "akasha"
    }
  },
  {
    "code": "java.field.addedStaticField",
    "description": "Static field added to class.",
    "newElement": "field akasha.PermissionName.gamepad",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.PermissionName",
      "classSimpleName": "PermissionName",
      "elementKind": "field",
      "fieldName": "gamepad",
      "package": "akasha"
    }
  },
  {
    "code": "java.field.addedStaticField",
    "description": "Static field added to class.",
    "newElement": "field akasha.PermissionName.screen_wake_lock",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.PermissionName",
      "classSimpleName": "PermissionName",
      "elementKind": "field",
      "fieldName": "screen_wake_lock",
      "package": "akasha"
    }
  },
  {
    "code": "java.field.addedStaticField",
    "description": "Static field added to class.",
    "newElement": "field akasha.PermissionName.speaker_selection",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.PermissionName",
      "classSimpleName": "PermissionName",
      "elementKind": "field",
      "fieldName": "speaker_selection",
      "package": "akasha"
    }
  },
  {
    "code": "java.field.addedStaticField",
    "description": "Static field added to class.",
    "newElement": "field akasha.RenderContextType.webgpu",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.RenderContextType",
      "classSimpleName": "RenderContextType",
      "elementKind": "field",
      "fieldName": "webgpu",
      "package": "akasha"
    }
  },
  {
    "code": "java.field.addedStaticField",
    "description": "Static field added to class.",
    "newElement": "field akasha.gpu.GPUTextureUsage.SHADER_READ",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.gpu.GPUTextureUsage",
      "classSimpleName": "GPUTextureUsage",
      "elementKind": "field",
      "fieldName": "SHADER_READ",
      "package": "akasha.gpu"
    }
  },
  {
    "code": "java.class.added",
    "description": "Class was added.",
    "newElement": "interface akasha.CSSStyleSheetInit",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.CSSStyleSheetInit",
      "classSimpleName": "CSSStyleSheetInit",
      "elementKind": "interface",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.attributeValueChanged",
    "description": "Attribute 'name' of annotation 'jsinterop.annotations.JsType' changed value from '\"CanvasImageSource\"' to '\"?\"'.",
    "element": "interface akasha.CanvasImageSource",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@jsinterop.annotations.JsType(isNative = true, namespace = \"<global>\", name = \"?\")",
      "annotationType": "jsinterop.annotations.JsType",
      "attribute": "name",
      "classQualifiedName": "akasha.CanvasImageSource",
      "classSimpleName": "CanvasImageSource",
      "elementKind": "interface",
      "newValue": "\"?\"",
      "oldValue": "\"CanvasImageSource\"",
      "package": "akasha"
    }
  },
  {
    "code": "java.class.nowImplementsInterface",
    "description": "Class now implements interface 'akasha.ImageBitmapSource'.",
    "element": "interface akasha.CanvasImageSource",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.CanvasImageSource",
      "classSimpleName": "CanvasImageSource",
      "elementKind": "interface",
      "interface": "akasha.ImageBitmapSource",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.attributeValueChanged",
    "description": "Attribute 'name' of annotation 'jsinterop.annotations.JsType' changed value from '\"HTMLOrSVGImageElement\"' to '\"?\"'.",
    "element": "interface akasha.HTMLOrSVGImageElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@jsinterop.annotations.JsType(isNative = true, namespace = \"<global>\", name = \"?\")",
      "annotationType": "jsinterop.annotations.JsType",
      "attribute": "name",
      "classQualifiedName": "akasha.HTMLOrSVGImageElement",
      "classSimpleName": "HTMLOrSVGImageElement",
      "elementKind": "interface",
      "newValue": "\"?\"",
      "oldValue": "\"HTMLOrSVGImageElement\"",
      "package": "akasha"
    }
  },
  {
    "code": "java.class.nowImplementsInterface",
    "description": "Class now implements interface 'akasha.CanvasImageSource'.",
    "element": "interface akasha.HTMLOrSVGImageElement",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.HTMLOrSVGImageElement",
      "classSimpleName": "HTMLOrSVGImageElement",
      "elementKind": "interface",
      "interface": "akasha.CanvasImageSource",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.attributeValueChanged",
    "description": "Attribute 'name' of annotation 'jsinterop.annotations.JsType' changed value from '\"HTMLOrSVGScriptElement\"' to '\"?\"'.",
    "element": "interface akasha.HTMLOrSVGScriptElement",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@jsinterop.annotations.JsType(isNative = true, namespace = \"<global>\", name = \"?\")",
      "annotationType": "jsinterop.annotations.JsType",
      "attribute": "name",
      "classQualifiedName": "akasha.HTMLOrSVGScriptElement",
      "classSimpleName": "HTMLOrSVGScriptElement",
      "elementKind": "interface",
      "newValue": "\"?\"",
      "oldValue": "\"HTMLOrSVGScriptElement\"",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.attributeValueChanged",
    "description": "Attribute 'name' of annotation 'jsinterop.annotations.JsType' changed value from '\"ImageBitmapSource\"' to '\"?\"'.",
    "element": "interface akasha.ImageBitmapSource",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@jsinterop.annotations.JsType(isNative = true, namespace = \"<global>\", name = \"?\")",
      "annotationType": "jsinterop.annotations.JsType",
      "attribute": "name",
      "classQualifiedName": "akasha.ImageBitmapSource",
      "classSimpleName": "ImageBitmapSource",
      "elementKind": "interface",
      "newValue": "\"?\"",
      "oldValue": "\"ImageBitmapSource\"",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.attributeValueChanged",
    "description": "Attribute 'name' of annotation 'jsinterop.annotations.JsType' changed value from '\"ImageBufferSource\"' to '\"?\"'.",
    "element": "interface akasha.ImageBufferSource",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@jsinterop.annotations.JsType(isNative = true, namespace = \"<global>\", name = \"?\")",
      "annotationType": "jsinterop.annotations.JsType",
      "attribute": "name",
      "classQualifiedName": "akasha.ImageBufferSource",
      "classSimpleName": "ImageBufferSource",
      "elementKind": "interface",
      "newValue": "\"?\"",
      "oldValue": "\"ImageBufferSource\"",
      "package": "akasha"
    }
  },
  {
    "code": "java.class.added",
    "description": "Class was added.",
    "newElement": "interface akasha.MediaListOrStringUnion",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.MediaListOrStringUnion",
      "classSimpleName": "MediaListOrStringUnion",
      "elementKind": "interface",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.attributeValueChanged",
    "description": "Attribute 'name' of annotation 'jsinterop.annotations.JsType' changed value from '\"MessageEventSource\"' to '\"?\"'.",
    "element": "interface akasha.MessageEventSource",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@jsinterop.annotations.JsType(isNative = true, namespace = \"<global>\", name = \"?\")",
      "annotationType": "jsinterop.annotations.JsType",
      "attribute": "name",
      "classQualifiedName": "akasha.MessageEventSource",
      "classSimpleName": "MessageEventSource",
      "elementKind": "interface",
      "newValue": "\"?\"",
      "oldValue": "\"MessageEventSource\"",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.attributeValueChanged",
    "description": "Attribute 'name' of annotation 'jsinterop.annotations.JsType' changed value from '\"OffscreenRenderingContext\"' to '\"?\"'.",
    "element": "interface akasha.OffscreenRenderingContext",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@jsinterop.annotations.JsType(isNative = true, namespace = \"<global>\", name = \"?\")",
      "annotationType": "jsinterop.annotations.JsType",
      "attribute": "name",
      "classQualifiedName": "akasha.OffscreenRenderingContext",
      "classSimpleName": "OffscreenRenderingContext",
      "elementKind": "interface",
      "newValue": "\"?\"",
      "oldValue": "\"OffscreenRenderingContext\"",
      "package": "akasha"
    }
  },
  {
    "code": "java.class.nowImplementsInterface",
    "description": "Class now implements interface 'akasha.PasswordCredentialInit'.",
    "element": "interface akasha.PasswordCredentialData",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.PasswordCredentialData",
      "classSimpleName": "PasswordCredentialData",
      "elementKind": "interface",
      "interface": "akasha.PasswordCredentialInit",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.attributeValueChanged",
    "description": "Attribute 'name' of annotation 'jsinterop.annotations.JsType' changed value from '\"PasswordCredentialInit\"' to '\"?\"'.",
    "element": "interface akasha.PasswordCredentialInit",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@jsinterop.annotations.JsType(isNative = true, namespace = \"<global>\", name = \"?\")",
      "annotationType": "jsinterop.annotations.JsType",
      "attribute": "name",
      "classQualifiedName": "akasha.PasswordCredentialInit",
      "classSimpleName": "PasswordCredentialInit",
      "elementKind": "interface",
      "newValue": "\"?\"",
      "oldValue": "\"PasswordCredentialInit\"",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.attributeValueChanged",
    "description": "Attribute 'name' of annotation 'jsinterop.annotations.JsType' changed value from '\"ReadableStreamController\"' to '\"?\"'.",
    "element": "interface akasha.ReadableStreamController",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@jsinterop.annotations.JsType(isNative = true, namespace = \"<global>\", name = \"?\")",
      "annotationType": "jsinterop.annotations.JsType",
      "attribute": "name",
      "classQualifiedName": "akasha.ReadableStreamController",
      "classSimpleName": "ReadableStreamController",
      "elementKind": "interface",
      "newValue": "\"?\"",
      "oldValue": "\"ReadableStreamController\"",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.attributeValueChanged",
    "description": "Attribute 'name' of annotation 'jsinterop.annotations.JsType' changed value from '\"ReadableStreamReader\"' to '\"?\"'.",
    "element": "interface akasha.ReadableStreamReader",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@jsinterop.annotations.JsType(isNative = true, namespace = \"<global>\", name = \"?\")",
      "annotationType": "jsinterop.annotations.JsType",
      "attribute": "name",
      "classQualifiedName": "akasha.ReadableStreamReader",
      "classSimpleName": "ReadableStreamReader",
      "elementKind": "interface",
      "newValue": "\"?\"",
      "oldValue": "\"ReadableStreamReader\"",
      "package": "akasha"
    }
  },
  {
    "code": "java.class.added",
    "description": "Class was added.",
    "newElement": "interface akasha.SvcOutputMetadata",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.SvcOutputMetadata",
      "classSimpleName": "SvcOutputMetadata",
      "elementKind": "interface",
      "package": "akasha"
    }
  },
  {
    "code": "java.class.added",
    "description": "Class was added.",
    "newElement": "interface akasha.UnrestrictedDoubleOrDOMPointInitUnion",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.UnrestrictedDoubleOrDOMPointInitUnion",
      "classSimpleName": "UnrestrictedDoubleOrDOMPointInitUnion",
      "elementKind": "interface",
      "package": "akasha"
    }
  },
  {
    "code": "java.class.nowImplementsInterface",
    "description": "Class now implements interface 'akasha.ImageBufferSource'.",
    "element": "interface akasha.core.BufferSource",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.core.BufferSource",
      "classSimpleName": "BufferSource",
      "elementKind": "interface",
      "interface": "akasha.ImageBufferSource",
      "package": "akasha.core"
    }
  },
  {
    "code": "java.annotation.attributeValueChanged",
    "description": "Attribute 'name' of annotation 'jsinterop.annotations.JsType' changed value from '\"GPUBindingResource\"' to '\"?\"'.",
    "element": "interface akasha.gpu.GPUBindingResource",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@jsinterop.annotations.JsType(isNative = true, namespace = \"<global>\", name = \"?\")",
      "annotationType": "jsinterop.annotations.JsType",
      "attribute": "name",
      "classQualifiedName": "akasha.gpu.GPUBindingResource",
      "classSimpleName": "GPUBindingResource",
      "elementKind": "interface",
      "newValue": "\"?\"",
      "oldValue": "\"GPUBindingResource\"",
      "package": "akasha.gpu"
    }
  },
  {
    "code": "java.annotation.removed",
    "description": "Element no longer annotated with 'org.jetbrains.annotations.ApiStatus.Experimental'.",
    "element": "interface akasha.gpu.GPUBindingResource",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@org.jetbrains.annotations.ApiStatus.Experimental",
      "annotationType": "org.jetbrains.annotations.ApiStatus.Experimental",
      "classQualifiedName": "akasha.gpu.GPUBindingResource",
      "classSimpleName": "GPUBindingResource",
      "elementKind": "interface",
      "package": "akasha.gpu"
    }
  },
  {
    "code": "java.class.nowImplementsInterface",
    "description": "Class now implements interface 'akasha.gpu.GPUBindingResource'.",
    "element": "interface akasha.gpu.GPUBufferBinding",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.gpu.GPUBufferBinding",
      "classSimpleName": "GPUBufferBinding",
      "elementKind": "interface",
      "interface": "akasha.gpu.GPUBindingResource",
      "package": "akasha.gpu"
    }
  },
  {
    "code": "java.class.added",
    "description": "Class was added.",
    "newElement": "interface akasha.gpu.GPUCanvasConfiguration",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.gpu.GPUCanvasConfiguration",
      "classSimpleName": "GPUCanvasConfiguration",
      "elementKind": "interface",
      "package": "akasha.gpu"
    }
  },
  {
    "code": "java.annotation.attributeValueChanged",
    "description": "Attribute 'name' of annotation 'jsinterop.annotations.JsType' changed value from '\"GPUError\"' to '\"?\"'.",
    "element": "interface akasha.gpu.GPUError",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@jsinterop.annotations.JsType(isNative = true, namespace = \"<global>\", name = \"?\")",
      "annotationType": "jsinterop.annotations.JsType",
      "attribute": "name",
      "classQualifiedName": "akasha.gpu.GPUError",
      "classSimpleName": "GPUError",
      "elementKind": "interface",
      "newValue": "\"?\"",
      "oldValue": "\"GPUError\"",
      "package": "akasha.gpu"
    }
  },
  {
    "code": "java.annotation.removed",
    "description": "Element no longer annotated with 'org.jetbrains.annotations.ApiStatus.Experimental'.",
    "element": "interface akasha.gpu.GPUError",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@org.jetbrains.annotations.ApiStatus.Experimental",
      "annotationType": "org.jetbrains.annotations.ApiStatus.Experimental",
      "classQualifiedName": "akasha.gpu.GPUError",
      "classSimpleName": "GPUError",
      "elementKind": "interface",
      "package": "akasha.gpu"
    }
  },
  {
    "code": "java.annotation.attributeValueChanged",
    "description": "Attribute 'name' of annotation 'jsinterop.annotations.JsType' changed value from '\"XRWebGLRenderingContext\"' to '\"?\"'.",
    "element": "interface akasha.xr.XRWebGLRenderingContext",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@jsinterop.annotations.JsType(isNative = true, namespace = \"<global>\", name = \"?\")",
      "annotationType": "jsinterop.annotations.JsType",
      "attribute": "name",
      "classQualifiedName": "akasha.xr.XRWebGLRenderingContext",
      "classSimpleName": "XRWebGLRenderingContext",
      "elementKind": "interface",
      "newValue": "\"?\"",
      "oldValue": "\"XRWebGLRenderingContext\"",
      "package": "akasha.xr"
    }
  },
  {
    "code": "java.method.defaultMethodAddedToInterface",
    "description": "A default method has been added to the interface.",
    "newElement": "method akasha.CanvasRenderingContext2DSettings.Builder akasha.CanvasRenderingContext2DSettings.Builder::willReadFrequently(boolean)",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.CanvasRenderingContext2DSettings.Builder",
      "classSimpleName": "Builder",
      "elementKind": "method",
      "methodName": "willReadFrequently",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.defaultMethodAddedToInterface",
    "description": "A default method has been added to the interface.",
    "newElement": "method akasha.EncodedVideoChunkMetadata.Builder akasha.EncodedVideoChunkMetadata.Builder::svc(akasha.SvcOutputMetadata)",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.EncodedVideoChunkMetadata.Builder",
      "classSimpleName": "Builder",
      "elementKind": "method",
      "methodName": "svc",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.returnTypeChangedCovariantly",
    "description": "The return type changed covariantly from 'akasha.Element' to 'akasha.HTMLOptionElement'.",
    "newElement": "method akasha.HTMLOptionElement akasha.HTMLSelectElement::item(int)",
    "oldElement": "method akasha.Element akasha.HTMLSelectElement::item(int)",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.HTMLSelectElement",
      "classSimpleName": "HTMLSelectElement",
      "elementKind": "method",
      "methodName": "item",
      "newType": "akasha.HTMLOptionElement",
      "oldType": "akasha.Element",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.returnTypeChangedCovariantly",
    "description": "The return type changed covariantly from 'akasha.core.JsObject' to 'akasha.MimeType'.",
    "newElement": "method akasha.MimeType akasha.MimeTypeArray::item(int)",
    "oldElement": "method akasha.core.JsObject akasha.MimeTypeArray::item(int)",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.MimeTypeArray",
      "classSimpleName": "MimeTypeArray",
      "elementKind": "method",
      "methodName": "item",
      "newType": "akasha.MimeType",
      "oldType": "akasha.core.JsObject",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "newElement": "method akasha.MimeType akasha.MimeTypeArray::namedItem(java.lang.String)",
    "oldElement": "method akasha.core.JsObject akasha.MimeTypeArray::namedItem(java.lang.String)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.MimeTypeArray",
      "classSimpleName": "MimeTypeArray",
      "elementKind": "method",
      "methodName": "namedItem",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.returnTypeChangedCovariantly",
    "description": "The return type changed covariantly from 'akasha.core.JsObject' to 'akasha.MimeType'.",
    "newElement": "method akasha.MimeType akasha.MimeTypeArray::namedItem(java.lang.String)",
    "oldElement": "method akasha.core.JsObject akasha.MimeTypeArray::namedItem(java.lang.String)",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.MimeTypeArray",
      "classSimpleName": "MimeTypeArray",
      "elementKind": "method",
      "methodName": "namedItem",
      "newType": "akasha.MimeType",
      "oldType": "akasha.core.JsObject",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.added",
    "description": "Method was added.",
    "newElement": "method akasha.Navigator akasha.Window::clientInformation()",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.Window",
      "classSimpleName": "Window",
      "elementKind": "method",
      "methodName": "clientInformation",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.added",
    "description": "Method was added.",
    "newElement": "method akasha.Navigator akasha.WindowGlobal::clientInformation()",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.WindowGlobal",
      "classSimpleName": "WindowGlobal",
      "elementKind": "method",
      "methodName": "clientInformation",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.returnTypeChangedCovariantly",
    "description": "The return type changed covariantly from 'akasha.core.JsObject' to 'akasha.Plugin'.",
    "newElement": "method akasha.Plugin akasha.PluginArray::item(int)",
    "oldElement": "method akasha.core.JsObject akasha.PluginArray::item(int)",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.PluginArray",
      "classSimpleName": "PluginArray",
      "elementKind": "method",
      "methodName": "item",
      "newType": "akasha.Plugin",
      "oldType": "akasha.core.JsObject",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'javaemul.internal.annotations.HasNoSideEffects'.",
    "newElement": "method akasha.Plugin akasha.PluginArray::namedItem(java.lang.String)",
    "oldElement": "method akasha.core.JsObject akasha.PluginArray::namedItem(java.lang.String)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javaemul.internal.annotations.HasNoSideEffects",
      "annotationType": "javaemul.internal.annotations.HasNoSideEffects",
      "classQualifiedName": "akasha.PluginArray",
      "classSimpleName": "PluginArray",
      "elementKind": "method",
      "methodName": "namedItem",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.returnTypeChangedCovariantly",
    "description": "The return type changed covariantly from 'akasha.core.JsObject' to 'akasha.Plugin'.",
    "newElement": "method akasha.Plugin akasha.PluginArray::namedItem(java.lang.String)",
    "oldElement": "method akasha.core.JsObject akasha.PluginArray::namedItem(java.lang.String)",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.PluginArray",
      "classSimpleName": "PluginArray",
      "elementKind": "method",
      "methodName": "namedItem",
      "newType": "akasha.Plugin",
      "oldType": "akasha.core.JsObject",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.defaultMethodAddedToInterface",
    "description": "A default method has been added to the interface.",
    "newElement": "method akasha.SecurityPolicyViolationEventInit.Builder akasha.SecurityPolicyViolationEventInit.Builder::blockedURI(java.lang.String)",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.SecurityPolicyViolationEventInit.Builder",
      "classSimpleName": "Builder",
      "elementKind": "method",
      "methodName": "blockedURI",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.defaultMethodAddedToInterface",
    "description": "A default method has been added to the interface.",
    "newElement": "method akasha.SecurityPolicyViolationEventInit.Builder akasha.SecurityPolicyViolationEventInit.Builder::columnNumber(int)",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.SecurityPolicyViolationEventInit.Builder",
      "classSimpleName": "Builder",
      "elementKind": "method",
      "methodName": "columnNumber",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.defaultMethodAddedToInterface",
    "description": "A default method has been added to the interface.",
    "newElement": "method akasha.SecurityPolicyViolationEventInit.Builder akasha.SecurityPolicyViolationEventInit.Builder::documentURI(java.lang.String)",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.SecurityPolicyViolationEventInit.Builder",
      "classSimpleName": "Builder",
      "elementKind": "method",
      "methodName": "documentURI",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.defaultMethodAddedToInterface",
    "description": "A default method has been added to the interface.",
    "newElement": "method akasha.SecurityPolicyViolationEventInit.Builder akasha.SecurityPolicyViolationEventInit.Builder::lineNumber(int)",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.SecurityPolicyViolationEventInit.Builder",
      "classSimpleName": "Builder",
      "elementKind": "method",
      "methodName": "lineNumber",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.defaultMethodAddedToInterface",
    "description": "A default method has been added to the interface.",
    "newElement": "method akasha.SecurityPolicyViolationEventInit.Builder akasha.SecurityPolicyViolationEventInit.Builder::violatedDirective(java.lang.String)",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.SecurityPolicyViolationEventInit.Builder",
      "classSimpleName": "Builder",
      "elementKind": "method",
      "methodName": "violatedDirective",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.numberOfParametersChanged",
    "description": "The number of parameters of the method have changed.",
    "newElement": "method akasha.SecurityPolicyViolationEventInit.Builder akasha.SecurityPolicyViolationEventInit::create(java.lang.String, java.lang.String, java.lang.String, java.lang.String, int, java.lang.String)",
    "oldElement": "method akasha.SecurityPolicyViolationEventInit.Builder akasha.SecurityPolicyViolationEventInit::create(java.lang.String, java.lang.String, java.lang.String, java.lang.String, int)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.SecurityPolicyViolationEventInit",
      "classSimpleName": "SecurityPolicyViolationEventInit",
      "elementKind": "method",
      "methodName": "create",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.addedToInterface",
    "description": "Method was added to an interface.",
    "newElement": "method akasha.SvcOutputMetadata akasha.EncodedVideoChunkMetadata::svc()",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "NON_BREAKING",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.EncodedVideoChunkMetadata",
      "classSimpleName": "EncodedVideoChunkMetadata",
      "elementKind": "method",
      "methodName": "svc",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.added",
    "description": "Method was added.",
    "newElement": "method akasha.gpu.GPUExtent3D akasha.gpu.GPUSupportedLimits::maxComputeWorkgroupSize()",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.gpu.GPUSupportedLimits",
      "classSimpleName": "GPUSupportedLimits",
      "elementKind": "method",
      "methodName": "maxComputeWorkgroupSize",
      "package": "akasha.gpu"
    }
  },
  {
    "code": "java.method.numberOfParametersChanged",
    "description": "The number of parameters of the method have changed.",
    "newElement": "method akasha.gpu.GPUStorageTextureBindingLayout.Builder akasha.gpu.GPUStorageTextureBindingLayout::create(java.lang.String)",
    "oldElement": "method akasha.gpu.GPUStorageTextureBindingLayout.Builder akasha.gpu.GPUStorageTextureBindingLayout::create(java.lang.String, java.lang.String)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.gpu.GPUStorageTextureBindingLayout",
      "classSimpleName": "GPUStorageTextureBindingLayout",
      "elementKind": "method",
      "methodName": "create",
      "package": "akasha.gpu"
    }
  },
  {
    "code": "java.method.added",
    "description": "Method was added.",
    "newElement": "method akasha.promise.Promise<akasha.CSSStyleSheet> akasha.CSSStyleSheet::replace(java.lang.String)",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.CSSStyleSheet",
      "classSimpleName": "CSSStyleSheet",
      "elementKind": "method",
      "methodName": "replace",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.addedToInterface",
    "description": "Method was added to an interface.",
    "newElement": "method boolean akasha.CanvasRenderingContext2DSettings::willReadFrequently()",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "NON_BREAKING",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.CanvasRenderingContext2DSettings",
      "classSimpleName": "CanvasRenderingContext2DSettings",
      "elementKind": "method",
      "methodName": "willReadFrequently",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.added",
    "description": "Method was added.",
    "newElement": "method boolean akasha.Navigator::pdfViewerEnabled()",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.Navigator",
      "classSimpleName": "Navigator",
      "elementKind": "method",
      "methodName": "pdfViewerEnabled",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.addedToInterface",
    "description": "Method was added to an interface.",
    "newElement": "method int akasha.SecurityPolicyViolationEventInit::columnNumber()",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "NON_BREAKING",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.SecurityPolicyViolationEventInit",
      "classSimpleName": "SecurityPolicyViolationEventInit",
      "elementKind": "method",
      "methodName": "columnNumber",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.addedToInterface",
    "description": "Method was added to an interface.",
    "newElement": "method int akasha.SecurityPolicyViolationEventInit::lineNumber()",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "NON_BREAKING",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.SecurityPolicyViolationEventInit",
      "classSimpleName": "SecurityPolicyViolationEventInit",
      "elementKind": "method",
      "methodName": "lineNumber",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.addedToInterface",
    "description": "Method was added to an interface.",
    "newElement": "method java.lang.String akasha.SecurityPolicyViolationEventInit::blockedURI()",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "NON_BREAKING",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.SecurityPolicyViolationEventInit",
      "classSimpleName": "SecurityPolicyViolationEventInit",
      "elementKind": "method",
      "methodName": "blockedURI",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.addedToInterface",
    "description": "Method was added to an interface.",
    "newElement": "method java.lang.String akasha.SecurityPolicyViolationEventInit::documentURI()",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "NON_BREAKING",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.SecurityPolicyViolationEventInit",
      "classSimpleName": "SecurityPolicyViolationEventInit",
      "elementKind": "method",
      "methodName": "documentURI",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.addedToInterface",
    "description": "Method was added to an interface.",
    "newElement": "method java.lang.String akasha.SecurityPolicyViolationEventInit::violatedDirective()",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "NON_BREAKING",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.SecurityPolicyViolationEventInit",
      "classSimpleName": "SecurityPolicyViolationEventInit",
      "elementKind": "method",
      "methodName": "violatedDirective",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.removed",
    "description": "Element no longer annotated with 'javax.annotation.Nonnull'.",
    "element": "method java.lang.String akasha.gpu.GPUStorageTextureBindingLayout::access() @ akasha.gpu.GPUStorageTextureBindingLayout.Builder",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javax.annotation.Nonnull",
      "annotationType": "javax.annotation.Nonnull",
      "classQualifiedName": "akasha.gpu.GPUStorageTextureBindingLayout.Builder",
      "classSimpleName": "Builder",
      "elementKind": "method",
      "methodName": "access",
      "package": "akasha.gpu"
    }
  },
  {
    "code": "java.annotation.removed",
    "description": "Element no longer annotated with 'javax.annotation.Nonnull'.",
    "element": "method java.lang.String akasha.gpu.GPUStorageTextureBindingLayout::access()",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@javax.annotation.Nonnull",
      "annotationType": "javax.annotation.Nonnull",
      "classQualifiedName": "akasha.gpu.GPUStorageTextureBindingLayout",
      "classSimpleName": "GPUStorageTextureBindingLayout",
      "elementKind": "method",
      "methodName": "access",
      "package": "akasha.gpu"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'akasha.gpu.GPUVertexStepMode'.",
    "element": "method java.lang.String akasha.gpu.GPUVertexBufferLayout::stepMode() @ akasha.gpu.GPUVertexBufferLayout.Builder",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@akasha.gpu.GPUVertexStepMode",
      "annotationType": "akasha.gpu.GPUVertexStepMode",
      "classQualifiedName": "akasha.gpu.GPUVertexBufferLayout.Builder",
      "classSimpleName": "Builder",
      "elementKind": "method",
      "methodName": "stepMode",
      "package": "akasha.gpu"
    }
  },
  {
    "code": "java.annotation.removed",
    "description": "Element no longer annotated with 'akasha.gpu.GPUInputStepMode'.",
    "element": "method java.lang.String akasha.gpu.GPUVertexBufferLayout::stepMode() @ akasha.gpu.GPUVertexBufferLayout.Builder",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@akasha.gpu.GPUInputStepMode",
      "annotationType": "akasha.gpu.GPUInputStepMode",
      "classQualifiedName": "akasha.gpu.GPUVertexBufferLayout.Builder",
      "classSimpleName": "Builder",
      "elementKind": "method",
      "methodName": "stepMode",
      "package": "akasha.gpu"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'akasha.gpu.GPUVertexStepMode'.",
    "element": "method java.lang.String akasha.gpu.GPUVertexBufferLayout::stepMode()",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@akasha.gpu.GPUVertexStepMode",
      "annotationType": "akasha.gpu.GPUVertexStepMode",
      "classQualifiedName": "akasha.gpu.GPUVertexBufferLayout",
      "classSimpleName": "GPUVertexBufferLayout",
      "elementKind": "method",
      "methodName": "stepMode",
      "package": "akasha.gpu"
    }
  },
  {
    "code": "java.annotation.removed",
    "description": "Element no longer annotated with 'akasha.gpu.GPUInputStepMode'.",
    "element": "method java.lang.String akasha.gpu.GPUVertexBufferLayout::stepMode()",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@akasha.gpu.GPUInputStepMode",
      "annotationType": "akasha.gpu.GPUInputStepMode",
      "classQualifiedName": "akasha.gpu.GPUVertexBufferLayout",
      "classSimpleName": "GPUVertexBufferLayout",
      "elementKind": "method",
      "methodName": "stepMode",
      "package": "akasha.gpu"
    }
  },
  {
    "code": "java.method.visibilityIncreased",
    "description": "visibility increased",
    "element": "method void akasha.CSSStyleSheet::<init>()",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT"
    },
    "attachments": {
      "classQualifiedName": "akasha.CSSStyleSheet",
      "classSimpleName": "CSSStyleSheet",
      "elementKind": "constructor",
      "methodName": "<init>",
      "newVisibility": "public",
      "oldVisibility": "protected",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.added",
    "description": "Method was added.",
    "newElement": "method void akasha.CSSStyleSheet::<init>(akasha.CSSStyleSheetInit)",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.CSSStyleSheet",
      "classSimpleName": "CSSStyleSheet",
      "elementKind": "constructor",
      "methodName": "<init>",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.added",
    "description": "Method was added.",
    "newElement": "method void akasha.CSSStyleSheet::replaceSync(java.lang.String)",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.CSSStyleSheet",
      "classSimpleName": "CSSStyleSheet",
      "elementKind": "method",
      "methodName": "replaceSync",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.added",
    "description": "Method was added.",
    "newElement": "method void akasha.CanvasRenderingContext2D::roundRect(double, double, double, double, akasha.UnrestrictedDoubleOrDOMPointInitUnion[])",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.CanvasRenderingContext2D",
      "classSimpleName": "CanvasRenderingContext2D",
      "elementKind": "method",
      "methodName": "roundRect",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.added",
    "description": "Method was added.",
    "newElement": "method void akasha.CanvasRenderingContext2D::roundRect(double, double, double, double, akasha.lang.JsArray<akasha.UnrestrictedDoubleOrDOMPointInitUnion>)",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.CanvasRenderingContext2D",
      "classSimpleName": "CanvasRenderingContext2D",
      "elementKind": "method",
      "methodName": "roundRect",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.addedToInterface",
    "description": "Method was added to an interface.",
    "newElement": "method void akasha.CanvasRenderingContext2DSettings::setWillReadFrequently(boolean)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "NON_BREAKING",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.CanvasRenderingContext2DSettings",
      "classSimpleName": "CanvasRenderingContext2DSettings",
      "elementKind": "method",
      "methodName": "setWillReadFrequently",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.addedToInterface",
    "description": "Method was added to an interface.",
    "newElement": "method void akasha.EncodedVideoChunkMetadata::setSvc(akasha.SvcOutputMetadata)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "NON_BREAKING",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.EncodedVideoChunkMetadata",
      "classSimpleName": "EncodedVideoChunkMetadata",
      "elementKind": "method",
      "methodName": "setSvc",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.added",
    "description": "Method was added.",
    "newElement": "method void akasha.OffscreenCanvasRenderingContext2D::roundRect(double, double, double, double, akasha.UnrestrictedDoubleOrDOMPointInitUnion[])",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.OffscreenCanvasRenderingContext2D",
      "classSimpleName": "OffscreenCanvasRenderingContext2D",
      "elementKind": "method",
      "methodName": "roundRect",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.added",
    "description": "Method was added.",
    "newElement": "method void akasha.OffscreenCanvasRenderingContext2D::roundRect(double, double, double, double, akasha.lang.JsArray<akasha.UnrestrictedDoubleOrDOMPointInitUnion>)",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.OffscreenCanvasRenderingContext2D",
      "classSimpleName": "OffscreenCanvasRenderingContext2D",
      "elementKind": "method",
      "methodName": "roundRect",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.added",
    "description": "Method was added.",
    "newElement": "method void akasha.Path2D::roundRect(double, double, double, double, akasha.UnrestrictedDoubleOrDOMPointInitUnion[])",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.Path2D",
      "classSimpleName": "Path2D",
      "elementKind": "method",
      "methodName": "roundRect",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.added",
    "description": "Method was added.",
    "newElement": "method void akasha.Path2D::roundRect(double, double, double, double, akasha.lang.JsArray<akasha.UnrestrictedDoubleOrDOMPointInitUnion>)",
    "classification": {
      "SOURCE": "NON_BREAKING",
      "BINARY": "NON_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.Path2D",
      "classSimpleName": "Path2D",
      "elementKind": "method",
      "methodName": "roundRect",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.addedToInterface",
    "description": "Method was added to an interface.",
    "newElement": "method void akasha.SecurityPolicyViolationEventInit::setBlockedURI(java.lang.String)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "NON_BREAKING",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.SecurityPolicyViolationEventInit",
      "classSimpleName": "SecurityPolicyViolationEventInit",
      "elementKind": "method",
      "methodName": "setBlockedURI",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.addedToInterface",
    "description": "Method was added to an interface.",
    "newElement": "method void akasha.SecurityPolicyViolationEventInit::setColumnNumber(int)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "NON_BREAKING",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.SecurityPolicyViolationEventInit",
      "classSimpleName": "SecurityPolicyViolationEventInit",
      "elementKind": "method",
      "methodName": "setColumnNumber",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.addedToInterface",
    "description": "Method was added to an interface.",
    "newElement": "method void akasha.SecurityPolicyViolationEventInit::setDocumentURI(java.lang.String)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "NON_BREAKING",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.SecurityPolicyViolationEventInit",
      "classSimpleName": "SecurityPolicyViolationEventInit",
      "elementKind": "method",
      "methodName": "setDocumentURI",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.addedToInterface",
    "description": "Method was added to an interface.",
    "newElement": "method void akasha.SecurityPolicyViolationEventInit::setLineNumber(int)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "NON_BREAKING",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.SecurityPolicyViolationEventInit",
      "classSimpleName": "SecurityPolicyViolationEventInit",
      "elementKind": "method",
      "methodName": "setLineNumber",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.addedToInterface",
    "description": "Method was added to an interface.",
    "newElement": "method void akasha.SecurityPolicyViolationEventInit::setViolatedDirective(java.lang.String)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "NON_BREAKING",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.SecurityPolicyViolationEventInit",
      "classSimpleName": "SecurityPolicyViolationEventInit",
      "elementKind": "method",
      "methodName": "setViolatedDirective",
      "package": "akasha"
    }
  },
  {
    "code": "java.annotation.noLongerPresent",
    "description": "Old API referenced the annotation type but the new API version no longer does.",
    "oldElement": "@interface akasha.gpu.GPUInputStepMode",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "NON_BREAKING",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.gpu.GPUInputStepMode",
      "classSimpleName": "GPUInputStepMode",
      "elementKind": "@interface",
      "package": "akasha.gpu"
    }
  },
  {
    "code": "java.class.removed",
    "description": "Class was removed.",
    "oldElement": "class akasha.gpu.GPUPresentationContext",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.gpu.GPUPresentationContext",
      "classSimpleName": "GPUPresentationContext",
      "elementKind": "class",
      "package": "akasha.gpu"
    }
  },
  {
    "code": "java.field.removedWithConstant",
    "description": "Field with constant value has been removed.",
    "oldElement": "field akasha.PermissionName.clipboard_read",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "NON_BREAKING",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.PermissionName",
      "classSimpleName": "PermissionName",
      "elementKind": "field",
      "fieldName": "clipboard_read",
      "package": "akasha"
    }
  },
  {
    "code": "java.field.removedWithConstant",
    "description": "Field with constant value has been removed.",
    "oldElement": "field akasha.PermissionName.clipboard_write",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "NON_BREAKING",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.PermissionName",
      "classSimpleName": "PermissionName",
      "elementKind": "field",
      "fieldName": "clipboard_write",
      "package": "akasha"
    }
  },
  {
    "code": "java.field.removedWithConstant",
    "description": "Field with constant value has been removed.",
    "oldElement": "field akasha.PermissionName.speaker",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "NON_BREAKING",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.PermissionName",
      "classSimpleName": "PermissionName",
      "elementKind": "field",
      "fieldName": "speaker",
      "package": "akasha"
    }
  },
  {
    "code": "java.field.removedWithConstant",
    "description": "Field with constant value has been removed.",
    "oldElement": "field akasha.RenderContextType.gpupresent",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "NON_BREAKING",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.RenderContextType",
      "classSimpleName": "RenderContextType",
      "elementKind": "field",
      "fieldName": "gpupresent",
      "package": "akasha"
    }
  },
  {
    "code": "java.field.removedWithConstant",
    "description": "Field with constant value has been removed.",
    "oldElement": "field akasha.gpu.GPUStorageTextureAccess.read_only",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "NON_BREAKING",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.gpu.GPUStorageTextureAccess",
      "classSimpleName": "GPUStorageTextureAccess",
      "elementKind": "field",
      "fieldName": "read_only",
      "package": "akasha.gpu"
    }
  },
  {
    "code": "java.field.removedWithConstant",
    "description": "Field with constant value has been removed.",
    "oldElement": "field akasha.gpu.GPUTextureUsage.SAMPLED",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "NON_BREAKING",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.gpu.GPUTextureUsage",
      "classSimpleName": "GPUTextureUsage",
      "elementKind": "field",
      "fieldName": "SAMPLED",
      "package": "akasha.gpu"
    }
  },
  {
    "code": "java.class.removed",
    "description": "Class was removed.",
    "oldElement": "interface akasha.gpu.GPUPresentationConfiguration",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.gpu.GPUPresentationConfiguration",
      "classSimpleName": "GPUPresentationConfiguration",
      "elementKind": "interface",
      "package": "akasha.gpu"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.CanvasImageSource akasha.CanvasImageSource::of(akasha.HTMLCanvasElement)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.CanvasImageSource",
      "classSimpleName": "CanvasImageSource",
      "elementKind": "method",
      "methodName": "of",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.CanvasImageSource akasha.CanvasImageSource::of(akasha.HTMLImageElement)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.CanvasImageSource",
      "classSimpleName": "CanvasImageSource",
      "elementKind": "method",
      "methodName": "of",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.CanvasImageSource akasha.CanvasImageSource::of(akasha.HTMLOrSVGImageElement)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.CanvasImageSource",
      "classSimpleName": "CanvasImageSource",
      "elementKind": "method",
      "methodName": "of",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.CanvasImageSource akasha.CanvasImageSource::of(akasha.HTMLVideoElement)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.CanvasImageSource",
      "classSimpleName": "CanvasImageSource",
      "elementKind": "method",
      "methodName": "of",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.CanvasImageSource akasha.CanvasImageSource::of(akasha.ImageBitmap)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.CanvasImageSource",
      "classSimpleName": "CanvasImageSource",
      "elementKind": "method",
      "methodName": "of",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.CanvasImageSource akasha.CanvasImageSource::of(akasha.OffscreenCanvas)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.CanvasImageSource",
      "classSimpleName": "CanvasImageSource",
      "elementKind": "method",
      "methodName": "of",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.CanvasImageSource akasha.CanvasImageSource::of(akasha.svg.SVGImageElement)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.CanvasImageSource",
      "classSimpleName": "CanvasImageSource",
      "elementKind": "method",
      "methodName": "of",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.CanvasPattern akasha.CanvasRenderingContext2D::createPattern(akasha.HTMLCanvasElement, java.lang.String)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.CanvasRenderingContext2D",
      "classSimpleName": "CanvasRenderingContext2D",
      "elementKind": "method",
      "methodName": "createPattern",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.CanvasPattern akasha.CanvasRenderingContext2D::createPattern(akasha.HTMLImageElement, java.lang.String)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.CanvasRenderingContext2D",
      "classSimpleName": "CanvasRenderingContext2D",
      "elementKind": "method",
      "methodName": "createPattern",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.CanvasPattern akasha.CanvasRenderingContext2D::createPattern(akasha.HTMLOrSVGImageElement, java.lang.String)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.CanvasRenderingContext2D",
      "classSimpleName": "CanvasRenderingContext2D",
      "elementKind": "method",
      "methodName": "createPattern",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.CanvasPattern akasha.CanvasRenderingContext2D::createPattern(akasha.HTMLVideoElement, java.lang.String)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.CanvasRenderingContext2D",
      "classSimpleName": "CanvasRenderingContext2D",
      "elementKind": "method",
      "methodName": "createPattern",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.CanvasPattern akasha.CanvasRenderingContext2D::createPattern(akasha.ImageBitmap, java.lang.String)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.CanvasRenderingContext2D",
      "classSimpleName": "CanvasRenderingContext2D",
      "elementKind": "method",
      "methodName": "createPattern",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.CanvasPattern akasha.CanvasRenderingContext2D::createPattern(akasha.OffscreenCanvas, java.lang.String)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.CanvasRenderingContext2D",
      "classSimpleName": "CanvasRenderingContext2D",
      "elementKind": "method",
      "methodName": "createPattern",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.CanvasPattern akasha.CanvasRenderingContext2D::createPattern(akasha.svg.SVGImageElement, java.lang.String)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.CanvasRenderingContext2D",
      "classSimpleName": "CanvasRenderingContext2D",
      "elementKind": "method",
      "methodName": "createPattern",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.CanvasPattern akasha.OffscreenCanvasRenderingContext2D::createPattern(akasha.HTMLCanvasElement, java.lang.String)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.OffscreenCanvasRenderingContext2D",
      "classSimpleName": "OffscreenCanvasRenderingContext2D",
      "elementKind": "method",
      "methodName": "createPattern",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.CanvasPattern akasha.OffscreenCanvasRenderingContext2D::createPattern(akasha.HTMLImageElement, java.lang.String)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.OffscreenCanvasRenderingContext2D",
      "classSimpleName": "OffscreenCanvasRenderingContext2D",
      "elementKind": "method",
      "methodName": "createPattern",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.CanvasPattern akasha.OffscreenCanvasRenderingContext2D::createPattern(akasha.HTMLOrSVGImageElement, java.lang.String)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.OffscreenCanvasRenderingContext2D",
      "classSimpleName": "OffscreenCanvasRenderingContext2D",
      "elementKind": "method",
      "methodName": "createPattern",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.CanvasPattern akasha.OffscreenCanvasRenderingContext2D::createPattern(akasha.HTMLVideoElement, java.lang.String)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.OffscreenCanvasRenderingContext2D",
      "classSimpleName": "OffscreenCanvasRenderingContext2D",
      "elementKind": "method",
      "methodName": "createPattern",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.CanvasPattern akasha.OffscreenCanvasRenderingContext2D::createPattern(akasha.ImageBitmap, java.lang.String)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.OffscreenCanvasRenderingContext2D",
      "classSimpleName": "OffscreenCanvasRenderingContext2D",
      "elementKind": "method",
      "methodName": "createPattern",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.CanvasPattern akasha.OffscreenCanvasRenderingContext2D::createPattern(akasha.OffscreenCanvas, java.lang.String)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.OffscreenCanvasRenderingContext2D",
      "classSimpleName": "OffscreenCanvasRenderingContext2D",
      "elementKind": "method",
      "methodName": "createPattern",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.CanvasPattern akasha.OffscreenCanvasRenderingContext2D::createPattern(akasha.svg.SVGImageElement, java.lang.String)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.OffscreenCanvasRenderingContext2D",
      "classSimpleName": "OffscreenCanvasRenderingContext2D",
      "elementKind": "method",
      "methodName": "createPattern",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.CredentialCreationOptions.Builder akasha.CredentialCreationOptions.Builder::password(akasha.HTMLFormElement)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.CredentialCreationOptions.Builder",
      "classSimpleName": "Builder",
      "elementKind": "method",
      "methodName": "password",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.CredentialCreationOptions.Builder akasha.CredentialCreationOptions.Builder::password(akasha.PasswordCredentialData)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.CredentialCreationOptions.Builder",
      "classSimpleName": "Builder",
      "elementKind": "method",
      "methodName": "password",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.EncodedVideoChunkMetadata.Builder akasha.EncodedVideoChunkMetadata.Builder::temporalLayerId(int)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.EncodedVideoChunkMetadata.Builder",
      "classSimpleName": "Builder",
      "elementKind": "method",
      "methodName": "temporalLayerId",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.HTMLOrSVGImageElement akasha.HTMLOrSVGImageElement::of(akasha.HTMLImageElement)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.HTMLOrSVGImageElement",
      "classSimpleName": "HTMLOrSVGImageElement",
      "elementKind": "method",
      "methodName": "of",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.HTMLOrSVGImageElement akasha.HTMLOrSVGImageElement::of(akasha.svg.SVGImageElement)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.HTMLOrSVGImageElement",
      "classSimpleName": "HTMLOrSVGImageElement",
      "elementKind": "method",
      "methodName": "of",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.HTMLOrSVGScriptElement akasha.HTMLOrSVGScriptElement::of(akasha.HTMLScriptElement)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.HTMLOrSVGScriptElement",
      "classSimpleName": "HTMLOrSVGScriptElement",
      "elementKind": "method",
      "methodName": "of",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.HTMLOrSVGScriptElement akasha.HTMLOrSVGScriptElement::of(akasha.svg.SVGScriptElement)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.HTMLOrSVGScriptElement",
      "classSimpleName": "HTMLOrSVGScriptElement",
      "elementKind": "method",
      "methodName": "of",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.ImageBitmapSource akasha.ImageBitmapSource::of(akasha.Blob)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.ImageBitmapSource",
      "classSimpleName": "ImageBitmapSource",
      "elementKind": "method",
      "methodName": "of",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.ImageBitmapSource akasha.ImageBitmapSource::of(akasha.CanvasImageSource)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.ImageBitmapSource",
      "classSimpleName": "ImageBitmapSource",
      "elementKind": "method",
      "methodName": "of",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.ImageBitmapSource akasha.ImageBitmapSource::of(akasha.HTMLCanvasElement)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.ImageBitmapSource",
      "classSimpleName": "ImageBitmapSource",
      "elementKind": "method",
      "methodName": "of",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.ImageBitmapSource akasha.ImageBitmapSource::of(akasha.HTMLImageElement)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.ImageBitmapSource",
      "classSimpleName": "ImageBitmapSource",
      "elementKind": "method",
      "methodName": "of",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.ImageBitmapSource akasha.ImageBitmapSource::of(akasha.HTMLOrSVGImageElement)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.ImageBitmapSource",
      "classSimpleName": "ImageBitmapSource",
      "elementKind": "method",
      "methodName": "of",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.ImageBitmapSource akasha.ImageBitmapSource::of(akasha.HTMLVideoElement)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.ImageBitmapSource",
      "classSimpleName": "ImageBitmapSource",
      "elementKind": "method",
      "methodName": "of",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.ImageBitmapSource akasha.ImageBitmapSource::of(akasha.ImageBitmap)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.ImageBitmapSource",
      "classSimpleName": "ImageBitmapSource",
      "elementKind": "method",
      "methodName": "of",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.ImageBitmapSource akasha.ImageBitmapSource::of(akasha.ImageData)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.ImageBitmapSource",
      "classSimpleName": "ImageBitmapSource",
      "elementKind": "method",
      "methodName": "of",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.ImageBitmapSource akasha.ImageBitmapSource::of(akasha.OffscreenCanvas)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.ImageBitmapSource",
      "classSimpleName": "ImageBitmapSource",
      "elementKind": "method",
      "methodName": "of",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.ImageBitmapSource akasha.ImageBitmapSource::of(akasha.svg.SVGImageElement)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.ImageBitmapSource",
      "classSimpleName": "ImageBitmapSource",
      "elementKind": "method",
      "methodName": "of",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.ImageBufferSource akasha.ImageBufferSource::of(akasha.ReadableStream)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.ImageBufferSource",
      "classSimpleName": "ImageBufferSource",
      "elementKind": "method",
      "methodName": "of",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.ImageBufferSource akasha.ImageBufferSource::of(akasha.core.BufferSource)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.ImageBufferSource",
      "classSimpleName": "ImageBufferSource",
      "elementKind": "method",
      "methodName": "of",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.ImageDecoderInit.Builder akasha.ImageDecoderInit.Builder::data(akasha.ReadableStream)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.ImageDecoderInit.Builder",
      "classSimpleName": "Builder",
      "elementKind": "method",
      "methodName": "data",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.ImageDecoderInit.Builder akasha.ImageDecoderInit.Builder::data(akasha.core.BufferSource)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.ImageDecoderInit.Builder",
      "classSimpleName": "Builder",
      "elementKind": "method",
      "methodName": "data",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.ImageDecoderInit.Builder akasha.ImageDecoderInit::create(akasha.ReadableStream, java.lang.String)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.ImageDecoderInit",
      "classSimpleName": "ImageDecoderInit",
      "elementKind": "method",
      "methodName": "create",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.ImageDecoderInit.Builder akasha.ImageDecoderInit::create(akasha.core.BufferSource, java.lang.String)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.ImageDecoderInit",
      "classSimpleName": "ImageDecoderInit",
      "elementKind": "method",
      "methodName": "create",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.MessageEventInit.Builder akasha.MessageEventInit.Builder::source(akasha.MessagePort)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.MessageEventInit.Builder",
      "classSimpleName": "Builder",
      "elementKind": "method",
      "methodName": "source",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.MessageEventInit.Builder akasha.MessageEventInit.Builder::source(akasha.ServiceWorker)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.MessageEventInit.Builder",
      "classSimpleName": "Builder",
      "elementKind": "method",
      "methodName": "source",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.MessageEventInit.Builder akasha.MessageEventInit.Builder::source(akasha.Window)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.MessageEventInit.Builder",
      "classSimpleName": "Builder",
      "elementKind": "method",
      "methodName": "source",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.MessageEventSource akasha.MessageEventSource::of(akasha.MessagePort)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.MessageEventSource",
      "classSimpleName": "MessageEventSource",
      "elementKind": "method",
      "methodName": "of",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.MessageEventSource akasha.MessageEventSource::of(akasha.ServiceWorker)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.MessageEventSource",
      "classSimpleName": "MessageEventSource",
      "elementKind": "method",
      "methodName": "of",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.MessageEventSource akasha.MessageEventSource::of(akasha.Window)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.MessageEventSource",
      "classSimpleName": "MessageEventSource",
      "elementKind": "method",
      "methodName": "of",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.OffscreenRenderingContext akasha.OffscreenRenderingContext::of(akasha.ImageBitmapRenderingContext)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.OffscreenRenderingContext",
      "classSimpleName": "OffscreenRenderingContext",
      "elementKind": "method",
      "methodName": "of",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.OffscreenRenderingContext akasha.OffscreenRenderingContext::of(akasha.OffscreenCanvasRenderingContext2D)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.OffscreenRenderingContext",
      "classSimpleName": "OffscreenRenderingContext",
      "elementKind": "method",
      "methodName": "of",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.OffscreenRenderingContext akasha.OffscreenRenderingContext::of(akasha.gl.WebGL2RenderingContext)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.OffscreenRenderingContext",
      "classSimpleName": "OffscreenRenderingContext",
      "elementKind": "method",
      "methodName": "of",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.OffscreenRenderingContext akasha.OffscreenRenderingContext::of(akasha.gl.WebGLRenderingContext)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.OffscreenRenderingContext",
      "classSimpleName": "OffscreenRenderingContext",
      "elementKind": "method",
      "methodName": "of",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.PasswordCredentialInit akasha.PasswordCredentialInit::of(akasha.HTMLFormElement)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.PasswordCredentialInit",
      "classSimpleName": "PasswordCredentialInit",
      "elementKind": "method",
      "methodName": "of",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.PasswordCredentialInit akasha.PasswordCredentialInit::of(akasha.PasswordCredentialData)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.PasswordCredentialInit",
      "classSimpleName": "PasswordCredentialInit",
      "elementKind": "method",
      "methodName": "of",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.ReadableStreamController akasha.ReadableStreamController::of(akasha.ReadableByteStreamController)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.ReadableStreamController",
      "classSimpleName": "ReadableStreamController",
      "elementKind": "method",
      "methodName": "of",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.ReadableStreamController akasha.ReadableStreamController::of(akasha.ReadableStreamDefaultController)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.ReadableStreamController",
      "classSimpleName": "ReadableStreamController",
      "elementKind": "method",
      "methodName": "of",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.ReadableStreamReader akasha.ReadableStreamReader::of(akasha.ReadableStreamBYOBReader)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.ReadableStreamReader",
      "classSimpleName": "ReadableStreamReader",
      "elementKind": "method",
      "methodName": "of",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.ReadableStreamReader akasha.ReadableStreamReader::of(akasha.ReadableStreamDefaultReader)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.ReadableStreamReader",
      "classSimpleName": "ReadableStreamReader",
      "elementKind": "method",
      "methodName": "of",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.SecurityPolicyViolationEventInit.Builder akasha.SecurityPolicyViolationEventInit.Builder::blockedURL(java.lang.String)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.SecurityPolicyViolationEventInit.Builder",
      "classSimpleName": "Builder",
      "elementKind": "method",
      "methodName": "blockedURL",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.SecurityPolicyViolationEventInit.Builder akasha.SecurityPolicyViolationEventInit.Builder::colno(int)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.SecurityPolicyViolationEventInit.Builder",
      "classSimpleName": "Builder",
      "elementKind": "method",
      "methodName": "colno",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.SecurityPolicyViolationEventInit.Builder akasha.SecurityPolicyViolationEventInit.Builder::documentURL(java.lang.String)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.SecurityPolicyViolationEventInit.Builder",
      "classSimpleName": "Builder",
      "elementKind": "method",
      "methodName": "documentURL",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.SecurityPolicyViolationEventInit.Builder akasha.SecurityPolicyViolationEventInit.Builder::lineno(int)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.SecurityPolicyViolationEventInit.Builder",
      "classSimpleName": "Builder",
      "elementKind": "method",
      "methodName": "lineno",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.gpu.GPUBindGroupEntry.Builder akasha.gpu.GPUBindGroupEntry.Builder::resource(akasha.gpu.GPUBufferBinding)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.gpu.GPUBindGroupEntry.Builder",
      "classSimpleName": "Builder",
      "elementKind": "method",
      "methodName": "resource",
      "package": "akasha.gpu"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.gpu.GPUBindGroupEntry.Builder akasha.gpu.GPUBindGroupEntry.Builder::resource(akasha.gpu.GPUExternalTexture)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.gpu.GPUBindGroupEntry.Builder",
      "classSimpleName": "Builder",
      "elementKind": "method",
      "methodName": "resource",
      "package": "akasha.gpu"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.gpu.GPUBindGroupEntry.Builder akasha.gpu.GPUBindGroupEntry.Builder::resource(akasha.gpu.GPUSampler)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.gpu.GPUBindGroupEntry.Builder",
      "classSimpleName": "Builder",
      "elementKind": "method",
      "methodName": "resource",
      "package": "akasha.gpu"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.gpu.GPUBindGroupEntry.Builder akasha.gpu.GPUBindGroupEntry.Builder::resource(akasha.gpu.GPUTextureView)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.gpu.GPUBindGroupEntry.Builder",
      "classSimpleName": "Builder",
      "elementKind": "method",
      "methodName": "resource",
      "package": "akasha.gpu"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.gpu.GPUBindGroupEntry.Builder akasha.gpu.GPUBindGroupEntry::create(int, akasha.gpu.GPUBufferBinding)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.gpu.GPUBindGroupEntry",
      "classSimpleName": "GPUBindGroupEntry",
      "elementKind": "method",
      "methodName": "create",
      "package": "akasha.gpu"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.gpu.GPUBindGroupEntry.Builder akasha.gpu.GPUBindGroupEntry::create(int, akasha.gpu.GPUExternalTexture)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.gpu.GPUBindGroupEntry",
      "classSimpleName": "GPUBindGroupEntry",
      "elementKind": "method",
      "methodName": "create",
      "package": "akasha.gpu"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.gpu.GPUBindGroupEntry.Builder akasha.gpu.GPUBindGroupEntry::create(int, akasha.gpu.GPUSampler)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.gpu.GPUBindGroupEntry",
      "classSimpleName": "GPUBindGroupEntry",
      "elementKind": "method",
      "methodName": "create",
      "package": "akasha.gpu"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.gpu.GPUBindGroupEntry.Builder akasha.gpu.GPUBindGroupEntry::create(int, akasha.gpu.GPUTextureView)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.gpu.GPUBindGroupEntry",
      "classSimpleName": "GPUBindGroupEntry",
      "elementKind": "method",
      "methodName": "create",
      "package": "akasha.gpu"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.gpu.GPUBindingResource akasha.gpu.GPUBindingResource::of(akasha.gpu.GPUBufferBinding)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.gpu.GPUBindingResource",
      "classSimpleName": "GPUBindingResource",
      "elementKind": "method",
      "methodName": "of",
      "package": "akasha.gpu"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.gpu.GPUBindingResource akasha.gpu.GPUBindingResource::of(akasha.gpu.GPUExternalTexture)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.gpu.GPUBindingResource",
      "classSimpleName": "GPUBindingResource",
      "elementKind": "method",
      "methodName": "of",
      "package": "akasha.gpu"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.gpu.GPUBindingResource akasha.gpu.GPUBindingResource::of(akasha.gpu.GPUSampler)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.gpu.GPUBindingResource",
      "classSimpleName": "GPUBindingResource",
      "elementKind": "method",
      "methodName": "of",
      "package": "akasha.gpu"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.gpu.GPUBindingResource akasha.gpu.GPUBindingResource::of(akasha.gpu.GPUTextureView)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.gpu.GPUBindingResource",
      "classSimpleName": "GPUBindingResource",
      "elementKind": "method",
      "methodName": "of",
      "package": "akasha.gpu"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.gpu.GPUError akasha.gpu.GPUError::of(akasha.gpu.GPUOutOfMemoryError)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.gpu.GPUError",
      "classSimpleName": "GPUError",
      "elementKind": "method",
      "methodName": "of",
      "package": "akasha.gpu"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.gpu.GPUError akasha.gpu.GPUError::of(akasha.gpu.GPUValidationError)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.gpu.GPUError",
      "classSimpleName": "GPUError",
      "elementKind": "method",
      "methodName": "of",
      "package": "akasha.gpu"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.gpu.GPUUncapturedErrorEventInit.Builder akasha.gpu.GPUUncapturedErrorEventInit.Builder::error(akasha.gpu.GPUOutOfMemoryError)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.gpu.GPUUncapturedErrorEventInit.Builder",
      "classSimpleName": "Builder",
      "elementKind": "method",
      "methodName": "error",
      "package": "akasha.gpu"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.gpu.GPUUncapturedErrorEventInit.Builder akasha.gpu.GPUUncapturedErrorEventInit.Builder::error(akasha.gpu.GPUValidationError)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.gpu.GPUUncapturedErrorEventInit.Builder",
      "classSimpleName": "Builder",
      "elementKind": "method",
      "methodName": "error",
      "package": "akasha.gpu"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.gpu.GPUUncapturedErrorEventInit.Builder akasha.gpu.GPUUncapturedErrorEventInit::create(akasha.gpu.GPUOutOfMemoryError)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.gpu.GPUUncapturedErrorEventInit",
      "classSimpleName": "GPUUncapturedErrorEventInit",
      "elementKind": "method",
      "methodName": "create",
      "package": "akasha.gpu"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.gpu.GPUUncapturedErrorEventInit.Builder akasha.gpu.GPUUncapturedErrorEventInit::create(akasha.gpu.GPUValidationError)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.gpu.GPUUncapturedErrorEventInit",
      "classSimpleName": "GPUUncapturedErrorEventInit",
      "elementKind": "method",
      "methodName": "create",
      "package": "akasha.gpu"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.promise.Promise<akasha.ImageBitmap> akasha.Window::createImageBitmap(akasha.Blob)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.Window",
      "classSimpleName": "Window",
      "elementKind": "method",
      "methodName": "createImageBitmap",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.promise.Promise<akasha.ImageBitmap> akasha.Window::createImageBitmap(akasha.Blob, akasha.ImageBitmapOptions)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.Window",
      "classSimpleName": "Window",
      "elementKind": "method",
      "methodName": "createImageBitmap",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.promise.Promise<akasha.ImageBitmap> akasha.Window::createImageBitmap(akasha.Blob, int, int, int, int)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.Window",
      "classSimpleName": "Window",
      "elementKind": "method",
      "methodName": "createImageBitmap",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.promise.Promise<akasha.ImageBitmap> akasha.Window::createImageBitmap(akasha.Blob, int, int, int, int, akasha.ImageBitmapOptions)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.Window",
      "classSimpleName": "Window",
      "elementKind": "method",
      "methodName": "createImageBitmap",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.promise.Promise<akasha.ImageBitmap> akasha.Window::createImageBitmap(akasha.CanvasImageSource)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.Window",
      "classSimpleName": "Window",
      "elementKind": "method",
      "methodName": "createImageBitmap",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.promise.Promise<akasha.ImageBitmap> akasha.Window::createImageBitmap(akasha.CanvasImageSource, akasha.ImageBitmapOptions)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.Window",
      "classSimpleName": "Window",
      "elementKind": "method",
      "methodName": "createImageBitmap",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.promise.Promise<akasha.ImageBitmap> akasha.Window::createImageBitmap(akasha.CanvasImageSource, int, int, int, int)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.Window",
      "classSimpleName": "Window",
      "elementKind": "method",
      "methodName": "createImageBitmap",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.promise.Promise<akasha.ImageBitmap> akasha.Window::createImageBitmap(akasha.CanvasImageSource, int, int, int, int, akasha.ImageBitmapOptions)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.Window",
      "classSimpleName": "Window",
      "elementKind": "method",
      "methodName": "createImageBitmap",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.promise.Promise<akasha.ImageBitmap> akasha.Window::createImageBitmap(akasha.HTMLCanvasElement)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.Window",
      "classSimpleName": "Window",
      "elementKind": "method",
      "methodName": "createImageBitmap",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.promise.Promise<akasha.ImageBitmap> akasha.Window::createImageBitmap(akasha.HTMLCanvasElement, akasha.ImageBitmapOptions)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.Window",
      "classSimpleName": "Window",
      "elementKind": "method",
      "methodName": "createImageBitmap",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.promise.Promise<akasha.ImageBitmap> akasha.Window::createImageBitmap(akasha.HTMLCanvasElement, int, int, int, int)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.Window",
      "classSimpleName": "Window",
      "elementKind": "method",
      "methodName": "createImageBitmap",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.promise.Promise<akasha.ImageBitmap> akasha.Window::createImageBitmap(akasha.HTMLCanvasElement, int, int, int, int, akasha.ImageBitmapOptions)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.Window",
      "classSimpleName": "Window",
      "elementKind": "method",
      "methodName": "createImageBitmap",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.promise.Promise<akasha.ImageBitmap> akasha.Window::createImageBitmap(akasha.HTMLImageElement)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.Window",
      "classSimpleName": "Window",
      "elementKind": "method",
      "methodName": "createImageBitmap",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.promise.Promise<akasha.ImageBitmap> akasha.Window::createImageBitmap(akasha.HTMLImageElement, akasha.ImageBitmapOptions)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.Window",
      "classSimpleName": "Window",
      "elementKind": "method",
      "methodName": "createImageBitmap",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.promise.Promise<akasha.ImageBitmap> akasha.Window::createImageBitmap(akasha.HTMLImageElement, int, int, int, int)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.Window",
      "classSimpleName": "Window",
      "elementKind": "method",
      "methodName": "createImageBitmap",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.promise.Promise<akasha.ImageBitmap> akasha.Window::createImageBitmap(akasha.HTMLImageElement, int, int, int, int, akasha.ImageBitmapOptions)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.Window",
      "classSimpleName": "Window",
      "elementKind": "method",
      "methodName": "createImageBitmap",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.promise.Promise<akasha.ImageBitmap> akasha.Window::createImageBitmap(akasha.HTMLOrSVGImageElement)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.Window",
      "classSimpleName": "Window",
      "elementKind": "method",
      "methodName": "createImageBitmap",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.promise.Promise<akasha.ImageBitmap> akasha.Window::createImageBitmap(akasha.HTMLOrSVGImageElement, akasha.ImageBitmapOptions)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.Window",
      "classSimpleName": "Window",
      "elementKind": "method",
      "methodName": "createImageBitmap",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.promise.Promise<akasha.ImageBitmap> akasha.Window::createImageBitmap(akasha.HTMLOrSVGImageElement, int, int, int, int)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.Window",
      "classSimpleName": "Window",
      "elementKind": "method",
      "methodName": "createImageBitmap",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.promise.Promise<akasha.ImageBitmap> akasha.Window::createImageBitmap(akasha.HTMLOrSVGImageElement, int, int, int, int, akasha.ImageBitmapOptions)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.Window",
      "classSimpleName": "Window",
      "elementKind": "method",
      "methodName": "createImageBitmap",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.promise.Promise<akasha.ImageBitmap> akasha.Window::createImageBitmap(akasha.HTMLVideoElement)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.Window",
      "classSimpleName": "Window",
      "elementKind": "method",
      "methodName": "createImageBitmap",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.promise.Promise<akasha.ImageBitmap> akasha.Window::createImageBitmap(akasha.HTMLVideoElement, akasha.ImageBitmapOptions)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.Window",
      "classSimpleName": "Window",
      "elementKind": "method",
      "methodName": "createImageBitmap",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.promise.Promise<akasha.ImageBitmap> akasha.Window::createImageBitmap(akasha.HTMLVideoElement, int, int, int, int)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.Window",
      "classSimpleName": "Window",
      "elementKind": "method",
      "methodName": "createImageBitmap",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.promise.Promise<akasha.ImageBitmap> akasha.Window::createImageBitmap(akasha.HTMLVideoElement, int, int, int, int, akasha.ImageBitmapOptions)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.Window",
      "classSimpleName": "Window",
      "elementKind": "method",
      "methodName": "createImageBitmap",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.promise.Promise<akasha.ImageBitmap> akasha.Window::createImageBitmap(akasha.ImageBitmap)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.Window",
      "classSimpleName": "Window",
      "elementKind": "method",
      "methodName": "createImageBitmap",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.promise.Promise<akasha.ImageBitmap> akasha.Window::createImageBitmap(akasha.ImageBitmap, akasha.ImageBitmapOptions)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.Window",
      "classSimpleName": "Window",
      "elementKind": "method",
      "methodName": "createImageBitmap",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.promise.Promise<akasha.ImageBitmap> akasha.Window::createImageBitmap(akasha.ImageBitmap, int, int, int, int)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.Window",
      "classSimpleName": "Window",
      "elementKind": "method",
      "methodName": "createImageBitmap",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.promise.Promise<akasha.ImageBitmap> akasha.Window::createImageBitmap(akasha.ImageBitmap, int, int, int, int, akasha.ImageBitmapOptions)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.Window",
      "classSimpleName": "Window",
      "elementKind": "method",
      "methodName": "createImageBitmap",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.promise.Promise<akasha.ImageBitmap> akasha.Window::createImageBitmap(akasha.ImageData)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.Window",
      "classSimpleName": "Window",
      "elementKind": "method",
      "methodName": "createImageBitmap",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.promise.Promise<akasha.ImageBitmap> akasha.Window::createImageBitmap(akasha.ImageData, akasha.ImageBitmapOptions)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.Window",
      "classSimpleName": "Window",
      "elementKind": "method",
      "methodName": "createImageBitmap",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.promise.Promise<akasha.ImageBitmap> akasha.Window::createImageBitmap(akasha.ImageData, int, int, int, int)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.Window",
      "classSimpleName": "Window",
      "elementKind": "method",
      "methodName": "createImageBitmap",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.promise.Promise<akasha.ImageBitmap> akasha.Window::createImageBitmap(akasha.ImageData, int, int, int, int, akasha.ImageBitmapOptions)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.Window",
      "classSimpleName": "Window",
      "elementKind": "method",
      "methodName": "createImageBitmap",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.promise.Promise<akasha.ImageBitmap> akasha.Window::createImageBitmap(akasha.OffscreenCanvas)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.Window",
      "classSimpleName": "Window",
      "elementKind": "method",
      "methodName": "createImageBitmap",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.promise.Promise<akasha.ImageBitmap> akasha.Window::createImageBitmap(akasha.OffscreenCanvas, akasha.ImageBitmapOptions)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.Window",
      "classSimpleName": "Window",
      "elementKind": "method",
      "methodName": "createImageBitmap",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.promise.Promise<akasha.ImageBitmap> akasha.Window::createImageBitmap(akasha.OffscreenCanvas, int, int, int, int)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.Window",
      "classSimpleName": "Window",
      "elementKind": "method",
      "methodName": "createImageBitmap",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.promise.Promise<akasha.ImageBitmap> akasha.Window::createImageBitmap(akasha.OffscreenCanvas, int, int, int, int, akasha.ImageBitmapOptions)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.Window",
      "classSimpleName": "Window",
      "elementKind": "method",
      "methodName": "createImageBitmap",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.promise.Promise<akasha.ImageBitmap> akasha.Window::createImageBitmap(akasha.svg.SVGImageElement)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.Window",
      "classSimpleName": "Window",
      "elementKind": "method",
      "methodName": "createImageBitmap",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.promise.Promise<akasha.ImageBitmap> akasha.Window::createImageBitmap(akasha.svg.SVGImageElement, akasha.ImageBitmapOptions)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.Window",
      "classSimpleName": "Window",
      "elementKind": "method",
      "methodName": "createImageBitmap",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.promise.Promise<akasha.ImageBitmap> akasha.Window::createImageBitmap(akasha.svg.SVGImageElement, int, int, int, int)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.Window",
      "classSimpleName": "Window",
      "elementKind": "method",
      "methodName": "createImageBitmap",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.promise.Promise<akasha.ImageBitmap> akasha.Window::createImageBitmap(akasha.svg.SVGImageElement, int, int, int, int, akasha.ImageBitmapOptions)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.Window",
      "classSimpleName": "Window",
      "elementKind": "method",
      "methodName": "createImageBitmap",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.promise.Promise<akasha.ImageBitmap> akasha.WindowGlobal::createImageBitmap(akasha.Blob)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.WindowGlobal",
      "classSimpleName": "WindowGlobal",
      "elementKind": "method",
      "methodName": "createImageBitmap",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.promise.Promise<akasha.ImageBitmap> akasha.WindowGlobal::createImageBitmap(akasha.Blob, akasha.ImageBitmapOptions)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.WindowGlobal",
      "classSimpleName": "WindowGlobal",
      "elementKind": "method",
      "methodName": "createImageBitmap",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.promise.Promise<akasha.ImageBitmap> akasha.WindowGlobal::createImageBitmap(akasha.Blob, int, int, int, int)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.WindowGlobal",
      "classSimpleName": "WindowGlobal",
      "elementKind": "method",
      "methodName": "createImageBitmap",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.promise.Promise<akasha.ImageBitmap> akasha.WindowGlobal::createImageBitmap(akasha.Blob, int, int, int, int, akasha.ImageBitmapOptions)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.WindowGlobal",
      "classSimpleName": "WindowGlobal",
      "elementKind": "method",
      "methodName": "createImageBitmap",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.promise.Promise<akasha.ImageBitmap> akasha.WindowGlobal::createImageBitmap(akasha.CanvasImageSource)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.WindowGlobal",
      "classSimpleName": "WindowGlobal",
      "elementKind": "method",
      "methodName": "createImageBitmap",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.promise.Promise<akasha.ImageBitmap> akasha.WindowGlobal::createImageBitmap(akasha.CanvasImageSource, akasha.ImageBitmapOptions)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.WindowGlobal",
      "classSimpleName": "WindowGlobal",
      "elementKind": "method",
      "methodName": "createImageBitmap",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.promise.Promise<akasha.ImageBitmap> akasha.WindowGlobal::createImageBitmap(akasha.CanvasImageSource, int, int, int, int)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.WindowGlobal",
      "classSimpleName": "WindowGlobal",
      "elementKind": "method",
      "methodName": "createImageBitmap",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.promise.Promise<akasha.ImageBitmap> akasha.WindowGlobal::createImageBitmap(akasha.CanvasImageSource, int, int, int, int, akasha.ImageBitmapOptions)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.WindowGlobal",
      "classSimpleName": "WindowGlobal",
      "elementKind": "method",
      "methodName": "createImageBitmap",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.promise.Promise<akasha.ImageBitmap> akasha.WindowGlobal::createImageBitmap(akasha.HTMLCanvasElement)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.WindowGlobal",
      "classSimpleName": "WindowGlobal",
      "elementKind": "method",
      "methodName": "createImageBitmap",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.promise.Promise<akasha.ImageBitmap> akasha.WindowGlobal::createImageBitmap(akasha.HTMLCanvasElement, akasha.ImageBitmapOptions)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.WindowGlobal",
      "classSimpleName": "WindowGlobal",
      "elementKind": "method",
      "methodName": "createImageBitmap",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.promise.Promise<akasha.ImageBitmap> akasha.WindowGlobal::createImageBitmap(akasha.HTMLCanvasElement, int, int, int, int)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.WindowGlobal",
      "classSimpleName": "WindowGlobal",
      "elementKind": "method",
      "methodName": "createImageBitmap",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.promise.Promise<akasha.ImageBitmap> akasha.WindowGlobal::createImageBitmap(akasha.HTMLCanvasElement, int, int, int, int, akasha.ImageBitmapOptions)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.WindowGlobal",
      "classSimpleName": "WindowGlobal",
      "elementKind": "method",
      "methodName": "createImageBitmap",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.promise.Promise<akasha.ImageBitmap> akasha.WindowGlobal::createImageBitmap(akasha.HTMLImageElement)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.WindowGlobal",
      "classSimpleName": "WindowGlobal",
      "elementKind": "method",
      "methodName": "createImageBitmap",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.promise.Promise<akasha.ImageBitmap> akasha.WindowGlobal::createImageBitmap(akasha.HTMLImageElement, akasha.ImageBitmapOptions)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.WindowGlobal",
      "classSimpleName": "WindowGlobal",
      "elementKind": "method",
      "methodName": "createImageBitmap",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.promise.Promise<akasha.ImageBitmap> akasha.WindowGlobal::createImageBitmap(akasha.HTMLImageElement, int, int, int, int)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.WindowGlobal",
      "classSimpleName": "WindowGlobal",
      "elementKind": "method",
      "methodName": "createImageBitmap",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.promise.Promise<akasha.ImageBitmap> akasha.WindowGlobal::createImageBitmap(akasha.HTMLImageElement, int, int, int, int, akasha.ImageBitmapOptions)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.WindowGlobal",
      "classSimpleName": "WindowGlobal",
      "elementKind": "method",
      "methodName": "createImageBitmap",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.promise.Promise<akasha.ImageBitmap> akasha.WindowGlobal::createImageBitmap(akasha.HTMLOrSVGImageElement)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.WindowGlobal",
      "classSimpleName": "WindowGlobal",
      "elementKind": "method",
      "methodName": "createImageBitmap",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.promise.Promise<akasha.ImageBitmap> akasha.WindowGlobal::createImageBitmap(akasha.HTMLOrSVGImageElement, akasha.ImageBitmapOptions)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.WindowGlobal",
      "classSimpleName": "WindowGlobal",
      "elementKind": "method",
      "methodName": "createImageBitmap",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.promise.Promise<akasha.ImageBitmap> akasha.WindowGlobal::createImageBitmap(akasha.HTMLOrSVGImageElement, int, int, int, int)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.WindowGlobal",
      "classSimpleName": "WindowGlobal",
      "elementKind": "method",
      "methodName": "createImageBitmap",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.promise.Promise<akasha.ImageBitmap> akasha.WindowGlobal::createImageBitmap(akasha.HTMLOrSVGImageElement, int, int, int, int, akasha.ImageBitmapOptions)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.WindowGlobal",
      "classSimpleName": "WindowGlobal",
      "elementKind": "method",
      "methodName": "createImageBitmap",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.promise.Promise<akasha.ImageBitmap> akasha.WindowGlobal::createImageBitmap(akasha.HTMLVideoElement)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.WindowGlobal",
      "classSimpleName": "WindowGlobal",
      "elementKind": "method",
      "methodName": "createImageBitmap",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.promise.Promise<akasha.ImageBitmap> akasha.WindowGlobal::createImageBitmap(akasha.HTMLVideoElement, akasha.ImageBitmapOptions)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.WindowGlobal",
      "classSimpleName": "WindowGlobal",
      "elementKind": "method",
      "methodName": "createImageBitmap",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.promise.Promise<akasha.ImageBitmap> akasha.WindowGlobal::createImageBitmap(akasha.HTMLVideoElement, int, int, int, int)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.WindowGlobal",
      "classSimpleName": "WindowGlobal",
      "elementKind": "method",
      "methodName": "createImageBitmap",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.promise.Promise<akasha.ImageBitmap> akasha.WindowGlobal::createImageBitmap(akasha.HTMLVideoElement, int, int, int, int, akasha.ImageBitmapOptions)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.WindowGlobal",
      "classSimpleName": "WindowGlobal",
      "elementKind": "method",
      "methodName": "createImageBitmap",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.promise.Promise<akasha.ImageBitmap> akasha.WindowGlobal::createImageBitmap(akasha.ImageBitmap)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.WindowGlobal",
      "classSimpleName": "WindowGlobal",
      "elementKind": "method",
      "methodName": "createImageBitmap",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.promise.Promise<akasha.ImageBitmap> akasha.WindowGlobal::createImageBitmap(akasha.ImageBitmap, akasha.ImageBitmapOptions)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.WindowGlobal",
      "classSimpleName": "WindowGlobal",
      "elementKind": "method",
      "methodName": "createImageBitmap",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.promise.Promise<akasha.ImageBitmap> akasha.WindowGlobal::createImageBitmap(akasha.ImageBitmap, int, int, int, int)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.WindowGlobal",
      "classSimpleName": "WindowGlobal",
      "elementKind": "method",
      "methodName": "createImageBitmap",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.promise.Promise<akasha.ImageBitmap> akasha.WindowGlobal::createImageBitmap(akasha.ImageBitmap, int, int, int, int, akasha.ImageBitmapOptions)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.WindowGlobal",
      "classSimpleName": "WindowGlobal",
      "elementKind": "method",
      "methodName": "createImageBitmap",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.promise.Promise<akasha.ImageBitmap> akasha.WindowGlobal::createImageBitmap(akasha.ImageData)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.WindowGlobal",
      "classSimpleName": "WindowGlobal",
      "elementKind": "method",
      "methodName": "createImageBitmap",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.promise.Promise<akasha.ImageBitmap> akasha.WindowGlobal::createImageBitmap(akasha.ImageData, akasha.ImageBitmapOptions)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.WindowGlobal",
      "classSimpleName": "WindowGlobal",
      "elementKind": "method",
      "methodName": "createImageBitmap",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.promise.Promise<akasha.ImageBitmap> akasha.WindowGlobal::createImageBitmap(akasha.ImageData, int, int, int, int)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.WindowGlobal",
      "classSimpleName": "WindowGlobal",
      "elementKind": "method",
      "methodName": "createImageBitmap",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.promise.Promise<akasha.ImageBitmap> akasha.WindowGlobal::createImageBitmap(akasha.ImageData, int, int, int, int, akasha.ImageBitmapOptions)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.WindowGlobal",
      "classSimpleName": "WindowGlobal",
      "elementKind": "method",
      "methodName": "createImageBitmap",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.promise.Promise<akasha.ImageBitmap> akasha.WindowGlobal::createImageBitmap(akasha.OffscreenCanvas)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.WindowGlobal",
      "classSimpleName": "WindowGlobal",
      "elementKind": "method",
      "methodName": "createImageBitmap",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.promise.Promise<akasha.ImageBitmap> akasha.WindowGlobal::createImageBitmap(akasha.OffscreenCanvas, akasha.ImageBitmapOptions)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.WindowGlobal",
      "classSimpleName": "WindowGlobal",
      "elementKind": "method",
      "methodName": "createImageBitmap",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.promise.Promise<akasha.ImageBitmap> akasha.WindowGlobal::createImageBitmap(akasha.OffscreenCanvas, int, int, int, int)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.WindowGlobal",
      "classSimpleName": "WindowGlobal",
      "elementKind": "method",
      "methodName": "createImageBitmap",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.promise.Promise<akasha.ImageBitmap> akasha.WindowGlobal::createImageBitmap(akasha.OffscreenCanvas, int, int, int, int, akasha.ImageBitmapOptions)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.WindowGlobal",
      "classSimpleName": "WindowGlobal",
      "elementKind": "method",
      "methodName": "createImageBitmap",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.promise.Promise<akasha.ImageBitmap> akasha.WindowGlobal::createImageBitmap(akasha.svg.SVGImageElement)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.WindowGlobal",
      "classSimpleName": "WindowGlobal",
      "elementKind": "method",
      "methodName": "createImageBitmap",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.promise.Promise<akasha.ImageBitmap> akasha.WindowGlobal::createImageBitmap(akasha.svg.SVGImageElement, akasha.ImageBitmapOptions)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.WindowGlobal",
      "classSimpleName": "WindowGlobal",
      "elementKind": "method",
      "methodName": "createImageBitmap",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.promise.Promise<akasha.ImageBitmap> akasha.WindowGlobal::createImageBitmap(akasha.svg.SVGImageElement, int, int, int, int)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.WindowGlobal",
      "classSimpleName": "WindowGlobal",
      "elementKind": "method",
      "methodName": "createImageBitmap",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.promise.Promise<akasha.ImageBitmap> akasha.WindowGlobal::createImageBitmap(akasha.svg.SVGImageElement, int, int, int, int, akasha.ImageBitmapOptions)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.WindowGlobal",
      "classSimpleName": "WindowGlobal",
      "elementKind": "method",
      "methodName": "createImageBitmap",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.xr.XRWebGLRenderingContext akasha.xr.XRWebGLRenderingContext::of(akasha.gl.WebGL2RenderingContext)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.xr.XRWebGLRenderingContext",
      "classSimpleName": "XRWebGLRenderingContext",
      "elementKind": "method",
      "methodName": "of",
      "package": "akasha.xr"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method akasha.xr.XRWebGLRenderingContext akasha.xr.XRWebGLRenderingContext::of(akasha.gl.WebGLRenderingContext)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.xr.XRWebGLRenderingContext",
      "classSimpleName": "XRWebGLRenderingContext",
      "elementKind": "method",
      "methodName": "of",
      "package": "akasha.xr"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method int akasha.EncodedVideoChunkMetadata::temporalLayerId()",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.EncodedVideoChunkMetadata",
      "classSimpleName": "EncodedVideoChunkMetadata",
      "elementKind": "method",
      "methodName": "temporalLayerId",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method int akasha.SecurityPolicyViolationEvent::colno()",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.SecurityPolicyViolationEvent",
      "classSimpleName": "SecurityPolicyViolationEvent",
      "elementKind": "method",
      "methodName": "colno",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method int akasha.SecurityPolicyViolationEvent::lineno()",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.SecurityPolicyViolationEvent",
      "classSimpleName": "SecurityPolicyViolationEvent",
      "elementKind": "method",
      "methodName": "lineno",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method int akasha.SecurityPolicyViolationEventInit::colno()",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.SecurityPolicyViolationEventInit",
      "classSimpleName": "SecurityPolicyViolationEventInit",
      "elementKind": "method",
      "methodName": "colno",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method int akasha.SecurityPolicyViolationEventInit::lineno()",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.SecurityPolicyViolationEventInit",
      "classSimpleName": "SecurityPolicyViolationEventInit",
      "elementKind": "method",
      "methodName": "lineno",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method java.lang.String akasha.SecurityPolicyViolationEvent::blockedURL()",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.SecurityPolicyViolationEvent",
      "classSimpleName": "SecurityPolicyViolationEvent",
      "elementKind": "method",
      "methodName": "blockedURL",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method java.lang.String akasha.SecurityPolicyViolationEvent::documentURL()",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.SecurityPolicyViolationEvent",
      "classSimpleName": "SecurityPolicyViolationEvent",
      "elementKind": "method",
      "methodName": "documentURL",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method java.lang.String akasha.SecurityPolicyViolationEventInit::blockedURL()",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.SecurityPolicyViolationEventInit",
      "classSimpleName": "SecurityPolicyViolationEventInit",
      "elementKind": "method",
      "methodName": "blockedURL",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method java.lang.String akasha.SecurityPolicyViolationEventInit::documentURL()",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.SecurityPolicyViolationEventInit",
      "classSimpleName": "SecurityPolicyViolationEventInit",
      "elementKind": "method",
      "methodName": "documentURL",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method void akasha.CanvasRenderingContext2D::drawImage(akasha.HTMLCanvasElement, double, double)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.CanvasRenderingContext2D",
      "classSimpleName": "CanvasRenderingContext2D",
      "elementKind": "method",
      "methodName": "drawImage",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method void akasha.CanvasRenderingContext2D::drawImage(akasha.HTMLCanvasElement, double, double, double, double)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.CanvasRenderingContext2D",
      "classSimpleName": "CanvasRenderingContext2D",
      "elementKind": "method",
      "methodName": "drawImage",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method void akasha.CanvasRenderingContext2D::drawImage(akasha.HTMLCanvasElement, double, double, double, double, double, double, double, double)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.CanvasRenderingContext2D",
      "classSimpleName": "CanvasRenderingContext2D",
      "elementKind": "method",
      "methodName": "drawImage",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method void akasha.CanvasRenderingContext2D::drawImage(akasha.HTMLImageElement, double, double)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.CanvasRenderingContext2D",
      "classSimpleName": "CanvasRenderingContext2D",
      "elementKind": "method",
      "methodName": "drawImage",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method void akasha.CanvasRenderingContext2D::drawImage(akasha.HTMLImageElement, double, double, double, double)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.CanvasRenderingContext2D",
      "classSimpleName": "CanvasRenderingContext2D",
      "elementKind": "method",
      "methodName": "drawImage",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method void akasha.CanvasRenderingContext2D::drawImage(akasha.HTMLImageElement, double, double, double, double, double, double, double, double)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.CanvasRenderingContext2D",
      "classSimpleName": "CanvasRenderingContext2D",
      "elementKind": "method",
      "methodName": "drawImage",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method void akasha.CanvasRenderingContext2D::drawImage(akasha.HTMLOrSVGImageElement, double, double)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.CanvasRenderingContext2D",
      "classSimpleName": "CanvasRenderingContext2D",
      "elementKind": "method",
      "methodName": "drawImage",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method void akasha.CanvasRenderingContext2D::drawImage(akasha.HTMLOrSVGImageElement, double, double, double, double)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.CanvasRenderingContext2D",
      "classSimpleName": "CanvasRenderingContext2D",
      "elementKind": "method",
      "methodName": "drawImage",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method void akasha.CanvasRenderingContext2D::drawImage(akasha.HTMLOrSVGImageElement, double, double, double, double, double, double, double, double)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.CanvasRenderingContext2D",
      "classSimpleName": "CanvasRenderingContext2D",
      "elementKind": "method",
      "methodName": "drawImage",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method void akasha.CanvasRenderingContext2D::drawImage(akasha.HTMLVideoElement, double, double)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.CanvasRenderingContext2D",
      "classSimpleName": "CanvasRenderingContext2D",
      "elementKind": "method",
      "methodName": "drawImage",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method void akasha.CanvasRenderingContext2D::drawImage(akasha.HTMLVideoElement, double, double, double, double)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.CanvasRenderingContext2D",
      "classSimpleName": "CanvasRenderingContext2D",
      "elementKind": "method",
      "methodName": "drawImage",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method void akasha.CanvasRenderingContext2D::drawImage(akasha.HTMLVideoElement, double, double, double, double, double, double, double, double)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.CanvasRenderingContext2D",
      "classSimpleName": "CanvasRenderingContext2D",
      "elementKind": "method",
      "methodName": "drawImage",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method void akasha.CanvasRenderingContext2D::drawImage(akasha.ImageBitmap, double, double)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.CanvasRenderingContext2D",
      "classSimpleName": "CanvasRenderingContext2D",
      "elementKind": "method",
      "methodName": "drawImage",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method void akasha.CanvasRenderingContext2D::drawImage(akasha.ImageBitmap, double, double, double, double)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.CanvasRenderingContext2D",
      "classSimpleName": "CanvasRenderingContext2D",
      "elementKind": "method",
      "methodName": "drawImage",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method void akasha.CanvasRenderingContext2D::drawImage(akasha.ImageBitmap, double, double, double, double, double, double, double, double)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.CanvasRenderingContext2D",
      "classSimpleName": "CanvasRenderingContext2D",
      "elementKind": "method",
      "methodName": "drawImage",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method void akasha.CanvasRenderingContext2D::drawImage(akasha.OffscreenCanvas, double, double)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.CanvasRenderingContext2D",
      "classSimpleName": "CanvasRenderingContext2D",
      "elementKind": "method",
      "methodName": "drawImage",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method void akasha.CanvasRenderingContext2D::drawImage(akasha.OffscreenCanvas, double, double, double, double)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.CanvasRenderingContext2D",
      "classSimpleName": "CanvasRenderingContext2D",
      "elementKind": "method",
      "methodName": "drawImage",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method void akasha.CanvasRenderingContext2D::drawImage(akasha.OffscreenCanvas, double, double, double, double, double, double, double, double)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.CanvasRenderingContext2D",
      "classSimpleName": "CanvasRenderingContext2D",
      "elementKind": "method",
      "methodName": "drawImage",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method void akasha.CanvasRenderingContext2D::drawImage(akasha.svg.SVGImageElement, double, double)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.CanvasRenderingContext2D",
      "classSimpleName": "CanvasRenderingContext2D",
      "elementKind": "method",
      "methodName": "drawImage",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method void akasha.CanvasRenderingContext2D::drawImage(akasha.svg.SVGImageElement, double, double, double, double)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.CanvasRenderingContext2D",
      "classSimpleName": "CanvasRenderingContext2D",
      "elementKind": "method",
      "methodName": "drawImage",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method void akasha.CanvasRenderingContext2D::drawImage(akasha.svg.SVGImageElement, double, double, double, double, double, double, double, double)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.CanvasRenderingContext2D",
      "classSimpleName": "CanvasRenderingContext2D",
      "elementKind": "method",
      "methodName": "drawImage",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method void akasha.CredentialCreationOptions::setPassword(akasha.HTMLFormElement)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.CredentialCreationOptions",
      "classSimpleName": "CredentialCreationOptions",
      "elementKind": "method",
      "methodName": "setPassword",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method void akasha.CredentialCreationOptions::setPassword(akasha.PasswordCredentialData)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.CredentialCreationOptions",
      "classSimpleName": "CredentialCreationOptions",
      "elementKind": "method",
      "methodName": "setPassword",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method void akasha.EncodedVideoChunkMetadata::setTemporalLayerId(int)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.EncodedVideoChunkMetadata",
      "classSimpleName": "EncodedVideoChunkMetadata",
      "elementKind": "method",
      "methodName": "setTemporalLayerId",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method void akasha.ImageDecoderInit::setData(akasha.ReadableStream)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.ImageDecoderInit",
      "classSimpleName": "ImageDecoderInit",
      "elementKind": "method",
      "methodName": "setData",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method void akasha.ImageDecoderInit::setData(akasha.core.BufferSource)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.ImageDecoderInit",
      "classSimpleName": "ImageDecoderInit",
      "elementKind": "method",
      "methodName": "setData",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method void akasha.MessageEvent::initMessageEvent(java.lang.String, boolean, boolean, java.lang.Object, java.lang.String, java.lang.String, akasha.MessagePort)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.MessageEvent",
      "classSimpleName": "MessageEvent",
      "elementKind": "method",
      "methodName": "initMessageEvent",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method void akasha.MessageEvent::initMessageEvent(java.lang.String, boolean, boolean, java.lang.Object, java.lang.String, java.lang.String, akasha.MessagePort, akasha.MessagePort[])",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.MessageEvent",
      "classSimpleName": "MessageEvent",
      "elementKind": "method",
      "methodName": "initMessageEvent",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method void akasha.MessageEvent::initMessageEvent(java.lang.String, boolean, boolean, java.lang.Object, java.lang.String, java.lang.String, akasha.MessagePort, akasha.lang.JsArray<akasha.MessagePort>)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.MessageEvent",
      "classSimpleName": "MessageEvent",
      "elementKind": "method",
      "methodName": "initMessageEvent",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method void akasha.MessageEvent::initMessageEvent(java.lang.String, boolean, boolean, java.lang.Object, java.lang.String, java.lang.String, akasha.ServiceWorker)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.MessageEvent",
      "classSimpleName": "MessageEvent",
      "elementKind": "method",
      "methodName": "initMessageEvent",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method void akasha.MessageEvent::initMessageEvent(java.lang.String, boolean, boolean, java.lang.Object, java.lang.String, java.lang.String, akasha.ServiceWorker, akasha.MessagePort[])",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.MessageEvent",
      "classSimpleName": "MessageEvent",
      "elementKind": "method",
      "methodName": "initMessageEvent",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method void akasha.MessageEvent::initMessageEvent(java.lang.String, boolean, boolean, java.lang.Object, java.lang.String, java.lang.String, akasha.ServiceWorker, akasha.lang.JsArray<akasha.MessagePort>)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.MessageEvent",
      "classSimpleName": "MessageEvent",
      "elementKind": "method",
      "methodName": "initMessageEvent",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method void akasha.MessageEvent::initMessageEvent(java.lang.String, boolean, boolean, java.lang.Object, java.lang.String, java.lang.String, akasha.Window)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.MessageEvent",
      "classSimpleName": "MessageEvent",
      "elementKind": "method",
      "methodName": "initMessageEvent",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method void akasha.MessageEvent::initMessageEvent(java.lang.String, boolean, boolean, java.lang.Object, java.lang.String, java.lang.String, akasha.Window, akasha.MessagePort[])",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.MessageEvent",
      "classSimpleName": "MessageEvent",
      "elementKind": "method",
      "methodName": "initMessageEvent",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method void akasha.MessageEvent::initMessageEvent(java.lang.String, boolean, boolean, java.lang.Object, java.lang.String, java.lang.String, akasha.Window, akasha.lang.JsArray<akasha.MessagePort>)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.MessageEvent",
      "classSimpleName": "MessageEvent",
      "elementKind": "method",
      "methodName": "initMessageEvent",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method void akasha.MessageEventInit::setSource(akasha.MessagePort)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.MessageEventInit",
      "classSimpleName": "MessageEventInit",
      "elementKind": "method",
      "methodName": "setSource",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method void akasha.MessageEventInit::setSource(akasha.ServiceWorker)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.MessageEventInit",
      "classSimpleName": "MessageEventInit",
      "elementKind": "method",
      "methodName": "setSource",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method void akasha.MessageEventInit::setSource(akasha.Window)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.MessageEventInit",
      "classSimpleName": "MessageEventInit",
      "elementKind": "method",
      "methodName": "setSource",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method void akasha.OffscreenCanvasRenderingContext2D::drawImage(akasha.HTMLCanvasElement, double, double)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.OffscreenCanvasRenderingContext2D",
      "classSimpleName": "OffscreenCanvasRenderingContext2D",
      "elementKind": "method",
      "methodName": "drawImage",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method void akasha.OffscreenCanvasRenderingContext2D::drawImage(akasha.HTMLCanvasElement, double, double, double, double)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.OffscreenCanvasRenderingContext2D",
      "classSimpleName": "OffscreenCanvasRenderingContext2D",
      "elementKind": "method",
      "methodName": "drawImage",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method void akasha.OffscreenCanvasRenderingContext2D::drawImage(akasha.HTMLCanvasElement, double, double, double, double, double, double, double, double)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.OffscreenCanvasRenderingContext2D",
      "classSimpleName": "OffscreenCanvasRenderingContext2D",
      "elementKind": "method",
      "methodName": "drawImage",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method void akasha.OffscreenCanvasRenderingContext2D::drawImage(akasha.HTMLImageElement, double, double)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.OffscreenCanvasRenderingContext2D",
      "classSimpleName": "OffscreenCanvasRenderingContext2D",
      "elementKind": "method",
      "methodName": "drawImage",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method void akasha.OffscreenCanvasRenderingContext2D::drawImage(akasha.HTMLImageElement, double, double, double, double)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.OffscreenCanvasRenderingContext2D",
      "classSimpleName": "OffscreenCanvasRenderingContext2D",
      "elementKind": "method",
      "methodName": "drawImage",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method void akasha.OffscreenCanvasRenderingContext2D::drawImage(akasha.HTMLImageElement, double, double, double, double, double, double, double, double)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.OffscreenCanvasRenderingContext2D",
      "classSimpleName": "OffscreenCanvasRenderingContext2D",
      "elementKind": "method",
      "methodName": "drawImage",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method void akasha.OffscreenCanvasRenderingContext2D::drawImage(akasha.HTMLOrSVGImageElement, double, double)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.OffscreenCanvasRenderingContext2D",
      "classSimpleName": "OffscreenCanvasRenderingContext2D",
      "elementKind": "method",
      "methodName": "drawImage",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method void akasha.OffscreenCanvasRenderingContext2D::drawImage(akasha.HTMLOrSVGImageElement, double, double, double, double)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.OffscreenCanvasRenderingContext2D",
      "classSimpleName": "OffscreenCanvasRenderingContext2D",
      "elementKind": "method",
      "methodName": "drawImage",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method void akasha.OffscreenCanvasRenderingContext2D::drawImage(akasha.HTMLOrSVGImageElement, double, double, double, double, double, double, double, double)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.OffscreenCanvasRenderingContext2D",
      "classSimpleName": "OffscreenCanvasRenderingContext2D",
      "elementKind": "method",
      "methodName": "drawImage",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method void akasha.OffscreenCanvasRenderingContext2D::drawImage(akasha.HTMLVideoElement, double, double)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.OffscreenCanvasRenderingContext2D",
      "classSimpleName": "OffscreenCanvasRenderingContext2D",
      "elementKind": "method",
      "methodName": "drawImage",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method void akasha.OffscreenCanvasRenderingContext2D::drawImage(akasha.HTMLVideoElement, double, double, double, double)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.OffscreenCanvasRenderingContext2D",
      "classSimpleName": "OffscreenCanvasRenderingContext2D",
      "elementKind": "method",
      "methodName": "drawImage",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method void akasha.OffscreenCanvasRenderingContext2D::drawImage(akasha.HTMLVideoElement, double, double, double, double, double, double, double, double)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.OffscreenCanvasRenderingContext2D",
      "classSimpleName": "OffscreenCanvasRenderingContext2D",
      "elementKind": "method",
      "methodName": "drawImage",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method void akasha.OffscreenCanvasRenderingContext2D::drawImage(akasha.ImageBitmap, double, double)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.OffscreenCanvasRenderingContext2D",
      "classSimpleName": "OffscreenCanvasRenderingContext2D",
      "elementKind": "method",
      "methodName": "drawImage",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method void akasha.OffscreenCanvasRenderingContext2D::drawImage(akasha.ImageBitmap, double, double, double, double)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.OffscreenCanvasRenderingContext2D",
      "classSimpleName": "OffscreenCanvasRenderingContext2D",
      "elementKind": "method",
      "methodName": "drawImage",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method void akasha.OffscreenCanvasRenderingContext2D::drawImage(akasha.ImageBitmap, double, double, double, double, double, double, double, double)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.OffscreenCanvasRenderingContext2D",
      "classSimpleName": "OffscreenCanvasRenderingContext2D",
      "elementKind": "method",
      "methodName": "drawImage",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method void akasha.OffscreenCanvasRenderingContext2D::drawImage(akasha.OffscreenCanvas, double, double)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.OffscreenCanvasRenderingContext2D",
      "classSimpleName": "OffscreenCanvasRenderingContext2D",
      "elementKind": "method",
      "methodName": "drawImage",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method void akasha.OffscreenCanvasRenderingContext2D::drawImage(akasha.OffscreenCanvas, double, double, double, double)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.OffscreenCanvasRenderingContext2D",
      "classSimpleName": "OffscreenCanvasRenderingContext2D",
      "elementKind": "method",
      "methodName": "drawImage",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method void akasha.OffscreenCanvasRenderingContext2D::drawImage(akasha.OffscreenCanvas, double, double, double, double, double, double, double, double)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.OffscreenCanvasRenderingContext2D",
      "classSimpleName": "OffscreenCanvasRenderingContext2D",
      "elementKind": "method",
      "methodName": "drawImage",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method void akasha.OffscreenCanvasRenderingContext2D::drawImage(akasha.svg.SVGImageElement, double, double)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.OffscreenCanvasRenderingContext2D",
      "classSimpleName": "OffscreenCanvasRenderingContext2D",
      "elementKind": "method",
      "methodName": "drawImage",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method void akasha.OffscreenCanvasRenderingContext2D::drawImage(akasha.svg.SVGImageElement, double, double, double, double)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.OffscreenCanvasRenderingContext2D",
      "classSimpleName": "OffscreenCanvasRenderingContext2D",
      "elementKind": "method",
      "methodName": "drawImage",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method void akasha.OffscreenCanvasRenderingContext2D::drawImage(akasha.svg.SVGImageElement, double, double, double, double, double, double, double, double)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.OffscreenCanvasRenderingContext2D",
      "classSimpleName": "OffscreenCanvasRenderingContext2D",
      "elementKind": "method",
      "methodName": "drawImage",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method void akasha.SecurityPolicyViolationEventInit::setBlockedURL(java.lang.String)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.SecurityPolicyViolationEventInit",
      "classSimpleName": "SecurityPolicyViolationEventInit",
      "elementKind": "method",
      "methodName": "setBlockedURL",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method void akasha.SecurityPolicyViolationEventInit::setColno(int)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.SecurityPolicyViolationEventInit",
      "classSimpleName": "SecurityPolicyViolationEventInit",
      "elementKind": "method",
      "methodName": "setColno",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method void akasha.SecurityPolicyViolationEventInit::setDocumentURL(java.lang.String)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.SecurityPolicyViolationEventInit",
      "classSimpleName": "SecurityPolicyViolationEventInit",
      "elementKind": "method",
      "methodName": "setDocumentURL",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method void akasha.SecurityPolicyViolationEventInit::setLineno(int)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.SecurityPolicyViolationEventInit",
      "classSimpleName": "SecurityPolicyViolationEventInit",
      "elementKind": "method",
      "methodName": "setLineno",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method void akasha.VideoFrame::<init>(akasha.HTMLCanvasElement)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.VideoFrame",
      "classSimpleName": "VideoFrame",
      "elementKind": "constructor",
      "methodName": "<init>",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method void akasha.VideoFrame::<init>(akasha.HTMLCanvasElement, akasha.VideoFrameInit)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.VideoFrame",
      "classSimpleName": "VideoFrame",
      "elementKind": "constructor",
      "methodName": "<init>",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method void akasha.VideoFrame::<init>(akasha.HTMLImageElement)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.VideoFrame",
      "classSimpleName": "VideoFrame",
      "elementKind": "constructor",
      "methodName": "<init>",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method void akasha.VideoFrame::<init>(akasha.HTMLImageElement, akasha.VideoFrameInit)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.VideoFrame",
      "classSimpleName": "VideoFrame",
      "elementKind": "constructor",
      "methodName": "<init>",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method void akasha.VideoFrame::<init>(akasha.HTMLOrSVGImageElement)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.VideoFrame",
      "classSimpleName": "VideoFrame",
      "elementKind": "constructor",
      "methodName": "<init>",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method void akasha.VideoFrame::<init>(akasha.HTMLOrSVGImageElement, akasha.VideoFrameInit)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.VideoFrame",
      "classSimpleName": "VideoFrame",
      "elementKind": "constructor",
      "methodName": "<init>",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method void akasha.VideoFrame::<init>(akasha.HTMLVideoElement)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.VideoFrame",
      "classSimpleName": "VideoFrame",
      "elementKind": "constructor",
      "methodName": "<init>",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method void akasha.VideoFrame::<init>(akasha.HTMLVideoElement, akasha.VideoFrameInit)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.VideoFrame",
      "classSimpleName": "VideoFrame",
      "elementKind": "constructor",
      "methodName": "<init>",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method void akasha.VideoFrame::<init>(akasha.ImageBitmap)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.VideoFrame",
      "classSimpleName": "VideoFrame",
      "elementKind": "constructor",
      "methodName": "<init>",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method void akasha.VideoFrame::<init>(akasha.ImageBitmap, akasha.VideoFrameInit)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.VideoFrame",
      "classSimpleName": "VideoFrame",
      "elementKind": "constructor",
      "methodName": "<init>",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method void akasha.VideoFrame::<init>(akasha.OffscreenCanvas)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.VideoFrame",
      "classSimpleName": "VideoFrame",
      "elementKind": "constructor",
      "methodName": "<init>",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method void akasha.VideoFrame::<init>(akasha.OffscreenCanvas, akasha.VideoFrameInit)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.VideoFrame",
      "classSimpleName": "VideoFrame",
      "elementKind": "constructor",
      "methodName": "<init>",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method void akasha.VideoFrame::<init>(akasha.svg.SVGImageElement)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.VideoFrame",
      "classSimpleName": "VideoFrame",
      "elementKind": "constructor",
      "methodName": "<init>",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method void akasha.VideoFrame::<init>(akasha.svg.SVGImageElement, akasha.VideoFrameInit)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.VideoFrame",
      "classSimpleName": "VideoFrame",
      "elementKind": "constructor",
      "methodName": "<init>",
      "package": "akasha"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method void akasha.gpu.GPUBindGroupEntry::setResource(akasha.gpu.GPUBufferBinding)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.gpu.GPUBindGroupEntry",
      "classSimpleName": "GPUBindGroupEntry",
      "elementKind": "method",
      "methodName": "setResource",
      "package": "akasha.gpu"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method void akasha.gpu.GPUBindGroupEntry::setResource(akasha.gpu.GPUExternalTexture)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.gpu.GPUBindGroupEntry",
      "classSimpleName": "GPUBindGroupEntry",
      "elementKind": "method",
      "methodName": "setResource",
      "package": "akasha.gpu"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method void akasha.gpu.GPUBindGroupEntry::setResource(akasha.gpu.GPUSampler)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.gpu.GPUBindGroupEntry",
      "classSimpleName": "GPUBindGroupEntry",
      "elementKind": "method",
      "methodName": "setResource",
      "package": "akasha.gpu"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method void akasha.gpu.GPUBindGroupEntry::setResource(akasha.gpu.GPUTextureView)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.gpu.GPUBindGroupEntry",
      "classSimpleName": "GPUBindGroupEntry",
      "elementKind": "method",
      "methodName": "setResource",
      "package": "akasha.gpu"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method void akasha.gpu.GPUUncapturedErrorEventInit::setError(akasha.gpu.GPUOutOfMemoryError)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.gpu.GPUUncapturedErrorEventInit",
      "classSimpleName": "GPUUncapturedErrorEventInit",
      "elementKind": "method",
      "methodName": "setError",
      "package": "akasha.gpu"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method void akasha.gpu.GPUUncapturedErrorEventInit::setError(akasha.gpu.GPUValidationError)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.gpu.GPUUncapturedErrorEventInit",
      "classSimpleName": "GPUUncapturedErrorEventInit",
      "elementKind": "method",
      "methodName": "setError",
      "package": "akasha.gpu"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method void akasha.xr.XRWebGLLayer::<init>(akasha.xr.XRSession, akasha.gl.WebGL2RenderingContext)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.xr.XRWebGLLayer",
      "classSimpleName": "XRWebGLLayer",
      "elementKind": "constructor",
      "methodName": "<init>",
      "package": "akasha.xr"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method void akasha.xr.XRWebGLLayer::<init>(akasha.xr.XRSession, akasha.gl.WebGL2RenderingContext, akasha.xr.XRWebGLLayerInit)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.xr.XRWebGLLayer",
      "classSimpleName": "XRWebGLLayer",
      "elementKind": "constructor",
      "methodName": "<init>",
      "package": "akasha.xr"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method void akasha.xr.XRWebGLLayer::<init>(akasha.xr.XRSession, akasha.gl.WebGLRenderingContext)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.xr.XRWebGLLayer",
      "classSimpleName": "XRWebGLLayer",
      "elementKind": "constructor",
      "methodName": "<init>",
      "package": "akasha.xr"
    }
  },
  {
    "code": "java.method.removed",
    "description": "Method was removed.",
    "oldElement": "method void akasha.xr.XRWebGLLayer::<init>(akasha.xr.XRSession, akasha.gl.WebGLRenderingContext, akasha.xr.XRWebGLLayerInit)",
    "classification": {
      "SOURCE": "BREAKING",
      "BINARY": "BREAKING"
    },
    "attachments": {
      "classQualifiedName": "akasha.xr.XRWebGLLayer",
      "classSimpleName": "XRWebGLLayer",
      "elementKind": "constructor",
      "methodName": "<init>",
      "package": "akasha.xr"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'akasha.gpu.GPUTextureFormat'.",
    "newElement": "parameter akasha.gpu.GPUStorageTextureBindingLayout.Builder akasha.gpu.GPUStorageTextureBindingLayout::create(===java.lang.String===) @ akasha.gpu.GPUStorageTextureBindingLayout.Builder",
    "oldElement": "parameter akasha.gpu.GPUStorageTextureBindingLayout.Builder akasha.gpu.GPUStorageTextureBindingLayout::create(===java.lang.String===, java.lang.String) @ akasha.gpu.GPUStorageTextureBindingLayout.Builder",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@akasha.gpu.GPUTextureFormat",
      "annotationType": "akasha.gpu.GPUTextureFormat",
      "classQualifiedName": "akasha.gpu.GPUStorageTextureBindingLayout.Builder",
      "classSimpleName": "Builder",
      "elementKind": "parameter",
      "methodName": "create",
      "package": "akasha.gpu",
      "parameterIndex": "0"
    }
  },
  {
    "code": "java.annotation.removed",
    "description": "Element no longer annotated with 'akasha.gpu.GPUStorageTextureAccess'.",
    "newElement": "parameter akasha.gpu.GPUStorageTextureBindingLayout.Builder akasha.gpu.GPUStorageTextureBindingLayout::create(===java.lang.String===) @ akasha.gpu.GPUStorageTextureBindingLayout.Builder",
    "oldElement": "parameter akasha.gpu.GPUStorageTextureBindingLayout.Builder akasha.gpu.GPUStorageTextureBindingLayout::create(===java.lang.String===, java.lang.String) @ akasha.gpu.GPUStorageTextureBindingLayout.Builder",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@akasha.gpu.GPUStorageTextureAccess",
      "annotationType": "akasha.gpu.GPUStorageTextureAccess",
      "classQualifiedName": "akasha.gpu.GPUStorageTextureBindingLayout.Builder",
      "classSimpleName": "Builder",
      "elementKind": "parameter",
      "methodName": "create",
      "package": "akasha.gpu",
      "parameterIndex": "0"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'akasha.gpu.GPUTextureFormat'.",
    "newElement": "parameter akasha.gpu.GPUStorageTextureBindingLayout.Builder akasha.gpu.GPUStorageTextureBindingLayout::create(===java.lang.String===)",
    "oldElement": "parameter akasha.gpu.GPUStorageTextureBindingLayout.Builder akasha.gpu.GPUStorageTextureBindingLayout::create(===java.lang.String===, java.lang.String)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@akasha.gpu.GPUTextureFormat",
      "annotationType": "akasha.gpu.GPUTextureFormat",
      "classQualifiedName": "akasha.gpu.GPUStorageTextureBindingLayout",
      "classSimpleName": "GPUStorageTextureBindingLayout",
      "elementKind": "parameter",
      "methodName": "create",
      "package": "akasha.gpu",
      "parameterIndex": "0"
    }
  },
  {
    "code": "java.annotation.removed",
    "description": "Element no longer annotated with 'akasha.gpu.GPUStorageTextureAccess'.",
    "newElement": "parameter akasha.gpu.GPUStorageTextureBindingLayout.Builder akasha.gpu.GPUStorageTextureBindingLayout::create(===java.lang.String===)",
    "oldElement": "parameter akasha.gpu.GPUStorageTextureBindingLayout.Builder akasha.gpu.GPUStorageTextureBindingLayout::create(===java.lang.String===, java.lang.String)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@akasha.gpu.GPUStorageTextureAccess",
      "annotationType": "akasha.gpu.GPUStorageTextureAccess",
      "classQualifiedName": "akasha.gpu.GPUStorageTextureBindingLayout",
      "classSimpleName": "GPUStorageTextureBindingLayout",
      "elementKind": "parameter",
      "methodName": "create",
      "package": "akasha.gpu",
      "parameterIndex": "0"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'akasha.gpu.GPUVertexStepMode'.",
    "element": "parameter akasha.gpu.GPUVertexBufferLayout.Builder akasha.gpu.GPUVertexBufferLayout.Builder::stepMode(===java.lang.String===)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@akasha.gpu.GPUVertexStepMode",
      "annotationType": "akasha.gpu.GPUVertexStepMode",
      "classQualifiedName": "akasha.gpu.GPUVertexBufferLayout.Builder",
      "classSimpleName": "Builder",
      "elementKind": "parameter",
      "methodName": "stepMode",
      "package": "akasha.gpu",
      "parameterIndex": "0"
    }
  },
  {
    "code": "java.annotation.removed",
    "description": "Element no longer annotated with 'akasha.gpu.GPUInputStepMode'.",
    "element": "parameter akasha.gpu.GPUVertexBufferLayout.Builder akasha.gpu.GPUVertexBufferLayout.Builder::stepMode(===java.lang.String===)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@akasha.gpu.GPUInputStepMode",
      "annotationType": "akasha.gpu.GPUInputStepMode",
      "classQualifiedName": "akasha.gpu.GPUVertexBufferLayout.Builder",
      "classSimpleName": "Builder",
      "elementKind": "parameter",
      "methodName": "stepMode",
      "package": "akasha.gpu",
      "parameterIndex": "0"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'akasha.gpu.GPUVertexStepMode'.",
    "element": "parameter void akasha.gpu.GPUVertexBufferLayout::setStepMode(===java.lang.String===) @ akasha.gpu.GPUVertexBufferLayout.Builder",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@akasha.gpu.GPUVertexStepMode",
      "annotationType": "akasha.gpu.GPUVertexStepMode",
      "classQualifiedName": "akasha.gpu.GPUVertexBufferLayout.Builder",
      "classSimpleName": "Builder",
      "elementKind": "parameter",
      "methodName": "setStepMode",
      "package": "akasha.gpu",
      "parameterIndex": "0"
    }
  },
  {
    "code": "java.annotation.removed",
    "description": "Element no longer annotated with 'akasha.gpu.GPUInputStepMode'.",
    "element": "parameter void akasha.gpu.GPUVertexBufferLayout::setStepMode(===java.lang.String===) @ akasha.gpu.GPUVertexBufferLayout.Builder",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@akasha.gpu.GPUInputStepMode",
      "annotationType": "akasha.gpu.GPUInputStepMode",
      "classQualifiedName": "akasha.gpu.GPUVertexBufferLayout.Builder",
      "classSimpleName": "Builder",
      "elementKind": "parameter",
      "methodName": "setStepMode",
      "package": "akasha.gpu",
      "parameterIndex": "0"
    }
  },
  {
    "code": "java.annotation.added",
    "description": "Element newly annotated with 'akasha.gpu.GPUVertexStepMode'.",
    "element": "parameter void akasha.gpu.GPUVertexBufferLayout::setStepMode(===java.lang.String===)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@akasha.gpu.GPUVertexStepMode",
      "annotationType": "akasha.gpu.GPUVertexStepMode",
      "classQualifiedName": "akasha.gpu.GPUVertexBufferLayout",
      "classSimpleName": "GPUVertexBufferLayout",
      "elementKind": "parameter",
      "methodName": "setStepMode",
      "package": "akasha.gpu",
      "parameterIndex": "0"
    }
  },
  {
    "code": "java.annotation.removed",
    "description": "Element no longer annotated with 'akasha.gpu.GPUInputStepMode'.",
    "element": "parameter void akasha.gpu.GPUVertexBufferLayout::setStepMode(===java.lang.String===)",
    "classification": {
      "SOURCE": "EQUIVALENT",
      "BINARY": "EQUIVALENT",
      "SEMANTIC": "POTENTIALLY_BREAKING"
    },
    "attachments": {
      "annotation": "@akasha.gpu.GPUInputStepMode",
      "annotationType": "akasha.gpu.GPUInputStepMode",
      "classQualifiedName": "akasha.gpu.GPUVertexBufferLayout",
      "classSimpleName": "GPUVertexBufferLayout",
      "elementKind": "parameter",
      "methodName": "setStepMode",
      "package": "akasha.gpu",
      "parameterIndex": "0"
    }
  }
]
