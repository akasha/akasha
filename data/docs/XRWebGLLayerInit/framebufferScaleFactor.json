
{
    "kind": "Property",
    "name": "XRWebGLLayerInit.framebufferScaleFactor",
    "href": "https://developer.mozilla.org/en-US/docs/Web/API/XRWebGLLayerInit/framebufferScaleFactor",
    "description": "The XRWebGLLayerInit dictionary's framebufferScaleFactor property, when specified upon instantiating a new XRWebGLLayer using its constructor, XRWebGLLayer(), specifies the scaling factor to use when determining the size of the frame buffer to use when rendering the scene, relative to the default XR device display resolution.",
    "content": "<p><strong>Secure context</strong><br>This feature is available only in <a href=\"https://developer.mozilla.org/en-US/docs/Web/Security/Secure_Contexts\">secure contexts</a> (HTTPS), in some or all <a href=\"#Browser_compatibility\">supporting browsers</a>.</p>\n<p>The <code>XRWebGLLayerInit</code> dictionary's <code><strong>framebufferScaleFactor</strong></code> property, when specified upon instantiating a new <code>XRWebGLLayer</code> using its constructor, <code>XRWebGLLayer()</code>, specifies the scaling factor to use when determining the size of the frame buffer to use when rendering the scene, relative to the default XR device display resolution.</p>\n<p>For example, a value of 1.0 indicates that the frame buffer should be the same resolution as the actual display, while a value of 0.5 indicates that the frame buffer should be half the resolution of the display. A value of 2.0, on the other hand, creates a frame buffer whose resolution is <em>double</em> that of the actual display buffer.</p>\n<p>There are valid use cases for all of these kinds of scaling. See Managing rendering quality in WebXR performance guide for more information.</p>\n<p>You can determine the scaling factor that you would need to apply to match the default frame buffer resolution by using the <code>XRWebGLLayer.getNativeFramebufferScaleFactor()</code> static function.</p>"
}
