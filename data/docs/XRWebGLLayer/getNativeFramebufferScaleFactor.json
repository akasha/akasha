
{
    "name": "XRWebGLLayer.getNativeFramebufferScaleFactor",
    "href": "https://developer.mozilla.org/en-US/docs/Web/API/XRWebGLLayer/getNativeFramebufferScaleFactor",
    "description": "The static method XRWebGLLayer.getNativeFramebufferScaleFactor() returns a floating-point scaling factor by which one can multiply the specified XRSession's resolution to get the native resolution of the WebXR device's frame buffer.",
    "content": "<p><strong>Secure context</strong><br>This feature is available only in <a href=\"https://developer.mozilla.org/en-US/docs/Web/Security/Secure_Contexts\">secure contexts</a> (HTTPS), in some or all <a href=\"#Browser_compatibility\">supporting browsers</a>.</p>\n<p>The static method <code><strong>XRWebGLLayer.getNativeFramebufferScaleFactor()</strong></code> returns a floating-point scaling factor by which one can multiply the specified <code>XRSession</code>'s resolution to get the native resolution of the WebXR device's frame buffer.</p>\n<p>This information can be used when creating a new <code>XRWebGLLayer</code> to configure the <code>XRWebGLLayerInit</code> property <code>framebufferScaleFactor</code> in the options specified when calling the <code>XRWebGLLayer()</code> constructor. See the <a href=\"#Usage_notes\">Usage notes</a> and <a href=\"#Examples\">Examples</a> for details.</p>\n<p>If the scaling factor is 1.0, then the frame buffer pixels and the native display pixels are the same size. If the scaling factor is greater than zero, then the frame buffer is smaller than the diplay's native dimensions, resulting in the output being up-scaled for display to the screen after rendering into the frame buffer. If the scaling factor is less than zero, the frame buffer is <em>larger</em> than the native resolution of the display, resulting in the frame buffer's contents being scaled down for display to the XR device. This can happen for display environments which use superscaling or anti-aliasing techniques to improve perceived image quality.</p>"
}
