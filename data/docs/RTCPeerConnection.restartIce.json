
{
    "name": "RTCPeerConnection.restartIce",
    "href": "https://developer.mozilla.org/en-US/docs/Web/API/RTCPeerConnection/restartIce",
    "description": "The WebRTC API's RTCPeerConnection interface offers the restartIce() method to allow a web application to easily request that ICE candidate gathering be redone on both ends of the connection.",
    "content": "The WebRTC API's <code>RTCPeerConnection</code> interface offers the <code><strong>restartIce()</strong></code> method to allow a web application to easily request that <a href=\"https://developer.mozilla.org/en-US/docs/Glossary/ICE\">ICE</a> candidate gathering be redone on both ends of the connection.This simplifies the process by allowing the same method to be used by either the caller or the receiver to trigger an ICE restart.\n<p>After <code>restartIce()</code> returns, the offer returned by the next call to <code>createOffer()</code> is automatically configured to trigger ICE restart on both the local peer (once the local peer has been set) and on the remote peer, once the offer is sent across your signaling mechanism and the remote peer has set its description as well.</p>\n<p><code>restartIce()</code> causes the <code>negotiationneeded</code> event to be fired on the <code>RTCPeerConnection</code> to inform the application that it should perform negotiation using its signaling channel.</p>\n<p>If negotiation fails to complete—either due to rollback or because incoming offers are in the process of being negotiated—the <code>RTCPeerConnection</code> will remember that you requested ICE restart. The next time the connection's <code>signalingState</code> changes to <code>stable</code>, the connection will fire the <code>negotiationneeded</code> event. This process continues until an ICE restart has been successfully completed.</p>"
}
