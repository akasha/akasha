
{
    "kind": "Method",
    "name": "XRSession.requestAnimationFrame",
    "href": "https://developer.mozilla.org/en-US/docs/Web/API/XRSession/requestAnimationFrame",
    "description": "The XRSession methodÂ requestAnimationFrame(), much like the Window method of the same name, schedules a callback to be executed the next time the browser is ready to paint the session's virtual environment to the XR display.",
    "content": "<div class=\"blockIndicator secureContexts\">\n <p><strong>Secure context</strong><br>This feature is available only in <a href=\"https://developer.mozilla.org/en-US/docs/Web/Security/Secure_Contexts\">secure contexts</a> (HTTPS), in some or all <a href=\"#Browser_compatibility\">supporting browsers</a>.</p>\n</div>\n<p>The <code>XRSession</code> method<code><strong>requestAnimationFrame()</strong></code>, much like the <code>Window</code> method of the same name, schedules a callback to be executed the next time the browser is ready to paint the session's virtual environment to the XR display.The specified callback is executed once before the next repaint; if you wish for it to be executed for the following repaint, you must call<code>requestAnimationFrame()</code>again. This can be done from within the callback itself.</p>\n<p>The callback takes two parameters as inputs: an<code>XRFrame</code> describing the state of all tracked objects for the session, and a time stamp you can use to compute any animation updates needed.</p>\n<p>You can cancel a previously scheduled animation by calling <code>cancelAnimationFrame()</code>.</p>\n<div class=\"blockIndicator warning\"> \n <p><strong>Note:</strong>Despite the obvious similarities between these methods and the global <code>requestAnimationFrame()</code> function provided by the<code>Window</code>interface, you<em>must not</em>treat these as interchangeable. There is<em>no</em>guarantee that the latter will work at all while an immersive XR session is underway.</p> \n</div>"
}
