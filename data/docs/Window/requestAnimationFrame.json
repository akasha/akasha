
{
    "name": "Window.requestAnimationFrame",
    "href": "https://developer.mozilla.org/en-US/docs/Web/API/Window/requestAnimationFrame",
    "description": "The window.requestAnimationFrame() method tells the browser that you wish to perform an animation and requests that the browser calls a specified function to update an animation before the next repaint. The method takes a callback as an argument to be invoked before the repaint.",
    "content": "<p>The <strong><code>window.requestAnimationFrame()</code></strong> method tells the browser that you wish to perform an animation and requests that the browser calls a specified function to update an animation before the next repaint. The method takes a callback as an argument to be invoked before the repaint.</p>\n<div class=\"note\">\n <strong>Note:</strong> Your callback routine must itself call <code>requestAnimationFrame()</code> if you want to animate another frame at the next repaint.\n</div>\n<p>You should call this method whenever you're ready to update your animation onscreen. This will request that your animation function be called before the browser performs the next repaint. The number of callbacks is usually 60 times per second, but will generally match the display refresh rate in most web browsers as per W3C recommendation. <code>requestAnimationFrame()</code> calls are paused in most browsers when running in background tabs or hidden <a href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/iframe\" title=\"The HTML Inline Frame element (<iframe>) represents a nested browsing context, embedding another HTML page into the current one.\"><code>&lt;iframe&gt;</code></a>s in order to improve performance and battery life.</p>\n<p>The callback method is passed a single argument, a <code>DOMHighResTimeStamp</code>, which indicates the current time (based on the number of milliseconds since time origin). When callbacks queued by <code>requestAnimationFrame()</code> begin to fire multiple callbacks in a single frame, each receives the same timestamp even though time has passed during the computation of every previous callback's workload. This timestamp is a decimal number, in milliseconds, but with a minimal precision of 1ms (1000 Âµs).</p>\n<div class=\"blockIndicator warning\"> \n <p>Be sure to always use the first argument (or some other method for getting the current time) to calculate how much the animation will progress in a frame, <strong>otherwise the animation will run faster on high refresh rate screens</strong>. Check the example below for a way to do this.</p> \n</div>"
}
