
{
    "kind": "Method",
    "name": "Window.postMessage",
    "href": "https://developer.mozilla.org/en-US/docs/Web/API/Window/postMessage",
    "description": "The window.postMessage() method safely enables cross-origin communication between Window objects; e.g., between a page and a pop-up that it spawned, or between a page and an iframe embedded within it.",
    "content": "<p>The <strong><code>window.postMessage()</code></strong> method safely enables cross-origin communication between <code>Window</code> objects; <em>e.g.,</em> between a page and a pop-up that it spawned, or between a page and an iframe embedded within it.</p>\n<p>Normally, scripts on different pages are allowed to access each other if and only if the pages they originate from share the same protocol, port number, and host (also known as the \"<a href=\"https://developer.mozilla.org/en-US/docs/Web/Security/Same-origin_policy\">same-origin policy</a>\"). <code>window.postMessage()</code> provides a controlled mechanism to securely circumvent this restriction (if used properly).</p>\n<p>Broadly, one window may obtain a reference to another (<em>e.g.,</em> via <code>targetWindow = window.opener</code>), and then dispatch a <code>MessageEvent</code> on it with <code>targetWindow.postMessage()</code>. The receiving window is then free to <a href=\"https://developer.mozilla.org/en-US/docs/Web/Guide/Events\">handle this event</a> as needed. The arguments passed to <code>window.postMessage()</code> (<em>i.e.,</em> the “message”) are <a href=\"#The_dispatched_event\">exposed to the receiving window through the event object</a>.</p>"
}
