{
  "sourceSelector": "!name=minimal_event !name=secure_contexts !name=bluetooth_common",
  "stages": [
    {
      "name": "MergeDocs",
      "description": "Add documentation from doc repository. This needs to be done before Flatten and renames as some documentation applies to Mixins or to elements before they are renamed",
      "config": {
        "aliases": {
          "WebGL2RenderingContext": ["WebGLRenderingContext"]
        },
        "createEvents": true
      }
    },
    {
      "name": "RemoveIncludes",
      "description": "Remove include into MathMLElement as we are not importing MathML spec at this stage",
      "sourceSelector": "name=cssom",
      "config": {
        "expectedRemoveCount": 1,
        "interfacePattern": "^MathMLElement$",
        "mixinPattern": "^ElementCSSInlineStyle$"
      }
    },
    {
      "name": "RemoveExtendedAttribute",
      "description": "Remove Constructor attribute as one of the arguments 'newTarget' is of type 'Animatable' which is a mixin which is seemingly invalid. We will re-add an equivalent with a union for impls of Animatable in next step",
      "sourceSelector": "name=svg2",
      "config": {
        "expectedRemoveCount": 1,
        "namePattern": "^ShadowAnimation$",
        "extendedAttribute": "Constructor( Animation source, Animatable newTarget )"
      }
    },
    {
      "name": "AddExtendedAttribute",
      "description": "See previous step for explanation",
      "sourceSelector": "name=svg2",
      "config": {
        "namePattern": "^ShadowAnimation$",
        "extendedAttribute": "Constructor( Animation source, (CSSPseudoElement or Element) newTarget )"
      }
    },
    {
      "name": "ConvertConstructorAttribute",
      "description": "Convert from historic constructor attributes"
    },
    {
      "name": "ConvertFactoryFunctionAttribute",
      "description": "Convert legacy factory functions into a form that is compatible with Closure/Java mapping",
      "sourceSelector": "name=whatwg_html",
      "config": {
        "expectedConvertCount": 3
      }
    },
    {
      "name": "RemoveHTMLConstructor",
      "description": "Remove constructors that are not invokable directly in Javascript binding",
      "sourceSelector": "name=whatwg_html",
      "config": {
        "expectedConvertCount": 3
      }
    },
    {
      "name": "AddExtendedAttribute",
      "description": "Package up the webgl specific specs into a separate package",
      "sourceSelector": "name=webgl.*",
      "config": {
        "namePattern": "^.*$",
        "extendedAttribute": "JavaSubPackage=gl"
      }
    },
    {
      "name": "AddExtendedAttribute",
      "description": "Package up the webrtc specific specs into a separate package",
      "sourceSelector": "name=webrtc.*",
      "config": {
        "namePattern": "^.*$",
        "extendedAttribute": "JavaSubPackage=rtc"
      }
    },
    {
      "name": "AddExtendedAttribute",
      "description": "Package up the bluetooth specific specs into a separate package",
      "sourceSelector": "name=web_bluetooth",
      "config": {
        "namePattern": "^.*$",
        "extendedAttribute": "JavaSubPackage=bluetooth"
      }
    },
    {
      "name": "AddExtendedAttribute",
      "description": "Package up the indexeddb specific specs into a separate package",
      "sourceSelector": "name=indexeddb",
      "config": {
        "namePattern": "^.*$",
        "extendedAttribute": "JavaSubPackage=indexeddb"
      }
    },
    {
      "name": "AddExtendedAttribute",
      "description": "Package up the svg specific specs into a separate package",
      "sourceSelector": "name=svg2 name=css_masking_1 name=filter_effects_1",
      "config": {
        "namePattern": "^.*$",
        "extendedAttribute": "JavaSubPackage=svg"
      }
    },
    {
      "name": "AddExtendedAttribute",
      "description": "Package up the audio specific specs into a separate package",
      "sourceSelector": "name=web_audio_api",
      "config": {
        "namePattern": "^.*$",
        "extendedAttribute": "JavaSubPackage=audio"
      }
    },
    {
      "name": "AddExtendedAttribute",
      "description": "Package up the media specific specs into a separate package",
      "sourceSelector": "name=media_source name=mediacapture_main name=mediacapture_record name=screen_capture",
      "config": {
        "namePattern": "^.*$",
        "extendedAttribute": "JavaSubPackage=media"
      }
    },
    {
      "name": "AddExtendedAttribute",
      "description": "Package up the notifications specific specs into a separate package",
      "sourceSelector": "name=whatwg_notifications",
      "config": {
        "namePattern": "^.*$",
        "extendedAttribute": "JavaSubPackage=notifications"
      }
    },
    {
      "name": "AddExtendedAttribute",
      "description": "Package up the xr specific specs into a separate package",
      "sourceSelector": "name=webxr",
      "config": {
        "namePattern": "^.*$",
        "extendedAttribute": "JavaSubPackage=xr"
      }
    },
    {
      "name": "AddExtendedAttribute",
      "description": "Package up the speech specific specs into a separate package",
      "sourceSelector": "name=speech_api",
      "config": {
        "namePattern": "^.*$",
        "extendedAttribute": "JavaSubPackage=speech"
      }
    },
    {
      "name": "AddExtendedAttribute",
      "description": "Package up the wasm specific specs into a separate package",
      "sourceSelector": "name=wasm.*",
      "config": {
        "namePattern": "^.*$",
        "extendedAttribute": "JavaSubPackage=wasm"
      }
    },
    {
      "name": "RenameType",
      "description": "Both permissions.webdidl and deviceorientation.webidl define PermissionState and they have different shapes",
      "sourceSelector": "name=deviceorientation",
      "config": {
        "expectedRenameCount": 1,
        "namePattern": "^PermissionState$",
        "replacement": "DevicePermissionState"
      }
    },
    {
      "name": "AddExtendedAttribute",
      "description": "Add LegacyNoInterfaceObject as chrome is non-compliant wrt this. See https://bugs.chromium.org/p/chromium/issues/detail?id=674507",
      "sourceSelector": "name=speech_api",
      "config": {
        "namePattern": "^(SpeechSynthesis|SpeechSynthesisVoice|SpeechRecognition|SpeechRecognitionError|SpeechRecognitionAlternative|SpeechRecognitionResult|SpeechRecognitionResultList|SpeechRecognitionEvent|SpeechGrammar|SpeechGrammarList)$",
        "extendedAttribute": "LegacyNoInterfaceObject"
      }
    },
    {
      "name": "AddExtendedAttribute",
      "description": "Add LegacyNoInterfaceObject as chrome is non-compliant wrt this. See https://bugs.chromium.org/p/chromium/issues/detail?id=674507",
      "sourceSelector": "name=web_animations_1",
      "config": {
        "namePattern": "^Animation$",
        "extendedAttribute": "LegacyNoInterfaceObject"
      }
    },
    {
      "name": "AddExtendedAttribute",
      "description": "Add LegacyNoInterfaceObject as chrome is non-compliant wrt this. See https://bugs.chromium.org/p/chromium/issues/detail?id=674507",
      "sourceSelector": "name=web_audio_api",
      "config": {
        "namePattern": "^(AudioContext|OfflineAudioContext)$",
        "extendedAttribute": "LegacyNoInterfaceObject"
      }
    },
    {
      "name": "AddExtendedAttribute",
      "description": "Add LegacyNoInterfaceObject as spec still uses the historic 'NoInterfaceObject' extended attribute",
      "sourceSelector": "name=geolocation_api",
      "config": {
        "namePattern": "^(Coordinates|Geolocation|Position|PositionError)$",
        "extendedAttribute": "LegacyNoInterfaceObject"
      }
    },
    {
      "name": "RemoveExtendedAttribute",
      "description": "Remove NoInterfaceObject as spec still uses the historic 'NoInterfaceObject' extended attribute",
      "sourceSelector": "name=geolocation_api",
      "config": {
        "expectedRemoveCount": 4,
        "namePattern": "^(Coordinates|Geolocation|Position|PositionError)$",
        "extendedAttribute": "NoInterfaceObject"
      }
    },
    {
      "name": "RemoveMember",
      "description": "Change the type to convert to a const enumeration for improved typing",
      "sourceSelector": "name=geolocation_api",
      "config": {
        "expectedRemoveCount": 1,
        "elementNamePattern": "^PositionError$",
        "memberNamePattern": "^code$",
        "types": ["interface_type"]
      }
    },
    {
      "name": "RemoveMember",
      "description": "Change the type to convert to a const enumeration for improved typing",
      "sourceSelector": "name=navigation_timing",
      "config": {
        "expectedRemoveCount": 1,
        "elementNamePattern": "^PerformanceNavigation$",
        "memberNamePattern": "^type$",
        "types": ["interface_type"]
      }
    },
    {
      "name": "RemoveMember",
      "description": "Change the type to convert to a const enumeration for improved typing",
      "sourceSelector": "name=cssom",
      "config": {
        "expectedRemoveCount": 1,
        "elementNamePattern": "^CSSRule$",
        "memberNamePattern": "^type$",
        "types": ["interface_type"]
      }
    },
    {
      "name": "AddExtendedAttributeToArgument",
      "description": "Annotate postMessage methods to indicate that they can take Transferables",
      "sourceSelector": "name=whatwg_html name=serviceworker",
      "config": {
        "expectedAddCount": 6,
        "elementNamePattern": "^.*$",
        "operationNamePattern": "^postMessage$",
        "argumentNamePattern": "^transfer$",
        "extendedAttribute": "Transferable"
      }
    },
    {
      "name": "AddExtendedAttributeToMember",
      "description": "Annotate postMessage option object to indicate that they can take Transferables",
      "sourceSelector": "name=whatwg_html",
      "config": {
        "expectedAddCount": 1,
        "elementNamePattern": "^PostMessageOptions$",
        "memberNamePattern": "^transfer$",
        "extendedAttribute": "Transferable"
      }
    },
    {
      "name": "RemoveMember",
      "description": "Change the type of the type attribute to an enumeration for improved typing",
      "sourceSelector": "name=whatwg_html",
      "config": {
        "expectedRemoveCount": 1,
        "elementNamePattern": "^HTMLButtonElement$",
        "memberNamePattern": "^type$",
        "types": ["interface_type"]
      }
    },
    {
      "name": "RemoveMember",
      "description": "Change the type of the method/enctype attributes to an enumeration for improved typing",
      "sourceSelector": "name=whatwg_html",
      "config": {
        "expectedRemoveCount": 2,
        "elementNamePattern": "^HTMLFormElement$",
        "memberNamePattern": "^(method|enctype)$",
        "types": ["interface_type"]
      }
    },
    {
      "name": "RemoveMember",
      "description": "Change the type of the formMethod/formEnctype attributes to an enumeration for improved typing",
      "sourceSelector": "name=whatwg_html",
      "config": {
        "expectedRemoveCount": 4,
        "elementNamePattern": "^(HTMLButtonElement|HTMLInputElement)$",
        "memberNamePattern": "^(formMethod|formEnctype)$",
        "types": ["interface_type"]
      }
    },
    {
      "name": "RemoveMember",
      "description": "Change the type to convert to a const enumeration for improved typing",
      "sourceSelector": "name=whatwg_html",
      "config": {
        "expectedRemoveCount": 1,
        "elementNamePattern": "^ApplicationCache$",
        "memberNamePattern": "^status$",
        "types": ["interface_type"]
      }
    },
    {
      "name": "RemoveMember",
      "description": "Change the type to convert to a const enumeration for improved typing",
      "sourceSelector": "name=whatwg_html",
      "config": {
        "expectedRemoveCount": 1,
        "elementNamePattern": "^EventSource$",
        "memberNamePattern": "^readyState$",
        "types": ["interface_type"]
      }
    },
    {
      "name": "RemoveMember",
      "description": "Change the type to convert to a const enumeration for improved typing",
      "sourceSelector": "name=whatwg_html",
      "config": {
        "expectedRemoveCount": 1,
        "elementNamePattern": "^HTMLTrackElement$",
        "memberNamePattern": "^readyState$",
        "types": ["interface_type"]
      }
    },
    {
      "name": "RemoveMember",
      "description": "Change the type to convert to a const enumeration for improved typing",
      "sourceSelector": "name=whatwg_html",
      "config": {
        "expectedRemoveCount": 1,
        "elementNamePattern": "^MediaError$",
        "memberNamePattern": "^code$",
        "types": ["interface_type"]
      }
    },
    {
      "name": "RemoveMember",
      "description": "Change the type to convert to a const enumeration for improved typing",
      "sourceSelector": "name=whatwg_html",
      "config": {
        "expectedRemoveCount": 2,
        "elementNamePattern": "^HTMLMediaElement$",
        "memberNamePattern": "^(readyState|networkState)$",
        "types": ["interface_type"]
      }
    },
    {
      "name": "RemoveMember",
      "description": "Change the type to convert to a const enumeration for improved typing",
      "sourceSelector": "name=whatwg_html",
      "config": {
        "expectedRemoveCount": 1,
        "elementNamePattern": "^WebSocket$",
        "memberNamePattern": "^readyState$",
        "types": ["interface_type"]
      }
    },
    {
      "name": "RemoveMember",
      "description": "Change the type of the autocomplete attribute to an enumeration for improved typing",
      "sourceSelector": "name=whatwg_html",
      "config": {
        "expectedRemoveCount": 4,
        "elementNamePattern": "^(HTMLTextAreaElement|HTMLSelectElement|HTMLInputElement|HTMLFormElement)$",
        "memberNamePattern": "^autocomplete$",
        "types": ["interface_type"]
      }
    },
    {
      "name": "RemoveMember",
      "description": "Change the type of the crossOrigin attribute to an enumeration for improved typing",
      "sourceSelector": "name=whatwg_html",
      "config": {
        "expectedRemoveCount": 4,
        "elementNamePattern": "^(HTMLMediaElement|HTMLLinkElement|HTMLImageElement|HTMLScriptElement)$",
        "memberNamePattern": "^crossOrigin$",
        "types": ["interface_type"]
      }
    },
    {
      "name": "RemoveMember",
      "description": "Change the type of the referrerPolicy attribute to an enumeration for improved typing",
      "sourceSelector": "name=whatwg_html",
      "config": {
        "expectedRemoveCount": 6,
        "elementNamePattern": "^(HTMLAnchorElement|HTMLAreaElement|HTMLIFrameElement|HTMLImageElement|HTMLLinkElement|HTMLScriptElement)$",
        "memberNamePattern": "^referrerPolicy$",
        "types": ["interface_type"]
      }
    },
    {
      "name": "RemoveMember",
      "description": "Change the type of the loading attribute to an enumeration for improved typing",
      "sourceSelector": "name=whatwg_html",
      "config": {
        "expectedRemoveCount": 2,
        "elementNamePattern": "^(HTMLIFrameElement|HTMLImageElement)$",
        "memberNamePattern": "^loading$",
        "types": ["interface_type"]
      }
    },
    {
      "name": "RemoveMember",
      "description": "Change the type of the kind attribute to an enumeration for improved typing",
      "sourceSelector": "name=whatwg_html",
      "config": {
        "expectedRemoveCount": 1,
        "elementNamePattern": "^HTMLTrackElement$",
        "memberNamePattern": "^kind$",
        "types": ["interface_type"]
      }
    },
    {
      "name": "RemoveMember",
      "description": "Change the type of the wrap attribute to an enumeration for improved typing",
      "sourceSelector": "name=whatwg_html",
      "config": {
        "expectedRemoveCount": 1,
        "elementNamePattern": "^HTMLTextAreaElement$",
        "memberNamePattern": "^wrap$",
        "types": ["interface_type"]
      }
    },
    {
      "name": "RemoveMember",
      "description": "Change the type of the scope attribute to an enumeration for improved typing",
      "sourceSelector": "name=whatwg_html",
      "config": {
        "expectedRemoveCount": 1,
        "elementNamePattern": "^HTMLTableCellElement$",
        "memberNamePattern": "^scope$",
        "types": ["interface_type"]
      }
    },
    {
      "name": "RemoveMember",
      "description": "Change the type of the type attribute to an enumeration for improved typing",
      "sourceSelector": "name=whatwg_html",
      "config": {
        "expectedRemoveCount": 1,
        "elementNamePattern": "^HTMLInputElement$",
        "memberNamePattern": "^type$",
        "types": ["interface_type"]
      }
    },
    {
      "name": "RemoveMember",
      "description": "Change the type of the preload attribute to an enumeration for improved typing",
      "sourceSelector": "name=whatwg_html",
      "config": {
        "expectedRemoveCount": 1,
        "elementNamePattern": "^HTMLMediaElement$",
        "memberNamePattern": "^preload$",
        "types": ["interface_type"]
      }
    },
    {
      "name": "RemoveMember",
      "description": "Change the type of the inputMode attribute to an enumeration for improved typing",
      "sourceSelector": "name=whatwg_html",
      "config": {
        "expectedRemoveCount": 1,
        "elementNamePattern": "^ElementContentEditable$",
        "memberNamePattern": "^inputMode$",
        "types": ["mixin"]
      }
    },
    {
      "name": "RemoveMember",
      "description": "Change the type of the autocapitalize/dir attributes to an enumeration for improved typing",
      "sourceSelector": "name=whatwg_html",
      "config": {
        "expectedRemoveCount": 2,
        "elementNamePattern": "^HTMLElement$",
        "memberNamePattern": "^(autocapitalize|dir)$",
        "types": ["interface_type"]
      }
    },
    {
      "name": "RemoveMember",
      "description": "Remove the member to change the type of the getContext operation for improved typing",
      "sourceSelector": "name=whatwg_html",
      "config": {
        "expectedRemoveCount": 1,
        "elementNamePattern": "^HTMLCanvasElement$",
        "memberNamePattern": "^getContext$",
        "types": ["interface_type"]
      }
    },
    {
      "name": "RemoveMember",
      "description": "Change the type of the type attribute to a const enumeration for improved typing",
      "sourceSelector": "name=whatwg_xhr",
      "config": {
        "expectedRemoveCount": 1,
        "elementNamePattern": "^XMLHttpRequest$",
        "memberNamePattern": "^readyState$",
        "types": ["interface_type"]
      }
    },
    {
      "name": "AddExtendedAttributeToMember",
      "description": "Ensure empty enumeration value has a valid name when mapped to Java",
      "sourceSelector": "name=whatwg_xhr",
      "config": {
        "expectedAddCount": 1,
        "elementNamePattern": "^XMLHttpRequestResponseType$",
        "memberNamePattern": "^$",
        "extendedAttribute": "JavaName=default_text"
      }
    },
    {
      "name": "AddExtendedAttributeToMember",
      "description": "Ensure empty enumeration value has a valid name when mapped to Java",
      "sourceSelector": "name=whatwg_html",
      "config": {
        "expectedAddCount": 1,
        "elementNamePattern": "^CanPlayTypeResult$",
        "memberNamePattern": "^$",
        "extendedAttribute": "JavaName=negative"
      }
    },
    {
      "name": "AddExtendedAttributeToMember",
      "description": "Ensure empty enumeration value has a valid name when mapped to Java",
      "sourceSelector": "name=whatwg_fetch",
      "config": {
        "expectedAddCount": 1,
        "elementNamePattern": "^RequestDestination$",
        "memberNamePattern": "^$",
        "extendedAttribute": "JavaName=other"
      }
    },
    {
      "name": "AddExtendedAttributeToMember",
      "description": "Ensure empty enumeration value has a valid name when mapped to Java",
      "sourceSelector": "name=gamepad",
      "config": {
        "expectedAddCount": 1,
        "elementNamePattern": "^GamepadMappingType$",
        "memberNamePattern": "^$",
        "extendedAttribute": "JavaName=unknown"
      }
    },
    {
      "name": "AddExtendedAttributeToMember",
      "description": "Ensure empty enumeration value has a valid name when mapped to Java",
      "sourceSelector": "name=gamepad_extensions",
      "config": {
        "expectedAddCount": 1,
        "elementNamePattern": "^GamepadHand$",
        "memberNamePattern": "^$",
        "extendedAttribute": "JavaName=other"
      }
    },
    {
      "name": "AddExtendedAttributeToMember",
      "description": "Ensure empty enumeration value has a valid name when mapped to Java",
      "sourceSelector": "name=webvtt1",
      "config": {
        "expectedAddCount": 1,
        "elementNamePattern": "^DirectionSetting$",
        "memberNamePattern": "^$",
        "extendedAttribute": "JavaName=horizontal"
      }
    },
    {
      "name": "AddExtendedAttributeToMember",
      "description": "Ensure empty enumeration value has a valid name when mapped to Java",
      "sourceSelector": "name=webvtt1",
      "config": {
        "expectedAddCount": 1,
        "elementNamePattern": "^ScrollSetting$",
        "memberNamePattern": "^$",
        "extendedAttribute": "JavaName=none"
      }
    },
    {
      "name": "RemoveMember",
      "description": "the cssom spec 'overrides' the definitions to be of type double",
      "sourceSelector": "name=uievents",
      "config": {
        "expectedRemoveCount": 8,
        "elementNamePattern": "^(MouseEvent|MouseEventInit)$",
        "memberNamePattern": "^(clientX|clientY|screenX|screenY)$",
        "types": ["interface_type", "dictionary"]
      }
    },
    {
      "name": "RemoveMember",
      "description": "this is a legacy API that was left for backwards compatibility but causes issues in GWT because the objects returned used prototypes from the top level page rather than the containing iframe",
      "sourceSelector": "name=mediacapture_main",
      "config": {
        "expectedRemoveCount": 1,
        "elementNamePattern": "^Navigator$",
        "memberNamePattern": "^getUserMedia$",
        "types": ["interface_type"]
      }
    },
    {
      "name": "RemoveElement",
      "description": "The HTMLFormControlsCollection overrides HTMLCollection with incompatible method so we patch it. This is not strictly consistent with js but not sure how else to handle it",
      "sourceSelector": "name=whatwg_html",
      "config": {
        "expectedRemoveCount": 1,
        "namePattern": "^HTMLFormControlsCollection$",
        "type": ["interface_type"]
      }
    },
    {
      "name": "RemoveElement",
      "description": "These are no longer needed once Navigator.getUserMedia is removed",
      "sourceSelector": "name=mediacapture_main",
      "config": {
        "expectedRemoveCount": 2,
        "namePattern": "^(NavigatorUserMediaSuccessCallback|NavigatorUserMediaErrorCallback)$",
        "type": ["callback"]
      }
    },
    {
      "name": "RemoveElement",
      "description": "This defined in both webrtc_stats and webrtc so lets remove one",
      "sourceSelector": "name=webrtc_stats",
      "config": {
        "expectedRemoveCount": 1,
        "namePattern": "^RTCStats$",
        "type": ["dictionary"]
      }
    },
    {
      "name": "RemoveMember",
      "description": "the spec defines these members in RTCAudioHandlerStats which is the parent dictionary of RTCAudioReceiverStats",
      "sourceSelector": "name=webrtc_stats",
      "config": {
        "expectedRemoveCount": 3,
        "elementNamePattern": "^RTCAudioReceiverStats$",
        "memberNamePattern": "^(audioLevel|totalAudioEnergy|totalSamplesDuration)$",
        "types": ["dictionary"]
      }
    },
    {
      "name": "RemoveMember",
      "description": "the fileapi spec 'overrides' a operation on URL with a union of blob and the type defined in the mediasource spec. We re-add the blob variant in the fileapi_patch variant",
      "sourceSelector": "name=fileapi",
      "config": {
        "expectedRemoveCount": 1,
        "elementNamePattern": "^URL$",
        "memberNamePattern": "^createObjectURL$",
        "types": ["interface_type"]
      }
    },
    {
      "name": "RemoveMember",
      "description": "Change the type to convert to a const enumeration for improved typing",
      "sourceSelector": "name=fileapi",
      "config": {
        "expectedRemoveCount": 1,
        "elementNamePattern": "^FileReader$",
        "memberNamePattern": "^readyState$",
        "types": ["interface_type"]
      }
    },
    {
      "name": "Merge"
    },
    {
      "name": "RemoveIncludes",
      "description": "Both SVGURIReference and HTMLHyperlinkElementUtils mixin define the href attribute and they are defined as different types. USVString in HTMLHyperlinkElementUtils and SVGAnimatedString in SVGURIReference. This stage effectively selects the HTMLHyperlinkElementUtils variant which seems more authoritative",
      "config": {
        "expectedRemoveCount": 1,
        "interfacePattern": "^SVGAElement$",
        "mixinPattern": "^SVGURIReference$"
      }
    },
    {
      "name": "Flatten"
    },
    {
      "name": "ExtractExposureSet",
      "config": {
        "globalInterface": "Window"
      }
    },
    {
      "name": "RemoveElement",
      "description": "The AudioWorkletProcessorConstructor is only used by elements exposed in the AudioWorklet exposure and references interfaces not available in Window exposure",
      "config": {
        "expectedRemoveCount": 1,
        "namePattern": "^AudioWorkletProcessorConstructor$",
        "type": ["callback"]
      }
    },
    {
      "name": "RemoveElement",
      "description": "The ExtendableMessageEventInit is only used by elements exposed in the ServiceWorker exposure and references interfaces not available in Window exposure",
      "config": {
        "expectedRemoveCount": 1,
        "namePattern": "^ExtendableMessageEventInit$",
        "type": ["dictionary"]
      }
    },
    {
      "name": "Validate"
    },
    {
      "name": "RenameType",
      "description": "Reworked naming convention of typedef so that the underlying type has a nicer name for the java interface",
      "config": {
        "expectedRenameCount": 1,
        "namePattern": "^EventHandler$",
        "replacement": "NullableEventHandler"
      }
    },
    {
      "name": "RenameType",
      "description": "Reworked naming convention of typedef so that the underlying type has a nicer name for the java interface",
      "config": {
        "expectedRenameCount": 1,
        "namePattern": "^EventHandlerNonNull$",
        "replacement": "EventHandler"
      }
    },
    {
      "name": "RenameType",
      "description": "Reworked naming convention of typedef so that the underlying type has a nicer name for the java interface",
      "config": {
        "expectedRenameCount": 1,
        "namePattern": "^OnBeforeUnloadEventHandler$",
        "replacement": "NullableOnBeforeUnloadEventHandler"
      }
    },
    {
      "name": "RenameType",
      "description": "Reworked naming convention of typedef so that the underlying type has a nicer name for the java interface",
      "config": {
        "expectedRenameCount": 1,
        "namePattern": "^OnBeforeUnloadEventHandlerNonNull$",
        "replacement": "OnBeforeUnloadEventHandler"
      }
    },
    {
      "name": "RenameType",
      "description": "Reworked naming convention of typedef so that the underlying type has a nicer name for the java interface",
      "config": {
        "expectedRenameCount": 1,
        "namePattern": "^OnErrorEventHandler$",
        "replacement": "NullableOnErrorEventHandler"
      }
    },
    {
      "name": "RenameType",
      "description": "Reworked naming convention of typedef so that the underlying type has a nicer name for the java interface",
      "config": {
        "expectedRenameCount": 1,
        "namePattern": "^OnErrorEventHandlerNonNull$",
        "replacement": "OnErrorEventHandler"
      }
    },
    {
      "name": "MergeDocs",
      "description": "Add documentation from doc repository. We need to this here again as some documentation is defined on interfaces when it comes form a mixin",
      "config": {
        "aliases": {
          "WebGL2RenderingContext": ["WebGLRenderingContext"]
        },
        "createEvents": true
      }
    },
    {
      "name": "RemoveMember",
      "description": "the invalid event is documented on HTMLInputElement and HTMLElement which causes a problem in codegen as HTMLInputElement extends HTMLElement and overlay methods are final",
      "config": {
        "expectedRemoveCount": 1,
        "elementNamePattern": "^HTMLInputElement$",
        "memberNamePattern": "^invalid$"
      }
    },
    {
      "name": "ChangeArgumentType",
      "description": "Tighten up the parameter types",
      "sourceSelector": "name=webgl.*",
      "config": {
        "expectedChangeCount": 1,
        "elementNamePattern": "^WebGL2RenderingContext$",
        "operationNamePattern": "^createShader$",
        "argumentNamePattern": "^type$",
        "type": "ShaderType"
      }
    },
    {
      "name": "ChangeArgumentType",
      "description": "Tighten up the parameter types",
      "sourceSelector": "name=webgl.*",
      "config": {
        "expectedChangeCount": 3,
        "elementNamePattern": "^WebGL2RenderingContext$",
        "operationNamePattern": "^bufferData$",
        "argumentNamePattern": "^usage$",
        "type": "UsageType"
      }
    },
    {
      "name": "AddExtendedAttributeToMember",
      "description": "Annotate a couple of methods that are expected to contain GLSL fragments",
      "sourceSelector": "name=webgl.*",
      "config": {
        "expectedAddCount": 2,
        "elementNamePattern": "^(WebGL2RenderingContext|WebGLRenderingContext)$",
        "memberNamePattern": "^getShaderSource$",
        "extendedAttribute": "JavaAnnotation=\"elemental3.gl.GLSL\""
      }
    },
    {
      "name": "AddExtendedAttributeToArgument",
      "description": "Annotate a couple of method arguments that are expected to contain GLSL fragments",
      "sourceSelector": "name=webgl.*",
      "config": {
        "expectedAddCount": 2,
        "elementNamePattern": "^(WebGL2RenderingContext|WebGLRenderingContext)$",
        "operationNamePattern": "^shaderSource$",
        "argumentNamePattern": "^source$",
        "extendedAttribute": "JavaAnnotation=\"elemental3.gl.GLSL\""
      }
    },
    {
      "name": "JavaizeEventHandlers"
    }
  ]
}
