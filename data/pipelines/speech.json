{
  "sourceSelector": "name=minimal_event name=speech_api",
  "stages": [
    {
      "name": "MergeDocs",
      "description": "Add documentation from doc repository. This needs to be done before Flatten and renames as some documentation applies to Mixins or to elements before they are renamed",
      "config": {
        "docsDirectory": "data/docs",
        "createEvents": true
      }
    },
    {
      "name": "ConvertConstructorAttribute",
      "description": "Convert from historic constructor attributes"
    },
    {
      "name": "Merge"
    },
    {
      "name": "Validate",
      "config": {
        "ruleConfig": {
          "allowDanglingInterfacePartials": true
        }
      }
    },
    {
      "name": "ExtractExposureSet",
      "config": {
        "globalInterface": "Window"
      }
    },
    {
      "name": "Flatten"
    },
    {
      "name": "Validate",
      "config": {
        "ruleConfig": {
          "allowDanglingInterfacePartials": true
        }
      }
    },
    {
      "name": "RemoveElement",
      "description": "Remove the SpeechRecognition elements as we currently don't use them in the downstream applications",
      "config": {
        "namePattern": "^(SpeechRecognition|SpeechGrammar).*$"
      }
    },
    {
      "name": "RenameType",
      "description": "Reworked naming convention of typedef so that the underlying type can be renamed to EventHandler. This makes the java code much easier to grok",
      "config": {
        "namePattern": "^EventHandler$",
        "replacement": "NullableEventHandler"
      }
    },
    {
      "name": "RenameType",
      "description": "Rename EventHandler so the java code generated is nicer",
      "config": {
        "namePattern": "^EventHandlerNonNull$",
        "replacement": "EventHandler"
      }
    },
    {
      "name": "Validate",
      "config": {
        "ruleConfig": {
          "allowDanglingInterfacePartials": true
        }
      }
    },
    {
      "name": "AddExtendedAttribute",
      "description": "Add LegacyNoInterfaceObject as chrome is non-compliant wrt this. See https://bugs.chromium.org/p/chromium/issues/detail?id=674507",
      "config": {
        "namePattern": "^(SpeechSynthesis|SpeechSynthesisVoice)$",
        "extendedAttribute": "LegacyNoInterfaceObject"
      }
    },
    {
      "name": "Validate",
      "config": {
        "ruleConfig": {
          "allowDanglingInterfacePartials": true
        }
      }
    },
    {
      "name": "MergeDocs",
      "description": "Add documentation from doc repository. We need to this here again as some documentation is defined on interfaces when it comes form a mixin",
      "config": {
        "docsDirectory": "data/docs",
        "createEvents": true
      }
    },
    {
      "name": "JavaizeEventHandlers",
      "config": {
        "docsDirectory": "data/docs"
      }
    },
    {
      "name": "Emit",
      "config": {
        "filePattern": "data/output/speech/complete.webidl"
      }
    },
    {
      "name": "Jsinterop",
      "config": {
        "outputDirectory": "data/output/speech",
        "packageName": "elemental3"
      }
    }
  ]
}
